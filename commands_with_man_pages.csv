Command,Man Page
ls,"LS(1)                       General Commands Manual                      LS(1)

NNAAMMEE
     llss – list directory contents

SSYYNNOOPPSSIISS
     llss [--@@AABBCCFFGGHHIILLOOPPRRSSTTUUWWaabbccddeeffgghhiikkllmmnnooppqqrrssttuuvvwwxxyy11%%,,] [----ccoolloorr=_w_h_e_n]
        [--DD _f_o_r_m_a_t] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     For each operand that names a _f_i_l_e of a type other than directory, llss
     displays its name as well as any requested, associated information.  For
     each operand that names a _f_i_l_e of type directory, llss displays the names
     of files contained within that directory, as well as any requested,
     associated information.

     If no operands are given, the contents of the current directory are
     displayed.  If more than one operand is given, non-directory operands are
     displayed first; directory and non-directory operands are sorted
     separately and in lexicographical order.

     The following options are available:

     --@@      Display extended attribute keys and sizes in long (--ll) output.

     --AA      Include directory entries whose names begin with a dot (‘_.’)
             except for _. and _._..  Automatically set for the super-user unless
             --II is specified.

     --BB      Force printing of non-printable characters (as defined by
             ctype(3) and current locale settings) in file names as \_x_x_x,
             where _x_x_x is the numeric value of the character in octal.  This
             option is not defined in IEEE Std 1003.1-2008 (“POSIX.1”).

     --CC      Force multi-column output; this is the default when output is to
             a terminal.

     --DD _f_o_r_m_a_t
             When printing in the long (--ll) format, use _f_o_r_m_a_t to format the
             date and time output.  The argument _f_o_r_m_a_t is a string used by
             strftime(3).  Depending on the choice of format string, this may
             result in a different number of columns in the output.  This
             option overrides the --TT option.  This option is not defined in
             IEEE Std 1003.1-2008 (“POSIX.1”).

     --FF      Display a slash (‘/’) immediately after each pathname that is a
             directory, an asterisk (‘*’) after each that is executable, an at
             sign (‘@’) after each symbolic link, an equals sign (‘=’) after
             each socket, a percent sign (‘%’) after each whiteout, and a
             vertical bar (‘|’) after each that is a FIFO.

     --GG      Enable colorized output.  This option is equivalent to defining
             CLICOLOR or COLORTERM in the environment and setting
             ----ccoolloorr=_a_u_t_o.  (See below.)  This functionality can be compiled
             out by removing the definition of COLORLS.  This option is not
             defined in IEEE Std 1003.1-2008 (“POSIX.1”).

     --HH      Symbolic links on the command line are followed.  This option is
             assumed if none of the --FF, --dd, or --ll options are specified.

     --II      Prevent --AA from being automatically set for the super-user.  This
             option is not defined in IEEE Std 1003.1-2008 (“POSIX.1”).

     --LL      Follow all symbolic links to final target and list the file or
             directory the link references rather than the link itself.  This
             option cancels the --PP option.

     --OO      Include the file flags in a long (--ll) output.  This option is
             incompatible with IEEE Std 1003.1-2008 (“POSIX.1”).  See
             chflags(1) for a list of file flags and their meanings.

     --PP      If argument is a symbolic link, list the link itself rather than
             the object the link references.  This option cancels the --HH and
             --LL options.

     --RR      Recursively list subdirectories encountered.

     --SS      Sort by size (largest file first) before sorting the operands in
             lexicographical order.

     --TT      When printing in the long (--ll) format, display complete time
             information for the file, including month, day, hour, minute,
             second, and year.  The --DD option gives even more control over the
             output format.  This option is not defined in IEEE Std
             1003.1-2008 (“POSIX.1”).

     --UU      Use time when file was created for sorting or printing.  This
             option is not defined in IEEE Std 1003.1-2008 (“POSIX.1”).

     --WW      Display whiteouts when scanning directories.  This option is not
             defined in IEEE Std 1003.1-2008 (“POSIX.1”).

     --aa      Include directory entries whose names begin with a dot (‘_.’).

     --bb      As --BB, but use C escape codes whenever possible.  This option is
             not defined in IEEE Std 1003.1-2008 (“POSIX.1”).

     --cc      Use time when file status was last changed for sorting or
             printing.

     ----ccoolloorr=_w_h_e_n
             Output colored escape sequences based on _w_h_e_n, which may be set
             to either aallwwaayyss, aauuttoo, or nneevveerr.

             aallwwaayyss will make llss always output color.  If TERM is unset or set
             to an invalid terminal, then llss will fall back to explicit ANSI
             escape sequences without the help of termcap(5).  aallwwaayyss is the
             default if ----ccoolloorr is specified without an argument.

             aauuttoo will make llss output escape sequences based on termcap(5),
             but only if stdout is a tty and either the --GG flag is specified
             or the COLORTERM environment variable is set and not empty.

             nneevveerr will disable color regardless of environment variables.
             nneevveerr is the default when neither ----ccoolloorr nor --GG is specified.

             For compatibility with GNU coreutils, llss supports yyeess or ffoorrccee as
             equivalent to aallwwaayyss, nnoo or nnoonnee as equivalent to nneevveerr, and ttttyy
             or iiff--ttttyy as equivalent to aauuttoo.

     --dd      Directories are listed as plain files (not searched recursively).

     --ee      Print the Access Control List (ACL) associated with the file, if
             present, in long (--ll) output.

     --ff      Output is not sorted.  This option turns on --aa.  It also negates
             the effect of the --rr, --SS and --tt options.  As allowed by IEEE Std
             1003.1-2008 (“POSIX.1”), this option has no effect on the --dd, --ll,
             --RR and --ss options.

     --gg      This option has no effect.  It is only available for
             compatibility with 4.3BSD, where it was used to display the group
             name in the long (--ll) format output.  This option is incompatible
             with IEEE Std 1003.1-2008 (“POSIX.1”).

     --hh      When used with the --ll option, use unit suffixes: Byte, Kilobyte,
             Megabyte, Gigabyte, Terabyte and Petabyte in order to reduce the
             number of digits to four or fewer using base 2 for sizes.  This
             option is not defined in IEEE Std 1003.1-2008 (“POSIX.1”).

     --ii      For each file, print the file's file serial number (inode
             number).

     --kk      This has the same effect as setting environment variable
             BLOCKSIZE to 1024, except that it also nullifies any --hh options
             to its left.

     --ll      (The lowercase letter “ell”.) List files in the long format, as
             described in the _T_h_e _L_o_n_g _F_o_r_m_a_t subsection below.

     --mm      Stream output format; list files across the page, separated by
             commas.

     --nn      Display user and group IDs numerically rather than converting to
             a user or group name in a long (--ll) output.  This option turns on
             the --ll option.

     --oo      List in long format, but omit the group id.

     --pp      Write a slash (‘/’) after each filename if that file is a
             directory.

     --qq      Force printing of non-graphic characters in file names as the
             character ‘?’; this is the default when output is to a terminal.

     --rr      Reverse the order of the sort.

     --ss      Display the number of blocks used in the file system by each
             file.  Block sizes and directory totals are handled as described
             in _T_h_e _L_o_n_g _F_o_r_m_a_t subsection below, except (if the long format
             is not also requested) the directory totals are not output when
             the output is in a single column, even if multi-column output is
             requested.  (--ll) format, display complete time information for
             the file, including month, day, hour, minute, second, and year.
             The --DD option gives even more control over the output format.
             This option is not defined in IEEE Std 1003.1-2008 (“POSIX.1”).

     --tt      Sort by descending time modified (most recently modified first).
             If two files have the same modification timestamp, sort their
             names in ascending lexicographical order.  The --rr option reverses
             both of these sort orders.

             Note that these sort orders are contradictory: the time sequence
             is in descending order, the lexicographical sort is in ascending
             order.  This behavior is mandated by IEEE Std 1003.2 (“POSIX.2”).
             This feature can cause problems listing files stored with
             sequential names on FAT file systems, such as from digital
             cameras, where it is possible to have more than one image with
             the same timestamp.  In such a case, the photos cannot be listed
             in the sequence in which they were taken.  To ensure the same
             sort order for time and for lexicographical sorting, set the
             environment variable LS_SAMESORT or use the --yy option.  This
             causes llss to reverse the lexicographical sort order when sorting
             files with the same modification timestamp.

     --uu      Use time of last access, instead of time of last modification of
             the file for sorting (--tt) or long printing (--ll).

     --vv      Force unedited printing of non-graphic characters; this is the
             default when output is not to a terminal.

     --ww      Force raw printing of non-printable characters.  This is the
             default when output is not to a terminal.  This option is not
             defined in IEEE Std 1003.1-2001 (“POSIX.1”).

     --xx      The same as --CC, except that the multi-column output is produced
             with entries sorted across, rather than down, the columns.

     --yy      When the --tt option is set, sort the alphabetical output in the
             same order as the time output.  This has the same effect as
             setting LS_SAMESORT.  See the description of the --tt option for
             more details.  This option is not defined in IEEE Std 1003.1-2001
             (“POSIX.1”).

     --%%      Distinguish dataless files and directories with a '%' character
             in long (--ll) output, and don't materialize dataless directories
             when listing them.

     --11      (The numeric digit “one”.) Force output to be one entry per line.
             This is the default when output is not to a terminal.

     --,      (Comma) When the --ll option is set, print file sizes grouped and
             separated by thousands using the non-monetary separator returned
             by localeconv(3), typically a comma or period.  If no locale is
             set, or the locale does not have a non-monetary separator, this
             option has no effect.  This option is not defined in IEEE Std
             1003.1-2001 (“POSIX.1”).

     The --11, --CC, --xx, and --ll options all override each other; the last one
     specified determines the format used.

     The --cc, --uu, and --UU options all override each other; the last one
     specified determines the file time used.

     The --SS and --tt options override each other; the last one specified
     determines the sort order used.

     The --BB, --bb, --ww, and --qq options all override each other; the last one
     specified determines the format used for non-printable characters.

     The --HH, --LL and --PP options all override each other (either partially or
     fully); they are applied in the order specified.

     By default, llss lists one entry per line to standard output; the
     exceptions are to terminals or when the --CC or --xx options are specified.

     File information is displayed with one or more ⟨blank⟩s separating the
     information associated with the --ii, --ss, and --ll options.

   TThhee LLoonngg FFoorrmmaatt
     If the --ll option is given, the following information is displayed for
     each file: file mode, number of links, owner name, group name, number of
     bytes in the file, abbreviated month, day-of-month file was last
     modified, hour file last modified, minute file last modified, and the
     pathname.  If the file or directory has extended attributes, the
     permissions field printed by the --ll option is followed by a '@'
     character.  Otherwise, if the file or directory has extended security
     information (such as an access control list), the permissions field
     printed by the --ll option is followed by a '+' character.  If the --%%
     option is given, a '%' character follows the permissions field for
     dataless files and directories, possibly replacing the '@' or '+'
     character.

     If the modification time of the file is more than 6 months in the past or
     future, and the --DD or --TT are not specified, then the year of the last
     modification is displayed in place of the hour and minute fields.

     If the owner or group names are not a known user or group name, or the --nn
     option is given, the numeric ID's are displayed.

     If the file is a character special or block special file, the device
     number for the file is displayed in the size field.  If the file is a
     symbolic link the pathname of the linked-to file is preceded by “->”.

     The listing of a directory's contents is preceded by a labeled total
     number of blocks used in the file system by the files which are listed as
     the directory's contents (which may or may not include _. and _._. and other
     files which start with a dot, depending on other options).

     The default block size is 512 bytes.  The block size may be set with
     option --kk or environment variable BLOCKSIZE.  Numbers of blocks in the
     output will have been rounded up so the numbers of bytes is at least as
     many as used by the corresponding file system blocks (which might have a
     different size).

     The file mode printed under the --ll option consists of the entry type and
     the permissions.  The entry type character describes the type of file, as
     follows:

           --     Regular file.
           bb     Block special file.
           cc     Character special file.
           dd     Directory.
           ll     Symbolic link.
           pp     FIFO.
           ss     Socket.
           ww     Whiteout.

     The next three fields are three characters each: owner permissions, group
     permissions, and other permissions.  Each field has three character
     positions:

           1.   If rr, the file is readable; if --, it is not readable.

           2.   If ww, the file is writable; if --, it is not writable.

           3.   The first of the following that applies:

                      SS     If in the owner permissions, the file is not
                            executable and set-user-ID mode is set.  If in the
                            group permissions, the file is not executable and
                            set-group-ID mode is set.

                      ss     If in the owner permissions, the file is
                            executable and set-user-ID mode is set.  If in the
                            group permissions, the file is executable and
                            setgroup-ID mode is set.

                      xx     The file is executable or the directory is
                            searchable.

                      --     The file is neither readable, writable,
                            executable, nor set-user-ID nor set-group-ID mode,
                            nor sticky.  (See below.)

                These next two apply only to the third character in the last
                group (other permissions).

                      TT     The sticky bit is set (mode 1000), but not execute
                            or search permission.  (See chmod(1) or
                            sticky(7).)

                      tt     The sticky bit is set (mode 1000), and is
                            searchable or executable.  (See chmod(1) or
                            sticky(7).)

     The next field contains a plus (‘+’) character if the file has an ACL, or
     a space (‘ ’) if it does not.  The llss utility does not show the actual
     ACL unless the --ee option is used in conjunction with the --ll option.

EENNVVIIRROONNMMEENNTT
     The following environment variables affect the execution of llss:

     BLOCKSIZE           If this is set, its value, rounded up to 512 or down
                         to a multiple of 512, will be used as the block size
                         in bytes by the --ll and --ss options.  See _T_h_e _L_o_n_g
                         _F_o_r_m_a_t subsection for more information.

     CLICOLOR            Use ANSI color sequences to distinguish file types.
                         See LSCOLORS below.  In addition to the file types
                         mentioned in the --FF option some extra attributes
                         (setuid bit set, etc.) are also displayed.  The
                         colorization is dependent on a terminal type with the
                         proper termcap(5) capabilities.  The default “cons25”
                         console has the proper capabilities, but to display
                         the colors in an xterm(1), for example, the TERM
                         variable must be set to “xterm-color”.  Other
                         terminal types may require similar adjustments.
                         Colorization is silently disabled if the output is
                         not directed to a terminal unless the CLICOLOR_FORCE
                         variable is defined or ----ccoolloorr is set to “always”.

     CLICOLOR_FORCE      Color sequences are normally disabled if the output
                         is not directed to a terminal.  This can be
                         overridden by setting this variable.  The TERM
                         variable still needs to reference a color capable
                         terminal however otherwise it is not possible to
                         determine which color sequences to use.

     COLORTERM           See description for CLICOLOR above.

     COLUMNS             If this variable contains a string representing a
                         decimal integer, it is used as the column position
                         width for displaying multiple-text-column output.
                         The llss utility calculates how many pathname text
                         columns to display based on the width provided.  (See
                         --CC and --xx.)

     LANG                The locale to use when determining the order of day
                         and month in the long --ll format output.  See
                         environ(7) for more information.

     LSCOLORS            The value of this variable describes what color to
                         use for which attribute when colors are enabled with
                         CLICOLOR or COLORTERM.  This string is a
                         concatenation of pairs of the format _f_b, where _f is
                         the foreground color and _b is the background color.

                         The color designators are as follows:

                               aa     black
                               bb     red
                               cc     green
                               dd     brown
                               ee     blue
                               ff     magenta
                               gg     cyan
                               hh     light grey
                               AA     bold black, usually shows up as dark grey
                               BB     bold red
                               CC     bold green
                               DD     bold brown, usually shows up as yellow
                               EE     bold blue
                               FF     bold magenta
                               GG     bold cyan
                               HH     bold light grey; looks like bright white
                               xx     default foreground or background

                         Note that the above are standard ANSI colors.  The
                         actual display may differ depending on the color
                         capabilities of the terminal in use.

                         The order of the attributes are as follows:

                               1.   directory
                               2.   symbolic link
                               3.   socket
                               4.   pipe
                               5.   executable
                               6.   block special
                               7.   character special
                               8.   executable with setuid bit set
                               9.   executable with setgid bit set
                               10.  directory writable to others, with sticky
                                    bit
                               11.  directory writable to others, without
                                    sticky bit

                         The default is ""exfxcxdxbxegedabagacad"", i.e., blue
                         foreground and default background for regular
                         directories, black foreground and red background for
                         setuid executables, etc.

     LS_COLWIDTHS        If this variable is set, it is considered to be a
                         colon-delimited list of minimum column widths.
                         Unreasonable and insufficient widths are ignored
                         (thus zero signifies a dynamically sized column).
                         Not all columns have changeable widths.  The fields
                         are, in order: inode, block count, number of links,
                         user name, group name, flags, file size, file name.

     LS_SAMESORT         If this variable is set, the --tt option sorts the
                         names of files with the same modification timestamp
                         in the same sense as the time sort.  See the
                         description of the --tt option for more details.

     TERM                The CLICOLOR and COLORTERM functionality depends on a
                         terminal type with color capabilities.

     TZ                  The timezone to use when displaying dates.  See
                         environ(7) for more information.

EEXXIITT SSTTAATTUUSS
     The llss utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     List the contents of the current working directory in long format:

           $ ls -l

     In addition to listing the contents of the current working directory in
     long format, show inode numbers, file flags (see chflags(1)), and suffix
     each filename with a symbol representing its file type:

           $ ls -lioF

     List the files in _/_v_a_r_/_l_o_g, sorting the output such that the most
     recently modified entries are printed first:

           $ ls -lt /var/log

CCOOMMPPAATTIIBBIILLIITTYY
     The group field is now automatically included in the long listing for
     files in order to be compatible with the IEEE Std 1003.2 (“POSIX.2”)
     specification.

LLEEGGAACCYY DDEESSCCRRIIPPTTIIOONN
     In legacy mode, the --ff option does not turn on the --aa option and the --gg,
     --nn, and --oo options do not turn on the --ll option.

     Also, the --oo option causes the file flags to be included in a long (-l)
     output; there is no --OO option.

     When --HH is specified (and not overridden by --LL or --PP) and a file argument
     is a symlink that resolves to a non-directory file, the output will
     reflect the nature of the link, rather than that of the file.  In legacy
     operation, the output will describe the file.

     For more information about legacy mode, see compat(5).

SSEEEE AALLSSOO
     chflags(1), chmod(1), sort(1), xterm(1), localeconv(3), strftime(3),
     strmode(3), compat(5), termcap(5), sticky(7), symlink(7)

SSTTAANNDDAARRDDSS
     With the exception of options --gg, --nn and --oo, the llss utility conforms to
     IEEE Std 1003.1-2001 (“POSIX.1”) and IEEE Std 1003.1-2008 (“POSIX.1”).
     The options --BB, --DD, --GG, --II, --TT, --UU, --WW, --ZZ, --bb, --hh, --ww, --yy and --, are
     non-standard extensions.

     The ACL support is compatible with IEEE Std 1003.2c (“POSIX.2c”) Draft 17
     (withdrawn).

HHIISSTTOORRYY
     An llss command appeared in Version 1 AT&T UNIX.

BBUUGGSS
     To maintain backward compatibility, the relationships between the many
     options are quite complex.

     The exception mentioned in the --ss option description might be a feature
     that was based on the fact that single-column output usually goes to
     something other than a terminal.  It is debatable whether this is a
     design bug.

     IEEE Std 1003.2 (“POSIX.2”) mandates opposite sort orders for files with
     the same timestamp when sorting with the --tt option.

macOS 14.6                      August 31, 2020                     macOS 14.6
"
cd,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
pwd,"PWD(1)                      General Commands Manual                     PWD(1)

NNAAMMEE
     ppwwdd – return working directory name

SSYYNNOOPPSSIISS
     ppwwdd [--LL | --PP]

DDEESSCCRRIIPPTTIIOONN
     The ppwwdd utility writes the absolute pathname of the current working
     directory to the standard output.

     Some shells may provide a builtin ppwwdd command which is similar or
     identical to this utility.  Consult the builtin(1) manual page.

     The options are as follows:

     --LL      Display the logical current working directory.

     --PP      Display the physical current working directory (all symbolic
             links resolved).

     If no options are specified, the --LL option is assumed.

EENNVVIIRROONNMMEENNTT
     Environment variables used by ppwwdd:

     PWD      Logical current working directory.

EEXXIITT SSTTAATTUUSS
     The ppwwdd utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Show current working directory with symbolic links resolved:

           $ /bin/pwd -P
           /usr/home/fernape

     Show the logical current directory.  Then use file(1) to inspect the
     _/_h_o_m_e directory:

           $ /bin/pwd
           /home/fernape
           $ file /home
           /home: symbolic link to usr/home

SSEEEE AALLSSOO
     builtin(1), cd(1), csh(1), realpath(1), sh(1), getcwd(3)

SSTTAANNDDAARRDDSS
     The ppwwdd utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).

HHIISSTTOORRYY
     The ppwwdd command appeared in Version 5 AT&T UNIX.

BBUUGGSS
     In csh(1) the command ddiirrss is always faster because it is built into that
     shell.  However, it can give a different answer in the rare case that the
     current directory or a containing directory was moved after the shell
     descended into it.

     The --LL option does not work unless the PWD environment variable is
     exported by the shell.

macOS 14.6                     October 24, 2020                     macOS 14.6
"
mkdir,"MKDIR(1)                    General Commands Manual                   MKDIR(1)

NNAAMMEE
     mmkkddiirr – make directories

SSYYNNOOPPSSIISS
     mmkkddiirr [--ppvv] [--mm _m_o_d_e] _d_i_r_e_c_t_o_r_y___n_a_m_e _._._.

DDEESSCCRRIIPPTTIIOONN
     The mmkkddiirr utility creates the directories named as operands, in the order
     specified, using mode “rwxrwxrwx” (0777) as modified by the current
     umask(2).

     The options are as follows:

     --mm _m_o_d_e        Set the file permission bits of the final created
                    directory to the specified mode.  The _m_o_d_e argument can be
                    in any of the formats specified to the chmod(1) command.
                    If a symbolic mode is specified, the operation characters
                    ‘+’ and ‘-’ are interpreted relative to an initial mode of
                    “a=rwx”.

     --pp             Create intermediate directories as required.  If this
                    option is not specified, the full path prefix of each
                    operand must already exist.  On the other hand, with this
                    option specified, no error will be reported if a directory
                    given as an operand already exists.  Intermediate
                    directories are created with permission bits of
                    “rwxrwxrwx” (0777) as modified by the current umask, plus
                    write and search permission for the owner.

     --vv             Be verbose when creating directories, listing them as they
                    are created.

     The user must have write permission in the parent directory.

EEXXIITT SSTTAATTUUSS
     The mmkkddiirr utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Create a directory named _f_o_o_b_a_r:

           $ mkdir foobar

     Create a directory named _f_o_o_b_a_r and set its file mode to 700:

           $ mkdir -m 700 foobar

     Create a directory named _c_o_w_/_h_o_r_s_e_/_m_o_n_k_e_y, creating any non-existent
     intermediate directories as necessary:

           $ mkdir -p cow/horse/monkey

CCOOMMPPAATTIIBBIILLIITTYY
     The --vv option is non-standard and its use in scripts is not recommended.

SSEEEE AALLSSOO
     rmdir(1)

SSTTAANNDDAARRDDSS
     The mmkkddiirr utility is expected to be IEEE Std 1003.2 (“POSIX.2”)
     compatible.

HHIISSTTOORRYY
     A mmkkddiirr command appeared in Version 1 AT&T UNIX.

macOS 14.6                      March 15, 2013                      macOS 14.6
"
rmdir,"RMDIR(1)                    General Commands Manual                   RMDIR(1)

NNAAMMEE
     rrmmddiirr – remove directories

SSYYNNOOPPSSIISS
     rrmmddiirr [--ppvv] _d_i_r_e_c_t_o_r_y _._._.

DDEESSCCRRIIPPTTIIOONN
     The rrmmddiirr utility removes the directory entry specified by each _d_i_r_e_c_t_o_r_y
     argument, provided it is empty.

     Arguments are processed in the order given.  In order to remove both a
     parent directory and a subdirectory of that parent, the subdirectory must
     be specified first so the parent directory is empty when rrmmddiirr tries to
     remove it.

     The following option is available:

     --pp      Each _d_i_r_e_c_t_o_r_y argument is treated as a pathname of which all
             components will be removed, if they are empty, starting with the
             last most component.  (See rm(1) for fully non-discriminant
             recursive removal.)

     --vv      Be verbose, listing each directory as it is removed.

EEXXIITT SSTTAATTUUSS
     The rrmmddiirr utility exits with one of the following values:

     0       Each directory entry specified by a _d_i_r_e_c_t_o_r_y operand referred to
             an empty directory and was removed successfully.

     >0      An error occurred.

EEXXAAMMPPLLEESS
     Remove the directory _f_o_o_b_a_r, if it is empty:

           $ rmdir foobar

     Remove all directories up to and including _c_o_w, stopping at the first
     non-empty directory (if any):

           $ rmdir -p cow/horse/monkey

SSEEEE AALLSSOO
     rm(1)

SSTTAANNDDAARRDDSS
     The rrmmddiirr utility is expected to be IEEE Std 1003.2 (“POSIX.2”)
     compatible.

HHIISSTTOORRYY
     A rrmmddiirr command appeared in Version 1 AT&T UNIX.

macOS 14.6                      March 15, 2013                      macOS 14.6
"
cp,"CP(1)                       General Commands Manual                      CP(1)

NNAAMMEE
     ccpp – copy files

SSYYNNOOPPSSIISS
     ccpp [--RR [--HH | --LL | --PP]] [--ffii | --nn] [--aallppSSssvvXXxx] _s_o_u_r_c_e___f_i_l_e _t_a_r_g_e_t___f_i_l_e
     ccpp [--RR [--HH | --LL | --PP]] [--ffii | --nn] [--aallppSSssvvXXxx]
        _s_o_u_r_c_e___f_i_l_e _._._. _t_a_r_g_e_t___d_i_r_e_c_t_o_r_y
     ccpp [--ff | --ii | --nn] [--aallPPppSSssvvxx] _s_o_u_r_c_e___f_i_l_e _t_a_r_g_e_t___f_i_l_e
     ccpp [--ff | --ii | --nn] [--aallPPppSSssvvxx] _s_o_u_r_c_e___f_i_l_e _._._. _t_a_r_g_e_t___d_i_r_e_c_t_o_r_y

DDEESSCCRRIIPPTTIIOONN
     In the first synopsis form, the ccpp utility copies the contents of the
     _s_o_u_r_c_e___f_i_l_e to the _t_a_r_g_e_t___f_i_l_e.  In the second synopsis form, the
     contents of each named _s_o_u_r_c_e___f_i_l_e is copied to the destination
     _t_a_r_g_e_t___d_i_r_e_c_t_o_r_y.  The names of the files themselves are not changed.  If
     ccpp detects an attempt to copy a file to itself, the copy will fail.

     The following options are available:

     --HH    If the --RR option is specified, symbolic links on the command line
           are followed.  (Symbolic links encountered in the tree traversal
           are not followed.)

     --LL    If the --RR option is specified, all symbolic links are followed.

     --PP    No symbolic links are followed.  This is the default if the --RR
           option is specified.

     --RR    If _s_o_u_r_c_e___f_i_l_e designates a directory, ccpp copies the directory and
           the entire subtree connected at that point.  If the _s_o_u_r_c_e___f_i_l_e
           ends in a _/, the contents of the directory are copied rather than
           the directory itself.  This option also causes symbolic links to be
           copied, rather than indirected through, and for ccpp to create
           special files rather than copying them as normal files.  Created
           directories have the same mode as the corresponding source
           directory, unmodified by the process' umask.

           In --RR mode, ccpp will continue copying even if errors are detected.

           Note that ccpp copies hard linked files as separate files.  If you
           need to preserve hard links, consider using tar(1), cpio(1), or
           pax(1) instead.

     --aa    Archive mode.  Same as --RRppPP options. Preserves structure and
           attributes of files but not directory structure.

     --cc    copy files using clonefile(2).  Note that if clonefile(2) is not
           supported for the target filesystem, then ccpp will fallback to using
           copyfile(2) instead to ensure the copy still succeeds.

     --ff    If the destination file cannot be opened, remove it and create a
           new file, without prompting for confirmation regardless of its
           permissions.  (The --ff option overrides any previous --nn option.)

           The target file is not unlinked before the copy.  Thus, any
           existing access rights will be retained.

     --ii    Cause ccpp to write a prompt to the standard error output before
           copying a file that would overwrite an existing file.  If the
           response from the standard input begins with the character ‘y’ or
           ‘Y’, the file copy is attempted.  (The --ii option overrides any
           previous --nn option.)

     --ll    Create hard links to regular files in a hierarchy instead of
           copying.

     --nn    Do not overwrite an existing file.  (The --nn option overrides any
           previous --ff or --ii options.)

     --pp    Cause ccpp to preserve the following attributes of each source file
           in the copy: modification time, access time, file flags, file mode,
           user ID, and group ID, as allowed by permissions.  Access Control
           Lists (ACLs) and Extended Attributes (EAs), including resource
           forks, will also be preserved.

           If the user ID and group ID cannot be preserved, no error message
           is displayed and the exit value is not altered.

           If the source file has its set-user-ID bit on and the user ID
           cannot be preserved, the set-user-ID bit is not preserved in the
           copy's permissions.  If the source file has its set-group-ID bit on
           and the group ID cannot be preserved, the set-group-ID bit is not
           preserved in the copy's permissions.  If the source file has both
           its set-user-ID and set-group-ID bits on, and either the user ID or
           group ID cannot be preserved, neither the set-user-ID nor set-
           group-ID bits are preserved in the copy's permissions.

     --SS    Do not attempt to preserve holes in sparse files.

     --ss    Create symbolic links to regular files in a hierarchy instead of
           copying.

     --vv    Cause ccpp to be verbose, showing files as they are copied.

     --XX    Do not copy Extended Attributes (EAs) or resource forks.

     --xx    File system mount points are not traversed.

     For each destination file that already exists, its contents are
     overwritten if permissions allow.  Its mode, user ID, and group ID are
     unchanged unless the --pp option was specified.

     In the second synopsis form, _t_a_r_g_e_t___d_i_r_e_c_t_o_r_y must exist unless there is
     only one named _s_o_u_r_c_e___f_i_l_e which is a directory and the --RR flag is
     specified.

     If the destination file does not exist, the mode of the source file is
     used as modified by the file mode creation mask (uummaasskk, see csh(1)).  If
     the source file has its set-user-ID bit on, that bit is removed unless
     both the source file and the destination file are owned by the same user.
     If the source file has its set-group-ID bit on, that bit is removed
     unless both the source file and the destination file are in the same
     group and the user is a member of that group.  If both the set-user-ID
     and set-group-ID bits are set, all of the above conditions must be
     fulfilled or both bits are removed.

     Appropriate permissions are required for file creation or overwriting.

     Symbolic links are always followed unless the --RR flag is set, in which
     case symbolic links are not followed, by default.  The --HH or --LL flags (in
     conjunction with the --RR flag) cause symbolic links to be followed as
     described above.  The --HH, --LL and --PP options are ignored unless the --RR
     option is specified.  In addition, these options override each other and
     the command's actions are determined by the last one specified.

     If ccpp receives a SIGINFO (see the ssttaattuuss argument for stty(1)) signal,
     the current input and output file and the percentage complete will be
     written to the standard output.

     If ccpp encounters an I/O error during the copy, then ccpp may leave a
     partially copied _t_a_r_g_e_t___f_i_l_e in place.  ccpp specifically avoids cleaning
     up the output file in error cases to avoid further data loss in cases
     where the source may not be recoverable.  Alternatives, like install(1),
     may be preferred if stronger guarantees about the _t_a_r_g_e_t___f_i_l_e are
     required.

EEXXIITT SSTTAATTUUSS
     The ccpp utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Make a copy of file _f_o_o named _b_a_r:

           $ cp foo bar

     Copy a group of files to the _/_t_m_p directory:

           $ cp *.txt /tmp

     Copy the directory _j_u_n_k and all of its contents (including any
     subdirectories) to the _/_t_m_p directory:

           $ cp -R junk /tmp

CCOOMMPPAATTIIBBIILLIITTYY
     Historic versions of the ccpp utility had a --rr option.  This implementation
     supports that option, however, its behavior is different from historical
     FreeBSD behavior.  Use of this option is strongly discouraged as the
     behavior is implementation-dependent.  In FreeBSD, --rr is a synonym for
     --RRLL and works the same unless modified by other flags.  Historical
     implementations of --rr differ as they copy special files as normal files
     while recreating a hierarchy.

     The --ll, --ss, --vv, --xx and --nn options are non-standard and their use in
     scripts is not recommended.

LLEEGGAACCYY DDEESSCCRRIIPPTTIIOONN
     In legacy mode, --ff will override --ii.  Also, under the --ff option, the
     target file is always unlinked before the copy.  Thus, new access rights
     will always be set.

     In --RR mode, copying will terminate if an error is encountered.

     For more information about legacy mode, see compat(5).

SSEEEE AALLSSOO
     install(1), mv(1), rcp(1), clonefile(2), copyfile(2), umask(2), fts(3),
     compat(5), symlink(7)

SSTTAANNDDAARRDDSS
     The ccpp command is expected to be IEEE Std 1003.2 (“POSIX.2”) compatible.

HHIISSTTOORRYY
     A ccpp command appeared in Version 1 AT&T UNIX.

macOS 14.6                      April 17, 2022                      macOS 14.6
"
mv,"MV(1)                       General Commands Manual                      MV(1)

NNAAMMEE
     mmvv – move files

SSYYNNOOPPSSIISS
     mmvv [--ff | --ii | --nn] [--hhvv] _s_o_u_r_c_e _t_a_r_g_e_t
     mmvv [--ff | --ii | --nn] [--vv] _s_o_u_r_c_e _._._. _d_i_r_e_c_t_o_r_y

DDEESSCCRRIIPPTTIIOONN
     In its first form, the mmvv utility renames the file named by the _s_o_u_r_c_e
     operand to the destination path named by the _t_a_r_g_e_t operand.  This form
     is assumed when the last operand does not name an already existing
     directory.

     In its second form, mmvv moves each file named by a _s_o_u_r_c_e operand to a
     destination file in the existing directory named by the _d_i_r_e_c_t_o_r_y
     operand.  The destination path for each operand is the pathname produced
     by the concatenation of the last operand, a slash, and the final pathname
     component of the named file.

     The following options are available:

     --ff      Do not prompt for confirmation before overwriting the destination
             path.  (The --ff option overrides any previous --ii or --nn options.)

     --hh      If the _t_a_r_g_e_t operand is a symbolic link to a directory, do not
             follow it.  This causes the mmvv utility to rename the file _s_o_u_r_c_e
             to the destination path _t_a_r_g_e_t rather than moving _s_o_u_r_c_e into the
             directory referenced by _t_a_r_g_e_t.

     --ii      Cause mmvv to write a prompt to standard error before moving a file
             that would overwrite an existing file.  If the response from the
             standard input begins with the character ‘y’ or ‘Y’, the move is
             attempted.  (The --ii option overrides any previous --ff or --nn
             options.)

     --nn      Do not overwrite an existing file.  (The --nn option overrides any
             previous --ff or --ii options.)

     --vv      Cause mmvv to be verbose, showing files after they are moved.

     It is an error for the _s_o_u_r_c_e operand to specify a directory if the
     target exists and is not a directory.

     If the destination path does not have a mode which permits writing, mmvv
     prompts the user for confirmation as specified for the --ii option.

     As the rename(2) call does not work across file systems, mmvv uses cp(1)
     and rm(1) to accomplish the move.  The effect is equivalent to:

           rm -f destination_path && \
           cp -pRP source_file destination && \
           rm -rf source_file

EEXXIITT SSTTAATTUUSS
     The mmvv utility exits 0 on success, and >0 if an error occurs.

     The command ""mv dir/afile dir"" will abort with an error message.

LLEEGGAACCYY DDIIAAGGNNOOSSTTIICCSS
     In legacy mode, the command ""mv dir/afile dir"" will fail silently,
     returning an exit code of 0.

     For more information about legacy mode, see compat(5).

EEXXAAMMPPLLEESS
     Rename file _f_o_o to _b_a_r, overwriting _b_a_r if it already exists:

           $ mv -f foo bar

CCOOMMPPAATTIIBBIILLIITTYY
     The --hh, --nn, and --vv options are non-standard and their use in scripts is
     not recommended.

     The mmvv utility now supports HFS+ Finder and Extended Attributes and
     resource forks.  The mmvv utility will no longer strip resource forks off
     of HFS files.  For an alternative method, refer to cp(1).

SSEEEE AALLSSOO
     cp(1), rm(1), symlink(7)

SSTTAANNDDAARRDDSS
     The mmvv utility is expected to be IEEE Std 1003.2 (“POSIX.2”) compatible.

HHIISSTTOORRYY
     A mmvv command appeared in Version 1 AT&T UNIX.

macOS 14.6                      March 15, 2013                      macOS 14.6
"
rm,"RM(1)                       General Commands Manual                      RM(1)

NNAAMMEE
     rrmm, uunnlliinnkk – remove directory entries

SSYYNNOOPPSSIISS
     rrmm [--ff | --ii] [--ddIIRRrrvvWWxx] _f_i_l_e _._._.
     uunnlliinnkk [----] _f_i_l_e

DDEESSCCRRIIPPTTIIOONN
     The rrmm utility attempts to remove the non-directory type files specified
     on the command line.  If the permissions of the file do not permit
     writing, and the standard input device is a terminal, the user is
     prompted (on the standard error output) for confirmation.

     The options are as follows:

     --dd      Attempt to remove directories as well as other types of files.

     --ff      Attempt to remove the files without prompting for confirmation,
             regardless of the file's permissions.  If the file does not
             exist, do not display a diagnostic message or modify the exit
             status to reflect an error.  The --ff option overrides any previous
             --ii options.

     --ii      Request confirmation before attempting to remove each file,
             regardless of the file's permissions, or whether or not the
             standard input device is a terminal.  The --ii option overrides any
             previous --ff options.

     --II      Request confirmation once if more than three files are being
             removed or if a directory is being recursively removed.  This is
             a far less intrusive option than --ii yet provides almost the same
             level of protection against mistakes.

     --PP      This flag has no effect.  It is kept only for backwards
             compatibility with 4.4BSD-Lite2.

     --RR      Attempt to remove the file hierarchy rooted in each _f_i_l_e
             argument.  The --RR option implies the --dd option.  If the --ii option
             is specified, the user is prompted for confirmation before each
             directory's contents are processed (as well as before the attempt
             is made to remove the directory).  If the user does not respond
             affirmatively, the file hierarchy rooted in that directory is
             skipped.

     --rr      Equivalent to --RR.

     --vv      Be verbose when deleting files, showing them as they are removed.

     --WW      Attempt to undelete the named files.  Currently, this option can
             only be used to recover files covered by whiteouts in a union
             file system (see undelete(2)).

     --xx      When removing a hierarchy, do not cross mount points.

     The rrmm utility removes symbolic links, not the files referenced by the
     links.

     It is an error to attempt to remove the files _/, _. or _._..

     When the utility is called as uunnlliinnkk, only one argument, which must not
     be a directory, may be supplied.  No options may be supplied in this
     simple mode of operation, which performs an unlink(2) operation on the
     passed argument.  However, the usual option-end delimiter, ----, may
     optionally precede the argument.

EEXXIITT SSTTAATTUUSS
     The rrmm utility exits 0 if all of the named files or file hierarchies were
     removed, or if the --ff option was specified and all of the existing files
     or file hierarchies were removed.  If an error occurs, rrmm exits with a
     value >0.

NNOOTTEESS
     The rrmm command uses getopt(3) to parse its arguments, which allows it to
     accept the ‘--’ option which will cause it to stop processing flag
     options at that point.  This will allow the removal of file names that
     begin with a dash (‘-’).  For example:

           rm -- -filename

     The same behavior can be obtained by using an absolute or relative path
     reference.  For example:

           rm /home/user/-filename
           rm ./-filename

EEXXAAMMPPLLEESS
     Recursively remove all files contained within the _f_o_o_b_a_r directory
     hierarchy:

           $ rm -rf foobar

     Any of these commands will remove the file _-_f:

           $ rm -- -f
           $ rm ./-f
           $ unlink -f

CCOOMMPPAATTIIBBIILLIITTYY
     The rrmm utility differs from historical implementations in that the --ff
     option only masks attempts to remove non-existent files instead of
     masking a large variety of errors.  The --vv option is non-standard and its
     use in scripts is not recommended.

     Also, historical BSD implementations prompted on the standard output, not
     the standard error output.

     The --PP option does not have any effect as of FreeBSD 13 and may be
     removed in the future.

SSEEEE AALLSSOO
     chflags(1), rmdir(1), undelete(2), unlink(2), fts(3), getopt(3),
     symlink(7)

SSTTAANNDDAARRDDSS
     The rrmm command conforms to.

     The simplified uunnlliinnkk command conforms to Version 2 of the Single UNIX
     Specification (“SUSv2”).

HHIISSTTOORRYY
     A rrmm command appeared in Version 1 AT&T UNIX.

BBUUGGSS
     The --PP option assumes that the underlying file system is a fixed-block
     file system.  In addition, only regular files are overwritten, other
     types of files are not.

macOS 14.6                     November 10, 2018                    macOS 14.6
"
touch,"TOUCH(1)                    General Commands Manual                   TOUCH(1)

NNAAMMEE
     ttoouucchh – change file access and modification times

SSYYNNOOPPSSIISS
     ttoouucchh [--AA _[_-_]_[_[_h_h_]_m_m_]_S_S] [--aacchhmm] [--rr _f_i_l_e] [--tt _[_[_C_C_]_Y_Y_]_M_M_D_D_h_h_m_m_[_._S_S_]]
           [--dd _Y_Y_Y_Y_-_M_M_-_D_D_T_h_h_:_m_m_:_S_S_[_._f_r_a_c_]_[_t_z_]] _f_i_l_e _._._.

DDEESSCCRRIIPPTTIIOONN
     The ttoouucchh utility sets the modification and access times of files.  If
     any file does not exist, it is created with default permissions.

     By default, ttoouucchh changes both modification and access times.  The --aa and
     --mm flags may be used to select the access time or the modification time
     individually.  Selecting both is equivalent to the default.  By default,
     the timestamps are set to the current time.  The --dd and --tt flags
     explicitly specify a different time, and the --rr flag specifies to set the
     times those of the specified file.  The --AA flag adjusts the values by a
     specified amount.

     The following options are available:

     --AA      Adjust the access and modification time stamps for the file by
             the specified value.  This flag is intended for use in modifying
             files with incorrectly set time stamps.

             The argument is of the form “[-][[hh]mm]SS” where each pair of
             letters represents the following:

                   _-       Make the adjustment negative: the new time stamp is
                           set to be before the old one.
                   _h_h      The number of hours, from 00 to 99.
                   _m_m      The number of minutes, from 00 to 59.
                   _S_S      The number of seconds, from 00 to 59.

             The --AA flag implies the --cc flag: if any file specified does not
             exist, it will be silently ignored.

     --aa      Change the access time of the file.  The modification time of the
             file is not changed unless the --mm flag is also specified.

     --cc      Do not create the file if it does not exist.  The ttoouucchh utility
             does not treat this as an error.  No error messages are displayed
             and the exit value is not affected.

     --dd      Change the access and modification times to the specified date
             time instead of the current time of day.  The argument is of the
             form “YYYY-MM-DDThh:mm:SS[.frac][tz]” where the letters represent
             the following:
                   _Y_Y_Y_Y    At least four decimal digits representing the year.
                   _M_M, _D_D, _h_h, _m_m, _S_S
                           As with --tt time.
                   _T       The letter T or a space is the time designator.
                   _._f_r_a_c   An optional fraction, consisting of a period or a
                           comma followed by one or more digits.  The number
                           of significant digits depends on the kernel
                           configuration and the filesystem, and may be zero.
                   _t_z      An optional letter Z indicating the time is in UTC.
                           Otherwise, the time is assumed to be in local time.
                           Local time is affected by the value of the TZ
                           environment variable.

     --hh      If the file is a symbolic link, change the times of the link
             itself rather than the file that the link points to.  Note that
             --hh implies --cc and thus will not create any new files.

     --mm      Change the modification time of the file.  The access time of the
             file is not changed unless the --aa flag is also specified.

     --rr      Use the access and modifications times from the specified file
             instead of the current time of day.

     --tt      Change the access and modification times to the specified time
             instead of the current time of day.  The argument is of the form
             “[[CC]YY]MMDDhhmm[.SS]” where each pair of letters represents the
             following:

                   _C_C      The first two digits of the year (the century).
                   _Y_Y      The second two digits of the year.  If “YY” is
                           specified, but “CC” is not, a value for “YY”
                           between 69 and 99 results in a “CC” value of 19.
                           Otherwise, a “CC” value of 20 is used.
                   _M_M      The month of the year, from 01 to 12.
                   _D_D      the day of the month, from 01 to 31.
                   _h_h      The hour of the day, from 00 to 23.
                   _m_m      The minute of the hour, from 00 to 59.
                   _S_S      The second of the minute, from 00 to 60.

             If the “CC” and “YY” letter pairs are not specified, the values
             default to the current year.  If the “SS” letter pair is not
             specified, the value defaults to 0.

EEXXIITT SSTTAATTUUSS
     The ttoouucchh utility exits 0 on success, and >0 if an error occurs.

CCOOMMPPAATTIIBBIILLIITTYY
     The obsolescent form of ttoouucchh, where a time format is specified as the
     first argument, is supported.  When no --rr or --tt option is specified,
     there are at least two arguments, and the first argument is a string of
     digits either eight or ten characters in length, the first argument is
     interpreted as a time specification of the form “MMDDhhmm[YY]”.

     The “MM”, “DD”, “hh” and “mm” letter pairs are treated as their
     counterparts specified to the --tt option.  If the “YY” letter pair is in
     the range 39 to 99, the year is set to 1939 to 1999, otherwise, the year
     is set in the 21st century.

SSEEEE AALLSSOO
     utimensat(2)

SSTTAANNDDAARRDDSS
     The ttoouucchh utility is expected to be a superset of the IEEE Std 1003.2
     (“POSIX.2”) specification.

HHIISSTTOORRYY
     A ttoouucchh utility appeared in Version 7 AT&T UNIX.

macOS 14.6                       June 1, 2018                       macOS 14.6
"
cat,"CAT(1)                      General Commands Manual                     CAT(1)

NNAAMMEE
     ccaatt – concatenate and print files

SSYYNNOOPPSSIISS
     ccaatt [--bbeellnnssttuuvv] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The ccaatt utility reads files sequentially, writing them to the standard
     output.  The _f_i_l_e operands are processed in command-line order.  If _f_i_l_e
     is a single dash (‘--’) or absent, ccaatt reads from the standard input.  If
     _f_i_l_e is a UNIX domain socket, ccaatt connects to it and then reads it until
     EOF.  This complements the UNIX domain binding capability available in
     inetd(8).

     The options are as follows:

     --bb      Number the non-blank output lines, starting at 1.

     --ee      Display non-printing characters (see the --vv option), and display
             a dollar sign (‘$’) at the end of each line.

     --ll      Set an exclusive advisory lock on the standard output file
             descriptor.  This lock is set using fcntl(2) with the F_SETLKW
             command.  If the output file is already locked, ccaatt will block
             until the lock is acquired.

     --nn      Number the output lines, starting at 1.

     --ss      Squeeze multiple adjacent empty lines, causing the output to be
             single spaced.

     --tt      Display non-printing characters (see the --vv option), and display
             tab characters as ‘^I’.

     --uu      Disable output buffering.

     --vv      Display non-printing characters so they are visible.  Control
             characters print as ‘^X’ for control-X; the delete character
             (octal 0177) prints as ‘^?’.  Non-ASCII characters (with the high
             bit set) are printed as ‘M-’ (for meta) followed by the character
             for the low 7 bits.

EEXXIITT SSTTAATTUUSS
     The ccaatt utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     The command:

           cat file1

     will print the contents of _f_i_l_e_1 to the standard output.

     The command:

           cat file1 file2 > file3

     will sequentially print the contents of _f_i_l_e_1 and _f_i_l_e_2 to the file
     _f_i_l_e_3, truncating _f_i_l_e_3 if it already exists.  See the manual page for
     your shell (e.g., sh(1)) for more information on redirection.

     The command:

           cat file1 - file2 - file3

     will print the contents of _f_i_l_e_1, print data it receives from the
     standard input until it receives an EOF (‘^D’) character, print the
     contents of _f_i_l_e_2, read and output contents of the standard input again,
     then finally output the contents of _f_i_l_e_3.  Note that if the standard
     input referred to a file, the second dash on the command-line would have
     no effect, since the entire contents of the file would have already been
     read and printed by ccaatt when it encountered the first ‘--’ operand.

SSEEEE AALLSSOO
     head(1), more(1), pr(1), sh(1), tail(1), vis(1), zcat(1), fcntl(2),
     setbuf(3)

     Rob Pike, “UNIX Style, or cat -v Considered Harmful”, _U_S_E_N_I_X _S_u_m_m_e_r
     _C_o_n_f_e_r_e_n_c_e _P_r_o_c_e_e_d_i_n_g_s, 1983.

SSTTAANNDDAARRDDSS
     The ccaatt utility is compliant with the IEEE Std 1003.2-1992 (“POSIX.2”)
     specification.

     The flags [--bbeellnnssttvv] are extensions to the specification.

HHIISSTTOORRYY
     A ccaatt utility appeared in Version 1 AT&T UNIX.  Dennis Ritchie designed
     and wrote the first man page.  It appears to have been for ccaatt.

BBUUGGSS
     Because of the shell language mechanism used to perform output
     redirection, the command “cat file1 file2 > file1” will cause the
     original data in _f_i_l_e_1 to be destroyed!

     The ccaatt utility does not recognize multibyte characters when the --tt or --vv
     option is in effect.

macOS 14.6                     January 29, 2013                     macOS 14.6
"
echo,"ECHO(1)                     General Commands Manual                    ECHO(1)

NNAAMMEE
     eecchhoo – write arguments to the standard output

SSYYNNOOPPSSIISS
     eecchhoo [--nn] [_s_t_r_i_n_g _._._.]

DDEESSCCRRIIPPTTIIOONN
     The eecchhoo utility writes any specified operands, separated by single blank
     (‘ ’) characters and followed by a newline (‘\n’) character, to the
     standard output.

     The following option is available:

     --nn    Do not print the trailing newline character.  This may also be
           achieved by appending ‘\c’ to the end of the string, as is done by
           iBCS2 compatible systems.  Note that this option as well as the
           effect of ‘\c’ are implementation-defined in IEEE Std 1003.1-2001
           (“POSIX.1”) as amended by Cor. 1-2002.  Applications aiming for
           maximum portability are strongly encouraged to use printf(1) to
           suppress the newline character.

     Some shells may provide a builtin eecchhoo command which is similar or
     identical to this utility.  Most notably, the builtin eecchhoo in sh(1) does
     not accept the --nn option.  Consult the builtin(1) manual page.

EEXXIITT SSTTAATTUUSS
     The eecchhoo utility exits 0 on success, and >0 if an error occurs.

SSEEEE AALLSSOO
     builtin(1), csh(1), printf(1), sh(1)

SSTTAANNDDAARRDDSS
     The eecchhoo utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”) as amended
     by Cor. 1-2002.

macOS 14.6                      April 12, 2003                      macOS 14.6
"
grep,"GREP(1)                     General Commands Manual                    GREP(1)

NNAAMMEE
     ggrreepp, eeggrreepp, ffggrreepp, rrggrreepp, bbzzggrreepp, bbzzeeggrreepp, bbzzffggrreepp, zzggrreepp, zzeeggrreepp,
     zzffggrreepp – file pattern searcher

SSYYNNOOPPSSIISS
     ggrreepp [--aabbccddDDEEFFGGHHhhIIiiJJLLllMMmmnnOOooppqqRRSSssUUVVvvwwXXxxZZzz] [--AA _n_u_m] [--BB _n_u_m] [--CC _n_u_m]
          [--ee _p_a_t_t_e_r_n] [--ff _f_i_l_e] [----bbiinnaarryy--ffiilleess==_v_a_l_u_e] [----ccoolloorr[==_w_h_e_n]]
          [----ccoolloouurr[==_w_h_e_n]] [----ccoonntteexxtt==_n_u_m] [----llaabbeell] [----lliinnee--bbuuffffeerreedd]
          [----nnuullll] [_p_a_t_t_e_r_n] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The ggrreepp utility searches any given input files, selecting lines that
     match one or more patterns.  By default, a pattern matches an input line
     if the regular expression (RE) in the pattern matches the input line
     without its trailing newline.  An empty expression matches every line.
     Each input line that matches at least one of the patterns is written to
     the standard output.

     ggrreepp is used for simple patterns and basic regular expressions (BREs);
     eeggrreepp can handle extended regular expressions (EREs).  See re_format(7)
     for more information on regular expressions.  ffggrreepp is quicker than both
     ggrreepp and eeggrreepp, but can only handle fixed patterns (i.e., it does not
     interpret regular expressions).  Patterns may consist of one or more
     lines, allowing any of the pattern lines to match a portion of the input.

     zzggrreepp, zzeeggrreepp, and zzffggrreepp act like ggrreepp, eeggrreepp, and ffggrreepp, respectively,
     but accept input files compressed with the compress(1) or gzip(1)
     compression utilities.  bbzzggrreepp, bbzzeeggrreepp, and bbzzffggrreepp act like ggrreepp,
     eeggrreepp, and ffggrreepp, respectively, but accept input files compressed with
     the bzip2(1) compression utility.

     The following options are available:

     --AA _n_u_m, ----aafftteerr--ccoonntteexxtt==_n_u_m
             Print _n_u_m lines of trailing context after each match.  See also
             the --BB and --CC options.

     --aa, ----tteexxtt
             Treat all files as ASCII text.  Normally ggrreepp will simply print
             “Binary file ... matches” if files contain binary characters.
             Use of this option forces ggrreepp to output lines matching the
             specified pattern.

     --BB _n_u_m, ----bbeeffoorree--ccoonntteexxtt==_n_u_m
             Print _n_u_m lines of leading context before each match.  See also
             the --AA and --CC options.

     --bb, ----bbyyttee--ooffffsseett
             The offset in bytes of a matched pattern is displayed in front of
             the respective matched line.

     --CC _n_u_m, ----ccoonntteexxtt==_n_u_m
             Print _n_u_m lines of leading and trailing context surrounding each
             match.  See also the --AA and --BB options.

     --cc, ----ccoouunntt
             Only a count of selected lines is written to standard output.

     ----ccoolloouurr==[_w_h_e_n], ----ccoolloorr==[_w_h_e_n]
             Mark up the matching text with the expression stored in the
             GREP_COLOR environment variable.  The possible values of _w_h_e_n are
             “nneevveerr”, “aallwwaayyss” and “aauuttoo”.

     --DD _a_c_t_i_o_n, ----ddeevviicceess==_a_c_t_i_o_n
             Specify the demanded _a_c_t_i_o_n for devices, FIFOs and sockets.  The
             default _a_c_t_i_o_n is “rreeaadd”, which means, that they are read as if
             they were normal files.  If the _a_c_t_i_o_n is set to “sskkiipp”, devices
             are silently skipped.

     --dd _a_c_t_i_o_n, ----ddiirreeccttoorriieess==_a_c_t_i_o_n
             Specify the demanded _a_c_t_i_o_n for directories.  It is “rreeaadd” by
             default, which means that the directories are read in the same
             manner as normal files.  Other possible values are “sskkiipp” to
             silently ignore the directories, and “rreeccuurrssee” to read them
             recursively, which has the same effect as the --RR and --rr option.

     --EE, ----eexxtteennddeedd--rreeggeexxpp
             Interpret _p_a_t_t_e_r_n as an extended regular expression (i.e., force
             ggrreepp to behave as eeggrreepp).

     --ee _p_a_t_t_e_r_n, ----rreeggeexxpp==_p_a_t_t_e_r_n
             Specify a _p_a_t_t_e_r_n used during the search of the input: an input
             line is selected if it matches any of the specified patterns.
             This option is most useful when multiple --ee options are used to
             specify multiple patterns, or when a _p_a_t_t_e_r_n begins with a dash
             (‘-’).

     ----eexxcclluuddee _p_a_t_t_e_r_n
             If specified, it excludes files matching the given filename
             _p_a_t_t_e_r_n from the search.  Note that ----eexxcclluuddee and ----iinncclluuddee
             patterns are processed in the order given.  If a name matches
             multiple patterns, the latest matching rule wins.  If no
             ----iinncclluuddee pattern is specified, all files are searched that are
             not excluded.  Patterns are matched to the full path specified,
             not only to the filename component.

     ----eexxcclluuddee--ddiirr _p_a_t_t_e_r_n
             If --RR is specified, it excludes directories matching the given
             filename _p_a_t_t_e_r_n from the search.  Note that ----eexxcclluuddee--ddiirr and
             ----iinncclluuddee--ddiirr patterns are processed in the order given.  If a
             name matches multiple patterns, the latest matching rule wins.
             If no ----iinncclluuddee--ddiirr pattern is specified, all directories are
             searched that are not excluded.

     --FF, ----ffiixxeedd--ssttrriinnggss
             Interpret _p_a_t_t_e_r_n as a set of fixed strings (i.e., force ggrreepp to
             behave as ffggrreepp).

     --ff _f_i_l_e, ----ffiillee==_f_i_l_e
             Read one or more newline separated patterns from _f_i_l_e.  Empty
             pattern lines match every input line.  Newlines are not
             considered part of a pattern.  If _f_i_l_e is empty, nothing is
             matched.

     --GG, ----bbaassiicc--rreeggeexxpp
             Interpret _p_a_t_t_e_r_n as a basic regular expression (i.e., force ggrreepp
             to behave as traditional ggrreepp).

     --HH      Always print filename headers with output lines.

     --hh, ----nnoo--ffiilleennaammee
             Never print filename headers (i.e., filenames) with output lines.

     ----hheellpp  Print a brief help message.

     --II      Ignore binary files.  This option is equivalent to the
             “----bbiinnaarryy--ffiilleess==wwiitthhoouutt--mmaattcchh” option.

     --ii, ----iiggnnoorree--ccaassee
             Perform case insensitive matching.  By default, ggrreepp is case
             sensitive.

     ----iinncclluuddee _p_a_t_t_e_r_n
             If specified, only files matching the given filename _p_a_t_t_e_r_n are
             searched.  Note that ----iinncclluuddee and ----eexxcclluuddee patterns are
             processed in the order given.  If a name matches multiple
             patterns, the latest matching rule wins.  Patterns are matched to
             the full path specified, not only to the filename component.

     ----iinncclluuddee--ddiirr _p_a_t_t_e_r_n
             If --RR is specified, only directories matching the given filename
             _p_a_t_t_e_r_n are searched.  Note that ----iinncclluuddee--ddiirr and ----eexxcclluuddee--ddiirr
             patterns are processed in the order given.  If a name matches
             multiple patterns, the latest matching rule wins.

     --JJ, ----bbzz22ddeeccoommpprreessss
             Decompress the bzip2(1) compressed file before looking for the
             text.

     --LL, ----ffiilleess--wwiitthhoouutt--mmaattcchh
             Only the names of files not containing selected lines are written
             to standard output.  Pathnames are listed once per file searched.
             If the standard input is searched, the string “(standard input)”
             is written unless a ----llaabbeell is specified.

     --ll, ----ffiilleess--wwiitthh--mmaattcchheess
             Only the names of files containing selected lines are written to
             standard output.  ggrreepp will only search a file until a match has
             been found, making searches potentially less expensive.
             Pathnames are listed once per file searched.  If the standard
             input is searched, the string “(standard input)” is written
             unless a ----llaabbeell is specified.

     ----llaabbeell
             Label to use in place of “(standard input)” for a file name where
             a file name would normally be printed.  This option applies to
             --HH, --LL, and --ll.

     ----mmmmaapp  Use mmap(2) instead of read(2) to read input, which can result in
             better performance under some circumstances but can cause
             undefined behaviour.

     --MM, ----llzzmmaa
             Decompress the LZMA compressed file before looking for the text.

     --mm _n_u_m, ----mmaaxx--ccoouunntt==_n_u_m
             Stop reading the file after _n_u_m matches.

     --nn, ----lliinnee--nnuummbbeerr
             Each output line is preceded by its relative line number in the
             file, starting at line 1.  The line number counter is reset for
             each file processed.  This option is ignored if --cc, --LL, --ll, or --qq
             is specified.

     ----nnuullll  Prints a zero-byte after the file name.

     --OO      If --RR is specified, follow symbolic links only if they were
             explicitly listed on the command line.  The default is not to
             follow symbolic links.

     --oo, ----oonnllyy--mmaattcchhiinngg
             Prints only the matching part of the lines.

     --pp      If --RR is specified, no symbolic links are followed.  This is the
             default.

     --qq, ----qquuiieett, ----ssiilleenntt
             Quiet mode: suppress normal output.  ggrreepp will only search a file
             until a match has been found, making searches potentially less
             expensive.

     --RR, --rr, ----rreeccuurrssiivvee
             Recursively search subdirectories listed.  (i.e., force ggrreepp to
             behave as rrggrreepp).

     --SS      If --RR is specified, all symbolic links are followed.  The default
             is not to follow symbolic links.

     --ss, ----nnoo--mmeessssaaggeess
             Silent mode.  Nonexistent and unreadable files are ignored (i.e.,
             their error messages are suppressed).

     --UU, ----bbiinnaarryy
             Search binary files, but do not attempt to print them.

     --uu      This option has no effect and is provided only for compatibility
             with GNU grep.

     --VV, ----vveerrssiioonn
             Display version information and exit.

     --vv, ----iinnvveerrtt--mmaattcchh
             Selected lines are those _n_o_t matching any of the specified
             patterns.

     --ww, ----wwoorrdd--rreeggeexxpp
             The expression is searched for as a word (as if surrounded by
             ‘[[:<:]]’ and ‘[[:>:]]’; see re_format(7)).  This option has no
             effect if --xx is also specified.

     --xx, ----lliinnee--rreeggeexxpp
             Only input lines selected against an entire fixed string or
             regular expression are considered to be matching lines.

     --yy      Equivalent to --ii.  Obsoleted.

     --zz, ----nnuullll--ddaattaa
             Treat input and output data as sequences of lines terminated by a
             zero-byte instead of a newline.

     --XX, ----xxzz
             Decompress the xz(1) compressed file before looking for the text.

     --ZZ, ----ddeeccoommpprreessss
             Force ggrreepp to behave as zzggrreepp.

     ----bbiinnaarryy--ffiilleess==_v_a_l_u_e
             Controls searching and printing of binary files.  Options are:
             bbiinnaarryy (default)  Search binary files but do not print them.
             wwiitthhoouutt--mmaattcchh     Do not search binary files.
             tteexxtt              Treat all files as text.

     ----lliinnee--bbuuffffeerreedd
             Force output to be line buffered.  By default, output is line
             buffered when standard output is a terminal and block buffered
             otherwise.

     If no file arguments are specified, the standard input is used.
     Additionally, “--” may be used in place of a file name, anywhere that a
     file name is accepted, to read from standard input.  This includes both
     --ff and file arguments.

EENNVVIIRROONNMMEENNTT
     GREP_OPTIONS  May be used to specify default options that will be placed
                   at the beginning of the argument list.  Backslash-escaping
                   is not supported, unlike the behavior in GNU grep.

EEXXIITT SSTTAATTUUSS
     The ggrreepp utility exits with one of the following values:

     0     One or more lines were selected.
     1     No lines were selected.
     >1    An error occurred.

EEXXAAMMPPLLEESS
     --   Find all occurrences of the pattern ‘patricia’ in a file:

               $ grep 'patricia' myfile

     --   Same as above but looking only for complete words:

               $ grep -w 'patricia' myfile

     --   Count occurrences of the exact pattern ‘FOO’ :

               $ grep -c FOO myfile

     --   Same as above but ignoring case:

               $ grep -c -i FOO myfile

     --   Find all occurrences of the pattern ‘.Pp’ at the beginning of a line:

               $ grep '^\.Pp' myfile

         The apostrophes ensure the entire expression is evaluated by ggrreepp
         instead of by the user's shell.  The caret ‘^’ matches the null
         string at the beginning of a line, and the ‘\’ escapes the ‘.’, which
         would otherwise match any character.

     --   Find all lines in a file which do not contain the words ‘foo’ or
         ‘bar’:

               $ grep -v -e 'foo' -e 'bar' myfile

     --   Peruse the file ‘calendar’ looking for either 19, 20, or 25 using
         extended regular expressions:

               $ egrep '19|20|25' calendar

     --   Show matching lines and the name of the ‘*.h’ files which contain the
         pattern ‘FIXME’.  Do the search recursively from the _/_u_s_r_/_s_r_c_/_s_y_s_/_a_r_m
         directory

               $ grep -H -R FIXME --include=""*.h"" /usr/src/sys/arm/

     --   Same as above but show only the name of the matching file:

               $ grep -l -R FIXME --include=""*.h"" /usr/src/sys/arm/

     --   Show lines containing the text ‘foo’.  The matching part of the
         output is colored and every line is prefixed with the line number and
         the offset in the file for those lines that matched.

               $ grep -b --colour -n foo myfile

     --   Show lines that match the extended regular expression patterns read
         from the standard input:

               $ echo -e 'Free\nBSD\nAll.*reserved' | grep -E -f - myfile

     --   Show lines from the output of the pciconf(8) command matching the
         specified extended regular expression along with three lines of
         leading context and one line of trailing context:

               $ pciconf -lv | grep -B3 -A1 -E 'class.*=.*storage'

     --   Suppress any output and use the exit status to show an appropriate
         message:

               $ grep -q foo myfile && echo File matches

SSEEEE AALLSSOO
     bzip2(1), compress(1), ed(1), ex(1), gzip(1), sed(1), xz(1), zgrep(1),
     re_format(7)

SSTTAANNDDAARRDDSS
     The ggrreepp utility is compliant with the IEEE Std 1003.1-2008 (“POSIX.1”)
     specification.

     The flags [--AAaaBBbbCCDDddGGHHhhIILLmmooppRRSSUUVVww] are extensions to that specification,
     and the behaviour of the --ff flag when used with an empty pattern file is
     left undefined.

     All long options are provided for compatibility with GNU versions of this
     utility.

     Historic versions of the ggrreepp utility also supported the flags [--rruuyy].
     This implementation supports those options; however, their use is
     strongly discouraged.

HHIISSTTOORRYY
     The ggrreepp command first appeared in Version 6 AT&T UNIX.

BBUUGGSS
     The ggrreepp utility does not normalize Unicode input, so a pattern
     containing composed characters will not match decomposed input, and vice
     versa.

macOS 14.6                     November 10, 2021                    macOS 14.6
"
find,"FIND(1)                     General Commands Manual                    FIND(1)

NNAAMMEE
     ffiinndd – walk a file hierarchy

SSYYNNOOPPSSIISS
     ffiinndd [--HH | --LL | --PP] [--EEXXddssxx] [--ff _p_a_t_h] _p_a_t_h _._._. [_e_x_p_r_e_s_s_i_o_n]
     ffiinndd [--HH | --LL | --PP] [--EEXXddssxx] --ff _p_a_t_h [_p_a_t_h _._._.] [_e_x_p_r_e_s_s_i_o_n]

DDEESSCCRRIIPPTTIIOONN
     The ffiinndd utility recursively descends the directory tree for each _p_a_t_h
     listed, evaluating an _e_x_p_r_e_s_s_i_o_n (composed of the “primaries” and
     “operands” listed below) in terms of each file in the tree.

     The options are as follows:

     --EE      Interpret regular expressions following the --rreeggeexx and --iirreeggeexx
             primaries as extended (modern) regular expressions rather than
             basic regular expressions (BRE's).  The re_format(7) manual page
             fully describes both formats.

     --HH      Cause the file information and file type (see stat(2)) returned
             for each symbolic link specified on the command line to be those
             of the file referenced by the link, not the link itself.  If the
             referenced file does not exist, the file information and type
             will be for the link itself.  File information of all symbolic
             links not on the command line is that of the link itself.

     --LL      Cause the file information and file type (see stat(2)) returned
             for each symbolic link to be those of the file referenced by the
             link, not the link itself.  If the referenced file does not
             exist, the file information and type will be for the link itself.

             This option is equivalent to the deprecated --ffoollllooww primary.

     --PP      Cause the file information and file type (see stat(2)) returned
             for each symbolic link to be those of the link itself.  This is
             the default.

     --XX      Permit ffiinndd to be safely used in conjunction with xargs(1).  If a
             file name contains any of the delimiting characters used by
             xargs(1), a diagnostic message is displayed on standard error,
             and the file is skipped.  The delimiting characters include
             single (“ ' ”) and double (“ "" ”) quotes, backslash (“\”), space,
             tab and newline characters.

             However, you may wish to consider the --pprriinntt00 primary in
             conjunction with “xxaarrggss --00” as an effective alternative.

     --dd      Cause ffiinndd to perform a depth-first traversal.

             This option is a BSD-specific equivalent of the --ddeepptthh primary
             specified by IEEE Std 1003.1-2001 (“POSIX.1”).  Refer to its
             description under _P_R_I_M_A_R_I_E_S for more information.

     --ff _p_a_t_h
             Add _p_a_t_h to the list of paths that will be recursed into.  This
             is useful when _p_a_t_h begins with a character that would otherwise
             be interpreted as an _e_x_p_r_e_s_s_i_o_n, namely “!” , “(” and “-”.

     --ss      Cause ffiinndd to traverse the file hierarchies in lexicographical
             order, i.e., alphabetical order within each directory.  Note:
             ‘find -s’ and ‘find | sort’ may give different results.

             For example, ‘find -s’ puts a directory ‘_f_o_o’ with all its
             contents before a directory ‘_f_o_o’.  but ‘find | sort’ puts the
             directory name ‘_f_o_o’.  before any string like ‘_f_o_o_/_b_a_r’ because
             ‘.’ goes before ‘/’ in ASCII.  In locales other than _C results
             may vary more due to collation differences.

     --xx      Prevent ffiinndd from descending into directories that have a device
             number different than that of the file from which the descent
             began.

             This option is equivalent to the deprecated --xxddeevv primary.

PPRRIIMMAARRIIEESS
     All primaries which take a numeric argument allow the number to be
     preceded by a plus sign (“+”) or a minus sign (“-”).  A preceding plus
     sign means “more than n”, a preceding minus sign means “less than n” and
     neither means “exactly n”.

     --BBmmiinn _n
             True if the difference between the time of a file's inode
             creation and the time ffiinndd was started, rounded up to the next
             full minute, is _n minutes.

     --BBnneewweerr _f_i_l_e
             Same as --nneewweerrBBmm.

     --BBttiimmee _n[ssmmhhddww]
             If no units are specified, this primary evaluates to true if the
             difference between the time of a file's inode creation and the
             time ffiinndd was started, rounded up to the next full 24-hour
             period, is _n 24-hour periods.

             If units are specified, this primary evaluates to true if the
             difference between the time of a file's inode creation and the
             time ffiinndd was started is exactly _n units.  Please refer to the
             --aattiimmee primary description for information on supported time
             units.

     --aaccll    May be used in conjunction with other primaries to locate files
             with extended ACLs.  See acl(3) for more information.

     --aammiinn [--|++]_n
             True if the difference between the file last access time and the
             time ffiinndd was started, rounded up to the next full minute, is
             more than _n (+_n), less than _n (-_n), or exactly _n minutes ago.

     --aanneewweerr _f_i_l_e
             Same as --nneewweerraamm.

     --aattiimmee _n[ssmmhhddww]
             If no units are specified, this primary evaluates to true if the
             difference between the file last access time and the time ffiinndd
             was started, rounded up to the next full 24-hour period, is _n
             24-hour periods.

             If units are specified, this primary evaluates to true if the
             difference between the file last access time and the time ffiinndd
             was started is exactly _n units.  Possible time units are as
             follows:

             ss       second
             mm       minute (60 seconds)
             hh       hour (60 minutes)
             dd       day (24 hours)
             ww       week (7 days)

             Any number of units may be combined in one --aattiimmee argument, for
             example, “-atime -1h30m”.  Units are probably only useful when
             used in conjunction with the ++ or -- modifier.

     --ccmmiinn [--|++]_n
             True if the difference between the time of last change of file
             status information and the time ffiinndd was started, rounded up to
             the next full minute, is more than _n (+_n), less than _n (-_n), or
             exactly _n minutes ago.

     --ccnneewweerr _f_i_l_e
             Same as --nneewweerrccmm.

     --ccttiimmee _n[ssmmhhddww]
             If no units are specified, this primary evaluates to true if the
             difference between the time of last change of file status
             information and the time ffiinndd was started, rounded up to the next
             full 24-hour period, is _n 24-hour periods.

             If units are specified, this primary evaluates to true if the
             difference between the time of last change of file status
             information and the time ffiinndd was started is exactly _n units.
             Please refer to the --aattiimmee primary description for information on
             supported time units.

     --dd      Non-portable, BSD-specific version of ddeepptthh.  GNU find implements
             this as a primary in mistaken emulation of FreeBSD ffiinndd.

     --ddeelleettee
             Delete found files and/or directories.  Always returns true.
             This executes from the current working directory as ffiinndd recurses
             down the tree.  It will not attempt to delete a filename with a
             “_/” character in its pathname relative to “_.” for security
             reasons.  Depth-first traversal processing is implied by this
             option.  The --ddeelleettee primary will fail to delete a directory if
             it is not empty.  Following symlinks is incompatible with this
             option.

     --ddeepptthh  Always true; same as the non-portable --dd option.  Cause ffiinndd to
             perform a depth-first traversal, i.e., directories are visited in
             post-order and all entries in a directory will be acted on before
             the directory itself.  By default, ffiinndd visits directories in
             pre-order, i.e., before their contents.  Note, the default is _n_o_t
             a breadth-first traversal.

             The --ddeepptthh primary can be useful when ffiinndd is used with cpio(1)
             to process files that are contained in directories with unusual
             permissions.  It ensures that you have write permission while you
             are placing files in a directory, then sets the directory's
             permissions as the last thing.

     --ddeepptthh _n
             True if the depth of the file relative to the starting point of
             the traversal is _n.

     --eemmppttyy  True if the current file or directory is empty.

     --eexxeecc _u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.] ;
             True if the program named _u_t_i_l_i_t_y returns a zero value as its
             exit status.  Optional _a_r_g_u_m_e_n_t_s may be passed to the utility.
             The expression must be terminated by a semicolon (“;”).  If you
             invoke ffiinndd from a shell you may need to quote the semicolon if
             the shell would otherwise treat it as a control operator.  If the
             string “{}” appears anywhere in the utility name or the arguments
             it is replaced by the pathname of the current file.  _U_t_i_l_i_t_y will
             be executed from the directory from which ffiinndd was executed.
             _U_t_i_l_i_t_y and _a_r_g_u_m_e_n_t_s are not subject to the further expansion of
             shell patterns and constructs.

     --eexxeecc _u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.] {} +
             Same as --eexxeecc, except that “{}” is replaced with as many
             pathnames as possible for each invocation of _u_t_i_l_i_t_y.  This
             behaviour is similar to that of xargs(1).  The primary always
             returns true; if at least one invocation of _u_t_i_l_i_t_y returns a
             non-zero exit status, ffiinndd will return a non-zero exit status.

     --eexxeeccddiirr _u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.] ;
             The --eexxeeccddiirr primary is identical to the --eexxeecc primary with the
             exception that _u_t_i_l_i_t_y will be executed from the directory that
             holds the current file.  The filename substituted for the string
             “{}” is not qualified.

     --eexxeeccddiirr _u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.] {} +
             Same as --eexxeeccddiirr, except that “{}” is replaced with as many
             pathnames as possible for each invocation of _u_t_i_l_i_t_y.  This
             behaviour is similar to that of xargs(1).  The primary always
             returns true; if at least one invocation of _u_t_i_l_i_t_y returns a
             non-zero exit status, ffiinndd will return a non-zero exit status.

     --ffllaaggss [--|++]_f_l_a_g_s,_n_o_t_f_l_a_g_s
             The flags are specified using symbolic names (see chflags(1)).
             Those with the ""no"" prefix (except ""nodump"") are said to be
             _n_o_t_f_l_a_g_s.  Flags in _f_l_a_g_s are checked to be set, and flags in
             _n_o_t_f_l_a_g_s are checked to be not set.  Note that this is different
             from --ppeerrmm, which only allows the user to specify mode bits that
             are set.

             If flags are preceded by a dash (“-”), this primary evaluates to
             true if at least all of the bits in _f_l_a_g_s and none of the bits in
             _n_o_t_f_l_a_g_s are set in the file's flags bits.  If flags are preceded
             by a plus (“+”), this primary evaluates to true if any of the
             bits in _f_l_a_g_s is set in the file's flags bits, or any of the bits
             in _n_o_t_f_l_a_g_s is not set in the file's flags bits.  Otherwise, this
             primary evaluates to true if the bits in _f_l_a_g_s exactly match the
             file's flags bits, and none of the _f_l_a_g_s bits match those of
             _n_o_t_f_l_a_g_s.

     --ffssttyyppee _t_y_p_e
             True if the file is contained in a file system of type _t_y_p_e.  The
             lsvfs(1) command can be used to find out the types of file
             systems that are available on the system.  In addition, there are
             two pseudo-types, “local” and “rdonly”.  The former matches any
             file system physically mounted on the system where the ffiinndd is
             being executed and the latter matches any file system which is
             mounted read-only.

     --ggiidd _g_n_a_m_e
             The same thing as --ggrroouupp _g_n_a_m_e for compatibility with GNU find.
             GNU find imposes a restriction that _g_n_a_m_e is numeric, while ffiinndd
             does not.

     --ggrroouupp _g_n_a_m_e
             True if the file belongs to the group _g_n_a_m_e.  If _g_n_a_m_e is numeric
             and there is no such group name, then _g_n_a_m_e is treated as a group
             ID.

     --iiggnnoorree__rreeaaddddiirr__rraaccee
             Ignore errors because a file or a directory is deleted after
             reading the name from a directory.  This option does not affect
             errors occurring on starting points.

     --iillnnaammee _p_a_t_t_e_r_n
             Like --llnnaammee, but the match is case insensitive.  This is a GNU
             find extension.

     --iinnaammee _p_a_t_t_e_r_n
             Like --nnaammee, but the match is case insensitive.

     --iinnuumm _n
             True if the file has inode number _n.

     --iippaatthh _p_a_t_t_e_r_n
             Like --ppaatthh, but the match is case insensitive.

     --iirreeggeexx _p_a_t_t_e_r_n
             Like --rreeggeexx, but the match is case insensitive.

     --iiwwhhoolleennaammee _p_a_t_t_e_r_n
             The same thing as --iippaatthh, for GNU find compatibility.

     --lliinnkkss _n
             True if the file has _n links.

     --llnnaammee _p_a_t_t_e_r_n
             Like --nnaammee, but the contents of the symbolic link are matched
             instead of the file name.  Note that this only matches broken
             symbolic links if symbolic links are being followed.  This is a
             GNU find extension.

     --llss     This primary always evaluates to true.  The following information
             for the current file is written to standard output: its inode
             number, size in 512-byte blocks, file permissions, number of hard
             links, owner, group, size in bytes, last modification time, and
             pathname.  If the file is a block or character special file, the
             device number will be displayed instead of the size in bytes.  If
             the file is a symbolic link, the pathname of the linked-to file
             will be displayed preceded by “->”.  The format is identical to
             that produced by “llss --ddggiillss”.

     --mmaaxxddeepptthh _n
             Always true; descend at most _n directory levels below the command
             line arguments.  If any --mmaaxxddeepptthh primary is specified, it
             applies to the entire expression even if it would not normally be
             evaluated.  “--mmaaxxddeepptthh 0” limits the whole search to the command
             line arguments.

     --mmiinnddeepptthh _n
             Always true; do not apply any tests or actions at levels less
             than _n.  If any --mmiinnddeepptthh primary is specified, it applies to the
             entire expression even if it would not normally be evaluated.
             “--mmiinnddeepptthh 1” processes all but the command line arguments.

     --mmmmiinn [--|++]_n
             True if the difference between the file last modification time
             and the time ffiinndd was started, rounded up to the next full
             minute, is more than _n (+_n), less than _n (-_n), or exactly _n
             minutes ago.

     --mmnneewweerr _f_i_l_e
             Same as --nneewweerr.

     --mmoouunntt  The same thing as --xxddeevv, for GNU find compatibility.

     --mmttiimmee _n[ssmmhhddww]
             If no units are specified, this primary evaluates to true if the
             difference between the file last modification time and the time
             ffiinndd was started, rounded up to the next full 24-hour period, is
             _n 24-hour periods.

             If units are specified, this primary evaluates to true if the
             difference between the file last modification time and the time
             ffiinndd was started is exactly _n units.  Please refer to the --aattiimmee
             primary description for information on supported time units.

     --nnaammee _p_a_t_t_e_r_n
             True if the last component of the pathname being examined matches
             _p_a_t_t_e_r_n.  Special shell pattern matching characters (“[”, “]”,
             “*”, and “?”) may be used as part of _p_a_t_t_e_r_n.  These characters
             may be matched explicitly by escaping them with a backslash
             (“\”).

     --nneewweerr _f_i_l_e
             True if the current file has a more recent last modification time
             than _f_i_l_e.

     --nneewweerr_X_Y _f_i_l_e
             True if the current file has a more recent last access time
             (_X=aa), inode creation time (_X=BB), change time (_X=cc), or
             modification time (_X=mm) than the last access time (_Y=aa), inode
             creation time (_Y=BB), change time (_Y=cc), or modification time
             (_Y=mm) of _f_i_l_e.  In addition, if _Y=tt, then _f_i_l_e is instead
             interpreted as a direct date specification of the form understood
             by ISO8601 or RFC822.  Note that --nneewweerrmmmm is equivalent to
             --nneewweerr.

     --nnooggrroouupp
             True if the file belongs to an unknown group.

     --nnooiiggnnoorree__rreeaaddddiirr__rraaccee
             Turn off the effect of --iiggnnoorree__rreeaaddddiirr__rraaccee.  This is default
             behaviour.

     --nnoolleeaaff
             This option is for GNU find compatibility.  In GNU find it
             disables an optimization not relevant to ffiinndd, so it is ignored.

     --nnoouusseerr
             True if the file belongs to an unknown user.

     --ookk _u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.] ;
             The --ookk primary is identical to the --eexxeecc primary with the
             exception that ffiinndd requests user affirmation for the execution
             of the _u_t_i_l_i_t_y by printing a message to the terminal and reading
             a response.  If the response is not affirmative (‘y’ in the
             “POSIX” locale), the command is not executed and the value of the
             --ookk expression is false.

     --ookkddiirr _u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.] ;
             The --ookkddiirr primary is identical to the --eexxeeccddiirr primary with the
             same exception as described for the --ookk primary.

     --ppaatthh _p_a_t_t_e_r_n
             True if the pathname being examined matches _p_a_t_t_e_r_n.  Special
             shell pattern matching characters (“[”, “]”, “*”, and “?”) may be
             used as part of _p_a_t_t_e_r_n.  These characters may be matched
             explicitly by escaping them with a backslash (“\”).  Slashes
             (“/”) are treated as normal characters and do not have to be
             matched explicitly.

     --ppeerrmm [--|++]_m_o_d_e
             The _m_o_d_e may be either symbolic (see chmod(1)) or an octal
             number.  If the _m_o_d_e is symbolic, a starting value of zero is
             assumed and the _m_o_d_e sets or clears permissions without regard to
             the process' file mode creation mask.  If the _m_o_d_e is octal, only
             bits 07777 (S_ISUID | S_ISGID | S_ISTXT | S_IRWXU | S_IRWXG |
             S_IRWXO) of the file's mode bits participate in the comparison.
             If the _m_o_d_e is preceded by a dash (“-”), this primary evaluates
             to true if at least all of the bits in the _m_o_d_e are set in the
             file's mode bits.  If the _m_o_d_e is preceded by a plus (“+”), this
             primary evaluates to true if any of the bits in the _m_o_d_e are set
             in the file's mode bits.  Otherwise, this primary evaluates to
             true if the bits in the _m_o_d_e exactly match the file's mode bits.
             Note, the first character of a symbolic mode may not be a dash
             (“-”).

     --pprriinntt  This primary always evaluates to true.  It prints the pathname of
             the current file to standard output.  If none of --eexxeecc, --llss,
             --pprriinntt, --pprriinntt00, or --ookk is specified, the given expression shall
             be effectively replaced by (( _g_i_v_e_n _e_x_p_r_e_s_s_i_o_n )) --pprriinntt.

     --pprriinntt00
             This primary always evaluates to true.  It prints the pathname of
             the current file to standard output, followed by an ASCII NUL
             character (character code 0).

     --pprruunnee  This primary always evaluates to true.  It causes ffiinndd to not
             descend into the current file.  Note, the --pprruunnee primary has no
             effect if the --dd option was specified.

     --qquuiitt   Causes ffiinndd to terminate immediately.

     --rreeggeexx _p_a_t_t_e_r_n
             True if the whole path of the file matches _p_a_t_t_e_r_n using regular
             expression.  To match a file named “_._/_f_o_o_/_x_y_z_z_y”, you can use the
             regular expression “.*/[xyz]*” or “.*/foo/.*”, but not “xyzzy” or
             “/foo/”.

     --ssaammeeffiillee _n_a_m_e
             True if the file is a hard link to _n_a_m_e.  If the command option
             --LL is specified, it is also true if the file is a symbolic link
             and points to _n_a_m_e.

     --ssiizzee _n[cckkMMGGTTPP]
             True if the file's size, rounded up, in 512-byte blocks is _n.  If
             _n is followed by a cc, then the primary is true if the file's size
             is _n bytes (characters).  Similarly if _n is followed by a scale
             indicator then the file's size is compared to _n scaled as:

             kk       kilobytes (1024 bytes)
             MM       megabytes (1024 kilobytes)
             GG       gigabytes (1024 megabytes)
             TT       terabytes (1024 gigabytes)
             PP       petabytes (1024 terabytes)

     --ssppaarrssee
             True if the current file is sparse, i.e. has fewer blocks
             allocated than expected based on its size in bytes.  This might
             also match files that have been compressed by the filesystem.

     --ttyyppee _t
             True if the file is of the specified type.  Possible file types
             are as follows:

             bb       block special
             cc       character special
             dd       directory
             ff       regular file
             ll       symbolic link
             pp       FIFO
             ss       socket

     --uuiidd _u_n_a_m_e
             The same thing as _-_u_s_e_r _u_n_a_m_e for compatibility with GNU find.
             GNU find imposes a restriction that _u_n_a_m_e is numeric, while ffiinndd
             does not.

     --uusseerr _u_n_a_m_e
             True if the file belongs to the user _u_n_a_m_e.  If _u_n_a_m_e is numeric
             and there is no such user name, then _u_n_a_m_e is treated as a user
             ID.

     --wwhhoolleennaammee _p_a_t_t_e_r_n
             The same thing as --ppaatthh, for GNU find compatibility.

     --xxaattttrr  True if the file has any extended attributes.

     --xxaattttrrnnaammee _n_a_m_e
             True if the file has an extended attribute with the specified
             _n_a_m_e.

OOPPEERRAATTOORRSS
     The primaries may be combined using the following operators.  The
     operators are listed in order of decreasing precedence.

     (( _e_x_p_r_e_s_s_i_o_n ))
             This evaluates to true if the parenthesized expression evaluates
             to true.

     !! _e_x_p_r_e_s_s_i_o_n
     --nnoott _e_x_p_r_e_s_s_i_o_n
             This is the unary NOT operator.  It evaluates to true if the
             expression is false.

     --ffaallssee  Always false.
     --ttrruuee   Always true.

     _e_x_p_r_e_s_s_i_o_n --aanndd _e_x_p_r_e_s_s_i_o_n
     _e_x_p_r_e_s_s_i_o_n _e_x_p_r_e_s_s_i_o_n
             The --aanndd operator is the logical AND operator.  As it is implied
             by the juxtaposition of two expressions it does not have to be
             specified.  The expression evaluates to true if both expressions
             are true.  The second expression is not evaluated if the first
             expression is false.

     _e_x_p_r_e_s_s_i_o_n --oorr _e_x_p_r_e_s_s_i_o_n
             The --oorr operator is the logical OR operator.  The expression
             evaluates to true if either the first or the second expression is
             true.  The second expression is not evaluated if the first
             expression is true.

     All operands and primaries must be separate arguments to ffiinndd.  Primaries
     which themselves take arguments expect each argument to be a separate
     argument to ffiinndd.

EENNVVIIRROONNMMEENNTT
     The LANG, LC_ALL, LC_COLLATE, LC_CTYPE, LC_MESSAGES and LC_TIME
     environment variables affect the execution of the ffiinndd utility as
     described in environ(7).

EEXXAAMMPPLLEESS
     The following examples are shown as given to the shell:

     find / \! -name ""*.c"" -print
             Print out a list of all the files whose names do not end in _._c.

     find / -newer ttt -user wnj -print
             Print out a list of all the files owned by user “wnj” that are
             newer than the file _t_t_t.

     find / \! \( -newer ttt -user wnj \) -print
             Print out a list of all the files which are not both newer than
             _t_t_t and owned by “wnj”.

     find / \( -newer ttt -or -user wnj \) -print
             Print out a list of all the files that are either owned by “wnj”
             or that are newer than _t_t_t.

     find / -newerct '1 minute ago' -print
             Print out a list of all the files whose inode change time is more
             recent than the current time minus one minute.

     find / -type f -exec echo {} \;
             Use the echo(1) command to print out a list of all the files.

     find -L /usr/ports/packages -type l -exec rm -- {} +
             Delete all broken symbolic links in _/_u_s_r_/_p_o_r_t_s_/_p_a_c_k_a_g_e_s.

     find /usr/src -name CVS -prune -o -depth +6 -print
             Find files and directories that are at least seven levels deep in
             the working directory _/_u_s_r_/_s_r_c.

     find /usr/src -name CVS -prune -o -mindepth 7 -print
             Is not equivalent to the previous example, since --pprruunnee is not
             evaluated below level seven.

CCOOMMPPAATTIIBBIILLIITTYY
     The --ffoollllooww primary is deprecated; the --LL option should be used instead.
     See the _S_T_A_N_D_A_R_D_S section below for details.

SSEEEE AALLSSOO
     chflags(1), chmod(1), locate(1), lsvfs(1), whereis(1), which(1),
     xargs(1), stat(2), acl(3), fts(3), getgrent(3), getpwent(3), strmode(3),
     ascii(7), re_format(7), symlink(7)

SSTTAANNDDAARRDDSS
     The ffiinndd utility syntax is a superset of the syntax specified by the IEEE
     Std 1003.1-2001 (“POSIX.1”) standard.

     All the single character options except --HH and --LL as well as --aammiinn,
     --aanneewweerr, --ccmmiinn, --ccnneewweerr, --ddeelleettee, --eemmppttyy, --ffssttyyppee, --iinnaammee, --iinnuumm,
     --iirreeggeexx, --llss, --mmaaxxddeepptthh, --mmiinnddeepptthh, --mmmmiinn, --nnoott, --ppaatthh, --pprriinntt00, --rreeggeexx,
     --ssppaarrssee and all of the --BB** birthtime related primaries are extensions to
     IEEE Std 1003.1-2001 (“POSIX.1”).

     Historically, the --dd, --LL and --xx options were implemented using the
     primaries --ddeepptthh, --ffoollllooww, and --xxddeevv.  These primaries always evaluated
     to true.  As they were really global variables that took effect before
     the traversal began, some legal expressions could have unexpected
     results.  An example is the expression --pprriinntt --oo --ddeepptthh.  As --pprriinntt
     always evaluates to true, the standard order of evaluation implies that
     --ddeepptthh would never be evaluated.  This is not the case.

     The operator --oorr was implemented as --oo, and the operator --aanndd was
     implemented as --aa.

     Historic implementations of the --eexxeecc and --ookk primaries did not replace
     the string “{}” in the utility name or the utility arguments if it had
     preceding or following non-whitespace characters.  This version replaces
     it no matter where in the utility name or arguments it appears.

     The --EE option was inspired by the equivalent grep(1) and sed(1) options.

HHIISSTTOORRYY
     A simple ffiinndd command appeared in Version 1 AT&T UNIX and was removed in
     Version 3 AT&T UNIX.  It was rewritten for Version 5 AT&T UNIX and later
     be enhanced for the Programmer's Workbench (PWB).  These changes were
     later incorporated in Version 7 AT&T UNIX.

BBUUGGSS
     The special characters used by ffiinndd are also special characters to many
     shell programs.  In particular, the characters “*”, “[”, “]”, “?”, “(”,
     “)”, “!”, “\” and “;” may have to be escaped from the shell.

     As there is no delimiter separating options and file names or file names
     and the _e_x_p_r_e_s_s_i_o_n, it is difficult to specify files named _-_x_d_e_v or _!.
     These problems are handled by the --ff option and the getopt(3) “----”
     construct.

     The --ddeelleettee primary does not interact well with other options that cause
     the file system tree traversal options to be changed.

     The --mmiinnddeepptthh and --mmaaxxddeepptthh primaries are actually global options (as
     documented above).  They should probably be replaced by options which
     look like options.

macOS 14.6                     January 23, 2023                     macOS 14.6
"
chmod,"CHMOD(1)                    General Commands Manual                   CHMOD(1)

NNAAMMEE
     cchhmmoodd – change file modes or Access Control Lists

SSYYNNOOPPSSIISS
     cchhmmoodd [--ffhhvv] [--RR [--HH | --LL | --PP]] _m_o_d_e _f_i_l_e _._._.
     cchhmmoodd [--ffhhvv] [--RR [--HH | --LL | --PP]] [-a | +a | =a] _A_C_E _f_i_l_e _._._.
     cchhmmoodd [--ffhhvv] [--RR [--HH | --LL | --PP]] [--EE] _f_i_l_e _._._.
     cchhmmoodd [--ffhhvv] [--RR [--HH | --LL | --PP]] [--CC] _f_i_l_e _._._.
     cchhmmoodd [--ffhhvv] [--RR [--HH | --LL | --PP]] [--NN] _f_i_l_e _._._.

DDEESSCCRRIIPPTTIIOONN
     The cchhmmoodd utility modifies the file mode bits of the listed files as
     specified by the _m_o_d_e operand. It may also be used to modify the Access
     Control Lists (ACLs) associated with the listed files.

     The generic options are as follows:

     --ff      Do not display a diagnostic message if cchhmmoodd could not modify the
             mode for _f_i_l_e, nor modify the exit status to reflect such
             failures.

     --HH      If the --RR option is specified, symbolic links on the command line
             are followed and hence unaffected by the command.  (Symbolic
             links encountered during tree traversal are not followed.)

     --hh      If the file is a symbolic link, change the mode of the link
             itself rather than the file that the link points to.

     --LL      If the --RR option is specified, all symbolic links are followed.

     --PP      If the --RR option is specified, no symbolic links are followed.
             This is the default.

     --RR      Change the modes of the file hierarchies rooted in the files,
             instead of just the files themselves.  Beware of unintentionally
             matching the “_._.” hard link to the parent directory when using
             wildcards like “.*”.

     --vv      Cause cchhmmoodd to be verbose, showing filenames as the mode is
             modified.  If the --vv flag is specified more than once, the old
             and new modes of the file will also be printed, in both octal and
             symbolic notation.

     The --HH, --LL and --PP options are ignored unless the --RR option is specified.
     In addition, these options override each other and the command's actions
     are determined by the last one specified.

     If cchhmmoodd receives a SIGINFO signal (see the ssttaattuuss argument for stty(1)),
     then the current filename as well as the old and new modes are displayed.

     Only the owner of a file or the super-user is permitted to change the
     mode of a file.

EEXXIITT SSTTAATTUUSS
     The cchhmmoodd utility exits 0 on success, and >0 if an error occurs.

MMOODDEESS
     Modes may be absolute or symbolic.  An absolute mode is an octal number
     constructed from the sum of one or more of the following values:

           4000    (the setuid bit).  Executable files with this bit set will
                   run with effective uid set to the uid of the file owner.
                   Directories with this bit set will force all files and sub-
                   directories created in them to be owned by the directory
                   owner and not by the uid of the creating process, if the
                   underlying file system supports this feature: see chmod(2)
                   and the ssuuiiddddiirr option to mount(8).
           2000    (the setgid bit).  Executable files with this bit set will
                   run with effective gid set to the gid of the file owner.
           1000    (the sticky bit).  See chmod(2) and sticky(7).
           0400    Allow read by owner.
           0200    Allow write by owner.
           0100    For files, allow execution by owner.  For directories,
                   allow the owner to search in the directory.
           0040    Allow read by group members.
           0020    Allow write by group members.
           0010    For files, allow execution by group members.  For
                   directories, allow group members to search in the
                   directory.
           0004    Allow read by others.
           0002    Allow write by others.
           0001    For files, allow execution by others.  For directories
                   allow others to search in the directory.

     For example, the absolute mode that permits read, write and execute by
     the owner, read and execute by group members, read and execute by others,
     and no set-uid or set-gid behaviour is 755 (400+200+100+040+010+004+001).

     The symbolic mode is described by the following grammar:

           mode         ::= clause [, clause ...]
           clause       ::= [who ...] [action ...] action
           action       ::= op [perm ...]
           who          ::= a | u | g | o
           op           ::= + | - | =
           perm         ::= r | s | t | w | x | X | u | g | o

     The _w_h_o symbols ``u'', ``g'', and ``o'' specify the user, group, and
     other parts of the mode bits, respectively.  The _w_h_o symbol ``a'' is
     equivalent to ``ugo''.

     The _p_e_r_m symbols represent the portions of the mode bits as follows:

           r       The read bits.
           s       The set-user-ID-on-execution and set-group-ID-on-execution
                   bits.
           t       The sticky bit.
           w       The write bits.
           x       The execute/search bits.
           X       The execute/search bits if the file is a directory or any
                   of the execute/search bits are set in the original
                   (unmodified) mode.  Operations with the _p_e_r_m symbol ``X''
                   are only meaningful in conjunction with the _o_p symbol
                   ``+'', and are ignored in all other cases.
           u       The user permission bits in the original mode of the file.
           g       The group permission bits in the original mode of the file.
           o       The other permission bits in the original mode of the file.

     The _o_p symbols represent the operation performed, as follows:

     +     If no value is supplied for _p_e_r_m, the ``+'' operation has no
           effect.  If no value is supplied for _w_h_o, each permission bit
           specified in _p_e_r_m, for which the corresponding bit in the file mode
           creation mask (see umask(2)) is clear, is set.  Otherwise, the mode
           bits represented by the specified _w_h_o and _p_e_r_m values are set.

     -     If no value is supplied for _p_e_r_m, the ``-'' operation has no
           effect.  If no value is supplied for _w_h_o, each permission bit
           specified in _p_e_r_m, for which the corresponding bit in the file mode
           creation mask is set, is cleared.  Otherwise, the mode bits
           represented by the specified _w_h_o and _p_e_r_m values are cleared.

     =     The mode bits specified by the _w_h_o value are cleared, or, if no _w_h_o
           value is specified, the owner, group and other mode bits are
           cleared.  Then, if no value is supplied for _w_h_o, each permission
           bit specified in _p_e_r_m, for which the corresponding bit in the file
           mode creation mask (see umask(2)) is clear, is set.  Otherwise, the
           mode bits represented by the specified _w_h_o and _p_e_r_m values are set.

     Each _c_l_a_u_s_e specifies one or more operations to be performed on the mode
     bits, and each operation is applied to the mode bits in the order
     specified.

     Operations upon the other permissions only (specified by the symbol ``o''
     by itself), in combination with the _p_e_r_m symbols ``s'' or ``t'', are
     ignored.

     The ``w'' permission on directories will permit file creation,
     relocation, and copy into that directory.  Files created within the
     directory itself will inherit its group ID.

EEXXAAMMPPLLEESS OOFF VVAALLIIDD MMOODDEESS
     644           make a file readable by anyone and writable by the owner
                   only.

     go-w          deny write permission to group and others.

     =rw,+X        set the read and write permissions to the usual defaults,
                   but retain any execute permissions that are currently set.

     +X            make a directory or file searchable/executable by everyone
                   if it is already searchable/executable by anyone.

     755
     u=rwx,go=rx
     u=rwx,go=u-w  make a file readable/executable by everyone and writable by
                   the owner only.

     go=           clear all mode bits for group and others.

     g=u-w         set the group bits equal to the user bits, but clear the
                   group write bit.

AACCLL MMAANNIIPPUULLAATTIIOONN OOPPTTIIOONNSS
     ACLs are manipulated using extensions to the symbolic mode grammar.  Each
     file has one ACL, containing an ordered list of entries.  Each entry
     refers to a user or group, and grants or denies a set of permissions.  In
     cases where a user and a group exist with the same name, the user/group
     name can be prefixed with ""user:"" or ""group:"" in order to specify the
     type of name.

     If the user or group name contains spaces you can use ':' as the
     delimiter between name and permission.

     The following permissions are applicable to all filesystem objects:
           delete  Delete the item.  Deletion may be granted by either this
                   permission on an object or the delete_child right on the
                   containing directory.
           readattr
                   Read an object's basic attributes.  This is implicitly
                   granted if the object can be looked up and not explicitly
                   denied.
           writeattr
                   Write an object's basic attributes.
           readextattr
                   Read extended attributes.
           writeextattr
                   Write extended attributes.
           readsecurity
                   Read an object's extended security information (ACL).
           writesecurity
                   Write an object's security information (ownership, mode,
                   ACL).
           chown   Change an object's ownership.

     The following permissions are applicable to directories:
           list    List entries.
           search  Look up files by name.
           add_file
                   Add a file.
           add_subdirectory
                   Add a subdirectory.
           delete_child
                   Delete a contained object.  See the file delete permission
                   above.

     The following permissions are applicable to non-directory filesystem
     objects:
           read    Open for reading.
           write   Open for writing.
           append  Open for writing, but in a fashion that only allows writes
                   into areas of the file not previously written.
           execute
                   Execute the file as a script or program.

     ACL inheritance is controlled with the following permissions words, which
     may only be applied to directories:
           file_inherit
                   Inherit to files.
           directory_inherit
                   Inherit to directories.
           limit_inherit
                   This flag is only relevant to entries inherited by
                   subdirectories; it causes the directory_inherit flag to be
                   cleared in the entry that is inherited, preventing further
                   nested subdirectories from also inheriting the entry.
           only_inherit
                   The entry is inherited by created items but not considered
                   when processing the ACL.

     The ACL manipulation options are as follows:

     ++aa      The +a mode parses a new ACL entry from the next argument on the
             commandline and inserts it into the canonical location in the
             ACL. If the supplied entry refers to an identity already listed,
             the two entries are combined.

             EExxaammpplleess
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
              # chmod +a ""admin allow write"" file1
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: admin allow write
              # chmod +a ""guest deny read"" file1
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: guest deny read
                2: admin allow write
              # chmod +a ""admin allow delete"" file1
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: guest deny read
                2: admin allow write,delete
              .
              # chmod +a ""User 1:allow:read"" file1
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: guest deny read
                2: User 1 allow read
                3: admin allow write,delete

             The +a mode strives to maintain correct canonical form for the
             ACL.
                              local deny
                              local allow
                              inherited deny
                              inherited allow

             By default, chmod adds entries to the top of the local deny and
             local allow lists. Inherited entries are added by using the +ai
             mode.

             EExxaammpplleess
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: guest deny read
                2: admin allow write,delete
                3: juser inherited deny delete
                4: admin inherited allow delete
                5: backup inherited deny read
                6: admin inherited allow write-security
              # chmod +ai ""others allow read"" file1
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: guest deny read
                2: admin allow write,delete
                3: juser inherited deny delete
                4: others inherited allow read
                5: admin inherited allow delete
                6: backup inherited deny read
                7: admin inherited allow write-security

     ++aa##     When a specific ordering is required, the exact location at which
             an entry will be inserted is specified with the +a# mode.

             EExxaammpplleess
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: guest deny read
                2: admin allow write
              # chmod +a# 2 ""others deny read"" file1
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: guest deny read
                2: others deny read
                3: admin allow write

             The +ai# mode may be used to insert inherited entries at a
             specific location. Note that these modes allow non-canonical ACL
             ordering to be constructed.

     --aa      The -a mode is used to delete ACL entries. All entries exactly
             matching the supplied entry will be deleted. If the entry lists a
             subset of rights granted by an entry, only the rights listed are
             removed. Entries may also be deleted by index using the -a# mode.

             EExxaammpplleess
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: guest deny read
                2: admin allow write,delete
              # chmod -a# 1 file1
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: admin allow write,delete
              # chmod -a ""admin allow write"" file1
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: admin allow delete

             Inheritance is not considered when processing the -a mode; rights
             and entries will be removed regardless of their inherited state.

             If the user or group name contains spaces you can use ':' as the
             delimiter

             EExxaammppllee
              # chmod +a ""User 1:allow:read"" file1

     ==aa##     Individual entries are rewritten using the =a# mode.

             EExxaammpplleess
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: admin allow delete
              # chmod =a# 1 ""admin allow write,chown"" file1
              # ls -le
              -rw-r--r--+ 1 juser  wheel  0 Apr 28 14:06 file1
                owner: juser
                1: admin allow write,chown

             This mode may not be used to add new entries.

     --EE      Reads the ACL information from stdin, as a sequential list of
             ACEs, separated by newlines.  If the information parses
             correctly, the existing information is replaced.

     --CC      Returns false if any of the named files have ACLs in non-
             canonical order.

     --ii      Removes the 'inherited' bit from all entries in the named file(s)
             ACLs.

     --II      Removes all inherited entries from the named file(s) ACL(s).

     --NN      Removes the ACL from the named file(s).

CCOOMMPPAATTIIBBIILLIITTYY
     The --vv option is non-standard and its use in scripts is not recommended.

SSEEEE AALLSSOO
     chflags(1), install(1), chmod(2), stat(2), umask(2), fts(3), setmode(3),
     sticky(7), symlink(7), chown(8), mount(8)

SSTTAANNDDAARRDDSS
     The cchhmmoodd utility is expected to be IEEE Std 1003.2 (“POSIX.2”)
     compatible with the exception of the _p_e_r_m symbol “t” which is not
     included in that standard.

HHIISSTTOORRYY
     A cchhmmoodd command appeared in Version 1 AT&T UNIX.

macOS 14.6                      January 7, 2017                     macOS 14.6
"
chown,"CHOWN(8)                    System Manager's Manual                   CHOWN(8)

NNAAMMEE
     cchhoowwnn – change file owner and group

SSYYNNOOPPSSIISS
     cchhoowwnn [--ffhhnnvvxx] [--RR [--HH | --LL | --PP]] _o_w_n_e_r[:_g_r_o_u_p] _f_i_l_e _._._.
     cchhoowwnn [--ffhhnnvvxx] [--RR [--HH | --LL | --PP]] :_g_r_o_u_p _f_i_l_e _._._.

DDEESSCCRRIIPPTTIIOONN
     The cchhoowwnn utility changes the user ID and/or the group ID of the
     specified files.  Symbolic links named by arguments are silently left
     unchanged unless --hh is used.

     The options are as follows:

     --HH      If the --RR option is specified, symbolic links on the command line
             are followed and hence unaffected by the command.  (Symbolic
             links encountered during traversal are not followed.)

     --LL      If the --RR option is specified, all symbolic links are followed.

     --PP      If the --RR option is specified, no symbolic links are followed.
             Instead, the user and/or group ID of the link itself are
             modified.  This is the default.  For matching behavior when using
             cchhoowwnn without the --RR option, the --hh option should be used
             instead.

     --RR      Change the user ID and/or the group ID of the file hierarchies
             rooted in the files, instead of just the files themselves.
             Beware of unintentionally matching the “_._.” hard link to the
             parent directory when using wildcards like “.*”.

     --ff      Do not report any failure to change file owner or group, nor
             modify the exit status to reflect such failures.

     --hh      If the file is a symbolic link, change the user ID and/or the
             group ID of the link itself.

     --nn      Interpret user ID and group ID as numeric, avoiding name lookups.

     --vv      Cause cchhoowwnn to be verbose, showing files as the owner is
             modified.  If the --vv flag is specified more than once, cchhoowwnn will
             print the filename, followed by the old and new numeric
             user/group ID.

     --xx      File system mount points are not traversed.

     The --HH, --LL and --PP options are ignored unless the --RR option is specified.
     In addition, these options override each other and the command's actions
     are determined by the last one specified.

     The _o_w_n_e_r and _g_r_o_u_p operands are both optional, however, one must be
     specified.  If the _g_r_o_u_p operand is specified, it must be preceded by a
     colon (``:'') character.

     The _o_w_n_e_r may be either a numeric user ID or a user name.  If a user name
     is also a numeric user ID, the operand is used as a user name.  The _g_r_o_u_p
     may be either a numeric group ID or a group name.  If a group name is
     also a numeric group ID, the operand is used as a group name.

     The ownership of a file may only be altered by a super-user for obvious
     security reasons.  Similarly, only a member of a group can change a
     file's group ID to that group.

     If cchhoowwnn receives a SIGINFO signal (see the ssttaattuuss argument for stty(1)),
     then the current filename as well as the old and new file owner and group
     are displayed.

EEXXIITT SSTTAATTUUSS
     The cchhoowwnn utility exits 0 on success, and >0 if an error occurs.

CCOOMMPPAATTIIBBIILLIITTYY
     Previous versions of the cchhoowwnn utility used the dot (``.'') character to
     distinguish the group name.  This has been changed to be a colon (``:'')
     character so that user and group names may contain the dot character.

     On previous versions of this system, symbolic links did not have owners.

     The --vv and --xx options are non-standard and their use in scripts is not
     recommended.

LLEEGGAACCYY DDEESSCCRRIIPPTTIIOONN
     In legacy mode, the --RR and --RRPP options do not change the user ID or the
     group ID of symbolic links.

SSEEEE AALLSSOO
     chgrp(1), chmod(1), find(1), chown(2), fts(3), compat(5), symlink(7)

SSTTAANNDDAARRDDSS
     The cchhoowwnn utility is expected to be IEEE Std 1003.2 (“POSIX.2”)
     compliant.

HHIISSTTOORRYY
     A cchhoowwnn utility appeared in Version 1 AT&T UNIX.

macOS 14.6                      August 24, 2022                     macOS 14.6
"
ps,"PS(1)                       General Commands Manual                      PS(1)

NNAAMMEE
     ppss – process status

SSYYNNOOPPSSIISS
     ppss [--AAaaCCccEEeeffhhjjllMMmmrrSSTTvvwwXXxx] [--OO _f_m_t | --oo _f_m_t] [--GG _g_i_d[,_g_i_d_._._.]]
        [--gg _g_r_p[,_g_r_p_._._.]] [--uu _u_i_d[,_u_i_d_._._.]] [--pp _p_i_d[,_p_i_d_._._.]]
        [--tt _t_t_y[,_t_t_y_._._.]] [--UU _u_s_e_r[,_u_s_e_r_._._.]]
     ppss [--LL]

DDEESSCCRRIIPPTTIIOONN
     The ppss utility displays a header line, followed by lines containing
     information about all of your processes that have controlling terminals.

     A different set of processes can be selected for display by using any
     combination of the --aa, --GG, --gg, --pp, --TT, --tt, --UU, and --uu options.  If more
     than one of these options are given, then ppss will select all processes
     which are matched by at least one of the given options.

     For the processes which have been selected for display, ppss will usually
     display one line per process.  The --MM option may result in multiple
     output lines (one line per thread) for some processes.  By default all of
     these output lines are sorted first by controlling terminal, then by
     process ID.  The --mm, --rr, and --vv options will change the sort order.  If
     more than one sorting option was given, then the selected processes will
     be sorted by the last sorting option which was specified.

     For the processes which have been selected for display, the information
     to display is selected based on a set of keywords (see the --LL, --OO, and --oo
     options).  The default output format includes, for each process, the
     process' ID, controlling terminal, CPU time (including both user and
     system time), state, and associated command.

     The options are as follows:

     --AA      Display information about other users' processes, including those
             without controlling terminals.

     --aa      Display information about other users' processes as well as your
             own.  This will skip any processes which do not have a
             controlling terminal, unless the --xx option is also specified.

     --CC      Change the way the CPU percentage is calculated by using a “raw”
             CPU calculation that ignores “resident” time (this normally has
             no effect).

     --cc      Change the “command” column output to just contain the executable
             name, rather than the full command line.

     --dd      Like --AA, but excludes session leaders.

     --EE      Display the environment as well.  This does not reflect changes
             in the environment after process launch.

     --ee      Identical to --AA.

     --ff      Display the uid, pid, parent pid, recent CPU usage, process start
             time, controlling tty, elapsed CPU usage, and the associated
             command.  If the --uu option is also used, display the user name
             rather then the numeric uid.  When --oo or --OO is used to add to the
             display following --ff, the command field is not truncated as
             severely as it is in other formats.

     --GG      Display information about processes which are running with the
             specified real group IDs.

     --gg      Display information about processes with the specified process
             group leaders.

     --hh      Repeat the information header as often as necessary to guarantee
             one header per page of information.

     --jj      Print information associated with the following keywords: uusseerr,
             ppiidd, ppppiidd, ppggiidd, sseessss, jjoobbcc, ssttaattee, tttt, ttiimmee, and ccoommmmaanndd.

     --LL      List the set of keywords available for the --OO and --oo options.

     --ll      Display information associated with the following keywords: uuiidd,
             ppiidd, ppppiidd, ffllaaggss, ccppuu, pprrii, nniiccee, vvsszz==SSZZ, rrssss, wwcchhaann, ssttaattee==SS,
             ppaaddddrr==AADDDDRR, ttttyy, ttiimmee, and ccoommmmaanndd==CCMMDD.

     --MM      Print the threads corresponding to each task.

     --mm      Sort by memory usage, instead of the combination of controlling
             terminal and process ID.

     --OO      Add the information associated with the space or comma separated
             list of keywords specified, after the process ID, in the default
             information display.  Keywords may be appended with an equals
             (‘=’) sign and a string.  This causes the printed header to use
             the specified string instead of the standard header.

     --oo      Display information associated with the space or comma separated
             list of keywords specified.  Multiple keywords may also be given
             in the form of more than one --oo option.  Keywords may be appended
             with an equals (‘=’) sign and a string.  This causes the printed
             header to use the specified string instead of the standard
             header.  If all keywords have empty header texts, no header line
             is written.

     --pp      Display information about processes which match the specified
             process IDs.

     --rr      Sort by current CPU usage, instead of the combination of
             controlling terminal and process ID.

     --SS      Change the way the process time is calculated by summing all
             exited children to their parent process.

     --TT      Display information about processes attached to the device
             associated with the standard input.

     --tt      Display information about processes attached to the specified
             terminal devices.

     --UU      Display the processes belonging to the specified real user IDs.

     --uu      Display the processes belonging to the specified usernames.

     --vv      Display information associated with the following keywords: ppiidd,
             ssttaattee, ttiimmee, ssll, rree, ppaaggeeiinn, vvsszz, rrssss, lliimm, ttssiizz, %%ccppuu, %%mmeemm, and
             ccoommmmaanndd.  The --vv option implies the --mm option.

     --ww      Use 132 columns to display information, instead of the default
             which is your window size.  If the --ww option is specified more
             than once, ppss will use as many columns as necessary without
             regard for your window size.  When output is not to a terminal,
             an unlimited number of columns are always used.

     --XX      When displaying processes matched by other options, skip any
             processes which do not have a controlling terminal.

     --xx      When displaying processes matched by other options, include
             processes which do not have a controlling terminal.  This is the
             opposite of the --XX option.  If both --XX and --xx are specified in
             the same command, then ppss will use the one which was specified
             last.

     A complete list of the available keywords is given below.  Some of these
     keywords are further specified as follows:

     %%ccppuu      The CPU utilization of the process; this is a decaying average
               over up to a minute of previous (real) time.  Because the time
               base over which this is computed varies (some processes may be
               very young), it is possible for the sum of all %%ccppuu fields to
               exceed 100%.

     %%mmeemm      The percentage of real memory used by this process.

     ffllaaggss     The flags associated with the process as in the include file
               <_s_y_s_/_p_r_o_c_._h>:

               P_ADVLOCK           0x00001      Process may hold a POSIX
                                                advisory lock
               P_CONTROLT          0x00002      Has a controlling terminal
               P_LP64              0x00004      Process is LP64
               P_NOCLDSTOP         0x00008      No SIGCHLD when children stop
               P_PPWAIT            0x00010      Parent is waiting for child to
                                                exec/exit
               P_PROFIL            0x00020      Has started profiling
               P_SELECT            0x00040      Selecting; wakeup/waiting
                                                danger
               P_CONTINUED         0x00080      Process was stopped and
                                                continued
               P_SUGID             0x00100      Had set id privileges since
                                                last exec
               P_SYSTEM            0x00200      System proc: no sigs, stats or
                                                swapping
               P_TIMEOUT           0x00400      Timing out during sleep
               P_TRACED            0x00800      Debugged process being traced
               P_WAITED            0x01000      Debugging process has waited
                                                for child
               P_WEXIT             0x02000      Working on exiting
               P_EXEC              0x04000      Process called exec
               P_OWEUPC            0x08000      Owe process an addupc() call
                                                at next ast
               P_WAITING           0x40000      Process has a wait() in
                                                progress
               P_KDEBUG            0x80000        Kdebug tracing on for this
                                   process

     lliimm       The soft limit on memory used, specified via a call to
               setrlimit(2).

     llssttaarrtt    The exact time the command started, using the ‘%c’ format
               described in strftime(3).

     nniiccee      The process scheduling increment (see setpriority(2)).

     rrssss       the real memory (resident set) size of the process (in 1024
               byte units).

     ssttaarrtt     The time the command started.  If the command started less than
               24 hours ago, the start time is displayed using the “%l:ps.1p”
               format described in strftime(3).  If the command started less
               than 7 days ago, the start time is displayed using the
               “%a6.15p” format.  Otherwise, the start time is displayed using
               the “%e%b%y” format.

     ssttaattee     The state is given by a sequence of characters, for example,
               “RWNA”.  The first character indicates the run state of the
               process:

               I       Marks a process that is idle (sleeping for longer than
                       about 20 seconds).
               R       Marks a runnable process.
               S       Marks a process that is sleeping for less than about 20
                       seconds.
               T       Marks a stopped process.
               U       Marks a process in uninterruptible wait.
               Z       Marks a dead process (a “zombie”).

               Additional characters after these, if any, indicate additional
               state information:

               +       The process is in the foreground process group of its
                       control terminal.
               <       The process has raised CPU scheduling priority.
               >       The process has specified a soft limit on memory
                       requirements and is currently exceeding that limit;
                       such a process is (necessarily) not swapped.
               A       the process has asked for random page replacement
                       (VA_ANOM, from vadvise(2), for example, lisp(1) in a
                       garbage collect).
               E       The process is trying to exit.
               L       The process has pages locked in core (for example, for
                       raw I/O).
               N       The process has reduced CPU scheduling priority (see
                       setpriority(2)).
               S       The process has asked for FIFO page replacement
                       (VA_SEQL, from vadvise(2), for example, a large image
                       processing program using virtual memory to sequentially
                       address voluminous data).
               s       The process is a session leader.
               V       The process is suspended during a vfork(2).
               W       The process is swapped out.
               X       The process is being traced or debugged.

     tttt        An abbreviation for the pathname of the controlling terminal,
               if any.  The abbreviation consists of the three letters
               following _/_d_e_v_/_t_t_y, or, for the console, “con”.  This is
               followed by a ‘-’ if the process can no longer reach that
               controlling terminal (i.e., it has been revoked).

     wwcchhaann     The event (an address in the system) on which a process waits.
               When printed numerically, the initial part of the address is
               trimmed off and the result is printed in hex, for example,
               0x80324000 prints as 324000.

     When printing using the command keyword, a process that has exited and
     has a parent that has not yet waited for the process (in other words, a
     zombie) is listed as “<defunct>”, and a process which is blocked while
     trying to exit is listed as “<exiting>”.  If the arguments cannot be
     located (usually because it has not been set, as is the case of system
     processes and/or kernel threads) the command name is printed within
     square brackets.  The process can change the arguments shown with
     setproctitle(3).  Otherwise, ppss makes an educated guess as to the file
     name and arguments given when the process was created by examining memory
     or the swap area.  The method is inherently somewhat unreliable and in
     any event a process is entitled to destroy this information.  The ucomm
     (accounting) keyword can, however, be depended on.  If the arguments are
     unavailable or do not agree with the ucomm keyword, the value for the
     ucomm keyword is appended to the arguments in parentheses.

KKEEYYWWOORRDDSS
     The following is a complete list of the available keywords and their
     meanings.  Several of them have aliases (keywords which are synonyms).

     %%ccppuu           percentage CPU usage (alias ppccppuu)
     %%mmeemm           percentage memory usage (alias ppmmeemm)
     aaccffllaagg         accounting flag (alias aaccffllgg)
     aarrggss           command and arguments
     ccoommmm           command
     ccoommmmaanndd        command and arguments
     ccppuu            short-term CPU usage factor (for scheduling)
     eettiimmee          elapsed running time
     ffllaaggss          the process flags, in hexadecimal (alias ff)
     ggiidd            processes group id (alias ggrroouupp)
     iinnbbllkk          total blocks read (alias iinnbblloocckk)
     jjoobbcc           job control count
     kkttrraaccee         tracing flags
     kkttrraacceepp        tracing vnode
     lliimm            memoryuse limit
     llooggnnaammee        login name of user who started the session
     llssttaarrtt         time started
     mmaajjfflltt         total page faults
     mmiinnfflltt         total page reclaims
     mmssggrrccvv         total messages received (reads from pipes/sockets)
     mmssggssnndd         total messages sent (writes on pipes/sockets)
     nniiccee           nice value (alias nnii)
     nniivvccssww         total involuntary context switches
     nnssiiggss          total signals taken (alias nnssiiggnnaallss)
     nnsswwaapp          total swaps in/out
     nnvvccssww          total voluntary context switches
     nnwwcchhaann         wait channel (as an address)
     oouubbllkk          total blocks written (alias oouubblloocckk)
     pp__rruu           resource usage (valid only for zombie)
     ppaaddddrr          swap address
     ppaaggeeiinn         pageins (same as majflt)
     ppggiidd           process group number
     ppiidd            process ID
     ppppiidd           parent process ID
     pprrii            scheduling priority
     pprrssnnaa          persona
     rree             core residency time (in seconds; 127 = infinity)
     rrggiidd           real group ID
     rrssss            resident set size
     rruuiidd           real user ID
     rruusseerr          user name (from ruid)
     sseessss           session ID
     ssiigg            pending signals (alias ppeennddiinngg)
     ssiiggmmaasskk        blocked signals (alias bblloocckkeedd)
     ssll             sleep time (in seconds; 127 = infinity)
     ssttaarrtt          time started
     ssttaattee          symbolic process state (alias ssttaatt)
     ssvvggiidd          saved gid from a setgid executable
     ssvvuuiidd          saved UID from a setuid executable
     ttddeevv           control terminal device number
     ttiimmee           accumulated CPU time, user + system (alias ccppuuttiimmee)
     ttppggiidd          control terminal process group ID
     ttsseessss          control terminal session ID
     ttssiizz           text size (in Kbytes)
     tttt             control terminal name (two letter abbreviation)
     ttttyy            full name of control terminal
     uuccoommmm          name to be used for accounting
     uuiidd            effective user ID
     uupprr            scheduling priority on return from system call (alias
                    uussrrpprrii)
     uusseerr           user name (from UID)
     uuttiimmee          user CPU time (alias ppuuttiimmee)
     vvsszz            virtual size in Kbytes (alias vvssiizzee)
     wwcchhaann          wait channel (as a symbolic name)
     wwqq             total number of workqueue threads
     wwqqbb            number of blocked workqueue threads
     wwqqrr            number of running workqueue threads
     wwqqll            workqueue limit status (C = constrained thread limit, T =
                    total thread limit)
     xxssttaatt          exit or stop status (valid only for stopped or zombie
                    process)

EENNVVIIRROONNMMEENNTT
     The following environment variables affect the execution of ppss:

     COLUMNS      If set, specifies the user's preferred output width in
                  column positions.  By default, ppss attempts to automatically
                  determine the terminal width.

FFIILLEESS
     _/_d_e_v                     special files and device names
     _/_v_a_r_/_r_u_n_/_d_e_v_._d_b          /dev name database
     _/_v_a_r_/_d_b_/_k_v_m___k_e_r_n_e_l_._d_b    system namelist database

LLEEGGAACCYY DDEESSCCRRIIPPTTIIOONN
     In legacy mode, ppss functions as described above, with the following
     differences:

     --ee      Display the environment as well. Same as --EE.

     --gg      Ignored for compatibility. Takes no argument.

     --ll      Display information associated with the following keywords: uuiidd,
             ppiidd, ppppiidd, ccppuu, pprrii, nniiccee, vvsszz, rrssss, wwcchhaann, ssttaattee, tttt,, ttiimmee, and
             ccoommmmaanndd.

     --uu      Display information associated with the following keywords: uusseerr,
             ppiidd, %%ccppuu, %%mmeemm, vvsszz, rrssss, tttt, ssttaattee, ssttaarrtt, ttiimmee, and ccoommmmaanndd.
             The --uu option implies the --rr option.

     The biggest change is in the interpretation of the --uu option, which now
     displays processes belonging to the specified username(s).  Thus, ""ps
     -aux"" will fail (unless you want to know about user ""x"").  As a
     convenience, however, ""ps aux"" still works as it did in Tiger.

     For more information about legacy mode, see compat(5).

SSEEEE AALLSSOO
     kill(1), w(1), kvm(3), strftime(3), sysctl(8)

SSTTAANNDDAARRDDSS
     The ppss utility supports the Version 3 of the Single UNIX Specification
     (“SUSv3”) standard.

HHIISSTTOORRYY
     The ppss command appeared in Version 4 AT&T UNIX.

BBUUGGSS
     Since ppss cannot run faster than the system and is run as any other
     scheduled process, the information it displays can never be exact.

     The ppss utility does not correctly display argument lists containing
     multibyte characters.

macOS 14.6                      March 20, 2005                      macOS 14.6
"
kill,"KILL(1)                     General Commands Manual                    KILL(1)

NNAAMMEE
     kkiillll – terminate or signal a process

SSYYNNOOPPSSIISS
     kkiillll [--ss _s_i_g_n_a_l___n_a_m_e] _p_i_d _._._.
     kkiillll --ll [_e_x_i_t___s_t_a_t_u_s]
     kkiillll --_s_i_g_n_a_l___n_a_m_e _p_i_d _._._.
     kkiillll --_s_i_g_n_a_l___n_u_m_b_e_r _p_i_d _._._.

DDEESSCCRRIIPPTTIIOONN
     The kkiillll utility sends a signal to the processes specified by the _p_i_d
     operands.

     Only the super-user may send signals to other users' processes.

     The options are as follows:

     --ss _s_i_g_n_a_l___n_a_m_e
             A symbolic signal name specifying the signal to be sent instead
             of the default TERM.

     --ll [_e_x_i_t___s_t_a_t_u_s]
             If no operand is given, list the signal names; otherwise, write
             the signal name corresponding to _e_x_i_t___s_t_a_t_u_s.

     --_s_i_g_n_a_l___n_a_m_e
             A symbolic signal name specifying the signal to be sent instead
             of the default TERM.

     --_s_i_g_n_a_l___n_u_m_b_e_r
             A non-negative decimal integer, specifying the signal to be sent
             instead of the default TERM.

     The following PIDs have special meanings:

     -1      If superuser, broadcast the signal to all processes; otherwise
             broadcast to all processes belonging to the user.

     Some of the more commonly used signals:

     1       HUP (hang up)
     2       INT (interrupt)
     3       QUIT (quit)
     6       ABRT (abort)
     9       KILL (non-catchable, non-ignorable kill)
     14      ALRM (alarm clock)
     15      TERM (software termination signal)

     Some shells may provide a builtin kkiillll command which is similar or
     identical to this utility.  Consult the builtin(1) manual page.

EEXXIITT SSTTAATTUUSS
     The kkiillll utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Terminate the processes with PIDs 142 and 157:

           kill 142 157

     Send the hangup signal (SIGHUP) to the process with PID 507:

           kill -s HUP 507

     Terminate the process group with PGID 117:

           kill -- -117

SSEEEE AALLSSOO
     builtin(1), csh(1), killall(1), ps(1), sh(1), kill(2), sigaction(2)

SSTTAANNDDAARRDDSS
     The kkiillll utility is expected to be IEEE Std 1003.2 (“POSIX.2”)
     compatible.

HHIISSTTOORRYY
     A kkiillll command appeared in Version 3 AT&T UNIX in section 8 of the
     manual.

BBUUGGSS
     A replacement for the command “kill 0” for csh(1) users should be
     provided.

macOS 14.6                      October 3, 2016                     macOS 14.6
"
top,"TOP(1)                      General Commands Manual                     TOP(1)

NNAAMMEE
     ttoopp – display sorted information about processes

SSYYNNOOPPSSIISS
     ttoopp [--aa | --dd | --ee | --cc _m_o_d_e]
         [--FF | --ff]
         [--hh]
         [--ii _i_n_t_e_r_v_a_l]
         [--ll _s_a_m_p_l_e_s]
         [--nnccoollss _c_o_l_u_m_n_s]
         [--oo _k_e_y | --OO _s_k_e_y]
         [--RR | --rr]
         [--SS]
         [--ss _d_e_l_a_y_-_s_e_c_s]
         [--nn _n_p_r_o_c_s]
         [--ssttaattss _k_e_y_s]
         [--ppiidd _p_r_o_c_e_s_s_i_d]
         [--uusseerr _u_s_e_r_n_a_m_e]
         [--UU _u_s_e_r_n_a_m_e]
         [--uu]

DDEESSCCRRIIPPTTIIOONN
     The ttoopp program periodically displays a sorted list of system processes.
     The default sorting key is pid, but other keys can be used instead.
     Various output options are available.

OOPPTTIIOONNSS
     Command line option specifications are processed from left to right.
     Options can be specified more than once.  If conflicting options are
     specified, later specifications override earlier ones.  This makes it
     viable to create a shell alias for ttoopp with preferred defaults specified,
     then override those preferred defaults as desired on the command line.

     --aa      Equivalent to --cc _a.

     --cc _m_o_d_e
             Set event counting mode to _m_o_d_e.  The supported modes are

             a       Accumulative mode.  Count events cumulatively, starting
                     at the launch of ttoopp.  Calculate CPU usage and CPU time
                     since the launch of ttoopp.

             d       Delta mode.  Count events relative to the previous
                     sample.  Calculate CPU usage since the previous sample.
                     This mode by default disables the memory object map
                     reporting.  The memory object map reporting may be re-
                     enabled with the --rr option or the interactive rr command.

             e       Absolute mode.  Count events using absolute counters.

             n       Non-event mode (default).  Calculate CPU usage since the
                     previous sample.

     --dd      Equivalent to --cc _d.

     --ee      Equivalent to --cc _e.

     --FF      Do not calculate statistics on shared libraries, also known as
             frameworks.

     --ff      Calculate statistics on shared libraries, also known as
             frameworks (default).

     --hh      Print command line usage information and exit.

     --ii _i_n_t_e_r_v_a_l
             Update framework (--ff) info every _i_n_t_e_r_v_a_l samples; see the
             _P_E_R_F_O_R_M_A_N_C_E_/_A_C_C_U_R_A_C_Y _T_R_A_D_E_O_F_F section for more details.

     --ll _s_a_m_p_l_e_s
             Use logging mode and display _s_a_m_p_l_e_s samples, even if standard
             output is a terminal.  0 is treated as infinity.  Rather than
             redisplaying, output is periodically printed in raw form.  Note
             that the first sample displayed will have an invalid %CPU
             displayed for each process, as it is calculated using the delta
             between samples.

     --nnccoollss _c_o_l_u_m_n_s
             Display _c_o_l_u_m_n_s when using logging mode.  The default is
             infinite.  The number must be > 0 or an error will occur.

     --nn _n_p_r_o_c_s
             Only display up to _n_p_r_o_c_s processes.

     --OO _s_k_e_y
             Use _s_k_e_y as a secondary key when ordering the process display.
             See --oo for key names (pid is the default).

     --oo _k_e_y  Order the process display by sorting on _k_e_y in descending order.
             A + or - can be prefixed to the key name to specify ascending or
             descending order, respectively.  The supported keys are:

             pid     Process ID

             command
                     Command name.

             cpu     CPU usage.  (default).

             cpu_me  CPU time charged to me by other processes.

             cpu_others
                     CPU time charged to other processes by me.

             csw     The number of context switches.

             time    Execution time.

             threads
                     alias: th
                     Number of threads (total/running).

             ports   alias: prt
                     Number of Mach ports.

             mregion
                     alias: mreg, reg
                     Number of memory regions.

             mem     Physical memory footprint of the process.

             rprvt   Resident private address space size.

             purg    Purgeable memory size.

             vsize   Total memory size.

             vprvt   Private address space size.

             kprvt   Private kernel memory size.

             kshrd   Shared kernel memory size.

             pgrp    Process group ID.

             ppid    Parent process ID.

             state   alias: pstate
                     Process state.
                     One of ""zombie"", ""running"", ""stuck"" (i.e. uninterruptible
                     sleep),  ""sleeping"", ""idle"", ""stopped"", ""halted"", or
                     ""unknown"".

             uid     User ID.

             wq      alias: #wq, workqueue
                     The workqueue total/running.

             faults  alias: fault
                     The number of page faults.

             cow     alias: cow_faults
                     The copy-on-write faults.

             user    alias: username
                     Username.

             msgsent
                     Total number of Mach messages sent.

             msgrecv
                     Total number of Mach messages received.

             sysbsd  Total BSD syscalls.

             sysmach
                     Total Mach syscalls.

             pageins
                     Total pageins.

             boosts  The number of boosts held by the process.  This is
                     followed by the number of times the process has
                     transitioned from unboosted to boosted in brackets.  An
                     asterisk before the value indicates that the process was
                     able to send boosts at some point since the previous
                     update.  For more information about boosts, see
                     xpc_transaction_begin(3).

             instrs  The number of instructions retired by the process in both
                     user space and the kernel.

             cycles  The number of cycles spent executing instructions in the
                     process in both user space and the kernel.

             jetpri  Jetsam priority of the process.

     --RR      Do not traverse and report the memory object map for each process
             (default).

     --rr      Traverse and report the memory object map for each process.

     --SS      Display the global statistics for swap and purgeable memory.

     --ss _d_e_l_a_y_-_s_e_c_s
             Set the delay between updates to _d_e_l_a_y_-_s_e_c_s seconds.  The default
             delay between updates is 1 second.

     --ssttaattss _k_e_y_s
             Only display the comma separated statistics.  See the --oo flag for
             the valid _k_e_y_s.

     --ppiidd _p_r_o_c_e_s_s_i_d
             Only display _p_r_o_c_e_s_s_i_d in ttoopp.  This option may be specified
             multiple times.

     --uusseerr _u_s_e_r
             Only display processes owned by _u_s_e_r

     --UU _u_s_e_r
             This is an alias for --uusseerr.

     --uu      This is an alias equivalent to: --oo _c_p_u --OO _t_i_m_e

DDIISSPPLLAAYY
     The first several lines of the ttoopp display show various global state.
     All of the information is labeled.  Following is an alphabetical list of
     global state fields and their descriptions.

     CPU         Percentage of processor usage, broken into user, system, and
                 idle components.  The time period for which these percentages
                 are calculated depends on the event counting mode.

     Disks       Number and total size of disk reads and writes.

     LoadAvg     Load average over 1, 5, and 15 minutes.  The load average is
                 the average number of jobs in the run queue.

     MemRegions  Number and total size of memory regions, and total size of
                 memory regions broken into private (broken into non-library
                 and library) and shared components.

     Networks    Number and total size of input and output network packets.

     PhysMem     Physical memory usage, broken into wired, active, inactive,
                 used, and free components.

     Procs       Total number of processes and number of processes in each
                 process state.

     SharedLibs  Resident sizes of code and data segments, and link editor
                 memory usage.

     Threads     Number of threads.

     Time        Time, in H:MM:SS format.  When running in logging mode, Time
                 is in YYYY/MM/DD HH:MM:SS format by default, but may be
                 overridden with accumulative mode.  When running in
                 accumulative event counting mode, the Time is in HH:MM:SS
                 since the beginning of the ttoopp process.

     VirtMem     Total virtual memory, virtual memory consumed by shared
                 libraries, and number of pageins and pageouts.

     Swap        Swap usage: total size of swap areas, amount of swap space in
                 use and amount of swap space available.

     Purgeable   Number of pages purged and number of pages currently
                 purgeable.

     Below the global state fields, a list of processes is displayed.  The
     fields that are displayed depend on the options that are set.  The pid
     field displays the following for the architecture:

     + for 64-bit native architecture, or - for 32-bit native architecture, or
     * for a non-native architecture.

IINNTTEERRAACCTTIIOONN
     When ttoopp is run in interactive (non-logging) mode, it is possible to
     control the output of ttoopp, as well as interactively send signals to
     processes.  The interactive command syntax is terse.  Each command is one
     character, followed by 0 to 2 arguments.  Commands that take arguments
     prompt interactively for the arguments, and where applicable, the default
     value is shown in square brackets.  The default value can be selected by
     leaving the input field blank and pressing enter.  ^G escapes the
     interactive argument prompt, and has the same effect as leaving the input
     field blank and pressing enter.

     The following commands are supported:

     ?       Display the help screen.  Any character exits help screen mode.
             This command always works, even in the middle of a command.

     ^L      Redraw the screen.

     c_m_o_d_e   Set output mode to _m_o_d_e.  See the --cc option for descriptions of
             the allowed modes.

     O_s_k_e_y   Use _s_k_e_y as a secondary key when ordering the process display.
             See the --oo option for key names.

     o_k_e_y    Order the process display by sorting on _k_e_y in descending order.
             A + or - can be prefixed to the key name to specify ascending or
             descending order, respectively.  The supported keys and alises
             are listed with the --oo option above.

     q       Quit.

     r       Toggle traversal and reporting of the memory object map for each
             process.

     S_s_i_g_n_a_l_p_i_d
             Send signal _s_i_g_n_a_l to _p_i_d.  _s_i_g_n_a_l can be specified either as a
             number or as a name (for example, HUP).  The default signal
             starts out as TERM.  Each time a signal is successfully sent, the
             default signal is updated to be that signal.  _p_i_d is a process
             id.

     s _d_e_l_a_y_-_s_e_c_s
             Set the delay between updates to _d_e_l_a_y_-_s_e_c_s seconds.

     U _u_s_e_r  Only display processes owned by _u_s_e_r_. Either the username or uid
             number can be specified.  To display all processes, press enter
             without entering a username or uid number.

PPEERRFFOORRMMAANNCCEE//AACCCCUURRAACCYY TTRRAADDEEOOFFFF
     Calculating detailed memory statistics is fundamentally resource-
     intensive.  To reduce the CPU usage in ttoopp, the --ii option has been
     introduced to allow the user to tune this tradeoff.  With the default
     value of 10, framework stats will be updated once every 10 samples.
     Specifying --ii _1 will result in the most accurate display, at the expense
     of system resources.

NNOOTT AAVVAAIILLAABBLLEE
     When N/A occurs in a stat, it's caused by the memory object map reporting
     being disabled.  Memory object map reporting is disabled by default in
     delta mode, but may be optionally enabled via --rr or the interactive rr
     command.  To enable the --rr option, use it after any --cc mode options.

EEXXAAMMPPLLEESS
     top -o cpu -O +rsize -s 5 -n 20
             Sort the processes according to CPU usage (descending) and
             resident memory size (ascending), sample and update the display
             at 5 second intervals, and limit the display to 20 processes.

     top -c d
             Run ttoopp in delta mode.

     top -stats pid,command,cpu,th,pstate,time
             Display only the specified statistics, regardless of any growth
             of the terminal.  If the terminal is too small, only the
             statistics that fit will be displayed.

SSEEEE AALLSSOO
     taskinfo(1), vm_stat(1), vmmap(1), kill(2), signal(3)

Darwin                         February 10, 2020                        Darwin
"
df,"DF(1)                       General Commands Manual                      DF(1)

NNAAMMEE
     ddff – display free disk space

SSYYNNOOPPSSIISS
     ddff [----lliibbxxoo] [--bb | --gg | --HH | --hh | --kk | --mm | --PP] [--aaccIIiillnnttYY] [--,,]
        [--TT _t_y_p_e] [_f_i_l_e | _f_i_l_e_s_y_s_t_e_m _._._.]

LLEEGGAACCYY SSYYNNOOPPSSIISS
     ddff [----lliibbxxoo] [--bb | --gg | --HH | --hh | --kk | --mm | --PP] [--aaccIIiillnnYY] [--,,] [--TT _t_y_p_e]
     [--tt _t_y_p_e] [_f_i_l_e | _f_i_l_e_s_y_s_t_e_m _._._.]

DDEESSCCRRIIPPTTIIOONN
     The ddff utility displays statistics about the amount of free disk space on
     the specified mounted _f_i_l_e _s_y_s_t_e_m or on the file system of which _f_i_l_e is
     a part.  By default block counts are displayed with an assumed block size
     of 512 bytes.  If neither a file or a file system operand is specified,
     statistics for all mounted file systems are displayed (subject to the --tt
     option below).

     The following options are available:

     ----lliibbxxoo
             Generate output via libxo(3) in a selection of different human
             and machine readable formats.  See xo_parse_args(3) for details
             on command line arguments.

     --aa      Show all mount points, including those that were mounted with the
             MNT_IGNORE flag.  This is implied for file systems specified on
             the command line.

     --bb      Explicitly use 512 byte blocks, overriding any BLOCKSIZE
             specification from the environment.  This is the same as the --PP
             option.  The --kk option overrides this option.

     --cc      Display a grand total.

     --gg      Use 1073741824 byte (1 Gibibyte) blocks rather than the default.
             This overrides any BLOCKSIZE specification from the environment.

     --hh      “Human-readable” output.  Use unit suffixes: Byte, Kibibyte,
             Mebibyte, Gibibyte, Tebibyte and Pebibyte (based on powers of
             1024) in order to reduce the number of digits to four or fewer.
             This applies to the Size, Used, and Avail columns only; the iused
             and ifree columns will be displayed in powers of 1000.

     --HH, ----ssii
             Same as --hh but based on powers of 1000.

     --II      Suppress inode counts.  See --ii below.

     --ii      Include statistics on the number of free and used inodes.  In
             conjunction with the --hh or --HH options, the number of inodes is
             scaled by powers of 1000.  In case the filesystem has no inodes
             then ‘-’ is displayed instead of the usage percentage.

             This option is now the default to conform to Version 3 of the
             Single UNIX Specification (“SUSv3”).  Use --II to suppress this
             output.

     --kk      Use 1024 byte (1 Kibibyte) blocks rather than the default.  This
             overrides the --PP option and any BLOCKSIZE specification from the
             environment.

     --ll      Select locally-mounted file system for display.  If used in
             combination with the --TT _t_y_p_e option, file system types will be
             added or excluded acccording to the parameters of that option.

     --mm      Use 1048576 byte (1 Mebibyte) blocks rather than the default.
             This overrides any BLOCKSIZE specification from the environment.

     --nn      Print out the previously obtained statistics from the file
             systems.  This option should be used if it is possible that one
             or more file systems are in a state such that they will not be
             able to provide statistics without a long delay.  When this
             option is specified, ddff will not request new statistics from the
             file systems, but will respond with the possibly stale statistics
             that were previously obtained.

     --PP      Explicitly use 512 byte blocks, overriding any BLOCKSIZE
             specification from the environment.  This is the same as the --bb
             option.  The --gg and --kk options override this option.  In
             compatibility mode, this also suppresses inode counts.

     --TT _t_y_p_e
             Select file systems to display.  More than one type may be
             specified in a comma separated list.  The list of file system
             types can be prefixed with “no” to specify the file system types
             for which action should _n_o_t be taken.  If used in combination
             with the --ll option, the parameters of this option will modify the
             list of locally-mounted file systems selected by the --ll option.
             For example, the ddff command:

                   df -T nonfs,mfs

             lists all file systems except those of type NFS and MFS.  The
             lsvfs(1) command can be used to find out the types of file
             systems that are available on the system.

     --tt      If used with no arguments, this option is a no-op (macOS already
             prints the total allocated-space figures).  If used with an
             argument, it acts like --TT, but this usage is deprecated and
             should not be relied upon.

     --YY      Include file system type.

     --,      (Comma) Print sizes grouped and separated by thousands using the
             non-monetary separator returned by localeconv(3), typically a
             comma or period.  If no locale is set, or the locale does not
             have a non-monetary separator, this option has no effect.

EENNVVIIRROONNMMEENNTT
     BLOCKSIZE  Specifies the units in which to report block counts.  This
                uses getbsize(3), which allows units of bytes or numbers
                scaled with the letters _k (for multiples of 1024 bytes), _m
                (for multiples of 1048576 bytes) or _g (for gibibytes).  The
                allowed range is 512 bytes to 1 GB.  If the value is outside,
                it will be set to the appropriate limit.

EEXXAAMMPPLLEESS
     Show human readable free disk space for all mount points including file
     system type:

           $ df -ahY
           Filesystem     Type      Size    Used   Avail Capacity iused ifree %iused  Mounted on
           /dev/disk1s5s1 apfs     465Gi    15Gi   266Gi     6%    533k  2.8G    0%   /
           devfs          devfs    194Ki   194Ki     0Bi   100%     672     0  100%   /dev
           /dev/disk1s2   apfs     465Gi   3.4Gi   266Gi     2%    1.6k  2.8G    0%   /System/Volumes/Preboot
           /dev/disk1s4   apfs     465Gi   3.0Gi   266Gi     2%       3  2.8G    0%   /System/Volumes/VM
           /dev/disk1s6   apfs     465Gi    11Mi   266Gi     1%      33  2.8G    0%   /System/Volumes/Update
           /dev/disk1s1   apfs     465Gi   177Gi   266Gi    40%    3.9M  2.8G    0%   /System/Volumes/Data

     The filesystems on this machine are virtual volumes on a single
     partition.  Therefore, the size and space available is the same for all
     filesystems even though the space in use is different.  The capacity
     column shows the amount of space used by each filesystem as a percentage
     of the sum of space used and space available.

     Show previously collected data, excluding inode information, except for
     the devfs file system.  Note that the “no” prefix affects all the file
     systems in the list and the --tt option can be specified only once:

           $ df -l -I -n -t nodevfs
           Filesystem     1K-blocks      Used Available Capacity  Mounted on
           /dev/disk1s5s1 487196712  15300072 278432984     6%    /
           /dev/disk1s2   487196712   3604640 278430312     2%    /System/Volumes/Preboot
           /dev/disk1s4   487196712   3145748 278430312     2%    /System/Volumes/VM
           /dev/disk1s6   487196712     11576 278430312     1%    /System/Volumes/Update
           /dev/disk1s1   487196712 185371244 278432984    40%    /System/Volumes/Data

     Show human readable information for the file system containing the file
     _/_e_t_c_/_r_c_._c_o_m_m_o_n:

           $ df -h /etc/rc.common
           Filesystem      Size    Used   Avail Capacity iused ifree %iused  Mounted on
           /dev/disk1s1   465Gi   177Gi   266Gi    40%    3.9M  2.8G    0%   /System/Volumes/Data

     Same as above but specifying some file system:

           $ df -h /dev/disk1s1
           Filesystem      Size    Used   Avail Capacity iused ifree %iused  Mounted on
           /dev/disk1s1   465Gi   177Gi   266Gi    40%    3.9M  2.8G    0%   /System/Volumes/Data

LLEEGGAACCYY DDEESSCCRRIIPPTTIIOONN
     The ""capacity"" percentage is normally rounded up to the next higher
     integer.  In legacy mode, it is rounded down to the next lower integer.

     When the --PP option and the --kk option are used together, sizes are
     reported in 1024-byte blocks.

     The --tt option is normally a no-op (macOS already prints the total
     allocated-space figures).  In legacy mode, it is equivalent to --TT.

     For more information about legacy mode, see compat(5).

SSEEEE AALLSSOO
     lsvfs(1), quota(1), fstatfs(2), getfsstat(2), statfs(2), getbsize(3),
     getmntinfo(3), libxo(3), localeconv(3), xo_parse_args(3), compat(5),
     fstab(5), mount(8), pstat(8), quot(8), swapinfo(8)

SSTTAANNDDAARRDDSS
     With the exception of most options, the ddff utility conforms to IEEE Std
     1003.1-2004 (“POSIX.1”), which defines only the --kk, --PP and --tt options.

HHIISSTTOORRYY
     A ddff command appeared in Version 1 AT&T UNIX.

BBUUGGSS
     The --nn flag is ignored if a file or file system is specified.  Also, if a
     mount point is not accessible by the user, it is possible that the file
     system information could be stale.

     The --bb and --PP options are identical.  The former comes from the BSD
     tradition, and the latter is required for IEEE Std 1003.1-2004
     (“POSIX.1”) conformity.

macOS 14.6                     February 22, 2023                    macOS 14.6
"
du,"DU(1)                       General Commands Manual                      DU(1)

NNAAMMEE
     dduu – display disk usage statistics

SSYYNNOOPPSSIISS
     dduu [--AAccllnnxx] [--HH | --LL | --PP] [--gg | --hh | --kk | --mm] [--aa | --ss | --dd _d_e_p_t_h]
        [--BB _b_l_o_c_k_s_i_z_e] [--II _m_a_s_k] [--tt _t_h_r_e_s_h_o_l_d] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The dduu utility displays the file system block usage for each file
     argument and for each directory in the file hierarchy rooted in each
     directory argument.  If no file is specified, the block usage of the
     hierarchy rooted in the current directory is displayed.

     The options are as follows:

     --AA      Display the apparent size instead of the disk usage.  This can be
             helpful when operating on compressed volumes or sparse files.

     --BB _b_l_o_c_k_s_i_z_e
             Calculate block counts in _b_l_o_c_k_s_i_z_e byte blocks.  This is
             different from the --hh, --kk, --mm, ----ssii and --gg options or setting
             BLOCKSIZE and gives an estimate of how much space the examined
             file hierarchy would require on a filesystem with the given
             _b_l_o_c_k_s_i_z_e.  Unless in --AA mode, _b_l_o_c_k_s_i_z_e is rounded up to the
             next multiple of 512.

     --HH      Symbolic links on the command line are followed, symbolic links
             in file hierarchies are not followed.

     --II _m_a_s_k
             Ignore files and directories matching the specified _m_a_s_k.

     --LL      Symbolic links on the command line and in file hierarchies are
             followed.

     --PP      No symbolic links are followed.  This is the default.

     --aa      Display an entry for each file in a file hierarchy.

     --cc      Display a grand total.

     --dd _d_e_p_t_h
             Display an entry for all files and directories _d_e_p_t_h directories
             deep.

     --gg      Display block counts in 1073741824-byte (1 GiB) blocks.

     --hh      “Human-readable” output.  Use unit suffixes: Byte, Kilobyte,
             Megabyte, Gigabyte, Terabyte and Petabyte based on powers of
             1024.

     --kk      Display block counts in 1024-byte (1 kiB) blocks.

     --ll      If a file has multiple hard links, count its size multiple times.
             The default behavior of dduu is to count files with multiple hard
             links only once.  When the --ll option is specified, the hard link
             checks are disabled, and these files are counted (and displayed)
             as many times as they are found.

     --mm      Display block counts in 1048576-byte (1 MiB) blocks.

     --nn      Ignore files and directories with user “nodump” flag (UF_NODUMP)
             set.

     --rr      Generate messages about directories that cannot be read, files
             that cannot be opened, and so on.  This is the default case.
             This option exists solely for conformance with X/Open Portability
             Guide Issue 4 (“XPG4”).

     --ss      Display an entry for each specified file.  (Equivalent to --dd 0)

     ----ssii    “Human-readable” output.  Use unit suffixes: Byte, Kilobyte,
             Megabyte, Gigabyte, Terabyte and Petabyte based on powers of
             1000.

     --tt _t_h_r_e_s_h_o_l_d
             Display only entries for which size exceeds _t_h_r_e_s_h_o_l_d.  If
             _t_h_r_e_s_h_o_l_d is negative, display only entries for which size is
             less than the absolute value of _t_h_r_e_s_h_o_l_d.

     --xx      File system mount points are not traversed.

     The dduu utility counts the storage used by symbolic links and not the
     files they reference unless the --HH or --LL option is specified.  If either
     the --HH or --LL option is specified, storage used by any symbolic links
     which are followed is not counted (or displayed).  The --HH, --LL and --PP
     options override each other and the command's actions are determined by
     the last one specified.

     Files having multiple hard links are counted (and displayed) a single
     time per dduu execution.  Directories having multiple hard links (typically
     Time Machine backups) are counted a single time per dduu execution.  The
     --hh, --kk, --mm and ----ssii options all override each other; the last one
     specified determines the block counts used.

EENNVVIIRROONNMMEENNTT
     BLOCKSIZE  If the environment variable BLOCKSIZE is set, and the --hh, --kk,
                --mm or ----ssii options are not specified, the block counts will be
                displayed in units of that block size.  If BLOCKSIZE is not
                set, and the --hh, --kk, --mm or ----ssii options are not specified, the
                block counts will be displayed in 512-byte blocks.

EEXXAAMMPPLLEESS
     Show disk usage for all files in the current directory.  Output is in
     human-readable form:

           # du -ah

     Summarize disk usage in the current directory:

           # du -hs

     Summarize disk usage for a specific directory:

           # du -hs /home

     Show name and size of all C files in a specific directory.  Also display
     a grand total at the end:

           # du -ch /usr/src/sys/kern/*.c

SSEEEE AALLSSOO
     df(1), chflags(2), fts(3), symlink(7), quot(8)

SSTTAANNDDAARRDDSS
     The dduu utility is compliant with the IEEE Std 1003.1-2008 (“POSIX.1”)
     specification.

     The flags [--ccddhhPP], as well as the BLOCKSIZE environment variable, are
     extensions to that specification.

     The flag [--rr] is accepted but ignored, for compatibility with systems
     implementing the obsolete X/Open Commands and Utilities Issue 5 (“XCU5”)
     standard.

HHIISSTTOORRYY
     The dduu utility and its --aa and --ss options first appeared in Version 1 AT&T
     UNIX.

     The --rr option first appeared in AT&T System III UNIX and is available
     since FreeBSD 3.5.  The --kk and --xx options first appeared in 4.3BSD-Reno
     and --HH in 4.4BSD.  The --cc and --LL options first appeared in the GNU
     fileutils; --LL and --PP are available since 4.4BSD-Lite1, --cc since
     FreeBSD 2.2.6.  The --dd option first appeared in FreeBSD 2.2, --hh first
     appeared in FreeBSD 4.0.

AAUUTTHHOORRSS
     This version of dduu was written by Chris Newcomb for 4.3BSD-Reno in 1989.

macOS 14.6                      August 1, 2019                      macOS 14.6
"
ifconfig,"IFCONFIG(8)                 System Manager's Manual                IFCONFIG(8)

NNAAMMEE
     iiffccoonnffiigg – configure network interface parameters

SSYYNNOOPPSSIISS
     iiffccoonnffiigg [--LL] [--mm] [--rr] [--ff _t_y_p_e::_f_o_r_m_a_t] _i_n_t_e_r_f_a_c_e [ccrreeaattee]
              [_a_d_d_r_e_s_s___f_a_m_i_l_y] [_a_d_d_r_e_s_s [_d_e_s_t___a_d_d_r_e_s_s]] [_p_a_r_a_m_e_t_e_r_s]
     iiffccoonnffiigg _i_n_t_e_r_f_a_c_e ddeessttrrooyy
     iiffccoonnffiigg --aa [--LL] [--dd] [--mm] [--rr] [--uu] [--vv] [--ff _t_y_p_e::_f_o_r_m_a_t]
              [_a_d_d_r_e_s_s___f_a_m_i_l_y]
     iiffccoonnffiigg --ll [--dd] [--uu] [_a_d_d_r_e_s_s___f_a_m_i_l_y]
     iiffccoonnffiigg [--LL] [--dd] [--mm] [--rr] [--uu] [--vv] [--CC] [--ff _t_y_p_e::_f_o_r_m_a_t]
     iiffccoonnffiigg _i_n_t_e_r_f_a_c_e vvllaann _v_l_a_n_-_t_a_g vvllaannddeevv _i_f_a_c_e
     iiffccoonnffiigg _i_n_t_e_r_f_a_c_e --vvllaannddeevv _i_f_a_c_e
     iiffccoonnffiigg _i_n_t_e_r_f_a_c_e bboonnddddeevv _i_f_a_c_e
     iiffccoonnffiigg _i_n_t_e_r_f_a_c_e --bboonnddddeevv _i_f_a_c_e
     iiffccoonnffiigg _i_n_t_e_r_f_a_c_e bboonnddmmooddee _l_a_c_p | _s_t_a_t_i_c
     iiffccoonnffiigg --XX _p_a_t_t_e_r_n [_p_a_r_a_m_e_t_e_r_s]

DDEESSCCRRIIPPTTIIOONN
     The iiffccoonnffiigg utility is used to assign an address to a network interface
     and/or configure network interface parameters.

     The following options are available:

     _a_d_d_r_e_s_s
             For the DARPA-Internet family, the address is either a host name
             present in the host name data base, hosts(5), or a DARPA Internet
             address expressed in the Internet standard “dot notation”.

             It is also possible to use the CIDR notation (also known as the
             slash notation) to include the netmask.  That is, one can specify
             an address like 192.168.0.1/16.

             For the “inet6” family, it is also possible to specify the prefix
             length using the slash notation, like ::1/128.  See the pprreeffiixxlleenn
             parameter below for more information.

             The link-level (“link”) address is specified as a series of
             colon-separated hex digits.  This can be used to e.g. set a new
             MAC address on an ethernet interface, though the mechanism used
             is not ethernet-specific.  If the interface is already up when
             this option is used, it will be briefly brought down and then
             brought back up again in order to ensure that the receive filter
             in the underlying ethernet hardware is properly reprogrammed.

     _a_d_d_r_e_s_s___f_a_m_i_l_y
             Specify the address family which affects interpretation of the
             remaining parameters.  Since an interface can receive
             transmissions in differing protocols with different naming
             schemes, specifying the address family is recommended.  The
             address or protocol families currently supported are “inet”,
             “inet6”, and “link”.  The default is “inet”.  “ether” and
             “lladdr” are synonyms for “link”.

     _d_e_s_t___a_d_d_r_e_s_s
             Specify the address of the correspondent on the other end of a
             point to point link.

     _i_n_t_e_r_f_a_c_e
             This parameter is a string of the form “name unit”, for example,
             “en0”.

     The following parameters may be set with iiffccoonnffiigg:

     aadddd     Another name for the aalliiaass parameter.  Introduced for
             compatibility with BSD/OS.

     aalliiaass   Establish an additional network address for this interface.  This
             is sometimes useful when changing network numbers, and one wishes
             to accept packets addressed to the old interface.  If the address
             is on the same subnet as the first network address for this
             interface, a non-conflicting netmask must be given.  Usually
             0xffffffff is most appropriate.

     --aalliiaass  Remove the network address specified.  This would be used if you
             incorrectly specified an alias, or it was no longer needed.  If
             you have incorrectly set an NS address having the side effect of
             specifying the host portion, removing all NS addresses will allow
             you to respecify the host portion.

     aannyyccaasstt
             (Inet6 only.)  Specify that the address configured is an anycast
             address.  Based on the current specification, only routers may
             configure anycast addresses.  Anycast address will not be used as
             source address of any of outgoing IPv6 packets.

     aarrpp     Enable the use of the Address Resolution Protocol (arp(4)) in
             mapping between network level addresses and link level addresses
             (default).  This is currently implemented for mapping between
             DARPA Internet addresses and IEEE 802 48-bit MAC addresses
             (Ethernet, FDDI, and Token Ring addresses).

     --aarrpp    Disable the use of the Address Resolution Protocol (arp(4)).

     bbrrooaaddccaasstt
             (Inet only.)  Specify the address to use to represent broadcasts
             to the network.  The default broadcast address is the address
             with a host part of all 1's.

     ddeebbuugg   Enable driver dependent debugging code; usually, this turns on
             extra console error logging.

     --ddeebbuugg  Disable driver dependent debugging code.

     ddeelleettee  Another name for the --aalliiaass parameter.

     ddoowwnn    Mark an interface “down”.  When an interface is marked “down”,
             the system will not attempt to transmit messages through that
             interface.  If possible, the interface will be reset to disable
             reception as well.

     eetthheerr   Another name for the llllaaddddrr parameter.

     llllaaddddrr _a_d_d_r
             Set the link-level address on an interface.  This can be used to
             e.g. set a new MAC address on an ethernet interface, though the
             mechanism used is not ethernet-specific.  The address _a_d_d_r is
             specified as a series of colon-separated hex digits.  If the
             interface is already up when this option is used, it will be
             briefly brought down and then brought back up again in order to
             ensure that the receive filter in the underlying ethernet
             hardware is properly reprogrammed.

     mmeeddiiaa _t_y_p_e
             If the driver supports the media selection system, set the media
             type of the interface to _t_y_p_e.  Some interfaces support the
             mutually exclusive use of one of several different physical media
             connectors.  For example, a 10Mbit/s Ethernet interface might
             support the use of either AUI or twisted pair connectors.
             Setting the media type to 1100bbaassee55//AAUUII would change the currently
             active connector to the AUI port.  Setting it to 1100bbaasseeTT//UUTTPP
             would activate twisted pair.  Refer to the interfaces' driver
             specific documentation or man page for a complete list of the
             available types.

     mmeeddiiaaoopptt _o_p_t_s
             If the driver supports the media selection system, set the
             specified media options on the interface.  The _o_p_t_s argument is a
             comma delimited list of options to apply to the interface.  Refer
             to the interfaces' driver specific man page for a complete list
             of available options.

     --mmeeddiiaaoopptt _o_p_t_s
             If the driver supports the media selection system, disable the
             specified media options on the interface.

     rrxxccssuumm, ttxxccssuumm
             If the driver supports user-configurable checksum offloading,
             enable receive (or transmit) checksum offloading on the
             interface.  Some drivers may not be able to enable these flags
             independently of each other, so setting one may also set the
             other.  The driver will offload as much checksum work as it can
             reliably support, the exact level of offloading varies between
             drivers.

     --rrxxccssuumm, --ttxxccssuumm
             If the driver supports user-configurable checksum offloading,
             disable receive (or transmit) checksum offloading on the
             interface.  These settings may not always be independent of each
             other.

     ttssoo     If the driver supports tcp(4) segmentation offloading, enable TSO
             on the interface.  Some drivers may not be able to support TSO
             for ip(4) and ip6(4) packets, so they may enable only one of
             them.

     --ttssoo    If the driver supports tcp(4) segmentation offloading, disable
             TSO on the interface.  It will always disable TSO for ip(4) and
             ip6(4).

     llrroo     If the driver supports tcp(4) large receive offloading, enable
             LRO on the interface.

     --llrroo    If the driver supports tcp(4) large receive offloading, disable
             LRO on the interface.

     aavv      If supported by the driver, enable 802.1 AVB on the interface.

     --aavv     If supported by the driver, disable 802.1 AVB on the interface.

     vvllaannmmttuu, vvllaannhhwwttaagg
             If the driver offers user-configurable VLAN support, enable
             reception of extended frames or tag processing in hardware,
             respectively.  Note that this must be issued on a physical
             interface associated with vlan(4), not on a vlan(4) interface
             itself.

     --vvllaannmmttuu, --vvllaannhhwwttaagg
             If the driver offers user-configurable VLAN support, disable
             reception of extended frames or tag processing in hardware,
             respectively.

     ccrreeaattee  Create the specified network pseudo-device.  If the interface is
             given without a unit number, try to create a new device with an
             arbitrary unit number.  If creation of an arbitrary device is
             successful, the new device name is printed to standard output
             unless the interface is renamed or destroyed in the same iiffccoonnffiigg
             invocation.

     ddeessttrrooyy
             Destroy the specified network pseudo-device.

     pplluummbb   Another name for the ccrreeaattee parameter.  Included for Solaris
             compatibility.

     uunnpplluummbb
             Another name for the ddeessttrrooyy parameter.  Included for Solaris
             compatibility.

     mmeettrriicc _n
             Set the routing metric of the interface to _n, default 0.  The
             routing metric is used by the routing protocol (routed(8)).
             Higher metrics have the effect of making a route less favorable;
             metrics are counted as additional hops to the destination network
             or host.

     mmttuu _n   Set the maximum transmission unit of the interface to _n, default
             is interface specific.  The MTU is used to limit the size of
             packets that are transmitted on an interface.  Not all interfaces
             support setting the MTU, and some interfaces have range
             restrictions.

     nneettmmaasskk _m_a_s_k
             (Inet only.)  Specify how much of the address to reserve for
             subdividing networks into sub-networks.  The mask includes the
             network part of the local address and the subnet part, which is
             taken from the host field of the address.  The mask can be
             specified as a single hexadecimal number with a leading ‘0x’,
             with a dot-notation Internet address, or with a pseudo-network
             name listed in the network table networks(5).  The mask contains
             1's for the bit positions in the 32-bit address which are to be
             used for the network and subnet parts, and 0's for the host part.
             The mask should contain at least the standard network portion,
             and the subnet field should be contiguous with the network
             portion.

             The netmask can also be specified in CIDR notation after the
             address.  See the _a_d_d_r_e_s_s option above for more information.

     pprreeffiixxlleenn _l_e_n
             (Inet6 only.)  Specify that _l_e_n bits are reserved for subdividing
             networks into sub-networks.  The _l_e_n must be integer, and for
             syntactical reason it must be between 0 to 128.  It is almost
             always 64 under the current IPv6 assignment rule.  If the
             parameter is omitted, 64 is used.

             The prefix can also be specified using the slash notation after
             the address.  See the _a_d_d_r_e_s_s option above for more information.

     rreemmoovvee  Another name for the --aalliiaass parameter.  Introduced for
             compatibility with BSD/OS.

     lliinnkk[00-22]
             Enable special processing of the link level of the interface.
             These three options are interface specific in actual effect,
             however, they are in general used to select special modes of
             operation.  An example of this is to enable SLIP compression, or
             to select the connector type for some Ethernet cards.  Refer to
             the man page for the specific driver for more information.

     --lliinnkk[00-22]
             Disable special processing at the link level with the specified
             interface.

     uupp      Mark an interface “up”.  This may be used to enable an interface
             after an “iiffccoonnffiigg ddoowwnn”.  It happens automatically when setting
             the first address on an interface.  If the interface was reset
             when previously marked down, the hardware will be re-initialized.

     The following parameters are for ICMPv6 Neighbor Discovery Protocol.
     Note that the address family keyword “inet6” is needed for them:

     nnuudd     Perform network unreachability detection (NUD).

     --nnuudd    Do not perform network unreachability detection (NUD).

     iiffddiissaabblleedd
             Disable all IPv6 communication on the interface.

     --iiffddiissaabblleedd
             Do not disable all IPv6 communication on the interface.

     iinnsseeccuurree
             Disable the processing of Secure Neighbor Discovery (SEND).

     --iinnsseeccuurree
             Do not disabled the processing of Secure Neighbor Discovery
             (SEND).

     ddaadd     Perform duplicate address detection (DAD).

     --ddaadd    Do not perform duplicate address detection (DAD).

     rreepplliiccaatteedd
             Modify duplicate address detection (DAD) protocol to expect that
             interface configuration is replicated at a network sleep proxy.
             Ignores certain NA messages and disables optimistic DAD.

     --rreepplliiccaatteedd
             Do not use modified duplicated address detection (DAD) protocol.

     The following parameters are specific to link aggregate interfaces:

     bboonnddddeevv _i_f_a_c_e
             If the interface is a bond pseudo device, associate physical
             interface _i_f_a_c_e with it.  By default, the bond pseudo device is
             in LACP (Link Aggregation Control Protocol) mode (see bboonnddmmooddee
             below).  In this mode, the device conforms to the IEEE 802.3ad
             Link Aggregation specification.

             If this is the first physical interface to be associated with the
             bond interface, the bond interface inherits the ethernet address
             from the physical interface.  Physical interfaces that are added
             to the bond have their ethernet address re-programmed so that all
             members of the bond have the same ethernet address.  If the
             physical interface is subsequently removed from the bond using
             --bboonnddddeevv, a new ethernet address is chosen from the remaining
             interfaces, and all interfaces are re-programmed again with the
             new ethernet address.  If no remaining interfaces exist, the bond
             interface's ethernet address is cleared.

             If the specified physical interface _i_f_a_c_e is not capable of
             having its ethernet address re-programmed, the bboonnddddeevv command
             will fail.

             Once the physical interface _i_f_a_c_e is successfully associated with
             the bond interface, all received packets are diverted to the bond
             interface.  The physical interface is no longer useable on its
             own, and remains that way until it is removed from the bond using
             --bboonnddddeevv.

             It is possible that the specified interface _i_f_a_c_e is not capable
             of aggregating, and may remain unused until the operating
             conditions change.

             The link status of the bond interface depends on the state of
             link aggregation.  If no active partner is detected, the link
             status will remain inactive.

             To monitor the 802.3ad Link Aggregation state, use the --bb option.

             A physical interface that is associated with a vlan pseudo device
             cannot at the same time be associated with a bond pseudo device.
             A physical interface cannot be associated with more than one bond
             pseudo device at the same time.

             It is not possible to associate a bond with pseudo interfaces
             such as vlan.  Only physical ethernet interfaces may be
             associated with a bond.

     --bboonnddddeevv _i_f_a_c_e
             If the interface is a bond pseudo device, disassociate the
             physical interface _i_f_a_c_e from it.  Before the interface is
             removed from the bond, the bond device announces to the link
             partner that the interface is now individual and no longer
             aggregatable.  If the physical _i_f_a_c_e is the last interface in the
             bond, the bond interface clears its link address.

     bboonnddmmooddee _l_a_c_p | _s_t_a_t_i_c
             If the interface is a bond pseudo device, this option will set
             the _m_o_d_e on the bond interface.  The two currently supported
             modes are _l_a_c_p and _s_t_a_t_i_c.  The default mode is _l_a_c_p.

             To enable static mode (and turn off LACP), specify _s_t_a_t_i_c.  In
             static mode, a member interface is made an active part of the
             link aggregate as long as the link status is active.

             To re-enable LACP mode, specify _l_a_c_p.

     The following parameters are specific to IP tunnel interfaces, gif(4):

     ttuunnnneell _s_r_c___a_d_d_r _d_e_s_t___a_d_d_r
             Configure the physical source and destination address for IP
             tunnel interfaces.  The arguments _s_r_c___a_d_d_r and _d_e_s_t___a_d_d_r are
             interpreted as the outer source/destination for the encapsulating
             IPv4/IPv6 header.

     --ttuunnnneell
             Unconfigure the physical source and destination address for IP
             tunnel interfaces previously configured with ttuunnnneell.

     ddeelleetteettuunnnneell
             Another name for the --ttuunnnneell parameter.

     The following parameters are specific to bridge interfaces:

     aaddddmm _i_n_t_e_r_f_a_c_e
             Add the interface named by _i_n_t_e_r_f_a_c_e as a member of the bridge.
             The interface is put into promiscuous mode so that it can receive
             every packet sent on the network.

     ddeelleetteemm _i_n_t_e_r_f_a_c_e
             Remove the interface named by _i_n_t_e_r_f_a_c_e from the bridge.
             Promiscuous mode is disabled on the interface when it is removed
             from the bridge.

     mmaaxxaaddddrr _s_i_z_e
             Set the size of the bridge address cache to _s_i_z_e.  The default is
             100 entries.

     ttiimmeeoouutt _s_e_c_o_n_d_s
             Set the timeout of address cache entries to _s_e_c_o_n_d_s seconds.  If
             _s_e_c_o_n_d_s is zero, then address cache entries will not be expired.
             The default is 240 seconds.

     aaddddrr    Display the addresses that have been learned by the bridge.

     ssttaattiicc _i_n_t_e_r_f_a_c_e_-_n_a_m_e _a_d_d_r_e_s_s
             Add a static entry into the address cache pointing to
             _i_n_t_e_r_f_a_c_e_-_n_a_m_e.  Static entries are never aged out of the cache
             or re-placed, even if the address is seen on a different
             interface.

     ddeellaaddddrr _a_d_d_r_e_s_s
             Delete _a_d_d_r_e_s_s from the address cache.

     fflluusshh   Delete all dynamically-learned addresses from the address cache.

     fflluusshhaallll
             Delete all addresses, including static addresses, from the
             address cache.

     ddiissccoovveerr _i_n_t_e_r_f_a_c_e
             Mark an interface as a “discovering” interface.  When the bridge
             has no address cache entry (either dynamic or static) for the
             destination address of a packet, the bridge will forward the
             packet to all member interfaces marked as “discovering”.  This is
             the default for all interfaces added to a bridge.

     --ddiissccoovveerr _i_n_t_e_r_f_a_c_e
             Clear the “discovering” attribute on a member interface.  For
             packets without the “discovering” attribute, the only packets
             forwarded on the interface are broadcast or multicast packets and
             packets for which the destination address is known to be on the
             interface's segment.

     lleeaarrnn _i_n_t_e_r_f_a_c_e
             Mark an interface as a “learning” interface.  When a packet
             arrives on such an interface, the source address of the packet is
             entered into the address cache as being a destination address on
             the interface's segment.  This is the default for all interfaces
             added to a bridge.

     --lleeaarrnn _i_n_t_e_r_f_a_c_e
             Clear the “learning” attribute on a member interface.

     ssttpp _i_n_t_e_r_f_a_c_e
             Enable Spanning Tree protocol on _i_n_t_e_r_f_a_c_e.  The if_bridge(4)
             driver has support for the IEEE 802.1D Spanning Tree protocol
             (STP).  Spanning Tree is used to detect and remove loops in a
             network topology.

     --ssttpp _i_n_t_e_r_f_a_c_e
             Disable Spanning Tree protocol on _i_n_t_e_r_f_a_c_e.  This is the default
             for all interfaces added to a bridge.

     mmaaxxaaggee _s_e_c_o_n_d_s
             Set the time that a Spanning Tree protocol configuration is
             valid.  The default is 20 seconds.  The minimum is 6 seconds and
             the maximum is 40 seconds.

     ffwwddddeellaayy _s_e_c_o_n_d_s
             Set the time that must pass before an interface begins forwarding
             packets when Spanning Tree is enabled.  The default is 15
             seconds.  The minimum is 4 seconds and the maximum is 30 seconds.

     hheelllloottiimmee _s_e_c_o_n_d_s
             Set the time between broadcasting of Spanning Tree protocol
             configuration messages.  The hello time may only be changed when
             operating in legacy stp mode.  The default is 2 seconds.  The
             minimum is 1 second and the maximum is 2 seconds.

     pprriioorriittyy _v_a_l_u_e
             Set the bridge priority for Spanning Tree.  The default is 32768.
             The minimum is 0 and the maximum is 61440.

     iiffpprriioorriittyy _i_n_t_e_r_f_a_c_e _v_a_l_u_e
             Set the Spanning Tree priority of _i_n_t_e_r_f_a_c_e to _v_a_l_u_e.  The
             default is 128.  The minimum is 0 and the maximum is 240.

     iiffppaatthhccoosstt _i_n_t_e_r_f_a_c_e _v_a_l_u_e
             Set the Spanning Tree path cost of _i_n_t_e_r_f_a_c_e to _v_a_l_u_e.  The
             default is calculated from the link speed.  To change a
             previously selected path cost back to automatic, set the cost to
             0.  The minimum is 1 and the maximum is 200000000.

     iiffmmaaxxaaddddrr _i_n_t_e_r_f_a_c_e _s_i_z_e
             Set the maximum number of hosts allowed from an interface,
             packets with unknown source addresses are dropped until an
             existing host cache entry expires or is removed.  Set to 0 to
             disable.

     hhoossttffiilltteerr _i_n_t_e_r_f_a_c_e _a_d_d_r_e_s_s
             Configure the bridge to accept incoming packet on the interface
             only if they match the given MAC address and IP address -- use
             the command twice to set both type of addresses.  Other filtering
             restrictions apply.

     --hhoossttffiilltteerr _i_n_t_e_r_f_a_c_e
             Allow traffic from any host on that interface.

     The following parameters are specific to vlan interfaces:

     vvllaann _v_l_a_n___t_a_g
             Set the VLAN tag value to _v_l_a_n___t_a_g.  This value is a 16-bit
             number which is used to create an 802.1Q VLAN header for packets
             sent from the vlan(4) interface.  Note that vvllaann and vvllaannddeevv must
             both be set at the same time.

     vvllaannddeevv _i_f_a_c_e
             Associate the physical interface _i_f_a_c_e with a vlan(4) interface.
             Packets transmitted through the vlan(4) interface will be
             diverted to the specified physical interface _i_f_a_c_e with 802.1Q
             VLAN encapsulation.  Packets with 802.1Q encapsulation received
             by the parent interface with the correct VLAN tag will be
             diverted to the associated vlan(4) pseudo-interface.  The vlan(4)
             interface is assigned a copy of the parent interface's flags and
             the parent's ethernet address.  The vvllaannddeevv and vvllaann must both be
             set at the same time.  If the vlan(4) interface already has a
             physical interface associated with it, this command will fail.
             To change the association to another physical interface, the
             existing association must be cleared first.

             Note: if the hardware tagging capability is set on the parent
             interface, the vlan(4) pseudo interface's behavior changes: the
             vlan(4) interface recognizes that the parent interface supports
             insertion and extraction of VLAN tags on its own (usually in
             firmware) and that it should pass packets to and from the parent
             unaltered.

     --vvllaannddeevv [_i_f_a_c_e]
             If the driver is a vlan(4) pseudo device, disassociate the parent
             interface from it.  This breaks the link between the vlan(4)
             interface and its parent, clears its VLAN tag, flags and its link
             address and shuts the interface down.  The _i_f_a_c_e argument is
             useless and hence deprecated.

     ttbbrr _r_a_t_e
             Set a token bucket regulator that limits the egress bandwidth to
             _r_a_t_e, measured in bps, Kbps, Mbps or Gbps.  If the specified rate
             is zero, the token bucket regulator is disabled.

     The iiffccoonnffiigg utility displays the current configuration for a network
     interface when no optional parameters are supplied.  If a protocol family
     is specified, iiffccoonnffiigg will report only the details specific to that
     protocol family.

     If the --mm flag is passed before an interface name, iiffccoonnffiigg will display
     the capability list and all of the supported media for the specified
     interface.

     If --LL flag is supplied, address lifetime is displayed for IPv6 addresses,
     as time offset string.

     Optionally, the --aa flag may be used instead of an interface name.  This
     flag instructs iiffccoonnffiigg to display information about all interfaces in
     the system.  The --dd flag limits this to interfaces that are down, and --uu
     limits this to interfaces that are up.  When no arguments are given, --aa
     is implied.

     The --ll flag may be used to list all available interfaces on the system,
     with no other additional information.  Use of this flag is mutually
     exclusive with all other flags and commands, except for --dd (only list
     interfaces that are down) and --uu (only list interfaces that are up).

     The --vv flag may be used to get more verbose status for an interface.

     The --CC flag may be used to list all of the interface cloners available on
     the system, with no additional information.  Use of this flag is mutually
     exclusive with all other flags and commands.

     The --rr flag may be used to show additional information related to the
     count of route references on the network interface.

     For bridge interfaces, the list of addresses learned by the bridge is not
     shown when displaying information about all interfaces except when the --vv
     flag is used.

     The --XX flag may be used to list interfaces whose names match the regular
     expression in the pattern.  See re_format(7) for more information on
     regular expressions.  This flag may be used with the --aa flag and the --ll
     flag to further restrict the set of interfaces to be listed.

     The --ff flag may be used to control the output format of iiffccoonnffiigg.  The
     format is specified as a comma-separated list of _t_y_p_e::_f_o_r_m_a_t pairs (see
     the _E_X_A_M_P_L_E_S section for more information).  The --ff flag can be supplied
     multiple times.

     The _t_y_p_es and their associated _f_o_r_m_a_t strings are:

     aaddddrr   Adjust the display of inet and inet6 addresses:

            ddeeffaauulltt  Default format, nnuummeerriicc
            ffqqddnn     Fully qualified domain names (FQDN)
            hhoosstt     Unqualified hostnames
            nnuummeerriicc  Numeric format

     eetthheerr  Adjust the display of link-level ethernet (MAC) addresses:

            ccoolloonn    Separate address segments with a colon
            ddaasshh     Separate address segments with a dash
            ddeeffaauulltt  Default format, ccoolloonn

     iinneett   Adjust the display of inet address subnet masks:

            cciiddrr     CIDR notation, for example: ‘203.0.113.224/26’
            ddeeffaauulltt  Default format, hheexx
            ddootttteedd   Dotted quad notation, for example: ‘255.255.255.192’
            hheexx      Hexadecimal format, for example: ‘0xffffffc0’

     iinneett66  Adjust the display of inet6 address prefixes (subnet masks):

            cciiddrr     CIDR notation, for example: ‘::1/128’ or ‘fe80::1%lo0/64’
            ddeeffaauulltt  Default format, nnuummeerriicc
            nnuummeerriicc  Integer format, for example: ‘prefixlen 64’

     Only the super-user may modify the configuration of a network interface.

NNOOTTEESS
     The media selection system is relatively new and only some drivers
     support it (or have need for it).

EEXXAAMMPPLLEESS
     Assign the IPv4 address 192.0.2.10, with a network mask of 255.255.255.0,
     to the interface en0:
           # ifconfig en0 inet 192.0.2.10 netmask 255.255.255.0

     Add the IPv4 address 192.0.2.45, with the CIDR network prefix /28, to the
     interface en0, using aadddd as a synonym for the canonical form of the
     option aalliiaass:
           # ifconfig en0 inet 192.0.2.45/28 add

     Remove the IPv4 address 192.0.2.45 from the interface en0:
           # ifconfig en0 inet 192.0.2.45 -alias

     Add the IPv6 address 2001:DB8:DBDB::123/48 to the interface en0:
           # ifconfig en0 inet6 2001:db8:bdbd::123 prefixlen 48 alias
     Note that lower case hexadecimal IPv6 addresses are acceptable.

     Remove the IPv6 address added in the above example, using the / character
     as shorthand for the network prefix, and using ddeelleettee as a synonym for
     the canonical form of the option --aalliiaass:
           # ifconfig en0 inet6 2001:db8:bdbd::123/48 delete

     Configure the interface en1, to use 100baseTX, full duplex Ethernet media
     options:
           # ifconfig en1 media 100baseTX mediaopt full-duplex

     Create the software network interface gif1:
           # ifconfig gif1 create

     Destroy the software network interface gif1:
           # ifconfig gif1 destroy

     Display inet and inet6 address subnet masks in CIDR notation
           # ifconfig -f inet:cidr,inet6:cidr

DDIIAAGGNNOOSSTTIICCSS
     Messages indicating the specified interface does not exist, the requested
     address is unknown, or the user is not privileged and tried to alter an
     interface's configuration.

SSEEEE AALLSSOO
     netstat(1), netintro(4), sysctl(8)

HHIISSTTOORRYY
     The iiffccoonnffiigg utility appeared in 4.2BSD.

BBUUGGSS
     Basic IPv6 node operation requires a link-local address on each interface
     configured for IPv6.  Normally, such an address is automatically
     configured by the kernel on each interface added to the system; this
     behaviour may be disabled by setting the sysctl MIB variable
     _n_e_t_._i_n_e_t_6_._i_p_6_._a_u_t_o___l_i_n_k_l_o_c_a_l to 0.

     If you delete such an address using iiffccoonnffiigg, the kernel may act very
     odd.  Do this at your own risk.

macOS 14.6                       June 20, 2008                      macOS 14.6
"
ping,"PING(8)                     System Manager's Manual                    PING(8)

NNAAMMEE
     ppiinngg – send ICMP ECHO_REQUEST packets to network hosts

SSYYNNOOPPSSIISS
     ppiinngg [--AAaaCCDDddffnnooQQqqRRrrvv] [--bb _b_o_u_n_d_i_f] [--cc _c_o_u_n_t] [--GG _s_w_e_e_p_m_a_x_s_i_z_e]
          [--gg _s_w_e_e_p_m_i_n_s_i_z_e] [--hh _s_w_e_e_p_i_n_c_r_s_i_z_e] [--ii _w_a_i_t] [--kk _t_r_a_f_f_i_c_c_l_a_s_s]
          [--KK _n_e_t_s_e_r_v_i_c_e_t_y_p_e] [--ll _p_r_e_l_o_a_d] [--MM mmaasskk | ttiimmee] [--mm _t_t_l]
          [--PP _p_o_l_i_c_y] [--pp _p_a_t_t_e_r_n] [--SS _s_r_c___a_d_d_r] [--ss _p_a_c_k_e_t_s_i_z_e] [--tt _t_i_m_e_o_u_t]
          [--WW _w_a_i_t_t_i_m_e] [--zz _t_o_s] [----aappppllee--ccoonnnneecctt] [----aappppllee--ttiimmee] _h_o_s_t
     ppiinngg [--AAaaDDddffLLnnooQQqqRRrrvv] [--bb _b_o_u_n_d_i_f] [--cc _c_o_u_n_t] [--II _i_f_a_c_e] [--ii _w_a_i_t]
          [--kk _t_r_a_f_f_i_c_c_l_a_s_s] [--KK _n_e_t_s_e_r_v_i_c_e_t_y_p_e] [--ll _p_r_e_l_o_a_d] [--MM mmaasskk | ttiimmee]
          [--mm _t_t_l] [--PP _p_o_l_i_c_y] [--pp _p_a_t_t_e_r_n] [--SS _s_r_c___a_d_d_r] [--ss _p_a_c_k_e_t_s_i_z_e]
          [--TT _t_t_l] [--tt _t_i_m_e_o_u_t] [--WW _w_a_i_t_t_i_m_e] [--zz _t_o_s] [----aappppllee--ccoonnnneecctt]
          [----aappppllee--ttiimmee] _m_c_a_s_t_-_g_r_o_u_p

DDEESSCCRRIIPPTTIIOONN
     The ppiinngg utility uses the ICMP protocol's mandatory ECHO_REQUEST datagram
     to elicit an ICMP ECHO_RESPONSE from a host or gateway.  ECHO_REQUEST
     datagrams (“pings”) have an IP and ICMP header, followed by a “struct
     timeval” and then an arbitrary number of “pad” bytes used to fill out the
     packet.  The options are as follows:

     --AA      Audible.  Output a bell (ASCII 0x07) character when no packet is
             received before the next packet is transmitted.  To cater for
             round-trip times that are longer than the interval between
             transmissions, further missing packets cause a bell only if the
             maximum number of unreceived packets has increased.

     --aa      Audible.  Include a bell (ASCII 0x07) character in the output
             when any packet is received.  This option is ignored if other
             format options are present.

     --bb _b_o_u_n_d_i_f
             Bind the socket to interface _b_o_u_n_d_i_f for sending.  This option is
             an Apple addition.

     --CC      Prohibit the socket from using the cellular network interface.
             This option is an Apple addition.

     --cc _c_o_u_n_t
             Stop after sending (and receiving) _c_o_u_n_t ECHO_RESPONSE packets.
             If this option is not specified, ppiinngg will operate until
             interrupted.  If this option is specified in conjunction with
             ping sweeps, each sweep will consist of _c_o_u_n_t packets.

     --DD      Set the Don't Fragment bit.

     --dd      Set the SO_DEBUG option on the socket being used.

     --ff      Flood ping.  Outputs packets as fast as they come back or one
             hundred times per second, whichever is more.  For every
             ECHO_REQUEST sent a period “.” is printed, while for every
             ECHO_REPLY received a backspace is printed.  This provides a
             rapid display of how many packets are being dropped.  Only the
             super-user may use this option.  _T_h_i_s _c_a_n _b_e _v_e_r_y _h_a_r_d _o_n _a
             _n_e_t_w_o_r_k _a_n_d _s_h_o_u_l_d _b_e _u_s_e_d _w_i_t_h _c_a_u_t_i_o_n_.

     --GG _s_w_e_e_p_m_a_x_s_i_z_e
             Specify the maximum size of ICMP payload when sending sweeping
             pings.  This option is required for ping sweeps.

     --gg _s_w_e_e_p_m_i_n_s_i_z_e
             Specify the size of ICMP payload to start with when sending
             sweeping pings.  The default value is 0.

     --hh _s_w_e_e_p_i_n_c_r_s_i_z_e
             Specify the number of bytes to increment the size of ICMP payload
             after each sweep when sending sweeping pings.  The default value
             is 1.

     --II _i_f_a_c_e
             Source multicast packets with the given interface address.  This
             flag only applies if the ping destination is a multicast address.

     --ii _w_a_i_t
             Wait _w_a_i_t seconds _b_e_t_w_e_e_n _s_e_n_d_i_n_g _e_a_c_h _p_a_c_k_e_t.  The default is to
             wait for one second between each packet.  The wait time may be
             fractional, but only the super-user may specify values less than
             0.1 second.  This option is incompatible with the --ff option.

     --kk _t_r_a_f_f_i_c_c_l_a_s_s
             Specifies the traffic class to use for sending ICMP packets.  The
             supported traffic classes are BK_SYS, BK, BE, RD, OAM, AV, RV,
             VI, VO and CTL.  By default ppiinngg uses the control traffic class
             (CTL).  This option is an Apple addition.

     --KK _n_e_t_s_e_r_v_i_c_e_t_y_p_e
             Specifies the network service type to use for sending ICMP
             packets.  The supported network service type are BK_SYS, BK, BE,
             RV, AV, RD, OAM, VI, SIG and VO.  Note this overrides the default
             traffic class (-k can still be specified after -K to use both).
             This option is an Apple addition.

     --LL      Suppress loopback of multicast packets.  This flag only applies
             if the ping destination is a multicast address.

     --ll _p_r_e_l_o_a_d
             If _p_r_e_l_o_a_d is specified, ppiinngg sends that many packets as fast as
             possible before falling into its normal mode of behavior.  Only
             the super-user may use this option.

     --MM mmaasskk | ttiimmee
             Use ICMP_MASKREQ or ICMP_TSTAMP instead of ICMP_ECHO.  For mmaasskk,
             print the netmask of the remote machine.  Set the
             _n_e_t_._i_n_e_t_._i_c_m_p_._m_a_s_k_r_e_p_l MIB variable to enable ICMP_MASKREPLY.
             For ttiimmee, print the origination, reception and transmission
             timestamps.

     --mm _t_t_l  Set the IP Time To Live for outgoing packets.  If not specified,
             the kernel uses the value of the _n_e_t_._i_n_e_t_._i_p_._t_t_l MIB variable.

     --nn      Numeric output only.  No attempt will be made to lookup symbolic
             names for host addresses.

     --oo      Exit successfully after receiving one reply packet.

     --PP _p_o_l_i_c_y
             _p_o_l_i_c_y specifies IPsec policy for the ping session.  For details
             please refer to ipsec(4) and ipsec_set_policy(3).

     --pp _p_a_t_t_e_r_n
             You may specify up to 16 “pad” bytes to fill out the packet you
             send.  This is useful for diagnosing data-dependent problems in a
             network.  For example, “-p ff” will cause the sent packet to be
             filled with all ones.

     --QQ      Somewhat quiet output.  Don't display ICMP error messages that
             are in response to our query messages.  Originally, the --vv flag
             was required to display such errors, but --vv displays all ICMP
             error messages.  On a busy machine, this output can be
             overbearing.  Without the --QQ flag, ppiinngg prints out any ICMP error
             messages caused by its own ECHO_REQUEST messages.

     --qq      Quiet output.  Nothing is displayed except the summary lines at
             startup time and when finished.

     --RR      Record route.  Includes the RECORD_ROUTE option in the
             ECHO_REQUEST packet and displays the route buffer on returned
             packets.  This option is deprecated and is now a no-op.

     --rr      Bypass the normal routing tables and send directly to a host on
             an attached network.  If the host is not on a directly-attached
             network, an error is returned.  This option can be used to ping a
             local host through an interface that has no route through it
             (e.g., after the interface was dropped by routed(8)).

     --SS _s_r_c___a_d_d_r
             Use the following IP address as the source address in outgoing
             packets.  On hosts with more than one IP address, this option can
             be used to force the source address to be something other than
             the IP address of the interface the probe packet is sent on.  If
             the IP address is not one of this machine's interface addresses,
             an error is returned and nothing is sent.

     --ss _p_a_c_k_e_t_s_i_z_e
             Specify the number of data bytes to be sent.  The default is 56,
             which translates into 64 ICMP data bytes when combined with the 8
             bytes of ICMP header data.  This option cannot be used with ping
             sweeps.

     --TT _t_t_l  Set the IP Time To Live for multicasted packets.  This flag only
             applies if the ping destination is a multicast address.

     --tt _t_i_m_e_o_u_t
             Specify a timeout, in seconds, before ping exits regardless of
             how many packets have been received.

     --vv      Verbose output.  ICMP packets other than ECHO_RESPONSE that are
             received are listed.

     --WW _w_a_i_t_t_i_m_e
             Time in milliseconds to wait for a reply for each packet sent.
             If a reply arrives later, the packet is not printed as replied,
             but considered as replied when calculating statistics.

     --zz _t_o_s  Use the specified type of service.

     ----aappppllee--ccoonnnneecctt
             Connects the socket to the destination address.  This option is
             an Apple addition.

     ----aappppllee--ttiimmee
             Prints the time a packet was received.  This option is an Apple
             addition.

     When using ppiinngg for fault isolation, it should first be run on the local
     host, to verify that the local network interface is up and running.
     Then, hosts and gateways further and further away should be “pinged”.
     Round-trip times and packet loss statistics are computed.  If duplicate
     packets are received, they are not included in the packet loss
     calculation, although the round trip time of these packets is used in
     calculating the round-trip time statistics.  When the specified number of
     packets have been sent (and received) or if the program is terminated
     with a SIGINT, a brief summary is displayed, showing the number of
     packets sent and received, and the minimum, mean, maximum, and standard
     deviation of the round-trip times.

     If ppiinngg receives a SIGINFO (see the ssttaattuuss argument for stty(1)) signal,
     the current number of packets sent and received, and the minimum, mean,
     and maximum of the round-trip times will be written to the standard error
     output.

     This program is intended for use in network testing, measurement and
     management.  Because of the load it can impose on the network, it is
     unwise to use ppiinngg during normal operations or from automated scripts.

IICCMMPP PPAACCKKEETT DDEETTAAIILLSS
     An IP header without options is 20 bytes.  An ICMP ECHO_REQUEST packet
     contains an additional 8 bytes worth of ICMP header followed by an
     arbitrary amount of data.  When a _p_a_c_k_e_t_s_i_z_e is given, this indicated the
     size of this extra piece of data (the default is 56).  Thus the amount of
     data received inside of an IP packet of type ICMP ECHO_REPLY will always
     be 8 bytes more than the requested data space (the ICMP header).

     If the data space is at least eight bytes large, ppiinngg uses the first
     eight bytes of this space to include a timestamp which it uses in the
     computation of round trip times.  If less than eight bytes of pad are
     specified, no round trip times are given.

DDUUPPLLIICCAATTEE AANNDD DDAAMMAAGGEEDD PPAACCKKEETTSS
     The ppiinngg utility will report duplicate and damaged packets.  Duplicate
     packets should never occur when pinging a unicast address, and seem to be
     caused by inappropriate link-level retransmissions.  Duplicates may occur
     in many situations and are rarely (if ever) a good sign, although the
     presence of low levels of duplicates may not always be cause for alarm.
     Duplicates are expected when pinging a broadcast or multicast address,
     since they are not really duplicates but replies from different hosts to
     the same request.

     Damaged packets are obviously serious cause for alarm and often indicate
     broken hardware somewhere in the ppiinngg packet's path (in the network or in
     the hosts).

TTRRYYIINNGG DDIIFFFFEERREENNTT DDAATTAA PPAATTTTEERRNNSS
     The (inter)network layer should never treat packets differently depending
     on the data contained in the data portion.  Unfortunately, data-dependent
     problems have been known to sneak into networks and remain undetected for
     long periods of time.  In many cases the particular pattern that will
     have problems is something that does not have sufficient “transitions”,
     such as all ones or all zeros, or a pattern right at the edge, such as
     almost all zeros.  It is not necessarily enough to specify a data pattern
     of all zeros (for example) on the command line because the pattern that
     is of interest is at the data link level, and the relationship between
     what you type and what the controllers transmit can be complicated.

     This means that if you have a data-dependent problem you will probably
     have to do a lot of testing to find it.  If you are lucky, you may manage
     to find a file that either cannot be sent across your network or that
     takes much longer to transfer than other similar length files.  You can
     then examine this file for repeated patterns that you can test using the
     --pp option of ppiinngg.

TTTTLL DDEETTAAIILLSS
     The TTL value of an IP packet represents the maximum number of IP routers
     that the packet can go through before being thrown away.  In current
     practice you can expect each router in the Internet to decrement the TTL
     field by exactly one.

     The TCP/IP specification recommends setting the TTL field for IP packets
     to 64, but many systems use smaller values (4.3BSD uses 30, 4.2BSD used
     15).

     The maximum possible value of this field is 255, and most UNIX systems
     set the TTL field of ICMP ECHO_REQUEST packets to 255.  This is why you
     will find you can “ping” some hosts, but not reach them with telnet(1) or
     ftp(1).

     In normal operation ppiinngg prints the ttl value from the packet it
     receives.  When a remote system receives a ping packet, it can do one of
     three things with the TTL field in its response:

     ••   Not change it; this is what BSD systems did before the 4.3BSD-Tahoe
         release.  In this case the TTL value in the received packet will be
         255 minus the number of routers in the round-trip path.

     ••   Set it to 255; this is what current BSD systems do.  In this case the
         TTL value in the received packet will be 255 minus the number of
         routers in the path _f_r_o_m the remote system _t_o the ppiinngg_i_n_g host.

     ••   Set it to some other value.  Some machines use the same value for
         ICMP packets that they use for TCP packets, for example either 30 or
         60.  Others may use completely wild values.

EEXXIITT SSTTAATTUUSS
     The ppiinngg utility exits with one of the following values:

     0       At least one response was heard from the specified _h_o_s_t.

     2       The transmission was successful but no responses were received.

     any other value
             An error occurred.  These values are defined in <_s_y_s_e_x_i_t_s_._h>.

SSEEEE AALLSSOO
     netstat(1), ifconfig(8), routed(8), traceroute(8), ping6(8)

HHIISSTTOORRYY
     The ppiinngg utility appeared in 4.3BSD.

AAUUTTHHOORRSS
     The original ppiinngg utility was written by Mike Muuss while at the US Army
     Ballistics Research Laboratory.

BBUUGGSS
     Flood pinging is not recommended in general, and flood pinging the
     broadcast address should only be done under very controlled conditions.

     The --vv option is not worth much on busy hosts.

macOS 14.6                      March 29, 2013                      macOS 14.6
"
wget,"WGET(1)                            GNU Wget                            WGET(1)


NNAAMMEE
       Wget - The non-interactive network downloader.

SSYYNNOOPPSSIISS
       wget [_o_p_t_i_o_n]... [_U_R_L]...

DDEESSCCRRIIPPTTIIOONN
       GNU Wget is a free utility for non-interactive download of files from
       the Web.  It supports HTTP, HTTPS, and FTP protocols, as well as
       retrieval through HTTP proxies.

       Wget is non-interactive, meaning that it can work in the background,
       while the user is not logged on.  This allows you to start a retrieval
       and disconnect from the system, letting Wget finish the work.  By
       contrast, most of the Web browsers require constant user's presence,
       which can be a great hindrance when transferring a lot of data.

       Wget can follow links in HTML, XHTML, and CSS pages, to create local
       versions of remote web sites, fully recreating the directory structure
       of the original site.  This is sometimes referred to as ""recursive
       downloading.""  While doing that, Wget respects the Robot Exclusion
       Standard (_/_r_o_b_o_t_s_._t_x_t).  Wget can be instructed to convert the links in
       downloaded files to point at the local files, for offline viewing.

       Wget has been designed for robustness over slow or unstable network
       connections; if a download fails due to a network problem, it will keep
       retrying until the whole file has been retrieved.  If the server
       supports regetting, it will instruct the server to continue the
       download from where it left off.

OOPPTTIIOONNSS
   OOppttiioonn SSyynnttaaxx
       Since Wget uses GNU getopt to process command-line arguments, every
       option has a long form along with the short one.  Long options are more
       convenient to remember, but take time to type.  You may freely mix
       different option styles, or specify options after the command-line
       arguments.  Thus you may write:

               wget -r --tries=10 http://fly.srk.fer.hr/ -o log

       The space between the option accepting an argument and the argument may
       be omitted.  Instead of --oo lloogg you can write --oolloogg.

       You may put several options that do not require arguments together,
       like:

               wget -drc <URL>

       This is completely equivalent to:

               wget -d -r -c <URL>

       Since the options can be specified after the arguments, you may
       terminate them with ----.  So the following will try to download URL --xx,
       reporting failure to _l_o_g:

               wget -o log -- -x

       The options that accept comma-separated lists all respect the
       convention that specifying an empty list clears its value.  This can be
       useful to clear the _._w_g_e_t_r_c settings.  For instance, if your _._w_g_e_t_r_c
       sets ""exclude_directories"" to _/_c_g_i_-_b_i_n, the following example will
       first reset it, and then set it to exclude _/_~_n_o_b_o_d_y and _/_~_s_o_m_e_b_o_d_y.
       You can also clear the lists in _._w_g_e_t_r_c.

               wget -X """" -X /~nobody,/~somebody

       Most options that do not accept arguments are _b_o_o_l_e_a_n options, so named
       because their state can be captured with a yes-or-no (""boolean"")
       variable.  For example, ----ffoollllooww--ffttpp tells Wget to follow FTP links
       from HTML files and, on the other hand, ----nnoo--gglloobb tells it not to
       perform file globbing on FTP URLs.  A boolean option is either
       _a_f_f_i_r_m_a_t_i_v_e or _n_e_g_a_t_i_v_e (beginning with ----nnoo).  All such options share
       several properties.

       Unless stated otherwise, it is assumed that the default behavior is the
       opposite of what the option accomplishes.  For example, the documented
       existence of ----ffoollllooww--ffttpp assumes that the default is to _n_o_t follow FTP
       links from HTML pages.

       Affirmative options can be negated by prepending the ----nnoo-- to the
       option name; negative options can be negated by omitting the ----nnoo--
       prefix.  This might seem superfluous---if the default for an
       affirmative option is to not do something, then why provide a way to
       explicitly turn it off?  But the startup file may in fact change the
       default.  For instance, using ""follow_ftp = on"" in _._w_g_e_t_r_c makes Wget
       _f_o_l_l_o_w FTP links by default, and using ----nnoo--ffoollllooww--ffttpp is the only way
       to restore the factory default from the command line.

   BBaassiicc SSttaarrttuupp OOppttiioonnss
       --VV
       ----vveerrssiioonn
           Display the version of Wget.

       --hh
       ----hheellpp
           Print a help message describing all of Wget's command-line options.

       --bb
       ----bbaacckkggrroouunndd
           Go to background immediately after startup.  If no output file is
           specified via the --oo, output is redirected to _w_g_e_t_-_l_o_g.

       --ee _c_o_m_m_a_n_d
       ----eexxeeccuuttee _c_o_m_m_a_n_d
           Execute _c_o_m_m_a_n_d as if it were a part of _._w_g_e_t_r_c.  A command thus
           invoked will be executed _a_f_t_e_r the commands in _._w_g_e_t_r_c, thus taking
           precedence over them.  If you need to specify more than one wgetrc
           command, use multiple instances of --ee.

   LLooggggiinngg aanndd IInnppuutt FFiillee OOppttiioonnss
       --oo _l_o_g_f_i_l_e
       ----oouuttppuutt--ffiillee==_l_o_g_f_i_l_e
           Log all messages to _l_o_g_f_i_l_e.  The messages are normally reported to
           standard error.

       --aa _l_o_g_f_i_l_e
       ----aappppeenndd--oouuttppuutt==_l_o_g_f_i_l_e
           Append to _l_o_g_f_i_l_e.  This is the same as --oo, only it appends to
           _l_o_g_f_i_l_e instead of overwriting the old log file.  If _l_o_g_f_i_l_e does
           not exist, a new file is created.

       --dd
       ----ddeebbuugg
           Turn on debug output, meaning various information important to the
           developers of Wget if it does not work properly.  Your system
           administrator may have chosen to compile Wget without debug
           support, in which case --dd will not work.  Please note that
           compiling with debug support is always safe---Wget compiled with
           the debug support will _n_o_t print any debug info unless requested
           with --dd.

       --qq
       ----qquuiieett
           Turn off Wget's output.

       --vv
       ----vveerrbboossee
           Turn on verbose output, with all the available data.  The default
           output is verbose.

       --nnvv
       ----nnoo--vveerrbboossee
           Turn off verbose without being completely quiet (use --qq for that),
           which means that error messages and basic information still get
           printed.

       ----rreeppoorrtt--ssppeeeedd==_t_y_p_e
           Output bandwidth as _t_y_p_e.  The only accepted value is bbiittss.

       --ii _f_i_l_e
       ----iinnppuutt--ffiillee==_f_i_l_e
           Read URLs from a local or external _f_i_l_e.  If -- is specified as
           _f_i_l_e, URLs are read from the standard input.  (Use ..//-- to read from
           a file literally named --.)

           If this function is used, no URLs need be present on the command
           line.  If there are URLs both on the command line and in an input
           file, those on the command lines will be the first ones to be
           retrieved.  If ----ffoorrccee--hhttmmll is not specified, then _f_i_l_e should
           consist of a series of URLs, one per line.

           However, if you specify ----ffoorrccee--hhttmmll, the document will be regarded
           as hhttmmll.  In that case you may have problems with relative links,
           which you can solve either by adding ""<base href=""_u_r_l"">"" to the
           documents or by specifying ----bbaassee==_u_r_l on the command line.

           If the _f_i_l_e is an external one, the document will be automatically
           treated as hhttmmll if the Content-Type matches tteexxtt//hhttmmll.
           Furthermore, the _f_i_l_e's location will be implicitly used as base
           href if none was specified.

       ----iinnppuutt--mmeettaalliinnkk==_f_i_l_e
           Downloads files covered in local Metalink _f_i_l_e. Metalink version 3
           and 4 are supported.

       ----kkeeeepp--bbaaddhhaasshh
           Keeps downloaded Metalink's files with a bad hash. It appends
           .badhash to the name of Metalink's files which have a checksum
           mismatch, except without overwriting existing files.

       ----mmeettaalliinnkk--oovveerr--hhttttpp
           Issues HTTP HEAD request instead of GET and extracts Metalink
           metadata from response headers. Then it switches to Metalink
           download.  If no valid Metalink metadata is found, it falls back to
           ordinary HTTP download.  Enables CCoonntteenntt--TTyyppee::
           aapppplliiccaattiioonn//mmeettaalliinnkk44++xxmmll files download/processing.

       ----mmeettaalliinnkk--iinnddeexx==_n_u_m_b_e_r
           Set the Metalink aapppplliiccaattiioonn//mmeettaalliinnkk44++xxmmll metaurl ordinal NUMBER.
           From 1 to the total number of ""application/metalink4+xml""
           available.  Specify 0 or iinnff to choose the first good one.
           Metaurls, such as those from a ----mmeettaalliinnkk--oovveerr--hhttttpp, may have been
           sorted by priority key's value; keep this in mind to choose the
           right NUMBER.

       ----pprreeffeerrrreedd--llooccaattiioonn
           Set preferred location for Metalink resources. This has effect if
           multiple resources with same priority are available.

       ----xxaattttrr
           Enable use of file system's extended attributes to save the
           original URL and the Referer HTTP header value if used.

           Be aware that the URL might contain private information like access
           tokens or credentials.

       --FF
       ----ffoorrccee--hhttmmll
           When input is read from a file, force it to be treated as an HTML
           file.  This enables you to retrieve relative links from existing
           HTML files on your local disk, by adding ""<base href=""_u_r_l"">"" to
           HTML, or using the ----bbaassee command-line option.

       --BB _U_R_L
       ----bbaassee==_U_R_L
           Resolves relative links using _U_R_L as the point of reference, when
           reading links from an HTML file specified via the --ii/----iinnppuutt--ffiillee
           option (together with ----ffoorrccee--hhttmmll, or when the input file was
           fetched remotely from a server describing it as HTML). This is
           equivalent to the presence of a ""BASE"" tag in the HTML input file,
           with _U_R_L as the value for the ""href"" attribute.

           For instance, if you specify hhttttpp::////ffoooo//bbaarr//aa..hhttmmll for _U_R_L, and
           Wget reads ....//bbaazz//bb..hhttmmll from the input file, it would be resolved
           to hhttttpp::////ffoooo//bbaazz//bb..hhttmmll.

       ----ccoonnffiigg==_F_I_L_E
           Specify the location of a startup file you wish to use instead of
           the default one(s). Use --no-config to disable reading of config
           files.  If both --config and --no-config are given, --no-config is
           ignored.

       ----rreejjeecctteedd--lloogg==_l_o_g_f_i_l_e
           Logs all URL rejections to _l_o_g_f_i_l_e as comma separated values.  The
           values include the reason of rejection, the URL and the parent URL
           it was found in.

   DDoowwnnllooaadd OOppttiioonnss
       ----bbiinndd--aaddddrreessss==_A_D_D_R_E_S_S
           When making client TCP/IP connections, bind to _A_D_D_R_E_S_S on the local
           machine.  _A_D_D_R_E_S_S may be specified as a hostname or IP address.
           This option can be useful if your machine is bound to multiple IPs.

       ----bbiinndd--ddnnss--aaddddrreessss==_A_D_D_R_E_S_S
           [libcares only] This address overrides the route for DNS requests.
           If you ever need to circumvent the standard settings from
           /etc/resolv.conf, this option together with ----ddnnss--sseerrvveerrss is your
           friend.  _A_D_D_R_E_S_S must be specified either as IPv4 or IPv6 address.
           Wget needs to be built with libcares for this option to be
           available.

       ----ddnnss--sseerrvveerrss==_A_D_D_R_E_S_S_E_S
           [libcares only] The given address(es) override the standard
           nameserver addresses,  e.g. as configured in /etc/resolv.conf.
           _A_D_D_R_E_S_S_E_S may be specified either as IPv4 or IPv6 addresses, comma-
           separated.  Wget needs to be built with libcares for this option to
           be available.

       --tt _n_u_m_b_e_r
       ----ttrriieess==_n_u_m_b_e_r
           Set number of tries to _n_u_m_b_e_r. Specify 0 or iinnff for infinite
           retrying.  The default is to retry 20 times, with the exception of
           fatal errors like ""connection refused"" or ""not found"" (404), which
           are not retried.

       --OO _f_i_l_e
       ----oouuttppuutt--ddooccuummeenntt==_f_i_l_e
           The documents will not be written to the appropriate files, but all
           will be concatenated together and written to _f_i_l_e.  If -- is used as
           _f_i_l_e, documents will be printed to standard output, disabling link
           conversion.  (Use ..//-- to print to a file literally named --.)

           Use of --OO is _n_o_t intended to mean simply ""use the name _f_i_l_e instead
           of the one in the URL;"" rather, it is analogous to shell
           redirection: wwggeett --OO ffiillee hhttttpp::////ffoooo is intended to work like wwggeett
           --OO -- hhttttpp::////ffoooo >> ffiillee; _f_i_l_e will be truncated immediately, and _a_l_l
           downloaded content will be written there.

           For this reason, --NN (for timestamp-checking) is not supported in
           combination with --OO: since _f_i_l_e is always newly created, it will
           always have a very new timestamp. A warning will be issued if this
           combination is used.

           Similarly, using --rr or --pp with --OO may not work as you expect: Wget
           won't just download the first file to _f_i_l_e and then download the
           rest to their normal names: _a_l_l downloaded content will be placed
           in _f_i_l_e. This was disabled in version 1.11, but has been reinstated
           (with a warning) in 1.11.2, as there are some cases where this
           behavior can actually have some use.

           A combination with --nncc is only accepted if the given output file
           does not exist.

           Note that a combination with --kk is only permitted when downloading
           a single document, as in that case it will just convert all
           relative URIs to external ones; --kk makes no sense for multiple URIs
           when they're all being downloaded to a single file; --kk can be used
           only when the output is a regular file.

       --nncc
       ----nnoo--cclloobbbbeerr
           If a file is downloaded more than once in the same directory,
           Wget's behavior depends on a few options, including --nncc.  In
           certain cases, the local file will be _c_l_o_b_b_e_r_e_d, or overwritten,
           upon repeated download.  In other cases it will be preserved.

           When running Wget without --NN, --nncc, --rr, or --pp, downloading the same
           file in the same directory will result in the original copy of _f_i_l_e
           being preserved and the second copy being named _f_i_l_e..11.  If that
           file is downloaded yet again, the third copy will be named _f_i_l_e..22,
           and so on.  (This is also the behavior with --nndd, even if --rr or --pp
           are in effect.)  When --nncc is specified, this behavior is
           suppressed, and Wget will refuse to download newer copies of _f_i_l_e.
           Therefore, """"no-clobber"""" is actually a misnomer in this
           mode---it's not clobbering that's prevented (as the numeric
           suffixes were already preventing clobbering), but rather the
           multiple version saving that's prevented.

           When running Wget with --rr or --pp, but without --NN, --nndd, or --nncc, re-
           downloading a file will result in the new copy simply overwriting
           the old.  Adding --nncc will prevent this behavior, instead causing
           the original version to be preserved and any newer copies on the
           server to be ignored.

           When running Wget with --NN, with or without --rr or --pp, the decision
           as to whether or not to download a newer copy of a file depends on
           the local and remote timestamp and size of the file.  --nncc may not
           be specified at the same time as --NN.

           A combination with --OO/----oouuttppuutt--ddooccuummeenntt is only accepted if the
           given output file does not exist.

           Note that when --nncc is specified, files with the suffixes ..hhttmmll or
           ..hhttmm will be loaded from the local disk and parsed as if they had
           been retrieved from the Web.

       ----bbaacckkuuppss==_b_a_c_k_u_p_s
           Before (over)writing a file, back up an existing file by adding a
           ..11 suffix (__11 on VMS) to the file name.  Such backup files are
           rotated to ..22, ..33, and so on, up to _b_a_c_k_u_p_s (and lost beyond that).

       ----nnoo--nneettrrcc
           Do not try to obtain credentials from _._n_e_t_r_c file. By default
           _._n_e_t_r_c file is searched for credentials in case none have been
           passed on command line and authentication is required.

       --cc
       ----ccoonnttiinnuuee
           Continue getting a partially-downloaded file.  This is useful when
           you want to finish up a download started by a previous instance of
           Wget, or by another program.  For instance:

                   wget -c ftp://sunsite.doc.ic.ac.uk/ls-lR.Z

           If there is a file named _l_s_-_l_R_._Z in the current directory, Wget
           will assume that it is the first portion of the remote file, and
           will ask the server to continue the retrieval from an offset equal
           to the length of the local file.

           Note that you don't need to specify this option if you just want
           the current invocation of Wget to retry downloading a file should
           the connection be lost midway through.  This is the default
           behavior.  --cc only affects resumption of downloads started _p_r_i_o_r to
           this invocation of Wget, and whose local files are still sitting
           around.

           Without --cc, the previous example would just download the remote
           file to _l_s_-_l_R_._Z_._1, leaving the truncated _l_s_-_l_R_._Z file alone.

           If you use --cc on a non-empty file, and the server does not support
           continued downloading, Wget will restart the download from scratch
           and overwrite the existing file entirely.

           Beginning with Wget 1.7, if you use --cc on a file which is of equal
           size as the one on the server, Wget will refuse to download the
           file and print an explanatory message.  The same happens when the
           file is smaller on the server than locally (presumably because it
           was changed on the server since your last download
           attempt)---because ""continuing"" is not meaningful, no download
           occurs.

           On the other side of the coin, while using --cc, any file that's
           bigger on the server than locally will be considered an incomplete
           download and only ""(length(remote) - length(local))"" bytes will be
           downloaded and tacked onto the end of the local file.  This
           behavior can be desirable in certain cases---for instance, you can
           use wwggeett --cc to download just the new portion that's been appended
           to a data collection or log file.

           However, if the file is bigger on the server because it's been
           _c_h_a_n_g_e_d, as opposed to just _a_p_p_e_n_d_e_d to, you'll end up with a
           garbled file.  Wget has no way of verifying that the local file is
           really a valid prefix of the remote file.  You need to be
           especially careful of this when using --cc in conjunction with --rr,
           since every file will be considered as an ""incomplete download""
           candidate.

           Another instance where you'll get a garbled file if you try to use
           --cc is if you have a lame HTTP proxy that inserts a ""transfer
           interrupted"" string into the local file.  In the future a
           ""rollback"" option may be added to deal with this case.

           Note that --cc only works with FTP servers and with HTTP servers that
           support the ""Range"" header.

       ----ssttaarrtt--ppooss==_O_F_F_S_E_T
           Start downloading at zero-based position _O_F_F_S_E_T.  Offset may be
           expressed in bytes, kilobytes with the `k' suffix, or megabytes
           with the `m' suffix, etc.

           ----ssttaarrtt--ppooss has higher precedence over ----ccoonnttiinnuuee.  When
           ----ssttaarrtt--ppooss and ----ccoonnttiinnuuee are both specified, wget will emit a
           warning then proceed as if ----ccoonnttiinnuuee was absent.

           Server support for continued download is required, otherwise
           ----ssttaarrtt--ppooss cannot help.  See --cc for details.

       ----pprrooggrreessss==_t_y_p_e
           Select the type of the progress indicator you wish to use.  Legal
           indicators are ""dot"" and ""bar"".

           The ""bar"" indicator is used by default.  It draws an ASCII progress
           bar graphics (a.k.a ""thermometer"" display) indicating the status of
           retrieval.  If the output is not a TTY, the ""dot"" bar will be used
           by default.

           Use ----pprrooggrreessss==ddoott to switch to the ""dot"" display.  It traces the
           retrieval by printing dots on the screen, each dot representing a
           fixed amount of downloaded data.

           The progress _t_y_p_e can also take one or more parameters.  The
           parameters vary based on the _t_y_p_e selected.  Parameters to _t_y_p_e are
           passed by appending them to the type sperated by a colon (:) like
           this: ----pprrooggrreessss==_t_y_p_e::_p_a_r_a_m_e_t_e_r_1::_p_a_r_a_m_e_t_e_r_2.

           When using the dotted retrieval, you may set the _s_t_y_l_e by
           specifying the type as ddoott::_s_t_y_l_e.  Different styles assign
           different meaning to one dot.  With the ""default"" style each dot
           represents 1K, there are ten dots in a cluster and 50 dots in a
           line.  The ""binary"" style has a more ""computer""-like
           orientation---8K dots, 16-dots clusters and 48 dots per line (which
           makes for 384K lines).  The ""mega"" style is suitable for
           downloading large files---each dot represents 64K retrieved, there
           are eight dots in a cluster, and 48 dots on each line (so each line
           contains 3M).  If ""mega"" is not enough then you can use the ""giga""
           style---each dot represents 1M retrieved, there are eight dots in a
           cluster, and 32 dots on each line (so each line contains 32M).

           With ----pprrooggrreessss==bbaarr, there are currently two possible parameters,
           _f_o_r_c_e and _n_o_s_c_r_o_l_l.

           When the output is not a TTY, the progress bar always falls back to
           ""dot"", even if ----pprrooggrreessss==bbaarr was passed to Wget during invocation.
           This behaviour can be overridden and the ""bar"" output forced by
           using the ""force"" parameter as ----pprrooggrreessss==bbaarr::ffoorrccee.

           By default, the bbaarr style progress bar scroll the name of the file
           from left to right for the file being downloaded if the filename
           exceeds the maximum length allotted for its display.  In certain
           cases, such as with ----pprrooggrreessss==bbaarr::ffoorrccee, one may not want the
           scrolling filename in the progress bar.  By passing the ""noscroll""
           parameter, Wget can be forced to display as much of the filename as
           possible without scrolling through it.

           Note that you can set the default style using the ""progress""
           command in _._w_g_e_t_r_c.  That setting may be overridden from the
           command line.  For example, to force the bar output without
           scrolling, use ----pprrooggrreessss==bbaarr::ffoorrccee::nnoossccrroollll.

       ----sshhooww--pprrooggrreessss
           Force wget to display the progress bar in any verbosity.

           By default, wget only displays the progress bar in verbose mode.
           One may however, want wget to display the progress bar on screen in
           conjunction with any other verbosity modes like ----nnoo--vveerrbboossee or
           ----qquuiieett.  This is often a desired a property when invoking wget to
           download several small/large files.  In such a case, wget could
           simply be invoked with this parameter to get a much cleaner output
           on the screen.

           This option will also force the progress bar to be printed to
           _s_t_d_e_r_r when used alongside the ----oouuttppuutt--ffiillee option.

       --NN
       ----ttiimmeessttaammppiinngg
           Turn on time-stamping.

       ----nnoo--iiff--mmooddiiffiieedd--ssiinnccee
           Do not send If-Modified-Since header in --NN mode. Send preliminary
           HEAD request instead. This has only effect in --NN mode.

       ----nnoo--uussee--sseerrvveerr--ttiimmeessttaammppss
           Don't set the local file's timestamp by the one on the server.

           By default, when a file is downloaded, its timestamps are set to
           match those from the remote file. This allows the use of
           ----ttiimmeessttaammppiinngg on subsequent invocations of wget. However, it is
           sometimes useful to base the local file's timestamp on when it was
           actually downloaded; for that purpose, the
           ----nnoo--uussee--sseerrvveerr--ttiimmeessttaammppss option has been provided.

       --SS
       ----sseerrvveerr--rreessppoonnssee
           Print the headers sent by HTTP servers and responses sent by FTP
           servers.

       ----ssppiiddeerr
           When invoked with this option, Wget will behave as a Web _s_p_i_d_e_r,
           which means that it will not download the pages, just check that
           they are there.  For example, you can use Wget to check your
           bookmarks:

                   wget --spider --force-html -i bookmarks.html

           This feature needs much more work for Wget to get close to the
           functionality of real web spiders.

       --TT sseeccoonnddss
       ----ttiimmeeoouutt==_s_e_c_o_n_d_s
           Set the network timeout to _s_e_c_o_n_d_s seconds.  This is equivalent to
           specifying ----ddnnss--ttiimmeeoouutt, ----ccoonnnneecctt--ttiimmeeoouutt, and ----rreeaadd--ttiimmeeoouutt,
           all at the same time.

           When interacting with the network, Wget can check for timeout and
           abort the operation if it takes too long.  This prevents anomalies
           like hanging reads and infinite connects.  The only timeout enabled
           by default is a 900-second read timeout.  Setting a timeout to 0
           disables it altogether.  Unless you know what you are doing, it is
           best not to change the default timeout settings.

           All timeout-related options accept decimal values, as well as
           subsecond values.  For example, 00..11 seconds is a legal (though
           unwise) choice of timeout.  Subsecond timeouts are useful for
           checking server response times or for testing network latency.

       ----ddnnss--ttiimmeeoouutt==_s_e_c_o_n_d_s
           Set the DNS lookup timeout to _s_e_c_o_n_d_s seconds.  DNS lookups that
           don't complete within the specified time will fail.  By default,
           there is no timeout on DNS lookups, other than that implemented by
           system libraries.

       ----ccoonnnneecctt--ttiimmeeoouutt==_s_e_c_o_n_d_s
           Set the connect timeout to _s_e_c_o_n_d_s seconds.  TCP connections that
           take longer to establish will be aborted.  By default, there is no
           connect timeout, other than that implemented by system libraries.

       ----rreeaadd--ttiimmeeoouutt==_s_e_c_o_n_d_s
           Set the read (and write) timeout to _s_e_c_o_n_d_s seconds.  The ""time"" of
           this timeout refers to _i_d_l_e _t_i_m_e: if, at any point in the download,
           no data is received for more than the specified number of seconds,
           reading fails and the download is restarted.  This option does not
           directly affect the duration of the entire download.

           Of course, the remote server may choose to terminate the connection
           sooner than this option requires.  The default read timeout is 900
           seconds.

       ----lliimmiitt--rraattee==_a_m_o_u_n_t
           Limit the download speed to _a_m_o_u_n_t bytes per second.  Amount may be
           expressed in bytes, kilobytes with the kk suffix, or megabytes with
           the mm suffix.  For example, ----lliimmiitt--rraattee==2200kk will limit the
           retrieval rate to 20KB/s.  This is useful when, for whatever
           reason, you don't want Wget to consume the entire available
           bandwidth.

           This option allows the use of decimal numbers, usually in
           conjunction with power suffixes; for example, ----lliimmiitt--rraattee==22..55kk is
           a legal value.

           Note that Wget implements the limiting by sleeping the appropriate
           amount of time after a network read that took less time than
           specified by the rate.  Eventually this strategy causes the TCP
           transfer to slow down to approximately the specified rate.
           However, it may take some time for this balance to be achieved, so
           don't be surprised if limiting the rate doesn't work well with very
           small files.

       --ww _s_e_c_o_n_d_s
       ----wwaaiitt==_s_e_c_o_n_d_s
           Wait the specified number of seconds between the retrievals.  Use
           of this option is recommended, as it lightens the server load by
           making the requests less frequent.  Instead of in seconds, the time
           can be specified in minutes using the ""m"" suffix, in hours using
           ""h"" suffix, or in days using ""d"" suffix.

           Specifying a large value for this option is useful if the network
           or the destination host is down, so that Wget can wait long enough
           to reasonably expect the network error to be fixed before the
           retry.  The waiting interval specified by this function is
           influenced by ""--random-wait"", which see.

       ----wwaaiittrreettrryy==_s_e_c_o_n_d_s
           If you don't want Wget to wait between _e_v_e_r_y retrieval, but only
           between retries of failed downloads, you can use this option.  Wget
           will use _l_i_n_e_a_r _b_a_c_k_o_f_f, waiting 1 second after the first failure
           on a given file, then waiting 2 seconds after the second failure on
           that file, up to the maximum number of _s_e_c_o_n_d_s you specify.

           By default, Wget will assume a value of 10 seconds.

       ----rraannddoomm--wwaaiitt
           Some web sites may perform log analysis to identify retrieval
           programs such as Wget by looking for statistically significant
           similarities in the time between requests. This option causes the
           time between requests to vary between 0.5 and 1.5 * _w_a_i_t seconds,
           where _w_a_i_t was specified using the ----wwaaiitt option, in order to mask
           Wget's presence from such analysis.

           A 2001 article in a publication devoted to development on a popular
           consumer platform provided code to perform this analysis on the
           fly.  Its author suggested blocking at the class C address level to
           ensure automated retrieval programs were blocked despite changing
           DHCP-supplied addresses.

           The ----rraannddoomm--wwaaiitt option was inspired by this ill-advised
           recommendation to block many unrelated users from a web site due to
           the actions of one.

       ----nnoo--pprrooxxyy
           Don't use proxies, even if the appropriate *_proxy environment
           variable is defined.

       --QQ _q_u_o_t_a
       ----qquuoottaa==_q_u_o_t_a
           Specify download quota for automatic retrievals.  The value can be
           specified in bytes (default), kilobytes (with kk suffix), or
           megabytes (with mm suffix).

           Note that quota will never affect downloading a single file.  So if
           you specify wwggeett --QQ1100kk hhttttppss::////eexxaammppllee..ccoomm//llss--llRR..ggzz, all of the
           _l_s_-_l_R_._g_z will be downloaded.  The same goes even when several URLs
           are specified on the command-line.  The quota is checked only at
           the end of each downloaded file, so it will never result in a
           partially downloaded file. Thus you may safely type wwggeett --QQ22mm --ii
           ssiitteess---download will be aborted after the file that exhausts the
           quota is completely downloaded.

           Setting quota to 0 or to iinnff unlimits the download quota.

       ----nnoo--ddnnss--ccaacchhee
           Turn off caching of DNS lookups.  Normally, Wget remembers the IP
           addresses it looked up from DNS so it doesn't have to repeatedly
           contact the DNS server for the same (typically small) set of hosts
           it retrieves from.  This cache exists in memory only; a new Wget
           run will contact DNS again.

           However, it has been reported that in some situations it is not
           desirable to cache host names, even for the duration of a short-
           running application like Wget.  With this option Wget issues a new
           DNS lookup (more precisely, a new call to ""gethostbyname"" or
           ""getaddrinfo"") each time it makes a new connection.  Please note
           that this option will _n_o_t affect caching that might be performed by
           the resolving library or by an external caching layer, such as
           NSCD.

           If you don't understand exactly what this option does, you probably
           won't need it.

       ----rreessttrriicctt--ffiillee--nnaammeess==_m_o_d_e_s
           Change which characters found in remote URLs must be escaped during
           generation of local filenames.  Characters that are _r_e_s_t_r_i_c_t_e_d by
           this option are escaped, i.e. replaced with %%HHHH, where HHHH is the
           hexadecimal number that corresponds to the restricted character.
           This option may also be used to force all alphabetical cases to be
           either lower- or uppercase.

           By default, Wget escapes the characters that are not valid or safe
           as part of file names on your operating system, as well as control
           characters that are typically unprintable.  This option is useful
           for changing these defaults, perhaps because you are downloading to
           a non-native partition, or because you want to disable escaping of
           the control characters, or you want to further restrict characters
           to only those in the ASCII range of values.

           The _m_o_d_e_s are a comma-separated set of text values. The acceptable
           values are uunniixx, wwiinnddoowwss, nnooccoonnttrrooll, aasscciiii, lloowweerrccaassee, and
           uuppppeerrccaassee. The values uunniixx and wwiinnddoowwss are mutually exclusive (one
           will override the other), as are lloowweerrccaassee and uuppppeerrccaassee. Those
           last are special cases, as they do not change the set of characters
           that would be escaped, but rather force local file paths to be
           converted either to lower- or uppercase.

           When ""unix"" is specified, Wget escapes the character // and the
           control characters in the ranges 0--31 and 128--159.  This is the
           default on Unix-like operating systems.

           When ""windows"" is given, Wget escapes the characters \\, ||, //, ::, ??,
           """", **, <<, >>, and the control characters in the ranges 0--31 and
           128--159.  In addition to this, Wget in Windows mode uses ++ instead
           of :: to separate host and port in local file names, and uses @@
           instead of ?? to separate the query portion of the file name from
           the rest.  Therefore, a URL that would be saved as
           wwwwww..xxeemmaaccss..oorrgg::44330000//sseeaarrcchh..ppll??iinnppuutt==bbllaahh in Unix mode would be
           saved as wwwwww..xxeemmaaccss..oorrgg++44330000//sseeaarrcchh..ppll@@iinnppuutt==bbllaahh in Windows mode.
           This mode is the default on Windows.

           If you specify nnooccoonnttrrooll, then the escaping of the control
           characters is also switched off. This option may make sense when
           you are downloading URLs whose names contain UTF-8 characters, on a
           system which can save and display filenames in UTF-8 (some possible
           byte values used in UTF-8 byte sequences fall in the range of
           values designated by Wget as ""controls"").

           The aasscciiii mode is used to specify that any bytes whose values are
           outside the range of ASCII characters (that is, greater than 127)
           shall be escaped. This can be useful when saving filenames whose
           encoding does not match the one used locally.

       --44
       ----iinneett44--oonnllyy
       --66
       ----iinneett66--oonnllyy
           Force connecting to IPv4 or IPv6 addresses.  With ----iinneett44--oonnllyy or
           --44, Wget will only connect to IPv4 hosts, ignoring AAAA records in
           DNS, and refusing to connect to IPv6 addresses specified in URLs.
           Conversely, with ----iinneett66--oonnllyy or --66, Wget will only connect to IPv6
           hosts and ignore A records and IPv4 addresses.

           Neither options should be needed normally.  By default, an
           IPv6-aware Wget will use the address family specified by the host's
           DNS record.  If the DNS responds with both IPv4 and IPv6 addresses,
           Wget will try them in sequence until it finds one it can connect
           to.  (Also see ""--prefer-family"" option described below.)

           These options can be used to deliberately force the use of IPv4 or
           IPv6 address families on dual family systems, usually to aid
           debugging or to deal with broken network configuration.  Only one
           of ----iinneett66--oonnllyy and ----iinneett44--oonnllyy may be specified at the same time.
           Neither option is available in Wget compiled without IPv6 support.

       ----pprreeffeerr--ffaammiillyy==nnoonnee//IIPPvv44//IIPPvv66
           When given a choice of several addresses, connect to the addresses
           with specified address family first.  The address order returned by
           DNS is used without change by default.

           This avoids spurious errors and connect attempts when accessing
           hosts that resolve to both IPv6 and IPv4 addresses from IPv4
           networks.  For example, wwwwww..kkaammee..nneett resolves to
           22000011::220000::00::88000022::220033::4477ffff::ffeeaa55::33008855 and to 220033..117788..114411..119944.  When
           the preferred family is ""IPv4"", the IPv4 address is used first;
           when the preferred family is ""IPv6"", the IPv6 address is used
           first; if the specified value is ""none"", the address order returned
           by DNS is used without change.

           Unlike --44 and --66, this option doesn't inhibit access to any address
           family, it only changes the _o_r_d_e_r in which the addresses are
           accessed.  Also note that the reordering performed by this option
           is _s_t_a_b_l_e---it doesn't affect order of addresses of the same
           family.  That is, the relative order of all IPv4 addresses and of
           all IPv6 addresses remains intact in all cases.

       ----rreettrryy--ccoonnnnrreeffuusseedd
           Consider ""connection refused"" a transient error and try again.
           Normally Wget gives up on a URL when it is unable to connect to the
           site because failure to connect is taken as a sign that the server
           is not running at all and that retries would not help.  This option
           is for mirroring unreliable sites whose servers tend to disappear
           for short periods of time.

       ----uusseerr==_u_s_e_r
       ----ppaasssswwoorrdd==_p_a_s_s_w_o_r_d
           Specify the username _u_s_e_r and password _p_a_s_s_w_o_r_d for both FTP and
           HTTP file retrieval.  These parameters can be overridden using the
           ----ffttpp--uusseerr and ----ffttpp--ppaasssswwoorrdd options for FTP connections and the
           ----hhttttpp--uusseerr and ----hhttttpp--ppaasssswwoorrdd options for HTTP connections.

       ----aasskk--ppaasssswwoorrdd
           Prompt for a password for each connection established. Cannot be
           specified when ----ppaasssswwoorrdd is being used, because they are mutually
           exclusive.

       ----uussee--aasskkppaassss==_c_o_m_m_a_n_d
           Prompt for a user and password using the specified command.  If no
           command is specified then the command in the environment variable
           WGET_ASKPASS is used.  If WGET_ASKPASS is not set then the command
           in the environment variable SSH_ASKPASS is used.

           You can set the default command for use-askpass in the _._w_g_e_t_r_c.
           That setting may be overridden from the command line.

       ----nnoo--iirrii
           Turn off internationalized URI (IRI) support. Use ----iirrii to turn it
           on. IRI support is activated by default.

           You can set the default state of IRI support using the ""iri""
           command in _._w_g_e_t_r_c. That setting may be overridden from the command
           line.

       ----llooccaall--eennccooddiinngg==_e_n_c_o_d_i_n_g
           Force Wget to use _e_n_c_o_d_i_n_g as the default system encoding. That
           affects how Wget converts URLs specified as arguments from locale
           to UTF-8 for IRI support.

           Wget use the function ""nl_langinfo()"" and then the ""CHARSET""
           environment variable to get the locale. If it fails, ASCII is used.

           You can set the default local encoding using the ""local_encoding""
           command in _._w_g_e_t_r_c. That setting may be overridden from the command
           line.

       ----rreemmoottee--eennccooddiinngg==_e_n_c_o_d_i_n_g
           Force Wget to use _e_n_c_o_d_i_n_g as the default remote server encoding.
           That affects how Wget converts URIs found in files from remote
           encoding to UTF-8 during a recursive fetch. This options is only
           useful for IRI support, for the interpretation of non-ASCII
           characters.

           For HTTP, remote encoding can be found in HTTP ""Content-Type""
           header and in HTML ""Content-Type http-equiv"" meta tag.

           You can set the default encoding using the ""remoteencoding"" command
           in _._w_g_e_t_r_c. That setting may be overridden from the command line.

       ----uunnlliinnkk
           Force Wget to unlink file instead of clobbering existing file. This
           option is useful for downloading to the directory with hardlinks.

   DDiirreeccttoorryy OOppttiioonnss
       --nndd
       ----nnoo--ddiirreeccttoorriieess
           Do not create a hierarchy of directories when retrieving
           recursively.  With this option turned on, all files will get saved
           to the current directory, without clobbering (if a name shows up
           more than once, the filenames will get extensions ..nn).

       --xx
       ----ffoorrccee--ddiirreeccttoorriieess
           The opposite of --nndd---create a hierarchy of directories, even if
           one would not have been created otherwise.  E.g. wwggeett --xx
           hhttttpp::////ffllyy..ssrrkk..ffeerr..hhrr//rroobboottss..ttxxtt will save the downloaded file to
           _f_l_y_._s_r_k_._f_e_r_._h_r_/_r_o_b_o_t_s_._t_x_t.

       --nnHH
       ----nnoo--hhoosstt--ddiirreeccttoorriieess
           Disable generation of host-prefixed directories.  By default,
           invoking Wget with --rr hhttttpp::////ffllyy..ssrrkk..ffeerr..hhrr// will create a
           structure of directories beginning with _f_l_y_._s_r_k_._f_e_r_._h_r_/.  This
           option disables such behavior.

       ----pprroottooccooll--ddiirreeccttoorriieess
           Use the protocol name as a directory component of local file names.
           For example, with this option, wwggeett --rr hhttttpp::////_h_o_s_t will save to
           hhttttpp//_h_o_s_t//...... rather than just to _h_o_s_t//.......

       ----ccuutt--ddiirrss==_n_u_m_b_e_r
           Ignore _n_u_m_b_e_r directory components.  This is useful for getting a
           fine-grained control over the directory where recursive retrieval
           will be saved.

           Take, for example, the directory at
           ffttpp::////ffttpp..xxeemmaaccss..oorrgg//ppuubb//xxeemmaaccss//.  If you retrieve it with --rr, it
           will be saved locally under _f_t_p_._x_e_m_a_c_s_._o_r_g_/_p_u_b_/_x_e_m_a_c_s_/.  While the
           --nnHH option can remove the _f_t_p_._x_e_m_a_c_s_._o_r_g_/ part, you are still stuck
           with _p_u_b_/_x_e_m_a_c_s.  This is where ----ccuutt--ddiirrss comes in handy; it makes
           Wget not ""see"" _n_u_m_b_e_r remote directory components.  Here are
           several examples of how ----ccuutt--ddiirrss option works.

                   No options        -> ftp.xemacs.org/pub/xemacs/
                   -nH               -> pub/xemacs/
                   -nH --cut-dirs=1  -> xemacs/
                   -nH --cut-dirs=2  -> .

                   --cut-dirs=1      -> ftp.xemacs.org/xemacs/
                   ...

           If you just want to get rid of the directory structure, this option
           is similar to a combination of --nndd and --PP.  However, unlike --nndd,
           ----ccuutt--ddiirrss does not lose with subdirectories---for instance, with
           --nnHH ----ccuutt--ddiirrss==11, a _b_e_t_a_/ subdirectory will be placed to
           _x_e_m_a_c_s_/_b_e_t_a, as one would expect.

       --PP _p_r_e_f_i_x
       ----ddiirreeccttoorryy--pprreeffiixx==_p_r_e_f_i_x
           Set directory prefix to _p_r_e_f_i_x.  The _d_i_r_e_c_t_o_r_y _p_r_e_f_i_x is the
           directory where all other files and subdirectories will be saved
           to, i.e. the top of the retrieval tree.  The default is .. (the
           current directory).

   HHTTTTPP OOppttiioonnss
       ----ddeeffaauulltt--ppaaggee==_n_a_m_e
           Use _n_a_m_e as the default file name when it isn't known (i.e., for
           URLs that end in a slash), instead of _i_n_d_e_x_._h_t_m_l.

       --EE
       ----aaddjjuusstt--eexxtteennssiioonn
           If a file of type aapppplliiccaattiioonn//xxhhttmmll++xxmmll or tteexxtt//hhttmmll is downloaded
           and the URL does not end with the regexp \\..[[HHhh]][[TTtt]][[MMmm]][[LLll]]??, this
           option will cause the suffix ..hhttmmll to be appended to the local
           filename.  This is useful, for instance, when you're mirroring a
           remote site that uses ..aasspp pages, but you want the mirrored pages
           to be viewable on your stock Apache server.  Another good use for
           this is when you're downloading CGI-generated materials.  A URL
           like hhttttpp::////ssiittee..ccoomm//aarrttiiccllee..ccggii??2255 will be saved as
           _a_r_t_i_c_l_e_._c_g_i_?_2_5_._h_t_m_l.

           Note that filenames changed in this way will be re-downloaded every
           time you re-mirror a site, because Wget can't tell that the local
           _X_._h_t_m_l file corresponds to remote URL _X (since it doesn't yet know
           that the URL produces output of type tteexxtt//hhttmmll or
           aapppplliiccaattiioonn//xxhhttmmll++xxmmll.

           As of version 1.12, Wget will also ensure that any downloaded files
           of type tteexxtt//ccssss end in the suffix ..ccssss, and the option was renamed
           from ----hhttmmll--eexxtteennssiioonn, to better reflect its new behavior. The old
           option name is still acceptable, but should now be considered
           deprecated.

           As of version 1.19.2, Wget will also ensure that any downloaded
           files with a ""Content-Encoding"" of bbrr, ccoommpprreessss, ddeeffllaattee or ggzziipp
           end in the suffix ..bbrr, ..ZZ, ..zzlliibb and ..ggzz respectively.

           At some point in the future, this option may well be expanded to
           include suffixes for other types of content, including content
           types that are not parsed by Wget.

       ----hhttttpp--uusseerr==_u_s_e_r
       ----hhttttpp--ppaasssswwoorrdd==_p_a_s_s_w_o_r_d
           Specify the username _u_s_e_r and password _p_a_s_s_w_o_r_d on an HTTP server.
           According to the type of the challenge, Wget will encode them using
           either the ""basic"" (insecure), the ""digest"", or the Windows ""NTLM""
           authentication scheme.

           Another way to specify username and password is in the URL itself.
           Either method reveals your password to anyone who bothers to run
           ""ps"".  To prevent the passwords from being seen, use the
           ----uussee--aasskkppaassss or store them in _._w_g_e_t_r_c or _._n_e_t_r_c, and make sure to
           protect those files from other users with ""chmod"".  If the
           passwords are really important, do not leave them lying in those
           files either---edit the files and delete them after Wget has
           started the download.

       ----nnoo--hhttttpp--kkeeeepp--aalliivvee
           Turn off the ""keep-alive"" feature for HTTP downloads.  Normally,
           Wget asks the server to keep the connection open so that, when you
           download more than one document from the same server, they get
           transferred over the same TCP connection.  This saves time and at
           the same time reduces the load on the server.

           This option is useful when, for some reason, persistent (keep-
           alive) connections don't work for you, for example due to a server
           bug or due to the inability of server-side scripts to cope with the
           connections.

       ----nnoo--ccaacchhee
           Disable server-side cache.  In this case, Wget will send the remote
           server appropriate directives (CCaacchhee--CCoonnttrrooll:: nnoo--ccaacchhee and PPrraaggmmaa::
           nnoo--ccaacchhee) to get the file from the remote service, rather than
           returning the cached version. This is especially useful for
           retrieving and flushing out-of-date documents on proxy servers.

           Caching is allowed by default.

       ----nnoo--ccooookkiieess
           Disable the use of cookies.  Cookies are a mechanism for
           maintaining server-side state.  The server sends the client a
           cookie using the ""Set-Cookie"" header, and the client responds with
           the same cookie upon further requests.  Since cookies allow the
           server owners to keep track of visitors and for sites to exchange
           this information, some consider them a breach of privacy.  The
           default is to use cookies; however, _s_t_o_r_i_n_g cookies is not on by
           default.

       ----llooaadd--ccooookkiieess _f_i_l_e
           Load cookies from _f_i_l_e before the first HTTP retrieval.  _f_i_l_e is a
           textual file in the format originally used by Netscape's
           _c_o_o_k_i_e_s_._t_x_t file.

           You will typically use this option when mirroring sites that
           require that you be logged in to access some or all of their
           content.  The login process typically works by the web server
           issuing an HTTP cookie upon receiving and verifying your
           credentials.  The cookie is then resent by the browser when
           accessing that part of the site, and so proves your identity.

           Mirroring such a site requires Wget to send the same cookies your
           browser sends when communicating with the site.  This is achieved
           by ----llooaadd--ccooookkiieess---simply point Wget to the location of the
           _c_o_o_k_i_e_s_._t_x_t file, and it will send the same cookies your browser
           would send in the same situation.  Different browsers keep textual
           cookie files in different locations:

           ""Netscape 4.x.""
               The cookies are in _~_/_._n_e_t_s_c_a_p_e_/_c_o_o_k_i_e_s_._t_x_t.

           ""Mozilla and Netscape 6.x.""
               Mozilla's cookie file is also named _c_o_o_k_i_e_s_._t_x_t, located
               somewhere under _~_/_._m_o_z_i_l_l_a, in the directory of your profile.
               The full path usually ends up looking somewhat like
               _~_/_._m_o_z_i_l_l_a_/_d_e_f_a_u_l_t_/_s_o_m_e_-_w_e_i_r_d_-_s_t_r_i_n_g_/_c_o_o_k_i_e_s_._t_x_t.

           ""Internet Explorer.""
               You can produce a cookie file Wget can use by using the File
               menu, Import and Export, Export Cookies.  This has been tested
               with Internet Explorer 5; it is not guaranteed to work with
               earlier versions.

           ""Other browsers.""
               If you are using a different browser to create your cookies,
               ----llooaadd--ccooookkiieess will only work if you can locate or produce a
               cookie file in the Netscape format that Wget expects.

           If you cannot use ----llooaadd--ccooookkiieess, there might still be an
           alternative.  If your browser supports a ""cookie manager"", you can
           use it to view the cookies used when accessing the site you're
           mirroring.  Write down the name and value of the cookie, and
           manually instruct Wget to send those cookies, bypassing the
           ""official"" cookie support:

                   wget --no-cookies --header ""Cookie: <name>=<value>""

       ----ssaavvee--ccooookkiieess _f_i_l_e
           Save cookies to _f_i_l_e before exiting.  This will not save cookies
           that have expired or that have no expiry time (so-called ""session
           cookies""), but also see ----kkeeeepp--sseessssiioonn--ccooookkiieess.

       ----kkeeeepp--sseessssiioonn--ccooookkiieess
           When specified, causes ----ssaavvee--ccooookkiieess to also save session cookies.
           Session cookies are normally not saved because they are meant to be
           kept in memory and forgotten when you exit the browser.  Saving
           them is useful on sites that require you to log in or to visit the
           home page before you can access some pages.  With this option,
           multiple Wget runs are considered a single browser session as far
           as the site is concerned.

           Since the cookie file format does not normally carry session
           cookies, Wget marks them with an expiry timestamp of 0.  Wget's
           ----llooaadd--ccooookkiieess recognizes those as session cookies, but it might
           confuse other browsers.  Also note that cookies so loaded will be
           treated as other session cookies, which means that if you want
           ----ssaavvee--ccooookkiieess to preserve them again, you must use
           ----kkeeeepp--sseessssiioonn--ccooookkiieess again.

       ----iiggnnoorree--lleennggtthh
           Unfortunately, some HTTP servers (CGI programs, to be more precise)
           send out bogus ""Content-Length"" headers, which makes Wget go wild,
           as it thinks not all the document was retrieved.  You can spot this
           syndrome if Wget retries getting the same document again and again,
           each time claiming that the (otherwise normal) connection has
           closed on the very same byte.

           With this option, Wget will ignore the ""Content-Length"" header---as
           if it never existed.

       ----hheeaaddeerr==_h_e_a_d_e_r_-_l_i_n_e
           Send _h_e_a_d_e_r_-_l_i_n_e along with the rest of the headers in each HTTP
           request.  The supplied header is sent as-is, which means it must
           contain name and value separated by colon, and must not contain
           newlines.

           You may define more than one additional header by specifying
           ----hheeaaddeerr more than once.

                   wget --header='Accept-Charset: iso-8859-2' \
                        --header='Accept-Language: hr'        \
                          http://fly.srk.fer.hr/

           Specification of an empty string as the header value will clear all
           previous user-defined headers.

           As of Wget 1.10, this option can be used to override headers
           otherwise generated automatically.  This example instructs Wget to
           connect to localhost, but to specify ffoooo..bbaarr in the ""Host"" header:

                   wget --header=""Host: foo.bar"" http://localhost/

           In versions of Wget prior to 1.10 such use of ----hheeaaddeerr caused
           sending of duplicate headers.

       ----ccoommpprreessssiioonn==_t_y_p_e
           Choose the type of compression to be used.  Legal values are aauuttoo,
           ggzziipp and nnoonnee.

           If aauuttoo or ggzziipp are specified, Wget asks the server to compress the
           file using the gzip compression format. If the server compresses
           the file and responds with the ""Content-Encoding"" header field set
           appropriately, the file will be decompressed automatically.

           If nnoonnee is specified, wget will not ask the server to compress the
           file and will not decompress any server responses. This is the
           default.

           Compression support is currently experimental. In case it is turned
           on, please report any bugs to ""bug-wget@gnu.org"".

       ----mmaaxx--rreeddiirreecctt==_n_u_m_b_e_r
           Specifies the maximum number of redirections to follow for a
           resource.  The default is 20, which is usually far more than
           necessary. However, on those occasions where you want to allow more
           (or fewer), this is the option to use.

       ----pprrooxxyy--uusseerr==_u_s_e_r
       ----pprrooxxyy--ppaasssswwoorrdd==_p_a_s_s_w_o_r_d
           Specify the username _u_s_e_r and password _p_a_s_s_w_o_r_d for authentication
           on a proxy server.  Wget will encode them using the ""basic""
           authentication scheme.

           Security considerations similar to those with ----hhttttpp--ppaasssswwoorrdd
           pertain here as well.

       ----rreeffeerreerr==_u_r_l
           Include `Referer: _u_r_l' header in HTTP request.  Useful for
           retrieving documents with server-side processing that assume they
           are always being retrieved by interactive web browsers and only
           come out properly when Referer is set to one of the pages that
           point to them.

       ----ssaavvee--hheeaaddeerrss
           Save the headers sent by the HTTP server to the file, preceding the
           actual contents, with an empty line as the separator.

       --UU _a_g_e_n_t_-_s_t_r_i_n_g
       ----uusseerr--aaggeenntt==_a_g_e_n_t_-_s_t_r_i_n_g
           Identify as _a_g_e_n_t_-_s_t_r_i_n_g to the HTTP server.

           The HTTP protocol allows the clients to identify themselves using a
           ""User-Agent"" header field.  This enables distinguishing the WWW
           software, usually for statistical purposes or for tracing of
           protocol violations.  Wget normally identifies as WWggeett//_v_e_r_s_i_o_n,
           _v_e_r_s_i_o_n being the current version number of Wget.

           However, some sites have been known to impose the policy of
           tailoring the output according to the ""User-Agent""-supplied
           information.  While this is not such a bad idea in theory, it has
           been abused by servers denying information to clients other than
           (historically) Netscape or, more frequently, Microsoft Internet
           Explorer.  This option allows you to change the ""User-Agent"" line
           issued by Wget.  Use of this option is discouraged, unless you
           really know what you are doing.

           Specifying empty user agent with ----uusseerr--aaggeenntt=="""""""" instructs Wget not
           to send the ""User-Agent"" header in HTTP requests.

       ----ppoosstt--ddaattaa==_s_t_r_i_n_g
       ----ppoosstt--ffiillee==_f_i_l_e
           Use POST as the method for all HTTP requests and send the specified
           data in the request body.  ----ppoosstt--ddaattaa sends _s_t_r_i_n_g as data,
           whereas ----ppoosstt--ffiillee sends the contents of _f_i_l_e.  Other than that,
           they work in exactly the same way. In particular, they _b_o_t_h expect
           content of the form ""key1=value1&key2=value2"", with percent-
           encoding for special characters; the only difference is that one
           expects its content as a command-line parameter and the other
           accepts its content from a file. In particular, ----ppoosstt--ffiillee is _n_o_t
           for transmitting files as form attachments: those must appear as
           ""key=value"" data (with appropriate percent-coding) just like
           everything else. Wget does not currently support
           ""multipart/form-data"" for transmitting POST data; only
           ""application/x-www-form-urlencoded"". Only one of ----ppoosstt--ddaattaa and
           ----ppoosstt--ffiillee should be specified.

           Please note that wget does not require the content to be of the
           form ""key1=value1&key2=value2"", and neither does it test for it.
           Wget will simply transmit whatever data is provided to it. Most
           servers however expect the POST data to be in the above format when
           processing HTML Forms.

           When sending a POST request using the ----ppoosstt--ffiillee option, Wget
           treats the file as a binary file and will send every character in
           the POST request without stripping trailing newline or formfeed
           characters. Any other control characters in the text will also be
           sent as-is in the POST request.

           Please be aware that Wget needs to know the size of the POST data
           in advance.  Therefore the argument to ""--post-file"" must be a
           regular file; specifying a FIFO or something like _/_d_e_v_/_s_t_d_i_n won't
           work.  It's not quite clear how to work around this limitation
           inherent in HTTP/1.0.  Although HTTP/1.1 introduces _c_h_u_n_k_e_d
           transfer that doesn't require knowing the request length in
           advance, a client can't use chunked unless it knows it's talking to
           an HTTP/1.1 server.  And it can't know that until it receives a
           response, which in turn requires the request to have been completed
           -- a chicken-and-egg problem.

           Note: As of version 1.15 if Wget is redirected after the POST
           request is completed, its behaviour will depend on the response
           code returned by the server.  In case of a 301 Moved Permanently,
           302 Moved Temporarily or 307 Temporary Redirect, Wget will, in
           accordance with RFC2616, continue to send a POST request.  In case
           a server wants the client to change the Request method upon
           redirection, it should send a 303 See Other response code.

           This example shows how to log in to a server using POST and then
           proceed to download the desired pages, presumably only accessible
           to authorized users:

                   # Log in to the server.  This can be done only once.
                   wget --save-cookies cookies.txt \
                        --post-data 'user=foo&password=bar' \
                        http://example.com/auth.php

                   # Now grab the page or pages we care about.
                   wget --load-cookies cookies.txt \
                        -p http://example.com/interesting/article.php

           If the server is using session cookies to track user
           authentication, the above will not work because ----ssaavvee--ccooookkiieess will
           not save them (and neither will browsers) and the _c_o_o_k_i_e_s_._t_x_t file
           will be empty.  In that case use ----kkeeeepp--sseessssiioonn--ccooookkiieess along with
           ----ssaavvee--ccooookkiieess to force saving of session cookies.

       ----mmeetthhoodd==_H_T_T_P_-_M_e_t_h_o_d
           For the purpose of RESTful scripting, Wget allows sending of other
           HTTP Methods without the need to explicitly set them using
           ----hheeaaddeerr==HHeeaaddeerr--LLiinnee.  Wget will use whatever string is passed to
           it after ----mmeetthhoodd as the HTTP Method to the server.

       ----bbooddyy--ddaattaa==_D_a_t_a_-_S_t_r_i_n_g
       ----bbooddyy--ffiillee==_D_a_t_a_-_F_i_l_e
           Must be set when additional data needs to be sent to the server
           along with the Method specified using ----mmeetthhoodd.  ----bbooddyy--ddaattaa sends
           _s_t_r_i_n_g as data, whereas ----bbooddyy--ffiillee sends the contents of _f_i_l_e.
           Other than that, they work in exactly the same way.

           Currently, ----bbooddyy--ffiillee is _n_o_t for transmitting files as a whole.
           Wget does not currently support ""multipart/form-data"" for
           transmitting data; only ""application/x-www-form-urlencoded"". In the
           future, this may be changed so that wget sends the ----bbooddyy--ffiillee as a
           complete file instead of sending its contents to the server. Please
           be aware that Wget needs to know the contents of BODY Data in
           advance, and hence the argument to ----bbooddyy--ffiillee should be a regular
           file. See ----ppoosstt--ffiillee for a more detailed explanation.  Only one of
           ----bbooddyy--ddaattaa and ----bbooddyy--ffiillee should be specified.

           If Wget is redirected after the request is completed, Wget will
           suspend the current method and send a GET request till the
           redirection is completed.  This is true for all redirection
           response codes except 307 Temporary Redirect which is used to
           explicitly specify that the request method should _n_o_t change.
           Another exception is when the method is set to ""POST"", in which
           case the redirection rules specified under ----ppoosstt--ddaattaa are
           followed.

       ----ccoonntteenntt--ddiissppoossiittiioonn
           If this is set to on, experimental (not fully-functional) support
           for ""Content-Disposition"" headers is enabled. This can currently
           result in extra round-trips to the server for a ""HEAD"" request, and
           is known to suffer from a few bugs, which is why it is not
           currently enabled by default.

           This option is useful for some file-downloading CGI programs that
           use ""Content-Disposition"" headers to describe what the name of a
           downloaded file should be.

           When combined with ----mmeettaalliinnkk--oovveerr--hhttttpp and ----ttrruusstt--sseerrvveerr--nnaammeess, a
           CCoonntteenntt--TTyyppee:: aapppplliiccaattiioonn//mmeettaalliinnkk44++xxmmll file is named using the
           ""Content-Disposition"" filename field, if available.

       ----ccoonntteenntt--oonn--eerrrroorr
           If this is set to on, wget will not skip the content when the
           server responds with a http status code that indicates error.

       ----ttrruusstt--sseerrvveerr--nnaammeess
           If this is set, on a redirect, the local file name will be based on
           the redirection URL.  By default the local file name is based on
           the original URL.  When doing recursive retrieving this can be
           helpful because in many web sites redirected URLs correspond to an
           underlying file structure, while link URLs do not.

       ----aauutthh--nnoo--cchhaalllleennggee
           If this option is given, Wget will send Basic HTTP authentication
           information (plaintext username and password) for all requests,
           just like Wget 1.10.2 and prior did by default.

           Use of this option is not recommended, and is intended only to
           support some few obscure servers, which never send HTTP
           authentication challenges, but accept unsolicited auth info, say,
           in addition to form-based authentication.

       ----rreettrryy--oonn--hhoosstt--eerrrroorr
           Consider host errors, such as ""Temporary failure in name
           resolution"", as non-fatal, transient errors.

       ----rreettrryy--oonn--hhttttpp--eerrrroorr==_c_o_d_e_[_,_c_o_d_e_,_._._._]
           Consider given HTTP response codes as non-fatal, transient errors.
           Supply a comma-separated list of 3-digit HTTP response codes as
           argument. Useful to work around special circumstances where retries
           are required, but the server responds with an error code normally
           not retried by Wget. Such errors might be 503 (Service Unavailable)
           and 429 (Too Many Requests). Retries enabled by this option are
           performed subject to the normal retry timing and retry count
           limitations of Wget.

           Using this option is intended to support special use cases only and
           is generally not recommended, as it can force retries even in cases
           where the server is actually trying to decrease its load. Please
           use wisely and only if you know what you are doing.

   HHTTTTPPSS ((SSSSLL//TTLLSS)) OOppttiioonnss
       To support encrypted HTTP (HTTPS) downloads, Wget must be compiled with
       an external SSL library. The current default is GnuTLS.  In addition,
       Wget also supports HSTS (HTTP Strict Transport Security).  If Wget is
       compiled without SSL support, none of these options are available.

       ----sseeccuurree--pprroottooccooll==_p_r_o_t_o_c_o_l
           Choose the secure protocol to be used.  Legal values are aauuttoo,
           SSSSLLvv22, SSSSLLvv33, TTLLSSvv11, TTLLSSvv11__11, TTLLSSvv11__22, TTLLSSvv11__33 and PPFFSS.  If aauuttoo is
           used, the SSL library is given the liberty of choosing the
           appropriate protocol automatically, which is achieved by sending a
           TLSv1 greeting. This is the default.

           Specifying SSSSLLvv22, SSSSLLvv33, TTLLSSvv11, TTLLSSvv11__11, TTLLSSvv11__22 or TTLLSSvv11__33 forces
           the use of the corresponding protocol.  This is useful when talking
           to old and buggy SSL server implementations that make it hard for
           the underlying SSL library to choose the correct protocol version.
           Fortunately, such servers are quite rare.

           Specifying PPFFSS enforces the use of the so-called Perfect Forward
           Security cipher suites. In short, PFS adds security by creating a
           one-time key for each SSL connection. It has a bit more CPU impact
           on client and server.  We use known to be secure ciphers (e.g. no
           MD4) and the TLS protocol. This mode also explicitly excludes non-
           PFS key exchange methods, such as RSA.

       ----hhttttppss--oonnllyy
           When in recursive mode, only HTTPS links are followed.

       ----cciipphheerrss
           Set the cipher list string. Typically this string sets the cipher
           suites and other SSL/TLS options that the user wish should be used,
           in a set order of preference (GnuTLS calls it 'priority string').
           This string will be fed verbatim to the SSL/TLS engine (OpenSSL or
           GnuTLS) and hence its format and syntax is dependent on that. Wget
           will not process or manipulate it in any way. Refer to the OpenSSL
           or GnuTLS documentation for more information.

       ----nnoo--cchheecckk--cceerrttiiffiiccaattee
           Don't check the server certificate against the available
           certificate authorities.  Also don't require the URL host name to
           match the common name presented by the certificate.

           As of Wget 1.10, the default is to verify the server's certificate
           against the recognized certificate authorities, breaking the SSL
           handshake and aborting the download if the verification fails.
           Although this provides more secure downloads, it does break
           interoperability with some sites that worked with previous Wget
           versions, particularly those using self-signed, expired, or
           otherwise invalid certificates.  This option forces an ""insecure""
           mode of operation that turns the certificate verification errors
           into warnings and allows you to proceed.

           If you encounter ""certificate verification"" errors or ones saying
           that ""common name doesn't match requested host name"", you can use
           this option to bypass the verification and proceed with the
           download.  _O_n_l_y _u_s_e _t_h_i_s _o_p_t_i_o_n _i_f _y_o_u _a_r_e _o_t_h_e_r_w_i_s_e _c_o_n_v_i_n_c_e_d _o_f
           _t_h_e _s_i_t_e_'_s _a_u_t_h_e_n_t_i_c_i_t_y_, _o_r _i_f _y_o_u _r_e_a_l_l_y _d_o_n_'_t _c_a_r_e _a_b_o_u_t _t_h_e
           _v_a_l_i_d_i_t_y _o_f _i_t_s _c_e_r_t_i_f_i_c_a_t_e_.  It is almost always a bad idea not to
           check the certificates when transmitting confidential or important
           data.  For self-signed/internal certificates, you should download
           the certificate and verify against that instead of forcing this
           insecure mode.  If you are really sure of not desiring any
           certificate verification, you can specify --check-certificate=quiet
           to tell wget to not print any warning about invalid certificates,
           albeit in most cases this is the wrong thing to do.

       ----cceerrttiiffiiccaattee==_f_i_l_e
           Use the client certificate stored in _f_i_l_e.  This is needed for
           servers that are configured to require certificates from the
           clients that connect to them.  Normally a certificate is not
           required and this switch is optional.

       ----cceerrttiiffiiccaattee--ttyyppee==_t_y_p_e
           Specify the type of the client certificate.  Legal values are PPEEMM
           (assumed by default) and DDEERR, also known as AASSNN11.

       ----pprriivvaattee--kkeeyy==_f_i_l_e
           Read the private key from _f_i_l_e.  This allows you to provide the
           private key in a file separate from the certificate.

       ----pprriivvaattee--kkeeyy--ttyyppee==_t_y_p_e
           Specify the type of the private key.  Accepted values are PPEEMM (the
           default) and DDEERR.

       ----ccaa--cceerrttiiffiiccaattee==_f_i_l_e
           Use _f_i_l_e as the file with the bundle of certificate authorities
           (""CA"") to verify the peers.  The certificates must be in PEM
           format.

           Without this option Wget looks for CA certificates at the system-
           specified locations, chosen at OpenSSL installation time.

       ----ccaa--ddiirreeccttoorryy==_d_i_r_e_c_t_o_r_y
           Specifies directory containing CA certificates in PEM format.  Each
           file contains one CA certificate, and the file name is based on a
           hash value derived from the certificate.  This is achieved by
           processing a certificate directory with the ""c_rehash"" utility
           supplied with OpenSSL.  Using ----ccaa--ddiirreeccttoorryy is more efficient than
           ----ccaa--cceerrttiiffiiccaattee when many certificates are installed because it
           allows Wget to fetch certificates on demand.

           Without this option Wget looks for CA certificates at the system-
           specified locations, chosen at OpenSSL installation time.

       ----ccrrll--ffiillee==_f_i_l_e
           Specifies a CRL file in _f_i_l_e.  This is needed for certificates that
           have been revocated by the CAs.

       ----ppiinnnneeddppuubbkkeeyy==ffiillee//hhaasshheess
           Tells wget to use the specified public key file (or hashes) to
           verify the peer.  This can be a path to a file which contains a
           single public key in PEM or DER format, or any number of base64
           encoded sha256 hashes preceded by ""sha256//"" and separated by "";""

           When negotiating a TLS or SSL connection, the server sends a
           certificate indicating its identity. A public key is extracted from
           this certificate and if it does not exactly match the public key(s)
           provided to this option, wget will abort the connection before
           sending or receiving any data.

       ----rraannddoomm--ffiillee==_f_i_l_e
           [OpenSSL and LibreSSL only] Use _f_i_l_e as the source of random data
           for seeding the pseudo-random number generator on systems without
           _/_d_e_v_/_u_r_a_n_d_o_m.

           On such systems the SSL library needs an external source of
           randomness to initialize.  Randomness may be provided by EGD (see
           ----eeggdd--ffiillee below) or read from an external source specified by the
           user.  If this option is not specified, Wget looks for random data
           in $RANDFILE or, if that is unset, in _$_H_O_M_E_/_._r_n_d.

           If you're getting the ""Could not seed OpenSSL PRNG; disabling SSL.""
           error, you should provide random data using some of the methods
           described above.

       ----eeggdd--ffiillee==_f_i_l_e
           [OpenSSL only] Use _f_i_l_e as the EGD socket.  EGD stands for _E_n_t_r_o_p_y
           _G_a_t_h_e_r_i_n_g _D_a_e_m_o_n, a user-space program that collects data from
           various unpredictable system sources and makes it available to
           other programs that might need it.  Encryption software, such as
           the SSL library, needs sources of non-repeating randomness to seed
           the random number generator used to produce cryptographically
           strong keys.

           OpenSSL allows the user to specify his own source of entropy using
           the ""RAND_FILE"" environment variable.  If this variable is unset,
           or if the specified file does not produce enough randomness,
           OpenSSL will read random data from EGD socket specified using this
           option.

           If this option is not specified (and the equivalent startup command
           is not used), EGD is never contacted.  EGD is not needed on modern
           Unix systems that support _/_d_e_v_/_u_r_a_n_d_o_m.

       ----nnoo--hhssttss
           Wget supports HSTS (HTTP Strict Transport Security, RFC 6797) by
           default.  Use ----nnoo--hhssttss to make Wget act as a non-HSTS-compliant
           UA. As a consequence, Wget would ignore all the
           ""Strict-Transport-Security"" headers, and would not enforce any
           existing HSTS policy.

       ----hhssttss--ffiillee==_f_i_l_e
           By default, Wget stores its HSTS database in _~_/_._w_g_e_t_-_h_s_t_s.  You can
           use ----hhssttss--ffiillee to override this. Wget will use the supplied file
           as the HSTS database. Such file must conform to the correct HSTS
           database format used by Wget. If Wget cannot parse the provided
           file, the behaviour is unspecified.

           The Wget's HSTS database is a plain text file. Each line contains
           an HSTS entry (ie. a site that has issued a
           ""Strict-Transport-Security"" header and that therefore has specified
           a concrete HSTS policy to be applied). Lines starting with a dash
           (""#"") are ignored by Wget. Please note that in spite of this
           convenient human-readability hand-hacking the HSTS database is
           generally not a good idea.

           An HSTS entry line consists of several fields separated by one or
           more whitespace:

           ""<hostname> SP [<port>] SP <include subdomains> SP <created> SP
           <max-age>""

           The _h_o_s_t_n_a_m_e and _p_o_r_t fields indicate the hostname and port to
           which the given HSTS policy applies. The _p_o_r_t field may be zero,
           and it will, in most of the cases. That means that the port number
           will not be taken into account when deciding whether such HSTS
           policy should be applied on a given request (only the hostname will
           be evaluated). When _p_o_r_t is different to zero, both the target
           hostname and the port will be evaluated and the HSTS policy will
           only be applied if both of them match. This feature has been
           included for testing/development purposes only.  The Wget testsuite
           (in _t_e_s_t_e_n_v_/) creates HSTS databases with explicit ports with the
           purpose of ensuring Wget's correct behaviour. Applying HSTS
           policies to ports other than the default ones is discouraged by RFC
           6797 (see Appendix B ""Differences between HSTS Policy and Same-
           Origin Policy""). Thus, this functionality should not be used in
           production environments and _p_o_r_t will typically be zero. The last
           three fields do what they are expected to. The field
           _i_n_c_l_u_d_e___s_u_b_d_o_m_a_i_n_s can either be 1 or 0 and it signals whether the
           subdomains of the target domain should be part of the given HSTS
           policy as well. The _c_r_e_a_t_e_d and _m_a_x_-_a_g_e fields hold the timestamp
           values of when such entry was created (first seen by Wget) and the
           HSTS-defined value 'max-age', which states how long should that
           HSTS policy remain active, measured in seconds elapsed since the
           timestamp stored in _c_r_e_a_t_e_d. Once that time has passed, that HSTS
           policy will no longer be valid and will eventually be removed from
           the database.

           If you supply your own HSTS database via ----hhssttss--ffiillee, be aware that
           Wget may modify the provided file if any change occurs between the
           HSTS policies requested by the remote servers and those in the
           file. When Wget exits, it effectively updates the HSTS database by
           rewriting the database file with the new entries.

           If the supplied file does not exist, Wget will create one. This
           file will contain the new HSTS entries. If no HSTS entries were
           generated (no ""Strict-Transport-Security"" headers were sent by any
           of the servers) then no file will be created, not even an empty
           one. This behaviour applies to the default database file
           (_~_/_._w_g_e_t_-_h_s_t_s) as well: it will not be created until some server
           enforces an HSTS policy.

           Care is taken not to override possible changes made by other Wget
           processes at the same time over the HSTS database. Before dumping
           the updated HSTS entries on the file, Wget will re-read it and
           merge the changes.

           Using a custom HSTS database and/or modifying an existing one is
           discouraged.  For more information about the potential security
           threats arose from such practice, see section 14 ""Security
           Considerations"" of RFC 6797, specially section 14.9 ""Creative
           Manipulation of HSTS Policy Store"".

       ----wwaarrcc--ffiillee==_f_i_l_e
           Use _f_i_l_e as the destination WARC file.

       ----wwaarrcc--hheeaaddeerr==_s_t_r_i_n_g
           Use _s_t_r_i_n_g into as the warcinfo record.

       ----wwaarrcc--mmaaxx--ssiizzee==_s_i_z_e
           Set the maximum size of the WARC files to _s_i_z_e.

       ----wwaarrcc--ccddxx
           Write CDX index files.

       ----wwaarrcc--ddeedduupp==_f_i_l_e
           Do not store records listed in this CDX file.

       ----nnoo--wwaarrcc--ccoommpprreessssiioonn
           Do not compress WARC files with GZIP.

       ----nnoo--wwaarrcc--ddiiggeessttss
           Do not calculate SHA1 digests.

       ----nnoo--wwaarrcc--kkeeeepp--lloogg
           Do not store the log file in a WARC record.

       ----wwaarrcc--tteemmppddiirr==_d_i_r
           Specify the location for temporary files created by the WARC
           writer.

   FFTTPP OOppttiioonnss
       ----ffttpp--uusseerr==_u_s_e_r
       ----ffttpp--ppaasssswwoorrdd==_p_a_s_s_w_o_r_d
           Specify the username _u_s_e_r and password _p_a_s_s_w_o_r_d on an FTP server.
           Without this, or the corresponding startup option, the password
           defaults to --wwggeett@@, normally used for anonymous FTP.

           Another way to specify username and password is in the URL itself.
           Either method reveals your password to anyone who bothers to run
           ""ps"".  To prevent the passwords from being seen, store them in
           _._w_g_e_t_r_c or _._n_e_t_r_c, and make sure to protect those files from other
           users with ""chmod"".  If the passwords are really important, do not
           leave them lying in those files either---edit the files and delete
           them after Wget has started the download.

       ----nnoo--rreemmoovvee--lliissttiinngg
           Don't remove the temporary _._l_i_s_t_i_n_g files generated by FTP
           retrievals.  Normally, these files contain the raw directory
           listings received from FTP servers.  Not removing them can be
           useful for debugging purposes, or when you want to be able to
           easily check on the contents of remote server directories (e.g. to
           verify that a mirror you're running is complete).

           Note that even though Wget writes to a known filename for this
           file, this is not a security hole in the scenario of a user making
           _._l_i_s_t_i_n_g a symbolic link to _/_e_t_c_/_p_a_s_s_w_d or something and asking
           ""root"" to run Wget in his or her directory.  Depending on the
           options used, either Wget will refuse to write to _._l_i_s_t_i_n_g, making
           the globbing/recursion/time-stamping operation fail, or the
           symbolic link will be deleted and replaced with the actual _._l_i_s_t_i_n_g
           file, or the listing will be written to a _._l_i_s_t_i_n_g_._n_u_m_b_e_r file.

           Even though this situation isn't a problem, though, ""root"" should
           never run Wget in a non-trusted user's directory.  A user could do
           something as simple as linking _i_n_d_e_x_._h_t_m_l to _/_e_t_c_/_p_a_s_s_w_d and asking
           ""root"" to run Wget with --NN or --rr so the file will be overwritten.

       ----nnoo--gglloobb
           Turn off FTP globbing.  Globbing refers to the use of shell-like
           special characters (_w_i_l_d_c_a_r_d_s), like **, ??, [[ and ]] to retrieve more
           than one file from the same directory at once, like:

                   wget ftp://gnjilux.srk.fer.hr/*.msg

           By default, globbing will be turned on if the URL contains a
           globbing character.  This option may be used to turn globbing on or
           off permanently.

           You may have to quote the URL to protect it from being expanded by
           your shell.  Globbing makes Wget look for a directory listing,
           which is system-specific.  This is why it currently works only with
           Unix FTP servers (and the ones emulating Unix ""ls"" output).

       ----nnoo--ppaassssiivvee--ffttpp
           Disable the use of the _p_a_s_s_i_v_e FTP transfer mode.  Passive FTP
           mandates that the client connect to the server to establish the
           data connection rather than the other way around.

           If the machine is connected to the Internet directly, both passive
           and active FTP should work equally well.  Behind most firewall and
           NAT configurations passive FTP has a better chance of working.
           However, in some rare firewall configurations, active FTP actually
           works when passive FTP doesn't.  If you suspect this to be the
           case, use this option, or set ""passive_ftp=off"" in your init file.

       ----pprreesseerrvvee--ppeerrmmiissssiioonnss
           Preserve remote file permissions instead of permissions set by
           umask.

       ----rreettrr--ssyymmlliinnkkss
           By default, when retrieving FTP directories recursively and a
           symbolic link is encountered, the symbolic link is traversed and
           the pointed-to files are retrieved.  Currently, Wget does not
           traverse symbolic links to directories to download them
           recursively, though this feature may be added in the future.

           When ----rreettrr--ssyymmlliinnkkss==nnoo is specified, the linked-to file is not
           downloaded.  Instead, a matching symbolic link is created on the
           local file system.  The pointed-to file will not be retrieved
           unless this recursive retrieval would have encountered it
           separately and downloaded it anyway.  This option poses a security
           risk where a malicious FTP Server may cause Wget to write to files
           outside of the intended directories through a specially crafted
           .LISTING file.

           Note that when retrieving a file (not a directory) because it was
           specified on the command-line, rather than because it was recursed
           to, this option has no effect.  Symbolic links are always traversed
           in this case.

   FFTTPPSS OOppttiioonnss
       ----ffttppss--iimmpplliicciitt
           This option tells Wget to use FTPS implicitly. Implicit FTPS
           consists of initializing SSL/TLS from the very beginning of the
           control connection. This option does not send an ""AUTH TLS""
           command: it assumes the server speaks FTPS and directly starts an
           SSL/TLS connection. If the attempt is successful, the session
           continues just like regular FTPS (""PBSZ"" and ""PROT"" are sent,
           etc.).  Implicit FTPS is no longer a requirement for FTPS
           implementations, and thus many servers may not support it. If
           ----ffttppss--iimmpplliicciitt is passed and no explicit port number specified,
           the default port for implicit FTPS, 990, will be used, instead of
           the default port for the ""normal"" (explicit) FTPS which is the same
           as that of FTP, 21.

       ----nnoo--ffttppss--rreessuummee--ssssll
           Do not resume the SSL/TLS session in the data channel. When
           starting a data connection, Wget tries to resume the SSL/TLS
           session previously started in the control connection.  SSL/TLS
           session resumption avoids performing an entirely new handshake by
           reusing the SSL/TLS parameters of a previous session. Typically,
           the FTPS servers want it that way, so Wget does this by default.
           Under rare circumstances however, one might want to start an
           entirely new SSL/TLS session in every data connection.  This is
           what ----nnoo--ffttppss--rreessuummee--ssssll is for.

       ----ffttppss--cclleeaarr--ddaattaa--ccoonnnneeccttiioonn
           All the data connections will be in plain text. Only the control
           connection will be under SSL/TLS. Wget will send a ""PROT C"" command
           to achieve this, which must be approved by the server.

       ----ffttppss--ffaallllbbaacckk--ttoo--ffttpp
           Fall back to FTP if FTPS is not supported by the target server. For
           security reasons, this option is not asserted by default. The
           default behaviour is to exit with an error.  If a server does not
           successfully reply to the initial ""AUTH TLS"" command, or in the
           case of implicit FTPS, if the initial SSL/TLS connection attempt is
           rejected, it is considered that such server does not support FTPS.

   RReeccuurrssiivvee RReettrriieevvaall OOppttiioonnss
       --rr
       ----rreeccuurrssiivvee
           Turn on recursive retrieving.    The default maximum depth is 5.

       --ll _d_e_p_t_h
       ----lleevveell==_d_e_p_t_h
           Set the maximum number of subdirectories that Wget will recurse
           into to _d_e_p_t_h.  In order to prevent one from accidentally
           downloading very large websites when using recursion this is
           limited to a depth of 5 by default, i.e., it will traverse at most
           5 directories deep starting from the provided URL. Set --ll 00 or --ll
           iinnff for infinite recursion depth.

                   wget -r -l 0 http://<site>/1.html

           Ideally, one would expect this to download just _1_._h_t_m_l.  but
           unfortunately this is not the case, because --ll 00 is equivalent to
           --ll iinnff---that is, infinite recursion.  To download a single HTML
           page (or a handful of them), specify them all on the command line
           and leave away --rr and --ll. To download the essential items to view a
           single HTML page, see ppaaggee rreeqquuiissiitteess.

       ----ddeelleettee--aafftteerr
           This option tells Wget to delete every single file it downloads,
           _a_f_t_e_r having done so.  It is useful for pre-fetching popular pages
           through a proxy, e.g.:

                   wget -r -nd --delete-after http://whatever.com/~popular/page/

           The --rr option is to retrieve recursively, and --nndd to not create
           directories.

           Note that ----ddeelleettee--aafftteerr deletes files on the local machine.  It
           does not issue the DDEELLEE command to remote FTP sites, for instance.
           Also note that when ----ddeelleettee--aafftteerr is specified, ----ccoonnvveerrtt--lliinnkkss is
           ignored, so ..oorriigg files are simply not created in the first place.

       --kk
       ----ccoonnvveerrtt--lliinnkkss
           After the download is complete, convert the links in the document
           to make them suitable for local viewing.  This affects not only the
           visible hyperlinks, but any part of the document that links to
           external content, such as embedded images, links to style sheets,
           hyperlinks to non-HTML content, etc.

           Each link will be changed in one of the two ways:

           •   The links to files that have been downloaded by Wget will be
               changed to refer to the file they point to as a relative link.

               Example: if the downloaded file _/_f_o_o_/_d_o_c_._h_t_m_l links to
               _/_b_a_r_/_i_m_g_._g_i_f, also downloaded, then the link in _d_o_c_._h_t_m_l will
               be modified to point to ....//bbaarr//iimmgg..ggiiff.  This kind of
               transformation works reliably for arbitrary combinations of
               directories.

           •   The links to files that have not been downloaded by Wget will
               be changed to include host name and absolute path of the
               location they point to.

               Example: if the downloaded file _/_f_o_o_/_d_o_c_._h_t_m_l links to
               _/_b_a_r_/_i_m_g_._g_i_f (or to _._._/_b_a_r_/_i_m_g_._g_i_f), then the link in _d_o_c_._h_t_m_l
               will be modified to point to _h_t_t_p_:_/_/_h_o_s_t_n_a_m_e_/_b_a_r_/_i_m_g_._g_i_f.

           Because of this, local browsing works reliably: if a linked file
           was downloaded, the link will refer to its local name; if it was
           not downloaded, the link will refer to its full Internet address
           rather than presenting a broken link.  The fact that the former
           links are converted to relative links ensures that you can move the
           downloaded hierarchy to another directory.

           Note that only at the end of the download can Wget know which links
           have been downloaded.  Because of that, the work done by --kk will be
           performed at the end of all the downloads.

       ----ccoonnvveerrtt--ffiillee--oonnllyy
           This option converts only the filename part of the URLs, leaving
           the rest of the URLs untouched. This filename part is sometimes
           referred to as the ""basename"", although we avoid that term here in
           order not to cause confusion.

           It works particularly well in conjunction with ----aaddjjuusstt--eexxtteennssiioonn,
           although this coupling is not enforced. It proves useful to
           populate Internet caches with files downloaded from different
           hosts.

           Example: if some link points to _/_/_f_o_o_._c_o_m_/_b_a_r_._c_g_i_?_x_y_z with
           ----aaddjjuusstt--eexxtteennssiioonn asserted and its local destination is intended
           to be _._/_f_o_o_._c_o_m_/_b_a_r_._c_g_i_?_x_y_z_._c_s_s, then the link would be converted
           to _/_/_f_o_o_._c_o_m_/_b_a_r_._c_g_i_?_x_y_z_._c_s_s. Note that only the filename part has
           been modified. The rest of the URL has been left untouched,
           including the net path (""//"") which would otherwise be processed by
           Wget and converted to the effective scheme (ie. ""http://"").

       --KK
       ----bbaacckkuupp--ccoonnvveerrtteedd
           When converting a file, back up the original version with a ..oorriigg
           suffix.  Affects the behavior of --NN.

       --mm
       ----mmiirrrroorr
           Turn on options suitable for mirroring.  This option turns on
           recursion and time-stamping, sets infinite recursion depth and
           keeps FTP directory listings.  It is currently equivalent to --rr --NN
           --ll iinnff ----nnoo--rreemmoovvee--lliissttiinngg.

       --pp
       ----ppaaggee--rreeqquuiissiitteess
           This option causes Wget to download all the files that are
           necessary to properly display a given HTML page.  This includes
           such things as inlined images, sounds, and referenced stylesheets.

           Ordinarily, when downloading a single HTML page, any requisite
           documents that may be needed to display it properly are not
           downloaded.  Using --rr together with --ll can help, but since Wget
           does not ordinarily distinguish between external and inlined
           documents, one is generally left with ""leaf documents"" that are
           missing their requisites.

           For instance, say document _1_._h_t_m_l contains an ""<IMG>"" tag
           referencing _1_._g_i_f and an ""<A>"" tag pointing to external document
           _2_._h_t_m_l.  Say that _2_._h_t_m_l is similar but that its image is _2_._g_i_f and
           it links to _3_._h_t_m_l.  Say this continues up to some arbitrarily high
           number.

           If one executes the command:

                   wget -r -l 2 http://<site>/1.html

           then _1_._h_t_m_l, _1_._g_i_f, _2_._h_t_m_l, _2_._g_i_f, and _3_._h_t_m_l will be downloaded.
           As you can see, _3_._h_t_m_l is without its requisite _3_._g_i_f because Wget
           is simply counting the number of hops (up to 2) away from _1_._h_t_m_l in
           order to determine where to stop the recursion.  However, with this
           command:

                   wget -r -l 2 -p http://<site>/1.html

           all the above files _a_n_d _3_._h_t_m_l's requisite _3_._g_i_f will be
           downloaded.  Similarly,

                   wget -r -l 1 -p http://<site>/1.html

           will cause _1_._h_t_m_l, _1_._g_i_f, _2_._h_t_m_l, and _2_._g_i_f to be downloaded.  One
           might think that:

                   wget -r -l 0 -p http://<site>/1.html

           would download just _1_._h_t_m_l and _1_._g_i_f, but unfortunately this is not
           the case, because --ll 00 is equivalent to --ll iinnff---that is, infinite
           recursion.  To download a single HTML page (or a handful of them,
           all specified on the command-line or in a --ii URL input file) and
           its (or their) requisites, simply leave off --rr and --ll:

                   wget -p http://<site>/1.html

           Note that Wget will behave as if --rr had been specified, but only
           that single page and its requisites will be downloaded.  Links from
           that page to external documents will not be followed.  Actually, to
           download a single page and all its requisites (even if they exist
           on separate websites), and make sure the lot displays properly
           locally, this author likes to use a few options in addition to --pp:

                   wget -E -H -k -K -p http://<site>/<document>

           To finish off this topic, it's worth knowing that Wget's idea of an
           external document link is any URL specified in an ""<A>"" tag, an
           ""<AREA>"" tag, or a ""<LINK>"" tag other than ""<LINK
           REL=""stylesheet"">"".

       ----ssttrriicctt--ccoommmmeennttss
           Turn on strict parsing of HTML comments.  The default is to
           terminate comments at the first occurrence of ---->>.

           According to specifications, HTML comments are expressed as SGML
           _d_e_c_l_a_r_a_t_i_o_n_s.  Declaration is special markup that begins with <<!!
           and ends with >>, such as <<!!DDOOCCTTYYPPEE ......>>, that may contain comments
           between a pair of ---- delimiters.  HTML comments are ""empty
           declarations"", SGML declarations without any non-comment text.
           Therefore, <<!!----ffoooo---->> is a valid comment, and so is <<!!----oonnee----
           ----ttwwoo---->>, but <<!!----11----22---->> is not.

           On the other hand, most HTML writers don't perceive comments as
           anything other than text delimited with <<!!---- and ---->>, which is not
           quite the same.  For example, something like <<!!------------------------>> works
           as a valid comment as long as the number of dashes is a multiple of
           four (!).  If not, the comment technically lasts until the next ----,
           which may be at the other end of the document.  Because of this,
           many popular browsers completely ignore the specification and
           implement what users have come to expect: comments delimited with
           <<!!---- and ---->>.

           Until version 1.9, Wget interpreted comments strictly, which
           resulted in missing links in many web pages that displayed fine in
           browsers, but had the misfortune of containing non-compliant
           comments.  Beginning with version 1.9, Wget has joined the ranks of
           clients that implements ""naive"" comments, terminating each comment
           at the first occurrence of ---->>.

           If, for whatever reason, you want strict comment parsing, use this
           option to turn it on.

   RReeccuurrssiivvee AAcccceepptt//RReejjeecctt OOppttiioonnss
       --AA _a_c_c_l_i_s_t ----aacccceepptt _a_c_c_l_i_s_t
       --RR _r_e_j_l_i_s_t ----rreejjeecctt _r_e_j_l_i_s_t
           Specify comma-separated lists of file name suffixes or patterns to
           accept or reject. Note that if any of the wildcard characters, **,
           ??, [[ or ]], appear in an element of _a_c_c_l_i_s_t or _r_e_j_l_i_s_t, it will be
           treated as a pattern, rather than a suffix.  In this case, you have
           to enclose the pattern into quotes to prevent your shell from
           expanding it, like in --AA """"**..mmpp33"""" or --AA ''**..mmpp33''.

       ----aacccceepptt--rreeggeexx _u_r_l_r_e_g_e_x
       ----rreejjeecctt--rreeggeexx _u_r_l_r_e_g_e_x
           Specify a regular expression to accept or reject the complete URL.

       ----rreeggeexx--ttyyppee _r_e_g_e_x_t_y_p_e
           Specify the regular expression type.  Possible types are ppoossiixx or
           ppccrree.  Note that to be able to use ppccrree type, wget has to be
           compiled with libpcre support.

       --DD _d_o_m_a_i_n_-_l_i_s_t
       ----ddoommaaiinnss==_d_o_m_a_i_n_-_l_i_s_t
           Set domains to be followed.  _d_o_m_a_i_n_-_l_i_s_t is a comma-separated list
           of domains.  Note that it does _n_o_t turn on --HH.

       ----eexxcclluuddee--ddoommaaiinnss _d_o_m_a_i_n_-_l_i_s_t
           Specify the domains that are _n_o_t to be followed.

       ----ffoollllooww--ffttpp
           Follow FTP links from HTML documents.  Without this option, Wget
           will ignore all the FTP links.

       ----ffoollllooww--ttaaggss==_l_i_s_t
           Wget has an internal table of HTML tag / attribute pairs that it
           considers when looking for linked documents during a recursive
           retrieval.  If a user wants only a subset of those tags to be
           considered, however, he or she should be specify such tags in a
           comma-separated _l_i_s_t with this option.

       ----iiggnnoorree--ttaaggss==_l_i_s_t
           This is the opposite of the ----ffoollllooww--ttaaggss option.  To skip certain
           HTML tags when recursively looking for documents to download,
           specify them in a comma-separated _l_i_s_t.

           In the past, this option was the best bet for downloading a single
           page and its requisites, using a command-line like:

                   wget --ignore-tags=a,area -H -k -K -r http://<site>/<document>

           However, the author of this option came across a page with tags
           like ""<LINK REL=""home"" HREF=""/"">"" and came to the realization that
           specifying tags to ignore was not enough.  One can't just tell Wget
           to ignore ""<LINK>"", because then stylesheets will not be
           downloaded.  Now the best bet for downloading a single page and its
           requisites is the dedicated ----ppaaggee--rreeqquuiissiitteess option.

       ----iiggnnoorree--ccaassee
           Ignore case when matching files and directories.  This influences
           the behavior of -R, -A, -I, and -X options, as well as globbing
           implemented when downloading from FTP sites.  For example, with
           this option, --AA """"**..ttxxtt"""" will match ffiillee11..ttxxtt, but also ffiillee22..TTXXTT,
           ffiillee33..TTxxTT, and so on.  The quotes in the example are to prevent the
           shell from expanding the pattern.

       --HH
       ----ssppaann--hhoossttss
           Enable spanning across hosts when doing recursive retrieving.

       --LL
       ----rreellaattiivvee
           Follow relative links only.  Useful for retrieving a specific home
           page without any distractions, not even those from the same hosts.

       --II _l_i_s_t
       ----iinncclluuddee--ddiirreeccttoorriieess==_l_i_s_t
           Specify a comma-separated list of directories you wish to follow
           when downloading.  Elements of _l_i_s_t may contain wildcards.

       --XX _l_i_s_t
       ----eexxcclluuddee--ddiirreeccttoorriieess==_l_i_s_t
           Specify a comma-separated list of directories you wish to exclude
           from download.  Elements of _l_i_s_t may contain wildcards.

       --nnpp
       ----nnoo--ppaarreenntt
           Do not ever ascend to the parent directory when retrieving
           recursively.  This is a useful option, since it guarantees that
           only the files _b_e_l_o_w a certain hierarchy will be downloaded.

EENNVVIIRROONNMMEENNTT
       Wget supports proxies for both HTTP and FTP retrievals.  The standard
       way to specify proxy location, which Wget recognizes, is using the
       following environment variables:

       hhttttpp__pprrooxxyy
       hhttttppss__pprrooxxyy
           If set, the hhttttpp__pprrooxxyy and hhttttppss__pprrooxxyy variables should contain the
           URLs of the proxies for HTTP and HTTPS connections respectively.

       ffttpp__pprrooxxyy
           This variable should contain the URL of the proxy for FTP
           connections.  It is quite common that hhttttpp__pprrooxxyy and ffttpp__pprrooxxyy are
           set to the same URL.

       nnoo__pprrooxxyy
           This variable should contain a comma-separated list of domain
           extensions proxy should _n_o_t be used for.  For instance, if the
           value of nnoo__pprrooxxyy is ..mmiitt..eedduu, proxy will not be used to retrieve
           documents from MIT.

EEXXIITT SSTTAATTUUSS
       Wget may return one of several error codes if it encounters problems.

       0   No problems occurred.

       1   Generic error code.

       2   Parse error---for instance, when parsing command-line options, the
           ..wwggeettrrcc or ..nneettrrcc...

       3   File I/O error.

       4   Network failure.

       5   SSL verification failure.

       6   Username/password authentication failure.

       7   Protocol errors.

       8   Server issued an error response.

       With the exceptions of 0 and 1, the lower-numbered exit codes take
       precedence over higher-numbered ones, when multiple types of errors are
       encountered.

       In versions of Wget prior to 1.12, Wget's exit status tended to be
       unhelpful and inconsistent. Recursive downloads would virtually always
       return 0 (success), regardless of any issues encountered, and non-
       recursive fetches only returned the status corresponding to the most
       recently-attempted download.

FFIILLEESS
       //uussrr//llooccaall//eettcc//wwggeettrrcc
           Default location of the _g_l_o_b_a_l startup file.

       ..wwggeettrrcc
           User startup file.

BBUUGGSS
       You are welcome to submit bug reports via the GNU Wget bug tracker (see
       <hhttttppss::////ssaavvaannnnaahh..ggnnuu..oorrgg//bbuuggss//??ffuunncc==aaddddiitteemm&&ggrroouupp==wwggeett>) or to our
       mailing list <bbuugg--wwggeett@@ggnnuu..oorrgg>.

       Visit <hhttttppss::////lliissttss..ggnnuu..oorrgg//mmaaiillmmaann//lliissttiinnffoo//bbuugg--wwggeett> to get more
       info (how to subscribe, list archives, ...).

       Before actually submitting a bug report, please try to follow a few
       simple guidelines.

       1.  Please try to ascertain that the behavior you see really is a bug.
           If Wget crashes, it's a bug.  If Wget does not behave as
           documented, it's a bug.  If things work strange, but you are not
           sure about the way they are supposed to work, it might well be a
           bug, but you might want to double-check the documentation and the
           mailing lists.

       2.  Try to repeat the bug in as simple circumstances as possible.  E.g.
           if Wget crashes while downloading wwggeett --rrll00 --kkKKEE --tt55 ----nnoo--pprrooxxyy
           hhttttpp::////eexxaammppllee..ccoomm --oo //ttmmpp//lloogg, you should try to see if the crash
           is repeatable, and if will occur with a simpler set of options.
           You might even try to start the download at the page where the
           crash occurred to see if that page somehow triggered the crash.

           Also, while I will probably be interested to know the contents of
           your _._w_g_e_t_r_c file, just dumping it into the debug message is
           probably a bad idea.  Instead, you should first try to see if the
           bug repeats with _._w_g_e_t_r_c moved out of the way.  Only if it turns
           out that _._w_g_e_t_r_c settings affect the bug, mail me the relevant
           parts of the file.

       3.  Please start Wget with --dd option and send us the resulting output
           (or relevant parts thereof).  If Wget was compiled without debug
           support, recompile it---it is _m_u_c_h easier to trace bugs with debug
           support on.

           Note: please make sure to remove any potentially sensitive
           information from the debug log before sending it to the bug
           address.  The ""-d"" won't go out of its way to collect sensitive
           information, but the log _w_i_l_l contain a fairly complete transcript
           of Wget's communication with the server, which may include
           passwords and pieces of downloaded data.  Since the bug address is
           publicly archived, you may assume that all bug reports are visible
           to the public.

       4.  If Wget has crashed, try to run it in a debugger, e.g. ""gdb `which
           wget` core"" and type ""where"" to get the backtrace.  This may not
           work if the system administrator has disabled core files, but it is
           safe to try.

SSEEEE AALLSSOO
       This is nnoott the complete manual for GNU Wget.  For more complete
       information, including more detailed explanations of some of the
       options, and a number of commands available for use with _._w_g_e_t_r_c files
       and the --ee option, see the GNU Info entry for _w_g_e_t.

       Also see wwggeett22(1), the updated version of GNU Wget with even better
       support for recursive downloading and modern protocols like HTTP/2.

AAUUTTHHOORR
       Originally written by Hrvoje Nikšić <hniksic@xemacs.org>.  Currently
       maintained by Darshit Shah <darnir@gnu.org> and Tim Rühsen
       <tim.ruehsen@gmx.de>.

CCOOPPYYRRIIGGHHTT
       Copyright (c) 1996--2011, 2015, 2018--2024 Free Software Foundation,
       Inc.

       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3 or
       any later version published by the Free Software Foundation; with no
       Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
       Texts.  A copy of the license is included in the section entitled ""GNU
       Free Documentation License"".

GNU Wget 1.24.5                   2024-03-10                           WGET(1)
"
curl,"curl(1)                           curl Manual                          curl(1)

NNAAMMEE
       curl - transfer a URL

SSYYNNOOPPSSIISS
       ccuurrll [[ooppttiioonnss // UURRLLss]]

DDEESSCCRRIIPPTTIIOONN
       ccuurrll is a tool for transferring data from or to a server using URLs. It
       supports these protocols: DICT, FILE, FTP, FTPS, GOPHER, GOPHERS, HTTP,
       HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTMPS, RTSP,
       SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET, TFTP, WS and WSS.

       curl is powered by libcurl for all transfer-related features. See
       _l_i_b_c_u_r_l_(_3_) for details.

UURRLL
       The URL syntax is protocol-dependent. You find a detailed description
       in RFC 3986.

       If you provide a URL without a leading pprroottooccooll:://// scheme, curl guesses
       what protocol you want. It then defaults to HTTP but assumes others
       based on often-used host name prefixes. For example, for host names
       starting with ""ftp."" curl assumes you want FTP.

       You can specify any amount of URLs on the command line. They are
       fetched in a sequential manner in the specified order unless you use
       _-_Z_, _-_-_p_a_r_a_l_l_e_l. You can specify command line options and URLs mixed and
       in any order on the command line.

       curl attempts to reuse connections when doing multiple transfers, so
       that getting many files from the same server do not use multiple
       connects and setup handshakes. This improves speed. Connection reuse
       can only be done for URLs specified for a single command line
       invocation and cannot be performed between separate curl runs.

       Provide an IPv6 zone id in the URL with an escaped percentage sign.
       Like in

       ""http://[fe80::3%25eth0]/""

       Everything provided on the command line that is not a command line
       option or its argument, curl assumes is a URL and treats it as such.

GGLLOOBBBBIINNGG
       You can specify multiple URLs or parts of URLs by writing lists within
       braces or ranges within brackets. We call this ""globbing"".

       Provide a list with three different names like this:

       ""http://site.{one,two,three}.com""

       Do sequences of alphanumeric series by using [] as in:

       ""ftp://ftp.example.com/file[1-100].txt""

       With leading zeroes:

       ""ftp://ftp.example.com/file[001-100].txt""

       With letters through the alphabet:

       ""ftp://ftp.example.com/file[a-z].txt""

       Nested sequences are not supported, but you can use several ones next
       to each other:

       ""http://example.com/archive[1996-1999]/vol[1-4]/part{a,b,c}.html""

       You can specify a step counter for the ranges to get every Nth number
       or letter:

       ""http://example.com/file[1-100:10].txt""

       ""http://example.com/file[a-z:2].txt""

       When using [] or {} sequences when invoked from a command line prompt,
       you probably have to put the full URL within double quotes to avoid the
       shell from interfering with it. This also goes for other characters
       treated special, like for example '&', '?' and '*'.

       Switch off globbing with _-_g_, _-_-_g_l_o_b_o_f_f.

VVAARRIIAABBLLEESS
       curl supports command line variables (added in 8.3.0). Set variables
       with _-_-_v_a_r_i_a_b_l_e name=content or _-_-_v_a_r_i_a_b_l_e name@file (where ""file"" can
       be stdin if set to a single dash (-)).

       Variable contents can be expanded in option parameters using ""{{name}}""
       (without the quotes) if the option name is prefixed with ""--expand-"".
       This gets the contents of the variable ""name"" inserted, or a blank if
       the name does not exist as a variable. Insert ""{{"" verbatim in the
       string by prefixing it with a backslash, like ""\{{"".

       You an access and expand environment variables by first importing them.
       You can select to either require the environment variable to be set or
       you can provide a default value in case it is not already set. Plain
       _-_-_v_a_r_i_a_b_l_e %name imports the variable called 'name' but exits with an
       error if that environment variable is not already set. To provide a
       default value if it is not set, use _-_-_v_a_r_i_a_b_l_e %name=content or
       _-_-_v_a_r_i_a_b_l_e %name@content.

       Example. Get the USER environment variable into the URL, fail if USER
       is not set:

       --variable '%USER'
       --expand-url = ""https://example.com/api/{{USER}}/method""

       When expanding variables, curl supports a set of functions that can
       make the variable contents more convenient to use. It can trim leading
       and trailing white space with _t_r_i_m, it can output the contents as a
       JSON quoted string with _j_s_o_n, URL encode the string with _u_r_l or base64
       encode it with _b_6_4. You apply function to a variable expansion, add
       them colon separated to the right side of the variable. Variable
       content holding null bytes that are not encoded when expanded cause
       error.

       Example: get the contents of a file called $HOME/.secret into a
       variable called ""fix"". Make sure that the content is trimmed and
       percent-encoded sent as POST data:

       --variable %HOME
       --expand-variable fix@{{HOME}}/.secret
       --expand-data ""{{fix:trim:url}}""
       https://example.com/

       Command line variables and expansions were added in in 8.3.0.

OOUUTTPPUUTT
       If not told otherwise, curl writes the received data to stdout. It can
       be instructed to instead save that data into a local file, using the
       _-_o_, _-_-_o_u_t_p_u_t or _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e options. If curl is given multiple
       URLs to transfer on the command line, it similarly needs multiple
       options for where to save them.

       curl does not parse or otherwise ""understand"" the content it gets or
       writes as output. It does no encoding or decoding, unless explicitly
       asked to with dedicated command line options.

PPRROOTTOOCCOOLLSS
       curl supports numerous protocols, or put in URL terms: schemes. Your
       particular build may not support them all.

       DICT   Lets you lookup words using online dictionaries.

       FILE   Read or write local files. curl does not support accessing
              file:// URL remotely, but when running on Microsoft Windows
              using the native UNC approach works.

       FTP(S) curl supports the File Transfer Protocol with a lot of tweaks
              and levers. With or without using TLS.

       GOPHER(S)
              Retrieve files.

       HTTP(S)
              curl supports HTTP with numerous options and variations. It can
              speak HTTP version 0.9, 1.0, 1.1, 2 and 3 depending on build
              options and the correct command line options.

       IMAP(S)
              Using the mail reading protocol, curl can ""download"" emails for
              you. With or without using TLS.

       LDAP(S)
              curl can do directory lookups for you, with or without TLS.

       MQTT   curl supports MQTT version 3. Downloading over MQTT equals
              ""subscribe"" to a topic while uploading/posting equals ""publish""
              on a topic. MQTT over TLS is not supported (yet).

       POP3(S)
              Downloading from a pop3 server means getting a mail. With or
              without using TLS.

       RTMP(S)
              The RReeaallttiimmee MMeessssaaggiinngg PPrroottooccooll is primarily used to serve
              streaming media and curl can download it.

       RTSP   curl supports RTSP 1.0 downloads.

       SCP    curl supports SSH version 2 scp transfers.

       SFTP   curl supports SFTP (draft 5) done over SSH version 2.

       SMB(S) curl supports SMB version 1 for upload and download.

       SMTP(S)
              Uploading contents to an SMTP server means sending an email.
              With or without TLS.

       TELNET Telling curl to fetch a telnet URL starts an interactive session
              where it sends what it reads on stdin and outputs what the
              server sends it.

       TFTP   curl can do TFTP downloads and uploads.

PPRROOGGRREESSSS MMEETTEERR
       curl normally displays a progress meter during operations, indicating
       the amount of transferred data, transfer speeds and estimated time
       left, etc. The progress meter displays the transfer rate in bytes per
       second. The suffixes (k, M, G, T, P) are 1024 based. For example 1k is
       1024 bytes. 1M is 1048576 bytes.

       curl displays this data to the terminal by default, so if you invoke
       curl to do an operation and it is about to write data to the terminal,
       it _d_i_s_a_b_l_e_s the progress meter as otherwise it would mess up the output
       mixing progress meter and response data.

       If you want a progress meter for HTTP POST or PUT requests, you need to
       redirect the response output to a file, using shell redirect (>), _-_o_,
       _-_-_o_u_t_p_u_t or similar.

       This does not apply to FTP upload as that operation does not spit out
       any response data to the terminal.

       If you prefer a progress ""bar"" instead of the regular meter, _-_#_,
       _-_-_p_r_o_g_r_e_s_s_-_b_a_r is your friend. You can also disable the progress meter
       completely with the _-_s_, _-_-_s_i_l_e_n_t option.

VVEERRSSIIOONN
       This man page describes curl %VERSION. If you use a later version,
       chances are this man page does not fully document it. If you use an
       earlier version, this document tries to include version information
       about which specific version that introduced changes.

       You can always learn which the latest curl version is by running

       curl https://curl.se/info

       The online version of this man page is always showing the latest
       incarnation: https://curl.se/docs/manpage.html

OOPPTTIIOONNSS
       Options start with one or two dashes. Many of the options require an
       additional value next to them. If provided text does not start with a
       dash, it is presumed to be and treated as a URL.

       The short ""single-dash"" form of the options, -d for example, may be
       used with or without a space between it and its value, although a space
       is a recommended separator. The long ""double-dash"" form, _-_d_, _-_-_d_a_t_a for
       example, requires a space between it and its value.

       Short version options that do not need any additional values can be
       used immediately next to each other, like for example you can specify
       all the options _-_O, _-_L and _-_v at once as _-_O_L_v.

       In general, all boolean options are enabled with --ooppttiioonn and yet again
       disabled with --nnoo--option. That is, you use the same option name but
       prefix it with ""no-"". However, in this list we mostly only list and
       show the _-_-_o_p_t_i_o_n version of them.

       When _-_:_, _-_-_n_e_x_t is used, it resets the parser state and you start again
       with a clean option state, except for the options that are ""global"".
       Global options retain their values and meaning even after _-_:_, _-_-_n_e_x_t.

       The following options are global: _-_-_f_a_i_l_-_e_a_r_l_y, _-_-_l_i_b_c_u_r_l,
       _-_-_p_a_r_a_l_l_e_l_-_i_m_m_e_d_i_a_t_e, _-_Z_, _-_-_p_a_r_a_l_l_e_l, _-_#_, _-_-_p_r_o_g_r_e_s_s_-_b_a_r, _-_-_r_a_t_e, _-_S_,
       _-_-_s_h_o_w_-_e_r_r_o_r, _-_-_s_t_d_e_r_r, _-_-_s_t_y_l_e_d_-_o_u_t_p_u_t, _-_-_t_r_a_c_e_-_a_s_c_i_i, _-_-_t_r_a_c_e_-_c_o_n_f_i_g,
       _-_-_t_r_a_c_e_-_i_d_s, _-_-_t_r_a_c_e_-_t_i_m_e, _-_-_t_r_a_c_e and _-_v_, _-_-_v_e_r_b_o_s_e.

       --abstract-unix-socket <path>
              (HTTP) Connect through an abstract Unix domain socket, instead
              of using the network.  Note: netstat shows the path of an
              abstract socket prefixed with '@', however the <path> argument
              should not have this leading character.

              If --abstract-unix-socket is provided several times, the last
              set value is used.

              Example:
               curl --abstract-unix-socket socketpath https://example.com

              See also _-_-_u_n_i_x_-_s_o_c_k_e_t. Added in 7.53.0.

       --alt-svc <file name>
              (HTTPS) This option enables the alt-svc parser in curl. If the
              file name points to an existing alt-svc cache file, that gets
              used. After a completed transfer, the cache is saved to the file
              name again if it has been modified.

              Specify a """" file name (zero length) to avoid loading/saving and
              make curl just handle the cache in memory.

              If this option is used several times, curl loads contents from
              all the files but the last one is used for saving.

              --alt-svc can be used several times in a command line

              Example:
               curl --alt-svc svc.txt https://example.com

              See also _-_-_r_e_s_o_l_v_e and _-_-_c_o_n_n_e_c_t_-_t_o. Added in 7.64.1.

       --anyauth
              (HTTP) Tells curl to figure out authentication method by itself,
              and use the most secure one the remote site claims to support.
              This is done by first doing a request and checking the
              response-headers, thus possibly inducing an extra network
              round-trip. This is used instead of setting a specific
              authentication method, which you can do with _-_-_b_a_s_i_c, _-_-_d_i_g_e_s_t,
              _-_-_n_t_l_m, and _-_-_n_e_g_o_t_i_a_t_e.

              Using _-_-_a_n_y_a_u_t_h is not recommended if you do uploads from stdin,
              since it may require data to be sent twice and then the client
              must be able to rewind. If the need should arise when uploading
              from stdin, the upload operation fails.

              Used together with _-_u_, _-_-_u_s_e_r.

              Providing --anyauth multiple times has no extra effect.

              Example:
               curl --anyauth --user me:pwd https://example.com

              See also _-_-_p_r_o_x_y_-_a_n_y_a_u_t_h, _-_-_b_a_s_i_c and _-_-_d_i_g_e_s_t.

       -a, --append
              (FTP SFTP) When used in an upload, this option makes curl append
              to the target file instead of overwriting it. If the remote file
              does not exist, it is created. Note that this flag is ignored by
              some SFTP servers (including OpenSSH).

              Providing --append multiple times has no extra effect.  Disable
              it again with --no-append.

              Example:
               curl --upload-file local --append ftp://example.com/

              See also _-_r_, _-_-_r_a_n_g_e and _-_C_, _-_-_c_o_n_t_i_n_u_e_-_a_t.

       --aws-sigv4 <provider1[:provider2[:region[:service]]]>
              (HTTP) Use AWS V4 signature authentication in the transfer.

              The provider argument is a string that is used by the algorithm
              when creating outgoing authentication headers.

              The region argument is a string that points to a geographic area
              of a resources collection (region-code) when the region name is
              omitted from the endpoint.

              The service argument is a string that points to a function
              provided by a cloud (service-code) when the service name is
              omitted from the endpoint.

              If --aws-sigv4 is provided several times, the last set value is
              used.

              Example:
               curl --aws-sigv4 ""aws:amz:us-east-2:es"" --user ""key:secret"" https://example.com

              See also _-_-_b_a_s_i_c and _-_u_, _-_-_u_s_e_r. Added in 7.75.0.

       --basic
              (HTTP) Tells curl to use HTTP Basic authentication with the
              remote host. This is the default and this option is usually
              pointless, unless you use it to override a previously set option
              that sets a different authentication method (such as _-_-_n_t_l_m,
              _-_-_d_i_g_e_s_t, or _-_-_n_e_g_o_t_i_a_t_e).

              Used together with _-_u_, _-_-_u_s_e_r.

              Providing --basic multiple times has no extra effect.

              Example:
               curl -u name:password --basic https://example.com

              See also _-_-_p_r_o_x_y_-_b_a_s_i_c.

       --ca-native
              (TLS) Tells curl to use the CA store from the native operating
              system to verify the peer. By default, curl otherwise uses a CA
              store provided in a single file or directory, but when using
              this option it interfaces the operating system's own vault.

              This option works for curl on Windows when built to use OpenSSL,
              wolfSSL (added in 8.3.0) or GnuTLS (added in 8.5.0). When curl
              on Windows is built to use Schannel, this feature is implied and
              curl then only uses the native CA store.

              Providing --ca-native multiple times has no extra effect.
              Disable it again with --no-ca-native.

              Example:
               curl --ca-native https://example.com

              See also _-_-_c_a_c_e_r_t, _-_-_c_a_p_a_t_h and _-_k_, _-_-_i_n_s_e_c_u_r_e. Added in 8.2.0.

       --cacert <file>
              (TLS) Tells curl to use the specified certificate file to verify
              the peer. The file may contain multiple CA certificates. The
              certificate(s) must be in PEM format. Normally curl is built to
              use a default file for this, so this option is typically used to
              alter that default file.

              curl recognizes the environment variable named 'CURL_CA_BUNDLE'
              if it is set and the TLS backend is not Schannel, and uses the
              given path as a path to a CA cert bundle. This option overrides
              that variable.

              The windows version of curl automatically looks for a CA certs
              file named 'curl-ca-bundle.crt', either in the same directory as
              curl.exe, or in the Current Working Directory, or in any folder
              along your PATH.

              (iOS and macOS only) If curl is built against Secure Transport,
              then this option is supported for backward compatibility with
              other SSL engines, but it should not be set. If the option is
              not set, then curl uses the certificates in the system and user
              Keychain to verify the peer, which is the preferred method of
              verifying the peer's certificate chain.

              (Schannel only) This option is supported for Schannel in Windows
              7 or later (added in 7.60.0). This option is supported for
              backward compatibility with other SSL engines; instead it is
              recommended to use Windows' store of root certificates (the
              default for Schannel).

              If --cacert is provided several times, the last set value is
              used.

              Example:
               curl --cacert CA-file.txt https://example.com

              See also _-_-_c_a_p_a_t_h and _-_k_, _-_-_i_n_s_e_c_u_r_e.

       --capath <dir>
              (TLS) Tells curl to use the specified certificate directory to
              verify the peer. Multiple paths can be provided by separating
              them with "":"" (e.g.  ""path1:path2:path3""). The certificates must
              be in PEM format, and if curl is built against OpenSSL, the
              directory must have been processed using the c_rehash utility
              supplied with OpenSSL. Using _-_-_c_a_p_a_t_h can allow OpenSSL-powered
              curl to make SSL-connections much more efficiently than using
              _-_-_c_a_c_e_r_t if the _-_-_c_a_c_e_r_t file contains many CA certificates.

              If this option is set, the default capath value is ignored.

              If --capath is provided several times, the last set value is
              used.

              Example:
               curl --capath /local/directory https://example.com

              See also _-_-_c_a_c_e_r_t and _-_k_, _-_-_i_n_s_e_c_u_r_e.

       --cert-status
              (TLS) Tells curl to verify the status of the server certificate
              by using the Certificate Status Request (aka. OCSP stapling) TLS
              extension.

              If this option is enabled and the server sends an invalid (e.g.
              expired) response, if the response suggests that the server
              certificate has been revoked, or no response at all is received,
              the verification fails.

              This is currently only implemented in the OpenSSL and GnuTLS
              backends.

              Providing --cert-status multiple times has no extra effect.
              Disable it again with --no-cert-status.

              Example:
               curl --cert-status https://example.com

              See also _-_-_p_i_n_n_e_d_p_u_b_k_e_y.

       --cert-type <type>
              (TLS) Tells curl what type the provided client certificate is
              using. PEM, DER, ENG and P12 are recognized types.

              The default type depends on the TLS backend and is usually PEM,
              however for Secure Transport and Schannel it is P12. If _-_E_,
              _-_-_c_e_r_t is a pkcs11: URI then ENG is the default type.

              If --cert-type is provided several times, the last set value is
              used.

              Example:
               curl --cert-type PEM --cert file https://example.com

              See also _-_E_, _-_-_c_e_r_t, _-_-_k_e_y and _-_-_k_e_y_-_t_y_p_e.

       -E, --cert <certificate[:password]>
              (TLS) Tells curl to use the specified client certificate file
              when getting a file with HTTPS, FTPS or another SSL-based
              protocol. The certificate must be in PKCS#12 format if using
              Secure Transport, or PEM format if using any other engine. If
              the optional password is not specified, it is queried for on the
              terminal. Note that this option assumes a certificate file that
              is the private key and the client certificate concatenated. See
              _-_E_, _-_-_c_e_r_t and _-_-_k_e_y to specify them independently.

              In the <certificate> portion of the argument, you must escape
              the character "":"" as ""\:"" so that it is not recognized as the
              password delimiter. Similarly, you must escape the double quote
              character as \"" so that it is not recognized as an escape
              character.

              If curl is built against OpenSSL library, and the engine pkcs11
              is available, then a PKCS#11 URI (RFC 7512) can be used to
              specify a certificate located in a PKCS#11 device. A string
              beginning with ""pkcs11:"" is interpreted as a PKCS#11 URI. If a
              PKCS#11 URI is provided, then the _-_-_e_n_g_i_n_e option is set as
              ""pkcs11"" if none was provided and the _-_-_c_e_r_t_-_t_y_p_e option is set
              as ""ENG"" if none was provided.

              (iOS and macOS only) If curl is built against Secure Transport,
              then the certificate string can either be the name of a
              certificate/private key in the system or user keychain, or the
              path to a PKCS#12-encoded certificate and private key. If you
              want to use a file from the current directory, please precede it
              with ""./"" prefix, in order to avoid confusion with a nickname.

              (Schannel only) Client certificates must be specified by a path
              expression to a certificate store. (Loading _P_F_X is not
              supported; you can import it to a store first). You can use
              ""<store location>\<store name>\<thumbprint>"" to refer to a
              certificate in the system certificates store, for example,
              _""_C_u_r_r_e_n_t_U_s_e_r_\_M_Y_\_9_3_4_a_7_a_c_6_f_8_a_5_d_5_7_9_2_8_5_a_7_4_f_a_6_1_e_1_9_f_2_3_d_d_f_e_8_d_7_a_"".
              Thumbprint is usually a SHA-1 hex string which you can see in
              certificate details. Following store locations are supported:
              _C_u_r_r_e_n_t_U_s_e_r, _L_o_c_a_l_M_a_c_h_i_n_e, _C_u_r_r_e_n_t_S_e_r_v_i_c_e, _S_e_r_v_i_c_e_s,
              _C_u_r_r_e_n_t_U_s_e_r_G_r_o_u_p_P_o_l_i_c_y, _L_o_c_a_l_M_a_c_h_i_n_e_G_r_o_u_p_P_o_l_i_c_y and
              _L_o_c_a_l_M_a_c_h_i_n_e_E_n_t_e_r_p_r_i_s_e.

              If --cert is provided several times, the last set value is used.

              Example:
               curl --cert certfile --key keyfile https://example.com

              See also _-_-_c_e_r_t_-_t_y_p_e, _-_-_k_e_y and _-_-_k_e_y_-_t_y_p_e.

       --ciphers <list of ciphers>
              (TLS) Specifies which ciphers to use in the connection. The list
              of ciphers must specify valid ciphers. Read up on SSL cipher
              list details on this URL:

              https://curl.se/docs/ssl-ciphers.html

              If --ciphers is provided several times, the last set value is
              used.

              Example:
               curl --ciphers ECDHE-ECDSA-AES256-CCM8 https://example.com

              See also _-_-_t_l_s_v_1_._3, _-_-_t_l_s_1_3_-_c_i_p_h_e_r_s and _-_-_p_r_o_x_y_-_c_i_p_h_e_r_s.

       --compressed-ssh
              (SCP SFTP) Enables built-in SSH compression.  This is a request,
              not an order; the server may or may not do it.

              Providing --compressed-ssh multiple times has no extra effect.
              Disable it again with --no-compressed-ssh.

              Example:
               curl --compressed-ssh sftp://example.com/

              See also _-_-_c_o_m_p_r_e_s_s_e_d. Added in 7.56.0.

       --compressed
              (HTTP) Request a compressed response using one of the algorithms
              curl supports, and automatically decompress the content.

              Response headers are not modified when saved, so if they are
              ""interpreted"" separately again at a later point they might
              appear to be saying that the content is (still) compressed;
              while in fact it has already been decompressed.

              If this option is used and the server sends an unsupported
              encoding, curl reports an error. This is a request, not an
              order; the server may or may not deliver data compressed.

              Providing --compressed multiple times has no extra effect.
              Disable it again with --no-compressed.

              Example:
               curl --compressed https://example.com

              See also _-_-_c_o_m_p_r_e_s_s_e_d_-_s_s_h.

       -K, --config <file>
              Specify a text file to read curl arguments from. The command
              line arguments found in the text file are used as if they were
              provided on the command line.

              Options and their parameters must be specified on the same line
              in the file, separated by whitespace, colon, or the equals sign.
              Long option names can optionally be given in the config file
              without the initial double dashes and if so, the colon or equals
              characters can be used as separators. If the option is specified
              with one or two dashes, there can be no colon or equals
              character between the option and its parameter.

              If the parameter contains whitespace or starts with a colon (:)
              or equals sign (=), it must be specified enclosed within double
              quotes (""). Within double quotes the following escape sequences
              are available: \\, \"", \t, \n, \r and \v. A backslash preceding
              any other letter is ignored.

              If the first non-blank column of a config line is a '#'
              character, that line is treated as a comment.

              Only write one option per physical line in the config file. A
              single line is required to be no more than 10 megabytes (since
              8.2.0).

              Specify the filename to _-_K_, _-_-_c_o_n_f_i_g as '-' to make curl read
              the file from stdin.

              Note that to be able to specify a URL in the config file, you
              need to specify it using the _-_-_u_r_l option, and not by simply
              writing the URL on its own line. So, it could look similar to
              this:

              url = ""https://curl.se/docs/""

              # --- Example file ---
              # this is a comment
              url = ""example.com""
              output = ""curlhere.html""
              user-agent = ""superagent/1.0""

              # and fetch another URL too
              url = ""example.com/docs/manpage.html""
              -O
              referer = ""http://nowhereatall.example.com/""
              # --- End of example file ---

              When curl is invoked, it (unless _-_q_, _-_-_d_i_s_a_b_l_e is used) checks
              for a default config file and uses it if found, even when _-_K_,
              _-_-_c_o_n_f_i_g is used. The default config file is checked for in the
              following places in this order:

              1) """"$$CCUURRLL__HHOOMMEE//..ccuurrllrrcc""""

              2) """"$$XXDDGG__CCOONNFFIIGG__HHOOMMEE//ccuurrllrrcc"""" (Added in 7.73.0)

              3) """"$$HHOOMMEE//..ccuurrllrrcc""""

              4) Windows: """"%%UUSSEERRPPRROOFFIILLEE%%\\..ccuurrllrrcc""""

              5) Windows: """"%%AAPPPPDDAATTAA%%\\..ccuurrllrrcc""""

              6) Windows: """"%%UUSSEERRPPRROOFFIILLEE%%\\AApppplliiccaattiioonn DDaattaa\\..ccuurrllrrcc""""

              7) Non-Windows: use getpwuid to find the home directory

              8) On Windows, if it finds no _._c_u_r_l_r_c file in the sequence
              described above, it checks for one in the same dir the curl
              executable is placed.

              On Windows two filenames are checked per location: _._c_u_r_l_r_c and
              ___c_u_r_l_r_c, preferring the former. Older versions on Windows
              checked for ___c_u_r_l_r_c only.

              --config can be used several times in a command line

              Example:
               curl --config file.txt https://example.com

              See also _-_q_, _-_-_d_i_s_a_b_l_e.

       --connect-timeout <fractional seconds>
              Maximum time in seconds that you allow curl's connection to
              take. This only limits the connection phase, so if curl connects
              within the given period it continues - if not it exits.

              This option accepts decimal values. The decimal value needs to
              be provided using a dot (.) as decimal separator - not the local
              version even if it might be using another separator.

              The connection phase is considered complete when the DNS lookup
              and requested TCP, TLS or QUIC handshakes are done.

              If --connect-timeout is provided several times, the last set
              value is used.

              Examples:
               curl --connect-timeout 20 https://example.com
               curl --connect-timeout 3.14 https://example.com

              See also _-_m_, _-_-_m_a_x_-_t_i_m_e.

       --connect-to <HOST1:PORT1:HOST2:PORT2>
              For a request to the given ""HOST1:PORT1"" pair, connect to
              ""HOST2:PORT2"" instead. This option is suitable to direct
              requests at a specific server, e.g. at a specific cluster node
              in a cluster of servers. This option is only used to establish
              the network connection. It does NOT affect the hostname/port
              that is used for TLS/SSL (e.g. SNI, certificate verification) or
              for the application protocols. ""HOST1"" and ""PORT1"" may be the
              empty string, meaning ""any host/port"". ""HOST2"" and ""PORT2"" may
              also be the empty string, meaning ""use the request's original
              host/port"".

              A hostname specified to this option is compared as a string, so
              it needs to match the name used in request URL. It can be either
              numerical such as ""127.0.0.1"" or the full host name such as
              ""example.org"".

              --connect-to can be used several times in a command line

              Example:
               curl --connect-to example.com:443:example.net:8443 https://example.com

              See also _-_-_r_e_s_o_l_v_e and _-_H_, _-_-_h_e_a_d_e_r.

       -C, --continue-at <offset>
              Continue/Resume a previous file transfer at the given offset.
              The given offset is the exact number of bytes that are skipped,
              counting from the beginning of the source file before it is
              transferred to the destination. If used with uploads, the FTP
              server command SIZE is not used by curl.

              Use ""-C -"" to tell curl to automatically find out where/how to
              resume the transfer. It then uses the given output/input files
              to figure that out.

              If --continue-at is provided several times, the last set value
              is used.

              Examples:
               curl -C - https://example.com
               curl -C 400 https://example.com

              See also _-_r_, _-_-_r_a_n_g_e.

       -c, --cookie-jar <filename>
              (HTTP) Specify to which file you want curl to write all cookies
              after a completed operation. Curl writes all cookies from its
              in-memory cookie storage to the given file at the end of
              operations. If no cookies are known, no data is written. The
              file is created using the Netscape cookie file format. If you
              set the file name to a single dash, ""-"", the cookies are written
              to stdout.

              The file specified with _-_c_, _-_-_c_o_o_k_i_e_-_j_a_r is only used for
              output. No cookies are read from the file. To read cookies, use
              the _-_b_, _-_-_c_o_o_k_i_e option. Both options can specify the same file.

              This command line option activates the cookie engine that makes
              curl record and use cookies. The _-_b_, _-_-_c_o_o_k_i_e option also
              activates it.

              If the cookie jar cannot be created or written to, the whole
              curl operation does not fail or even report an error clearly.
              Using _-_v_, _-_-_v_e_r_b_o_s_e gets a warning displayed, but that is the
              only visible feedback you get about this possibly lethal
              situation.

              If --cookie-jar is provided several times, the last set value is
              used.

              Examples:
               curl -c store-here.txt https://example.com
               curl -c store-here.txt -b read-these https://example.com

              See also _-_b_, _-_-_c_o_o_k_i_e.

       -b, --cookie <data|filename>
              (HTTP) Pass the data to the HTTP server in the Cookie header. It
              is supposedly the data previously received from the server in a
              ""Set-Cookie:"" line. The data should be in the format
              ""NAME1=VALUE1; NAME2=VALUE2"". This makes curl use the cookie
              header with this content explicitly in all outgoing request(s).
              If multiple requests are done due to authentication, followed
              redirects or similar, they all get this cookie passed on.

              If no '=' symbol is used in the argument, it is instead treated
              as a filename to read previously stored cookie from. This option
              also activates the cookie engine which makes curl record
              incoming cookies, which may be handy if you are using this in
              combination with the _-_L_, _-_-_l_o_c_a_t_i_o_n option or do multiple URL
              transfers on the same invoke.

              If the file name is exactly a minus (""-""), curl instead reads
              the contents from stdin. If the file name is an empty string
              ("""") and is the only cookie input, curl will activate the cookie
              engine without any cookies.

              The file format of the file to read cookies from should be plain
              HTTP headers (Set-Cookie style) or the Netscape/Mozilla cookie
              file format.

              The file specified with _-_b_, _-_-_c_o_o_k_i_e is only used as input. No
              cookies are written to the file. To store cookies, use the _-_c_,
              _-_-_c_o_o_k_i_e_-_j_a_r option.

              If you use the Set-Cookie file format and do not specify a
              domain then the cookie is not sent since the domain never
              matches. To address this, set a domain in Set-Cookie line (doing
              that includes subdomains) or preferably: use the Netscape
              format.

              Users often want to both read cookies from a file and write
              updated cookies back to a file, so using both _-_b_, _-_-_c_o_o_k_i_e and
              _-_c_, _-_-_c_o_o_k_i_e_-_j_a_r in the same command line is common.

              If curl is built with PSL (PPuubblliicc SSuuffffiixx LLiisstt) support, it
              detects and discards cookies that are specified for such suffix
              domains that should not be allowed to have cookies. If curl is
              _n_o_t built with PSL support, it has no ability to stop super
              cookies.

              --cookie can be used several times in a command line

              Examples:
               curl -b """" https://example.com
               curl -b cookiefile https://example.com
               curl -b cookiefile -c cookiefile https://example.com

              See also _-_c_, _-_-_c_o_o_k_i_e_-_j_a_r and _-_j_, _-_-_j_u_n_k_-_s_e_s_s_i_o_n_-_c_o_o_k_i_e_s.

       --create-dirs
              When used in conjunction with the _-_o_, _-_-_o_u_t_p_u_t option, curl
              creates the necessary local directory hierarchy as needed. This
              option creates the directories mentioned with the _-_o_, _-_-_o_u_t_p_u_t
              option combined with the path possibly set with _-_-_o_u_t_p_u_t_-_d_i_r. If
              the combined output file name uses no directory, or if the
              directories it mentions already exist, no directories are
              created.

              Created directories are made with mode 0750 on unix style file
              systems.

              To create remote directories when using FTP or SFTP, try
              _-_-_f_t_p_-_c_r_e_a_t_e_-_d_i_r_s.

              Providing --create-dirs multiple times has no extra effect.
              Disable it again with --no-create-dirs.

              Example:
               curl --create-dirs --output local/dir/file https://example.com

              See also _-_-_f_t_p_-_c_r_e_a_t_e_-_d_i_r_s and _-_-_o_u_t_p_u_t_-_d_i_r.

       --create-file-mode <mode>
              (SFTP SCP FILE) When curl is used to create files remotely using
              one of the supported protocols, this option allows the user to
              set which 'mode' to set on the file at creation time, instead of
              the default 0644.

              This option takes an octal number as argument.

              If --create-file-mode is provided several times, the last set
              value is used.

              Example:
               curl --create-file-mode 0777 -T localfile sftp://example.com/new

              See also _-_-_f_t_p_-_c_r_e_a_t_e_-_d_i_r_s. Added in 7.75.0.

       --crlf (FTP SMTP) Convert line feeds to carriage return plus line feeds
              in upload. Useful for MMVVSS ((OOSS//339900)).

              (SMTP added in 7.40.0)

              Providing --crlf multiple times has no extra effect.  Disable it
              again with --no-crlf.

              Example:
               curl --crlf -T file ftp://example.com/

              See also _-_B_, _-_-_u_s_e_-_a_s_c_i_i.

       --crlfile <file>
              (TLS) Provide a file using PEM format with a Certificate
              Revocation List that may specify peer certificates that are to
              be considered revoked.

              If --crlfile is provided several times, the last set value is
              used.

              Example:
               curl --crlfile rejects.txt https://example.com

              See also _-_-_c_a_c_e_r_t and _-_-_c_a_p_a_t_h.

       --curves <algorithm list>
              (TLS) Tells curl to request specific curves to use during SSL
              session establishment according to RFC 8422, 5.1. Multiple
              algorithms can be provided by separating them with "":"" (e.g.
              ""X25519:P-521""). The parameter is available identically in the
              OpenSSL ""s_client"" and ""s_server"" utilities.

              _-_-_c_u_r_v_e_s allows a OpenSSL powered curl to make SSL-connections
              with exactly the (EC) curve requested by the client, avoiding
              nontransparent client/server negotiations.

              If this option is set, the default curves list built into
              OpenSSL are ignored.

              If --curves is provided several times, the last set value is
              used.

              Example:
               curl --curves X25519 https://example.com

              See also _-_-_c_i_p_h_e_r_s. Added in 7.73.0.

       --data-ascii <data>
              (HTTP) This is just an alias for _-_d_, _-_-_d_a_t_a.

              --data-ascii can be used several times in a command line

              Example:
               curl --data-ascii @file https://example.com

              See also _-_-_d_a_t_a_-_b_i_n_a_r_y, _-_-_d_a_t_a_-_r_a_w and _-_-_d_a_t_a_-_u_r_l_e_n_c_o_d_e.

       --data-binary <data>
              (HTTP) This posts data exactly as specified with no extra
              processing whatsoever.

              If you start the data with the letter @, the rest should be a
              filename. Data is posted in a similar manner as _-_d_, _-_-_d_a_t_a does,
              except that newlines and carriage returns are preserved and
              conversions are never done.

              Like _-_d_, _-_-_d_a_t_a the default content-type sent to the server is
              application/x-www-form-urlencoded. If you want the data to be
              treated as arbitrary binary data by the server then set the
              content-type to octet-stream: -H ""Content-Type:
              application/octet-stream"".

              If this option is used several times, the ones following the
              first append data as described in _-_d_, _-_-_d_a_t_a.

              --data-binary can be used several times in a command line

              Example:
               curl --data-binary @filename https://example.com

              See also _-_-_d_a_t_a_-_a_s_c_i_i.

       --data-raw <data>
              (HTTP) This posts data similarly to _-_d_, _-_-_d_a_t_a but without the
              special interpretation of the @ character.

              --data-raw can be used several times in a command line

              Examples:
               curl --data-raw ""hello"" https://example.com
               curl --data-raw ""@at@at@"" https://example.com

              See also _-_d_, _-_-_d_a_t_a.

       --data-urlencode <data>
              (HTTP) This posts data, similar to the other _-_d_, _-_-_d_a_t_a options
              with the exception that this performs URL-encoding.

              To be CGI-compliant, the <data> part should begin with a _n_a_m_e
              followed by a separator and a content specification. The <data>
              part can be passed to curl using one of the following syntaxes:

              content
                     This makes curl URL-encode the content and pass that on.
                     Just be careful so that the content does not contain any
                     = or @ symbols, as that makes the syntax match one of the
                     other cases below!

              =content
                     This makes curl URL-encode the content and pass that on.
                     The preceding = symbol is not included in the data.

              name=content
                     This makes curl URL-encode the content part and pass that
                     on. Note that the name part is expected to be URL-encoded
                     already.

              @filename
                     This makes curl load data from the given file (including
                     any newlines), URL-encode that data and pass it on in the
                     POST.

              name@filename
                     This makes curl load data from the given file (including
                     any newlines), URL-encode that data and pass it on in the
                     POST. The name part gets an equal sign appended,
                     resulting in _n_a_m_e_=_u_r_l_e_n_c_o_d_e_d_-_f_i_l_e_-_c_o_n_t_e_n_t. Note that the
                     name is expected to be URL-encoded already.


              --data-urlencode can be used several times in a command line

              Examples:
               curl --data-urlencode name=val https://example.com
               curl --data-urlencode =encodethis https://example.com
               curl --data-urlencode name@file https://example.com
               curl --data-urlencode @fileonly https://example.com

              See also _-_d_, _-_-_d_a_t_a and _-_-_d_a_t_a_-_r_a_w.

       -d, --data <data>
              (HTTP MQTT) Sends the specified data in a POST request to the
              HTTP server, in the same way that a browser does when a user has
              filled in an HTML form and presses the submit button. This makes
              curl pass the data to the server using the content-type
              application/x-www-form-urlencoded. Compare to _-_F_, _-_-_f_o_r_m.

              _-_-_d_a_t_a_-_r_a_w is almost the same but does not have a special
              interpretation of the @ character. To post data purely binary,
              you should instead use the _-_-_d_a_t_a_-_b_i_n_a_r_y option. To URL-encode
              the value of a form field you may use _-_-_d_a_t_a_-_u_r_l_e_n_c_o_d_e.

              If any of these options is used more than once on the same
              command line, the data pieces specified are merged with a
              separating &-symbol. Thus, using '-d name=daniel -d skill=lousy'
              would generate a post chunk that looks like
              'name=daniel&skill=lousy'.

              If you start the data with the letter @, the rest should be a
              file name to read the data from, or - if you want curl to read
              the data from stdin. Posting data from a file named 'foobar'
              would thus be done with _-_d_, _-_-_d_a_t_a @foobar. When _-_d_, _-_-_d_a_t_a is
              told to read from a file like that, carriage returns and
              newlines are stripped out. If you do not want the @ character to
              have a special interpretation use _-_-_d_a_t_a_-_r_a_w instead.

              The data for this option is passed on to the server exactly as
              provided on the command line. curl does not convert, change or
              improve it. It is up to the user to provide the data in the
              correct form.

              --data can be used several times in a command line

              Examples:
               curl -d ""name=curl"" https://example.com
               curl -d ""name=curl"" -d ""tool=cmdline"" https://example.com
               curl -d @filename https://example.com

              See also _-_-_d_a_t_a_-_b_i_n_a_r_y, _-_-_d_a_t_a_-_u_r_l_e_n_c_o_d_e and _-_-_d_a_t_a_-_r_a_w. This
              option is mutually exclusive to _-_F_, _-_-_f_o_r_m and _-_I_, _-_-_h_e_a_d and
              _-_T_, _-_-_u_p_l_o_a_d_-_f_i_l_e.

       --delegation <LEVEL>
              (GSS/kerberos) Set LEVEL to tell the server what it is allowed
              to delegate when it comes to user credentials.

              none   Do not allow any delegation.

              policy Delegates if and only if the OK-AS-DELEGATE flag is set
                     in the Kerberos service ticket, which is a matter of
                     realm policy.

              always Unconditionally allow the server to delegate.


              If --delegation is provided several times, the last set value is
              used.

              Example:
               curl --delegation ""none"" https://example.com

              See also _-_k_, _-_-_i_n_s_e_c_u_r_e and _-_-_s_s_l.

       --digest
              (HTTP) Enables HTTP Digest authentication. This is an
              authentication scheme that prevents the password from being sent
              over the wire in clear text. Use this in combination with the
              normal _-_u_, _-_-_u_s_e_r option to set user name and password.

              Providing --digest multiple times has no extra effect.  Disable
              it again with --no-digest.

              Example:
               curl -u name:password --digest https://example.com

              See also _-_u_, _-_-_u_s_e_r, _-_-_p_r_o_x_y_-_d_i_g_e_s_t and _-_-_a_n_y_a_u_t_h. This option
              is mutually exclusive to _-_-_b_a_s_i_c and _-_-_n_t_l_m and _-_-_n_e_g_o_t_i_a_t_e.

       --disable-eprt
              (FTP) Tell curl to disable the use of the EPRT and LPRT commands
              when doing active FTP transfers. Curl normally first attempts to
              use EPRT before using PORT, but with this option, it uses PORT
              right away. EPRT is an extension to the original FTP protocol,
              and does not work on all servers, but enables more functionality
              in a better way than the traditional PORT command.

              --eprt can be used to explicitly enable EPRT again and --no-eprt
              is an alias for _-_-_d_i_s_a_b_l_e_-_e_p_r_t.

              If the server is accessed using IPv6, this option has no effect
              as EPRT is necessary then.

              Disabling EPRT only changes the active behavior. If you want to
              switch to passive mode you need to not use _-_P_, _-_-_f_t_p_-_p_o_r_t or
              force it with _-_-_f_t_p_-_p_a_s_v.

              Providing --disable-eprt multiple times has no extra effect.
              Disable it again with --no-disable-eprt.

              Example:
               curl --disable-eprt ftp://example.com/

              See also _-_-_d_i_s_a_b_l_e_-_e_p_s_v and _-_P_, _-_-_f_t_p_-_p_o_r_t.

       --disable-epsv
              (FTP) Tell curl to disable the use of the EPSV command when
              doing passive FTP transfers. Curl normally first attempts to use
              EPSV before PASV, but with this option, it does not try EPSV.

              --epsv can be used to explicitly enable EPSV again and --no-epsv
              is an alias for _-_-_d_i_s_a_b_l_e_-_e_p_s_v.

              If the server is an IPv6 host, this option has no effect as EPSV
              is necessary then.

              Disabling EPSV only changes the passive behavior. If you want to
              switch to active mode you need to use _-_P_, _-_-_f_t_p_-_p_o_r_t.

              Providing --disable-epsv multiple times has no extra effect.
              Disable it again with --no-disable-epsv.

              Example:
               curl --disable-epsv ftp://example.com/

              See also _-_-_d_i_s_a_b_l_e_-_e_p_r_t and _-_P_, _-_-_f_t_p_-_p_o_r_t.

       -q, --disable
              If used as the ffiirrsstt parameter on the command line, the _c_u_r_l_r_c
              config file is not read or used. See the _-_K_, _-_-_c_o_n_f_i_g for
              details on the default config file search path.

              Prior to 7.50.0 curl supported the short option name _q but not
              the long option name _d_i_s_a_b_l_e.

              Providing --disable multiple times has no extra effect.  Disable
              it again with --no-disable.

              Example:
               curl -q https://example.com

              See also _-_K_, _-_-_c_o_n_f_i_g.

       --disallow-username-in-url
              This tells curl to exit if passed a URL containing a username.
              This is probably most useful when the URL is being provided at
              runtime or similar.

              Providing --disallow-username-in-url multiple times has no extra
              effect.  Disable it again with --no-disallow-username-in-url.

              Example:
               curl --disallow-username-in-url https://example.com

              See also _-_-_p_r_o_t_o. Added in 7.61.0.

       --dns-interface <interface>
              (DNS) Tell curl to send outgoing DNS requests through
              <interface>. This option is a counterpart to _-_-_i_n_t_e_r_f_a_c_e (which
              does not affect DNS). The supplied string must be an interface
              name (not an address).

              If --dns-interface is provided several times, the last set value
              is used.

              Example:
               curl --dns-interface eth0 https://example.com

              See also _-_-_d_n_s_-_i_p_v_4_-_a_d_d_r and _-_-_d_n_s_-_i_p_v_6_-_a_d_d_r. _-_-_d_n_s_-_i_n_t_e_r_f_a_c_e
              requires that the underlying libcurl was built to support c-
              ares.

       --dns-ipv4-addr <address>
              (DNS) Tell curl to bind to a specific IP address when making
              IPv4 DNS requests, so that the DNS requests originate from this
              address. The argument should be a single IPv4 address.

              If --dns-ipv4-addr is provided several times, the last set value
              is used.

              Example:
               curl --dns-ipv4-addr 10.1.2.3 https://example.com

              See also _-_-_d_n_s_-_i_n_t_e_r_f_a_c_e and _-_-_d_n_s_-_i_p_v_6_-_a_d_d_r. _-_-_d_n_s_-_i_p_v_4_-_a_d_d_r
              requires that the underlying libcurl was built to support c-
              ares.

       --dns-ipv6-addr <address>
              (DNS) Tell curl to bind to a specific IP address when making
              IPv6 DNS requests, so that the DNS requests originate from this
              address. The argument should be a single IPv6 address.

              If --dns-ipv6-addr is provided several times, the last set value
              is used.

              Example:
               curl --dns-ipv6-addr 2a04:4e42::561 https://example.com

              See also _-_-_d_n_s_-_i_n_t_e_r_f_a_c_e and _-_-_d_n_s_-_i_p_v_4_-_a_d_d_r. _-_-_d_n_s_-_i_p_v_6_-_a_d_d_r
              requires that the underlying libcurl was built to support c-
              ares.

       --dns-servers <addresses>
              (DNS) Set the list of DNS servers to be used instead of the
              system default.  The list of IP addresses should be separated
              with commas. Port numbers may also optionally be given as
              _:_<_p_o_r_t_-_n_u_m_b_e_r_> after each IP address.

              If --dns-servers is provided several times, the last set value
              is used.

              Example:
               curl --dns-servers 192.168.0.1,192.168.0.2 https://example.com

              See also _-_-_d_n_s_-_i_n_t_e_r_f_a_c_e and _-_-_d_n_s_-_i_p_v_4_-_a_d_d_r. _-_-_d_n_s_-_s_e_r_v_e_r_s
              requires that the underlying libcurl was built to support c-
              ares.

       --doh-cert-status
              Same as _-_-_c_e_r_t_-_s_t_a_t_u_s but used for DoH (DNS-over-HTTPS).

              Providing --doh-cert-status multiple times has no extra effect.
              Disable it again with --no-doh-cert-status.

              Example:
               curl --doh-cert-status --doh-url https://doh.example https://example.com

              See also _-_-_d_o_h_-_i_n_s_e_c_u_r_e. Added in 7.76.0.

       --doh-insecure
              Same as _-_k_, _-_-_i_n_s_e_c_u_r_e but used for DoH (DNS-over-HTTPS).

              Providing --doh-insecure multiple times has no extra effect.
              Disable it again with --no-doh-insecure.

              Example:
               curl --doh-insecure --doh-url https://doh.example https://example.com

              See also _-_-_d_o_h_-_u_r_l. Added in 7.76.0.

       --doh-url <URL>
              Specifies which DNS-over-HTTPS (DoH) server to use to resolve
              hostnames, instead of using the default name resolver mechanism.
              The URL must be HTTPS.

              Some SSL options that you set for your transfer also applies to
              DoH since the name lookups take place over SSL. However, the
              certificate verification settings are not inherited but are
              controlled separately via _-_-_d_o_h_-_i_n_s_e_c_u_r_e and _-_-_d_o_h_-_c_e_r_t_-_s_t_a_t_u_s.

              This option is unset if an empty string """" is used as the URL.
              (Added in 7.85.0)

              If --doh-url is provided several times, the last set value is
              used.

              Example:
               curl --doh-url https://doh.example https://example.com

              See also _-_-_d_o_h_-_i_n_s_e_c_u_r_e. Added in 7.62.0.

       -D, --dump-header <filename>
              (HTTP FTP) Write the received protocol headers to the specified
              file. If no headers are received, the use of this option creates
              an empty file.

              When used in FTP, the FTP server response lines are considered
              being ""headers"" and thus are saved there.

              Having multiple transfers in one set of operations (i.e. the
              URLs in one _-_:_, _-_-_n_e_x_t clause), appends them to the same file,
              separated by a blank line.

              If --dump-header is provided several times, the last set value
              is used.

              Example:
               curl --dump-header store.txt https://example.com

              See also _-_o_, _-_-_o_u_t_p_u_t.

       --egd-file <file>
              (TLS) Deprecated option (added in 7.84.0). Prior to that it only
              had an effect on curl if built to use old versions of OpenSSL.

              Specify the path name to the Entropy Gathering Daemon socket.
              The socket is used to seed the random engine for SSL
              connections.

              If --egd-file is provided several times, the last set value is
              used.

              Example:
               curl --egd-file /random/here https://example.com

              See also _-_-_r_a_n_d_o_m_-_f_i_l_e.

       --engine <name>
              (TLS) Select the OpenSSL crypto engine to use for cipher
              operations. Use _-_-_e_n_g_i_n_e list to print a list of build-time
              supported engines. Note that not all (and possibly none) of the
              engines may be available at runtime.

              If --engine is provided several times, the last set value is
              used.

              Example:
               curl --engine flavor https://example.com

              See also _-_-_c_i_p_h_e_r_s and _-_-_c_u_r_v_e_s.

       --etag-compare <file>
              (HTTP) This option makes a conditional HTTP request for the
              specific ETag read from the given file by sending a custom
              If-None-Match header using the stored ETag.

              For correct results, make sure that the specified file contains
              only a single line with the desired ETag. An empty file is
              parsed as an empty ETag.

              Use the option _-_-_e_t_a_g_-_s_a_v_e to first save the ETag from a
              response, and then use this option to compare against the saved
              ETag in a subsequent request.

              If --etag-compare is provided several times, the last set value
              is used.

              Example:
               curl --etag-compare etag.txt https://example.com

              See also _-_-_e_t_a_g_-_s_a_v_e and _-_z_, _-_-_t_i_m_e_-_c_o_n_d. Added in 7.68.0.

       --etag-save <file>
              (HTTP) This option saves an HTTP ETag to the specified file. An
              ETag is a caching related header, usually returned in a
              response.

              If no ETag is sent by the server, an empty file is created.

              If --etag-save is provided several times, the last set value is
              used.

              Example:
               curl --etag-save storetag.txt https://example.com

              See also _-_-_e_t_a_g_-_c_o_m_p_a_r_e. Added in 7.68.0.

       --expect100-timeout <seconds>
              (HTTP) Maximum time in seconds that you allow curl to wait for a
              100-continue response when curl emits an Expects: 100-continue
              header in its request. By default curl waits one second. This
              option accepts decimal values! When curl stops waiting, it
              continues as if the response has been received.

              The decimal value needs to provided using a dot (.) as decimal
              separator - not the local version even if it might be using
              another separator.

              If --expect100-timeout is provided several times, the last set
              value is used.

              Example:
               curl --expect100-timeout 2.5 -T file https://example.com

              See also _-_-_c_o_n_n_e_c_t_-_t_i_m_e_o_u_t.

       --fail-early
              Fail and exit on the first detected transfer error.

              When curl is used to do multiple transfers on the command line,
              it attempts to operate on each given URL, one by one. By
              default, it ignores errors if there are more URLs given and the
              last URL's success determines the error code curl returns. So
              early failures are ""hidden"" by subsequent successful transfers.

              Using this option, curl instead returns an error on the first
              transfer that fails, independent of the amount of URLs that are
              given on the command line. This way, no transfer failures go
              undetected by scripts and similar.

              This option does not imply _-_f_, _-_-_f_a_i_l, which causes transfers to
              fail due to the server's HTTP status code. You can combine the
              two options, however note _-_f_, _-_-_f_a_i_l is not global and is
              therefore contained by _-_:_, _-_-_n_e_x_t.

              This option is global and does not need to be specified for each
              use of --next.

              Providing --fail-early multiple times has no extra effect.
              Disable it again with --no-fail-early.

              Example:
               curl --fail-early https://example.com https://two.example

              See also _-_f_, _-_-_f_a_i_l and _-_-_f_a_i_l_-_w_i_t_h_-_b_o_d_y. Added in 7.52.0.

       --fail-with-body
              (HTTP) Return an error on server errors where the HTTP response
              code is 400 or greater). In normal cases when an HTTP server
              fails to deliver a document, it returns an HTML document stating
              so (which often also describes why and more). This flag allows
              curl to output and save that content but also to return error
              22.

              This is an alternative option to _-_f_, _-_-_f_a_i_l which makes curl
              fail for the same circumstances but without saving the content.

              Providing --fail-with-body multiple times has no extra effect.
              Disable it again with --no-fail-with-body.

              Example:
               curl --fail-with-body https://example.com

              See also _-_f_, _-_-_f_a_i_l and _-_-_f_a_i_l_-_e_a_r_l_y. This option is mutually
              exclusive to _-_f_, _-_-_f_a_i_l. Added in 7.76.0.

       -f, --fail
              (HTTP) Fail fast with no output at all on server errors. This is
              useful to enable scripts and users to better deal with failed
              attempts. In normal cases when an HTTP server fails to deliver a
              document, it returns an HTML document stating so (which often
              also describes why and more). This flag prevents curl from
              outputting that and return error 22.

              This method is not fail-safe and there are occasions where
              non-successful response codes slip through, especially when
              authentication is involved (response codes 401 and 407).

              Providing --fail multiple times has no extra effect.  Disable it
              again with --no-fail.

              Example:
               curl --fail https://example.com

              See also _-_-_f_a_i_l_-_w_i_t_h_-_b_o_d_y and _-_-_f_a_i_l_-_e_a_r_l_y. This option is
              mutually exclusive to _-_-_f_a_i_l_-_w_i_t_h_-_b_o_d_y.

       --false-start
              (TLS) Tells curl to use false start during the TLS handshake.
              False start is a mode where a TLS client starts sending
              application data before verifying the server's Finished message,
              thus saving a round trip when performing a full handshake.

              This is currently only implemented in the Secure Transport (on
              iOS 7.0 or later, or OS X 10.9 or later) backend.

              Providing --false-start multiple times has no extra effect.
              Disable it again with --no-false-start.

              Example:
               curl --false-start https://example.com

              See also _-_-_t_c_p_-_f_a_s_t_o_p_e_n.

       --form-escape
              (HTTP) Tells curl to pass on names of multipart form fields and
              files using backslash-escaping instead of percent-encoding.

              If --form-escape is provided several times, the last set value
              is used.

              Example:
               curl --form-escape -F 'field\name=curl' -F 'file=@load""this' https://example.com

              See also _-_F_, _-_-_f_o_r_m. Added in 7.81.0.

       --form-string <name=string>
              (HTTP SMTP IMAP) Similar to _-_F_, _-_-_f_o_r_m except that the value
              string for the named parameter is used literally. Leading '@'
              and '<' characters, and the ';type=' string in the value have no
              special meaning. Use this in preference to _-_F_, _-_-_f_o_r_m if there
              is any possibility that the string value may accidentally
              trigger the '@' or '<' features of _-_F_, _-_-_f_o_r_m.

              --form-string can be used several times in a command line

              Example:
               curl --form-string ""data"" https://example.com

              See also _-_F_, _-_-_f_o_r_m.

       -F, --form <name=content>
              (HTTP SMTP IMAP) For HTTP protocol family, this lets curl
              emulate a filled-in form in which a user has pressed the submit
              button. This causes curl to POST data using the Content-Type
              multipart/form-data according to RFC 2388.

              For SMTP and IMAP protocols, this is the means to compose a
              multipart mail message to transmit.

              This enables uploading of binary files etc. To force the
              'content' part to be a file, prefix the file name with an @
              sign. To just get the content part from a file, prefix the file
              name with the symbol <. The difference between @ and < is then
              that @ makes a file get attached in the post as a file upload,
              while the < makes a text field and just get the contents for
              that text field from a file.

              Tell curl to read content from stdin instead of a file by using
              - as filename. This goes for both @ and < constructs. When stdin
              is used, the contents is buffered in memory first by curl to
              determine its size and allow a possible resend. Defining a
              part's data from a named non-regular file (such as a named pipe
              or similar) is not subject to buffering and is instead read at
              transmission time; since the full size is unknown before the
              transfer starts, such data is sent as chunks by HTTP and
              rejected by IMAP.

              Example: send an image to an HTTP server, where 'profile' is the
              name of the form-field to which the file ppoorrttrraaiitt..jjppgg is the
              input:

              curl -F profile=@portrait.jpg https://example.com/upload.cgi

              Example: send your name and shoe size in two text fields to the
              server:

              curl -F name=John -F shoesize=11 https://example.com/

              Example: send your essay in a text field to the server. Send it
              as a plain text field, but get the contents for it from a local
              file:

              curl -F ""story=<hugefile.txt"" https://example.com/

              You can also tell curl what Content-Type to use by using
              'type=', in a manner similar to:

              curl -F ""web=@index.html;type=text/html"" example.com

              or

              curl -F ""name=daniel;type=text/foo"" example.com

              You can also explicitly change the name field of a file upload
              part by setting filename=, like this:

              curl -F ""file=@localfile;filename=nameinpost"" example.com

              If filename/path contains ',' or ';', it must be quoted by
              double-quotes like:

              curl -F ""file=@\""local,file\"";filename=\""name;in;post\"""" example.com

              or

              curl -F 'file=@""local,file"";filename=""name;in;post""' example.com

              Note that if a filename/path is quoted by double-quotes, any
              double-quote or backslash within the filename must be escaped by
              backslash.

              Quoting must also be applied to non-file data if it contains
              semicolons, leading/trailing spaces or leading double quotes:

              curl -F 'colors=""red; green; blue"";type=text/x-myapp' example.com

              You can add custom headers to the field by setting headers=,
              like

              curl -F ""submit=OK;headers=\""X-submit-type: OK\"""" example.com

              or

              curl -F ""submit=OK;headers=@headerfile"" example.com

              The headers= keyword may appear more that once and above notes
              about quoting apply. When headers are read from a file, Empty
              lines and lines starting with '#' are comments and ignored; each
              header can be folded by splitting between two words and starting
              the continuation line with a space; embedded carriage-returns
              and trailing spaces are stripped.  Here is an example of a
              header file contents:

              # This file contain two headers.
              X-header-1: this is a header

              # The following header is folded.
              X-header-2: this is
               another header

              To support sending multipart mail messages, the syntax is
              extended as follows:

              - name can be omitted: the equal sign is the first character of
              the argument,

              - if data starts with '(', this signals to start a new
              multipart: it can be followed by a content type specification.

              - a multipart can be terminated with a '=)' argument.

              Example: the following command sends an SMTP mime email
              consisting in an inline part in two alternative formats: plain
              text and HTML. It attaches a text file:

              curl -F '=(;type=multipart/alternative' \
                   -F '=plain text message' \
                   -F '= <body>HTML message</body>;type=text/html' \
                   -F '=)' -F '=@textfile.txt' ...  smtp://example.com

              Data can be encoded for transfer using encoder=. Available
              encodings are _b_i_n_a_r_y and _8_b_i_t that do nothing else than adding
              the corresponding Content-Transfer-Encoding header, _7_b_i_t that
              only rejects 8-bit characters with a transfer error,
              _q_u_o_t_e_d_-_p_r_i_n_t_a_b_l_e and _b_a_s_e_6_4 that encodes data according to the
              corresponding schemes, limiting lines length to 76 characters.

              Example: send multipart mail with a quoted-printable text
              message and a base64 attached file:

              curl -F '=text message;encoder=quoted-printable' \
                   -F '=@localfile;encoder=base64' ... smtp://example.com

              See further examples and details in the MANUAL.

              --form can be used several times in a command line

              Example:
               curl --form ""name=curl"" --form ""file=@loadthis"" https://example.com

              See also _-_d_, _-_-_d_a_t_a, _-_-_f_o_r_m_-_s_t_r_i_n_g and _-_-_f_o_r_m_-_e_s_c_a_p_e. This
              option is mutually exclusive to _-_d_, _-_-_d_a_t_a and _-_I_, _-_-_h_e_a_d and
              _-_T_, _-_-_u_p_l_o_a_d_-_f_i_l_e.

       --ftp-account <data>
              (FTP) When an FTP server asks for ""account data"" after user name
              and password has been provided, this data is sent off using the
              ACCT command.

              If --ftp-account is provided several times, the last set value
              is used.

              Example:
               curl --ftp-account ""mr.robot"" ftp://example.com/

              See also _-_u_, _-_-_u_s_e_r.

       --ftp-alternative-to-user <command>
              (FTP) If authenticating with the USER and PASS commands fails,
              send this command.  When connecting to Tumbleweed's Secure
              Transport server over FTPS using a client certificate, using
              ""SITE AUTH"" tells the server to retrieve the username from the
              certificate.

              If --ftp-alternative-to-user is provided several times, the last
              set value is used.

              Example:
               curl --ftp-alternative-to-user ""U53r"" ftp://example.com

              See also _-_-_f_t_p_-_a_c_c_o_u_n_t and _-_u_, _-_-_u_s_e_r.

       --ftp-create-dirs
              (FTP SFTP) When an FTP or SFTP URL/operation uses a path that
              does not currently exist on the server, the standard behavior of
              curl is to fail. Using this option, curl instead attempts to
              create missing directories.

              Providing --ftp-create-dirs multiple times has no extra effect.
              Disable it again with --no-ftp-create-dirs.

              Example:
               curl --ftp-create-dirs -T file ftp://example.com/remote/path/file

              See also _-_-_c_r_e_a_t_e_-_d_i_r_s.

       --ftp-method <method>
              (FTP) Control what method curl should use to reach a file on an
              FTP(S) server. The method argument should be one of the
              following alternatives:

              multicwd
                     curl does a single CWD operation for each path part in
                     the given URL. For deep hierarchies this means many
                     commands. This is how RFC 1738 says it should be done.
                     This is the default but the slowest behavior.

              nocwd  curl does no CWD at all. curl does SIZE, RETR, STOR etc
                     and give a full path to the server for all these
                     commands. This is the fastest behavior.

              singlecwd
                     curl does one CWD with the full target directory and then
                     operates on the file ""normally"" (like in the multicwd
                     case). This is somewhat more standards compliant than
                     'nocwd' but without the full penalty of 'multicwd'.


              If --ftp-method is provided several times, the last set value is
              used.

              Examples:
               curl --ftp-method multicwd ftp://example.com/dir1/dir2/file
               curl --ftp-method nocwd ftp://example.com/dir1/dir2/file
               curl --ftp-method singlecwd ftp://example.com/dir1/dir2/file

              See also _-_l_, _-_-_l_i_s_t_-_o_n_l_y.

       --ftp-pasv
              (FTP) Use passive mode for the data connection. Passive is the
              internal default behavior, but using this option can be used to
              override a previous _-_P_, _-_-_f_t_p_-_p_o_r_t option.

              Reversing an enforced passive really is not doable but you must
              then instead enforce the correct _-_P_, _-_-_f_t_p_-_p_o_r_t again.

              Passive mode means that curl tries the EPSV command first and
              then PASV, unless _-_-_d_i_s_a_b_l_e_-_e_p_s_v is used.

              Providing --ftp-pasv multiple times has no extra effect.
              Disable it again with --no-ftp-pasv.

              Example:
               curl --ftp-pasv ftp://example.com/

              See also _-_-_d_i_s_a_b_l_e_-_e_p_s_v.

       -P, --ftp-port <address>
              (FTP) Reverses the default initiator/listener roles when
              connecting with FTP. This option makes curl use active mode.
              curl then tells the server to connect back to the client's
              specified address and port, while passive mode asks the server
              to setup an IP address and port for it to connect to. <address>
              should be one of:

              interface
                     e.g. eetthh00 to specify which interface's IP address you
                     want to use (Unix only)

              IP address
                     e.g. 119922..116688..1100..11 to specify the exact IP address

              host name
                     e.g. mmyy..hhoosstt..ddoommaaiinn to specify the machine

              -      make curl pick the same IP address that is already used
                     for the control connection. This is the recommended
                     choice.

              Disable the use of PORT with _-_-_f_t_p_-_p_a_s_v. Disable the attempt to
              use the EPRT command instead of PORT by using _-_-_d_i_s_a_b_l_e_-_e_p_r_t.
              EPRT is really PORT++.

              You can also append "":[start]-[end]"" to the right of the
              address, to tell curl what TCP port range to use. That means you
              specify a port range, from a lower to a higher number. A single
              number works as well, but do note that it increases the risk of
              failure since the port may not be available.



              If --ftp-port is provided several times, the last set value is
              used.

              Examples:
               curl -P - ftp:/example.com
               curl -P eth0 ftp:/example.com
               curl -P 192.168.0.2 ftp:/example.com

              See also _-_-_f_t_p_-_p_a_s_v and _-_-_d_i_s_a_b_l_e_-_e_p_r_t.

       --ftp-pret
              (FTP) Tell curl to send a PRET command before PASV (and EPSV).
              Certain FTP servers, mainly drftpd, require this non-standard
              command for directory listings as well as up and downloads in
              PASV mode.

              Providing --ftp-pret multiple times has no extra effect.
              Disable it again with --no-ftp-pret.

              Example:
               curl --ftp-pret ftp://example.com/

              See also _-_P_, _-_-_f_t_p_-_p_o_r_t and _-_-_f_t_p_-_p_a_s_v.

       --ftp-skip-pasv-ip
              (FTP) Tell curl to not use the IP address the server suggests in
              its response to curl's PASV command when curl connects the data
              connection. Instead curl reuses the same IP address it already
              uses for the control connection.

              This option is enabled by default (added in 7.74.0).

              This option has no effect if PORT, EPRT or EPSV is used instead
              of PASV.

              Providing --ftp-skip-pasv-ip multiple times has no extra effect.
              Disable it again with --no-ftp-skip-pasv-ip.

              Example:
               curl --ftp-skip-pasv-ip ftp://example.com/

              See also _-_-_f_t_p_-_p_a_s_v.

       --ftp-ssl-ccc-mode <active/passive>
              (FTP) Sets the CCC mode. The passive mode does not initiate the
              shutdown, but instead waits for the server to do it, and does
              not reply to the shutdown from the server. The active mode
              initiates the shutdown and waits for a reply from the server.

              Providing --ftp-ssl-ccc-mode multiple times has no extra effect.
              Disable it again with --no-ftp-ssl-ccc-mode.

              Example:
               curl --ftp-ssl-ccc-mode active --ftp-ssl-ccc ftps://example.com/

              See also _-_-_f_t_p_-_s_s_l_-_c_c_c.

       --ftp-ssl-ccc
              (FTP) Use CCC (Clear Command Channel) Shuts down the SSL/TLS
              layer after authenticating. The rest of the control channel
              communication is be unencrypted. This allows NAT routers to
              follow the FTP transaction. The default mode is passive.

              Providing --ftp-ssl-ccc multiple times has no extra effect.
              Disable it again with --no-ftp-ssl-ccc.

              Example:
               curl --ftp-ssl-ccc ftps://example.com/

              See also _-_-_s_s_l and _-_-_f_t_p_-_s_s_l_-_c_c_c_-_m_o_d_e.

       --ftp-ssl-control
              (FTP) Require SSL/TLS for the FTP login, clear for transfer.
              Allows secure authentication, but non-encrypted data transfers
              for efficiency. Fails the transfer if the server does not
              support SSL/TLS.

              Providing --ftp-ssl-control multiple times has no extra effect.
              Disable it again with --no-ftp-ssl-control.

              Example:
               curl --ftp-ssl-control ftp://example.com

              See also _-_-_s_s_l.

       -G, --get
              (HTTP) When used, this option makes all data specified with _-_d_,
              _-_-_d_a_t_a, _-_-_d_a_t_a_-_b_i_n_a_r_y or _-_-_d_a_t_a_-_u_r_l_e_n_c_o_d_e to be used in an HTTP
              GET request instead of the POST request that otherwise would be
              used. The data is appended to the URL with a '?' separator.

              If used in combination with _-_I_, _-_-_h_e_a_d, the POST data is instead
              appended to the URL with a HEAD request.

              Providing --get multiple times has no extra effect.  Disable it
              again with --no-get.

              Examples:
               curl --get https://example.com
               curl --get -d ""tool=curl"" -d ""age=old"" https://example.com
               curl --get -I -d ""tool=curl"" https://example.com

              See also _-_d_, _-_-_d_a_t_a and _-_X_, _-_-_r_e_q_u_e_s_t.

       -g, --globoff
              This option switches off the ""URL globbing parser"". When you set
              this option, you can specify URLs that contain the letters {}[]
              without having curl itself interpret them. Note that these
              letters are not normal legal URL contents but they should be
              encoded according to the URI standard.

              Providing --globoff multiple times has no extra effect.  Disable
              it again with --no-globoff.

              Example:
               curl -g ""https://example.com/{[]}}}}""

              See also _-_K_, _-_-_c_o_n_f_i_g and _-_q_, _-_-_d_i_s_a_b_l_e.

       --happy-eyeballs-timeout-ms <milliseconds>
              Happy Eyeballs is an algorithm that attempts to connect to both
              IPv4 and IPv6 addresses for dual-stack hosts, giving IPv6 a
              head-start of the specified number of milliseconds. If the IPv6
              address cannot be connected to within that time, then a
              connection attempt is made to the IPv4 address in parallel. The
              first connection to be established is the one that is used.

              The range of suggested useful values is limited. Happy Eyeballs
              RFC 6555 says ""It is RECOMMENDED that connection attempts be
              paced 150-250 ms apart to balance human factors against network
              load."" libcurl currently defaults to 200 ms. Firefox and Chrome
              currently default to 300 ms.

              If --happy-eyeballs-timeout-ms is provided several times, the
              last set value is used.

              Example:
               curl --happy-eyeballs-timeout-ms 500 https://example.com

              See also _-_m_, _-_-_m_a_x_-_t_i_m_e and _-_-_c_o_n_n_e_c_t_-_t_i_m_e_o_u_t. Added in 7.59.0.

       --haproxy-clientip <IP address>
              (HTTP) Sets a client IP in HAProxy PROXY protocol v1 header at
              the beginning of the connection.

              For valid requests, IPv4 addresses must be indicated as a series
              of exactly 4 integers in the range [0..255] inclusive written in
              decimal representation separated by exactly one dot between each
              other. Heading zeroes are not permitted in front of numbers in
              order to avoid any possible confusion with octal numbers. IPv6
              addresses must be indicated as series of 4 hexadecimal digits
              (upper or lower case) delimited by colons between each other,
              with the acceptance of one double colon sequence to replace the
              largest acceptable range of consecutive zeroes. The total number
              of decoded bits must exactly be 128.

              Otherwise, any string can be accepted for the client IP and get
              sent.

              It replaces _-_-_h_a_p_r_o_x_y_-_p_r_o_t_o_c_o_l if used, it is not necessary to
              specify both flags.

              If --haproxy-clientip is provided several times, the last set
              value is used.

              Example:
               curl --haproxy-clientip $IP

              See also _-_x_, _-_-_p_r_o_x_y. Added in 8.2.0.

       --haproxy-protocol
              (HTTP) Send a HAProxy PROXY protocol v1 header at the beginning
              of the connection. This is used by some load balancers and
              reverse proxies to indicate the client's true IP address and
              port.

              This option is primarily useful when sending test requests to a
              service that expects this header.

              Providing --haproxy-protocol multiple times has no extra effect.
              Disable it again with --no-haproxy-protocol.

              Example:
               curl --haproxy-protocol https://example.com

              See also _-_x_, _-_-_p_r_o_x_y. Added in 7.60.0.

       -I, --head
              (HTTP FTP FILE) Fetch the headers only! HTTP-servers feature the
              command HEAD which this uses to get nothing but the header of a
              document. When used on an FTP or FILE file, curl displays the
              file size and last modification time only.

              Providing --head multiple times has no extra effect.  Disable it
              again with --no-head.

              Example:
               curl -I https://example.com

              See also _-_G_, _-_-_g_e_t, _-_v_, _-_-_v_e_r_b_o_s_e and _-_-_t_r_a_c_e_-_a_s_c_i_i.

       -H, --header <header/@file>
              (HTTP IMAP SMTP) Extra header to include in information sent.
              When used within an HTTP request, it is added to the regular
              request headers.

              For an IMAP or SMTP MIME uploaded mail built with _-_F_, _-_-_f_o_r_m
              options, it is prepended to the resulting MIME document,
              effectively including it at the mail global level. It does not
              affect raw uploaded mails (Added in 7.56.0).

              You may specify any number of extra headers. Note that if you
              should add a custom header that has the same name as one of the
              internal ones curl would use, your externally set header is used
              instead of the internal one. This allows you to make even
              trickier stuff than curl would normally do. You should not
              replace internally set headers without knowing perfectly well
              what you are doing. Remove an internal header by giving a
              replacement without content on the right side of the colon, as
              in: -H ""Host:"". If you send the custom header with no-value then
              its header must be terminated with a semicolon, such as \-H
              ""X-Custom-Header;"" to send ""X-Custom-Header:"".

              curl makes sure that each header you add/replace is sent with
              the proper end-of-line marker, you should thus nnoott add that as a
              part of the header content: do not add newlines or carriage
              returns, they only mess things up for you. curl passes on the
              verbatim string you give it without any filter or other safe
              guards. That includes white space and control characters.

              This option can take an argument in @filename style, which then
              adds a header for each line in the input file. Using @- makes
              curl read the header file from stdin. Added in 7.55.0.

              Please note that most anti-spam utilities check the presence and
              value of several MIME mail headers: these are ""From:"", ""To:"",
              ""Date:"" and ""Subject:"" among others and should be added with
              this option.

              You need _-_-_p_r_o_x_y_-_h_e_a_d_e_r to send custom headers intended for an
              HTTP proxy. Added in 7.37.0.

              Passing on a ""Transfer-Encoding: chunked"" header when doing an
              HTTP request with a request body, makes curl send the data using
              chunked encoding.

              WWAARRNNIINNGG: headers set with this option are set in all HTTP
              requests - even after redirects are followed, like when told
              with _-_L_, _-_-_l_o_c_a_t_i_o_n. This can lead to the header being sent to
              other hosts than the original host, so sensitive headers should
              be used with caution combined with following redirects.

              --header can be used several times in a command line

              Examples:
               curl -H ""X-First-Name: Joe"" https://example.com
               curl -H ""User-Agent: yes-please/2000"" https://example.com
               curl -H ""Host:"" https://example.com
               curl -H @headers.txt https://example.com

              See also _-_A_, _-_-_u_s_e_r_-_a_g_e_n_t and _-_e_, _-_-_r_e_f_e_r_e_r.

       -h, --help <category>
              Usage help. This lists all curl command line options within the
              given ccaatteeggoorryy.

              If no argument is provided, curl displays only the most
              important command line arguments.

              For category aallll, curl displays help for all options.

              If ccaatteeggoorryy is specified, curl displays all available help
              categories.

              Example:
               curl --help all

              See also _-_v_, _-_-_v_e_r_b_o_s_e.

       --hostpubmd5 <md5>
              (SFTP SCP) Pass a string containing 32 hexadecimal digits. The
              string should be the 128 bit MMDD55 checksum of the remote host's
              public key, curl refuses the connection with the host unless the
              checksums match.

              If --hostpubmd5 is provided several times, the last set value is
              used.

              Example:
               curl --hostpubmd5 e5c1c49020640a5ab0f2034854c321a8 sftp://example.com/

              See also _-_-_h_o_s_t_p_u_b_s_h_a_2_5_6.

       --hostpubsha256 <sha256>
              (SFTP SCP) Pass a string containing a Base64-encoded SHA256 hash
              of the remote host's public key. Curl refuses the connection
              with the host unless the hashes match.

              This feature requires libcurl to be built with libssh2 and does
              not work with other SSH backends.

              If --hostpubsha256 is provided several times, the last set value
              is used.

              Example:
               curl --hostpubsha256 NDVkMTQxMGQ1ODdmMjQ3MjczYjAyOTY5MmRkMjVmNDQ= sftp://example.com/

              See also _-_-_h_o_s_t_p_u_b_m_d_5. Added in 7.80.0.

       --hsts <file name>
              (HTTPS) This option enables HSTS for the transfer. If the file
              name points to an existing HSTS cache file, that is used. After
              a completed transfer, the cache is saved to the file name again
              if it has been modified.

              If curl is told to use HTTP:// for a transfer involving a host
              name that exists in the HSTS cache, it upgrades the transfer to
              use HTTPS. Each HSTS cache entry has an individual life time
              after which the upgrade is no longer performed.

              Specify a """" file name (zero length) to avoid loading/saving and
              make curl just handle HSTS in memory.

              If this option is used several times, curl loads contents from
              all the files but the last one is used for saving.

              --hsts can be used several times in a command line

              Example:
               curl --hsts cache.txt https://example.com

              See also _-_-_p_r_o_t_o. Added in 7.74.0.

       --http0.9
              (HTTP) Tells curl to be fine with HTTP version 0.9 response.

              HTTP/0.9 is a response without headers and therefore you can
              also connect with this to non-HTTP servers and still get a
              response since curl simply transparently downgrades - if
              allowed.

              HTTP/0.9 is disabled by default (added in 7.66.0)

              Providing --http0.9 multiple times has no extra effect.  Disable
              it again with --no-http0.9.

              Example:
               curl --http0.9 https://example.com

              See also _-_-_h_t_t_p_1_._1, _-_-_h_t_t_p_2 and _-_-_h_t_t_p_3. Added in 7.64.0.

       -0, --http1.0
              (HTTP) Tells curl to use HTTP version 1.0 instead of using its
              internally preferred HTTP version.

              Providing --http1.0 multiple times has no extra effect.

              Example:
               curl --http1.0 https://example.com

              See also _-_-_h_t_t_p_0_._9 and _-_-_h_t_t_p_1_._1. This option is mutually
              exclusive to _-_-_h_t_t_p_1_._1 and _-_-_h_t_t_p_2 and _-_-_h_t_t_p_2_-_p_r_i_o_r_-_k_n_o_w_l_e_d_g_e
              and _-_-_h_t_t_p_3.

       --http1.1
              (HTTP) Tells curl to use HTTP version 1.1.

              Providing --http1.1 multiple times has no extra effect.

              Example:
               curl --http1.1 https://example.com

              See also _-_0_, _-_-_h_t_t_p_1_._0 and _-_-_h_t_t_p_0_._9. This option is mutually
              exclusive to _-_0_, _-_-_h_t_t_p_1_._0 and _-_-_h_t_t_p_2 and
              _-_-_h_t_t_p_2_-_p_r_i_o_r_-_k_n_o_w_l_e_d_g_e and _-_-_h_t_t_p_3.

       --http2-prior-knowledge
              (HTTP) Tells curl to issue its non-TLS HTTP requests using
              HTTP/2 without HTTP/1.1 Upgrade. It requires prior knowledge
              that the server supports HTTP/2 straight away. HTTPS requests
              still do HTTP/2 the standard way with negotiated protocol
              version in the TLS handshake.

              Providing --http2-prior-knowledge multiple times has no extra
              effect.  Disable it again with --no-http2-prior-knowledge.

              Example:
               curl --http2-prior-knowledge https://example.com

              See also _-_-_h_t_t_p_2 and _-_-_h_t_t_p_3. _-_-_h_t_t_p_2_-_p_r_i_o_r_-_k_n_o_w_l_e_d_g_e requires
              that the underlying libcurl was built to support HTTP/2. This
              option is mutually exclusive to _-_-_h_t_t_p_1_._1 and _-_0_, _-_-_h_t_t_p_1_._0 and
              _-_-_h_t_t_p_2 and _-_-_h_t_t_p_3.

       --http2
              (HTTP) Tells curl to use HTTP version 2.

              For HTTPS, this means curl negotiates HTTP/2 in the TLS
              handshake. curl does this by default.

              For HTTP, this means curl attempts to upgrade the request to
              HTTP/2 using the Upgrade: request header.

              When curl uses HTTP/2 over HTTPS, it does not itself insist on
              TLS 1.2 or higher even though that is required by the
              specification. A user can add this version requirement with
              _-_-_t_l_s_v_1_._2.

              Providing --http2 multiple times has no extra effect.

              Example:
               curl --http2 https://example.com

              See also _-_-_h_t_t_p_1_._1, _-_-_h_t_t_p_3 and _-_-_n_o_-_a_l_p_n. _-_-_h_t_t_p_2 requires that
              the underlying libcurl was built to support HTTP/2. This option
              is mutually exclusive to _-_-_h_t_t_p_1_._1 and _-_0_, _-_-_h_t_t_p_1_._0 and
              _-_-_h_t_t_p_2_-_p_r_i_o_r_-_k_n_o_w_l_e_d_g_e and _-_-_h_t_t_p_3.

       --http3-only
              (HTTP) Instructs curl to use HTTP/3 to the host in the URL, with
              no fallback to earlier HTTP versions. HTTP/3 can only be used
              for HTTPS and not for HTTP URLs. For HTTP, this option triggers
              an error.

              This option allows a user to avoid using the Alt-Svc method of
              upgrading to HTTP/3 when you know that the target speaks HTTP/3
              on the given host and port.

              This option makes curl fail if a QUIC connection cannot be
              established, it does not attempt any other HTTP versions on its
              own. Use _-_-_h_t_t_p_3 for similar functionality _w_i_t_h a fallback.

              Providing --http3-only multiple times has no extra effect.

              Example:
               curl --http3-only https://example.com

              See also _-_-_h_t_t_p_1_._1, _-_-_h_t_t_p_2 and _-_-_h_t_t_p_3. _-_-_h_t_t_p_3_-_o_n_l_y requires
              that the underlying libcurl was built to support HTTP/3. This
              option is mutually exclusive to _-_-_h_t_t_p_1_._1 and _-_0_, _-_-_h_t_t_p_1_._0 and
              _-_-_h_t_t_p_2 and _-_-_h_t_t_p_2_-_p_r_i_o_r_-_k_n_o_w_l_e_d_g_e and _-_-_h_t_t_p_3. Added in
              7.88.0.

       --http3
              (HTTP) Tells curl to try HTTP/3 to the host in the URL, but
              fallback to earlier HTTP versions if the HTTP/3 connection
              establishment fails. HTTP/3 is only available for HTTPS and not
              for HTTP URLs.

              This option allows a user to avoid using the Alt-Svc method of
              upgrading to HTTP/3 when you know that the target speaks HTTP/3
              on the given host and port.

              When asked to use HTTP/3, curl issues a separate attempt to use
              older HTTP versions with a slight delay, so if the HTTP/3
              transfer fails or is slow, curl still tries to proceed with an
              older HTTP version.

              Use _-_-_h_t_t_p_3_-_o_n_l_y for similar functionality _w_i_t_h_o_u_t a fallback.

              Providing --http3 multiple times has no extra effect.

              Example:
               curl --http3 https://example.com

              See also _-_-_h_t_t_p_1_._1 and _-_-_h_t_t_p_2. _-_-_h_t_t_p_3 requires that the
              underlying libcurl was built to support HTTP/3. This option is
              mutually exclusive to _-_-_h_t_t_p_1_._1 and _-_0_, _-_-_h_t_t_p_1_._0 and _-_-_h_t_t_p_2
              and _-_-_h_t_t_p_2_-_p_r_i_o_r_-_k_n_o_w_l_e_d_g_e and _-_-_h_t_t_p_3_-_o_n_l_y. Added in 7.66.0.

       --ignore-content-length
              (FTP HTTP) For HTTP, Ignore the Content-Length header. This is
              particularly useful for servers running Apache 1.x, which
              reports incorrect Content-Length for files larger than 2
              gigabytes.

              For FTP, this makes curl skip the SIZE command to figure out the
              size before downloading a file.

              This option does not work for HTTP if libcurl was built to use
              hyper.

              Providing --ignore-content-length multiple times has no extra
              effect.  Disable it again with --no-ignore-content-length.

              Example:
               curl --ignore-content-length https://example.com

              See also _-_-_f_t_p_-_s_k_i_p_-_p_a_s_v_-_i_p.

       -i, --include
              (HTTP FTP) Include response headers in the output. HTTP response
              headers can include things like server name, cookies, date of
              the document, HTTP version and more... With non-HTTP protocols,
              the ""headers"" are other server communication.

              To view the request headers, consider the _-_v_, _-_-_v_e_r_b_o_s_e option.

              Prior to 7.75.0 curl did not print the headers if _-_f_, _-_-_f_a_i_l was
              used in combination with this option and there was error
              reported by server.

              Providing --include multiple times has no extra effect.  Disable
              it again with --no-include.

              Example:
               curl -i https://example.com

              See also _-_v_, _-_-_v_e_r_b_o_s_e.

       -k, --insecure
              (TLS SFTP SCP) By default, every secure connection curl makes is
              verified to be secure before the transfer takes place. This
              option makes curl skip the verification step and proceed without
              checking.

              When this option is not used for protocols using TLS, curl
              verifies the server's TLS certificate before it continues: that
              the certificate contains the right name which matches the host
              name used in the URL and that the certificate has been signed by
              a CA certificate present in the cert store.  See this online
              resource for further details: hhttttppss::////ccuurrll..ssee//ddooccss//ssssllcceerrttss..hhttmmll

              For SFTP and SCP, this option makes curl skip the _k_n_o_w_n___h_o_s_t_s
              verification.  _k_n_o_w_n___h_o_s_t_s is a file normally stored in the
              user's home directory in the "".ssh"" subdirectory, which contains
              host names and their public keys.

              WWAARRNNIINNGG: using this option makes the transfer insecure.

              When curl uses secure protocols it trusts responses and allows
              for example HSTS and Alt-Svc information to be stored and used
              subsequently. Using _-_k_, _-_-_i_n_s_e_c_u_r_e can make curl trust and use
              such information from malicious servers.

              Providing --insecure multiple times has no extra effect.
              Disable it again with --no-insecure.

              Example:
               curl --insecure https://example.com

              See also _-_-_p_r_o_x_y_-_i_n_s_e_c_u_r_e, _-_-_c_a_c_e_r_t and _-_-_c_a_p_a_t_h.

       --interface <name>
              Perform an operation using a specified interface. You can enter
              interface name, IP address or host name. An example could look
              like:

              curl --interface eth0:1 https://www.example.com/

              On Linux it can be used to specify a VVRRFF, but the binary needs
              to either have CCAAPP__NNEETT__RRAAWW or to be run as root. More
              information about Linux VVRRFF:
              https://www.kernel.org/doc/Documentation/networking/vrf.txt

              If --interface is provided several times, the last set value is
              used.

              Example:
               curl --interface eth0 https://example.com

              See also _-_-_d_n_s_-_i_n_t_e_r_f_a_c_e.

       --ipfs-gateway <URL>
              (IPFS) Specify which gateway to use for IPFS and IPNS URLs. Not
              specifying this will instead make curl check if the IPFS_GATEWAY
              environment variable is set, or if a ""~/.ipfs/gateway"" file
              holding the gateway URL exists.

              If you run a local IPFS node, this gateway is by default
              available under ""http://localhost:8080"". A full example URL
              would look like:

              curl --ipfs-gateway http://localhost:8080 ipfs://bafybeigagd5nmnn2iys2f3doro7ydrevyr2mzarwidgadawmamiteydbzi

              There are many public IPFS gateways. See for example:
              https://ipfs.github.io/public-gateway-checker/

              WARNING: If you opt to go for a remote gateway you should be
              aware that you completely trust the gateway. This is fine in
              local gateways as you host it yourself. With remote gateways
              there could potentially be a malicious actor returning you data
              that does not match the request you made, inspect or even
              interfere with the request. You will not notice this when using
              curl. A mitigation could be to go for a ""trustless"" gateway.
              This means you locally verify that the data. Consult the docs
              page on trusted vs trustless:
              https://docs.ipfs.tech/reference/http/gateway/#trusted-vs-trustless

              If --ipfs-gateway is provided several times, the last set value
              is used.

              Example:
               curl --ipfs-gateway https://example.com ipfs://

              See also _-_h_, _-_-_h_e_l_p and _-_M_, _-_-_m_a_n_u_a_l. Added in 8.4.0.

       -4, --ipv4
              This option tells curl to use IPv4 addresses only when resolving
              host names, and not for example try IPv6.

              Providing --ipv4 multiple times has no extra effect.

              Example:
               curl --ipv4 https://example.com

              See also _-_-_h_t_t_p_1_._1 and _-_-_h_t_t_p_2. This option is mutually
              exclusive to _-_6_, _-_-_i_p_v_6.

       -6, --ipv6
              This option tells curl to use IPv6 addresses only when resolving
              host names, and not for example try IPv4.

              Providing --ipv6 multiple times has no extra effect.

              Example:
               curl --ipv6 https://example.com

              See also _-_-_h_t_t_p_1_._1 and _-_-_h_t_t_p_2. This option is mutually
              exclusive to _-_4_, _-_-_i_p_v_4.

       --json <data>
              (HTTP) Sends the specified JSON data in a POST request to the
              HTTP server. _-_-_j_s_o_n works as a shortcut for passing on these
              three options:

              --data [arg]
              --header ""Content-Type: application/json""
              --header ""Accept: application/json""

              There is nnoo vveerriiffiiccaattiioonn that the passed in data is actual JSON
              or that the syntax is correct.

              If you start the data with the letter @, the rest should be a
              file name to read the data from, or a single dash (-) if you
              want curl to read the data from stdin. Posting data from a file
              named 'foobar' would thus be done with _-_-_j_s_o_n @foobar and to
              instead read the data from stdin, use _-_-_j_s_o_n @-.

              If this option is used more than once on the same command line,
              the additional data pieces are concatenated to the previous
              before sending.

              The headers this option sets can be overridden with _-_H_, _-_-_h_e_a_d_e_r
              as usual.

              --json can be used several times in a command line

              Examples:
               curl --json '{ ""drink"": ""coffe"" }' https://example.com
               curl --json '{ ""drink"":' --json ' ""coffe"" }' https://example.com
               curl --json @prepared https://example.com
               curl --json @- https://example.com < json.txt

              See also _-_-_d_a_t_a_-_b_i_n_a_r_y and _-_-_d_a_t_a_-_r_a_w. This option is mutually
              exclusive to _-_F_, _-_-_f_o_r_m and _-_I_, _-_-_h_e_a_d and _-_T_, _-_-_u_p_l_o_a_d_-_f_i_l_e.
              Added in 7.82.0.

       -j, --junk-session-cookies
              (HTTP) When curl is told to read cookies from a given file, this
              option makes it discard all ""session cookies"". This has the same
              effect as if a new session is started. Typical browsers discard
              session cookies when they are closed down.

              Providing --junk-session-cookies multiple times has no extra
              effect.  Disable it again with --no-junk-session-cookies.

              Example:
               curl --junk-session-cookies -b cookies.txt https://example.com

              See also _-_b_, _-_-_c_o_o_k_i_e and _-_c_, _-_-_c_o_o_k_i_e_-_j_a_r.

       --keepalive-time <seconds>
              This option sets the time a connection needs to remain idle
              before sending keepalive probes and the time between individual
              keepalive probes. It is currently effective on operating systems
              offering the ""TCP_KEEPIDLE"" and ""TCP_KEEPINTVL"" socket options
              (meaning Linux, recent AIX, HP-UX and more).  Keepalive is used
              by the TCP stack to detect broken networks on idle connections.
              The number of missed keepalive probes before declaring the
              connection down is OS dependent and is commonly 9 or 10. This
              option has no effect if _-_-_n_o_-_k_e_e_p_a_l_i_v_e is used.

              If unspecified, the option defaults to 60 seconds.

              If --keepalive-time is provided several times, the last set
              value is used.

              Example:
               curl --keepalive-time 20 https://example.com

              See also _-_-_n_o_-_k_e_e_p_a_l_i_v_e and _-_m_, _-_-_m_a_x_-_t_i_m_e.

       --key-type <type>
              (TLS) Private key file type. Specify which type your _-_-_k_e_y
              provided private key is. DER, PEM, and ENG are supported. If not
              specified, PEM is assumed.

              If --key-type is provided several times, the last set value is
              used.

              Example:
               curl --key-type DER --key here https://example.com

              See also _-_-_k_e_y.

       --key <key>
              (TLS SSH) Private key file name. Allows you to provide your
              private key in this separate file. For SSH, if not specified,
              curl tries the following candidates in order: ""~/.ssh/id_rsa"",
              ""~/.ssh/id_dsa"", ""./id_rsa"", ""./id_dsa"".

              If curl is built against OpenSSL library, and the engine pkcs11
              is available, then a PKCS#11 URI (RFC 7512) can be used to
              specify a private key located in a PKCS#11 device. A string
              beginning with ""pkcs11:"" is interpreted as a PKCS#11 URI. If a
              PKCS#11 URI is provided, then the _-_-_e_n_g_i_n_e option is set as
              ""pkcs11"" if none was provided and the _-_-_k_e_y_-_t_y_p_e option is set
              as ""ENG"" if none was provided.

              If curl is built against Secure Transport or Schannel then this
              option is ignored for TLS protocols (HTTPS, etc). Those backends
              expect the private key to be already present in the keychain or
              PKCS#12 file containing the certificate.

              If --key is provided several times, the last set value is used.

              Example:
               curl --cert certificate --key here https://example.com

              See also _-_-_k_e_y_-_t_y_p_e and _-_E_, _-_-_c_e_r_t.

       --krb <level>
              (FTP) Enable Kerberos authentication and use. The level must be
              entered and should be one of 'clear', 'safe', 'confidential', or
              'private'. Should you use a level that is not one of these,
              'private' is used.

              If --krb is provided several times, the last set value is used.

              Example:
               curl --krb clear ftp://example.com/

              See also _-_-_d_e_l_e_g_a_t_i_o_n and _-_-_s_s_l. _-_-_k_r_b requires that the
              underlying libcurl was built to support Kerberos.

       --libcurl <file>
              Append this option to any ordinary curl command line, and you
              get libcurl-using C source code written to the file that does
              the equivalent of what your command-line operation does!

              This option is global and does not need to be specified for each
              use of --next.

              If --libcurl is provided several times, the last set value is
              used.

              Example:
               curl --libcurl client.c https://example.com

              See also _-_v_, _-_-_v_e_r_b_o_s_e.

       --limit-rate <speed>
              Specify the maximum transfer rate you want curl to use - for
              both downloads and uploads. This feature is useful if you have a
              limited pipe and you would like your transfer not to use your
              entire bandwidth. To make it slower than it otherwise would be.

              The given speed is measured in bytes/second, unless a suffix is
              appended.  Appending 'k' or 'K' counts the number as kilobytes,
              'm' or 'M' makes it megabytes, while 'g' or 'G' makes it
              gigabytes. The suffixes (k, M, G, T, P) are 1024 based. For
              example 1k is 1024. Examples: 200K, 3m and 1G.

              The rate limiting logic works on averaging the transfer speed to
              no more than the set threshold over a period of multiple
              seconds.

              If you also use the _-_Y_, _-_-_s_p_e_e_d_-_l_i_m_i_t option, that option takes
              precedence and might cripple the rate-limiting slightly, to help
              keeping the speed-limit logic working.

              If --limit-rate is provided several times, the last set value is
              used.

              Examples:
               curl --limit-rate 100K https://example.com
               curl --limit-rate 1000 https://example.com
               curl --limit-rate 10M https://example.com

              See also _-_-_r_a_t_e, _-_Y_, _-_-_s_p_e_e_d_-_l_i_m_i_t and _-_y_, _-_-_s_p_e_e_d_-_t_i_m_e.

       -l, --list-only
              (FTP POP3 SFTP) (FTP) When listing an FTP directory, this switch
              forces a name-only view. This is especially useful if the user
              wants to machine-parse the contents of an FTP directory since
              the normal directory view does not use a standard look or
              format. When used like this, the option causes an NLST command
              to be sent to the server instead of LIST.

              Note: Some FTP servers list only files in their response to
              NLST; they do not include sub-directories and symbolic links.

              (SFTP) When listing an SFTP directory, this switch forces a
              name-only view, one per line.  This is especially useful if the
              user wants to machine-parse the contents of an SFTP directory
              since the normal directory view provides more information than
              just file names.

              (POP3) When retrieving a specific email from POP3, this switch
              forces a LIST command to be performed instead of RETR. This is
              particularly useful if the user wants to see if a specific
              message-id exists on the server and what size it is.

              Note: When combined with _-_X_, _-_-_r_e_q_u_e_s_t, this option can be used
              to send a UIDL command instead, so the user may use the email's
              unique identifier rather than its message-id to make the
              request.

              Providing --list-only multiple times has no extra effect.
              Disable it again with --no-list-only.

              Example:
               curl --list-only ftp://example.com/dir/

              See also _-_Q_, _-_-_q_u_o_t_e and _-_X_, _-_-_r_e_q_u_e_s_t.

       --local-port <num/range>
              Set a preferred single number or range (FROM-TO) of local port
              numbers to use for the connection(s). Note that port numbers by
              nature are a scarce resource so setting this range to something
              too narrow might cause unnecessary connection setup failures.

              If --local-port is provided several times, the last set value is
              used.

              Example:
               curl --local-port 1000-3000 https://example.com

              See also _-_g_, _-_-_g_l_o_b_o_f_f.

       --location-trusted
              (HTTP) Like _-_L_, _-_-_l_o_c_a_t_i_o_n, but allows sending the name +
              password to all hosts that the site may redirect to. This may or
              may not introduce a security breach if the site redirects you to
              a site to which you send your authentication info (which is
              clear-text in the case of HTTP Basic authentication).

              Providing --location-trusted multiple times has no extra effect.
              Disable it again with --no-location-trusted.

              Example:
               curl --location-trusted -u user:password https://example.com

              See also _-_u_, _-_-_u_s_e_r.

       -L, --location
              (HTTP) If the server reports that the requested page has moved
              to a different location (indicated with a Location: header and a
              3XX response code), this option makes curl redo the request on
              the new place. If used together with _-_i_, _-_-_i_n_c_l_u_d_e or _-_I_,
              _-_-_h_e_a_d, headers from all requested pages are shown.

              When authentication is used, curl only sends its credentials to
              the initial host. If a redirect takes curl to a different host,
              it does not get the user+password pass on. See also
              _-_-_l_o_c_a_t_i_o_n_-_t_r_u_s_t_e_d on how to change this.

              Limit the amount of redirects to follow by using the
              _-_-_m_a_x_-_r_e_d_i_r_s option.

              When curl follows a redirect and if the request is a POST, it
              sends the following request with a GET if the HTTP response was
              301, 302, or 303. If the response code was any other 3xx code,
              curl resends the following request using the same unmodified
              method.

              You can tell curl to not change POST requests to GET after a 30x
              response by using the dedicated options for that: _-_-_p_o_s_t_3_0_1,
              _-_-_p_o_s_t_3_0_2 and _-_-_p_o_s_t_3_0_3.

              The method set with _-_X_, _-_-_r_e_q_u_e_s_t overrides the method curl
              would otherwise select to use.

              Providing --location multiple times has no extra effect.
              Disable it again with --no-location.

              Example:
               curl -L https://example.com

              See also _-_-_r_e_s_o_l_v_e and _-_-_a_l_t_-_s_v_c.

       --login-options <options>
              (IMAP LDAP POP3 SMTP) Specify the login options to use during
              server authentication.

              You can use login options to specify protocol specific options
              that may be used during authentication. At present only IMAP,
              POP3 and SMTP support login options. For more information about
              login options please see RFC 2384, RFC 5092 and the IETF draft
              https://datatracker.ietf.org/doc/html/draft-earhart-url-smtp-00

              Since 8.2.0, IMAP supports the login option ""AUTH=+LOGIN"". With
              this option, curl uses the plain (not SASL) ""LOGIN IMAP"" command
              even if the server advertises SASL authentication. Care should
              be taken in using this option, as it sends your password over
              the network in plain text. This does not work if the IMAP server
              disables the plain ""LOGIN"" (e.g. to prevent password snooping).

              If --login-options is provided several times, the last set value
              is used.

              Example:
               curl --login-options 'AUTH=*' imap://example.com

              See also _-_u_, _-_-_u_s_e_r.

       --mail-auth <address>
              (SMTP) Specify a single address. This is used to specify the
              authentication address (identity) of a submitted message that is
              being relayed to another server.

              If --mail-auth is provided several times, the last set value is
              used.

              Example:
               curl --mail-auth user@example.come -T mail smtp://example.com/

              See also _-_-_m_a_i_l_-_r_c_p_t and _-_-_m_a_i_l_-_f_r_o_m.

       --mail-from <address>
              (SMTP) Specify a single address that the given mail should get
              sent from.

              If --mail-from is provided several times, the last set value is
              used.

              Example:
               curl --mail-from user@example.com -T mail smtp://example.com/

              See also _-_-_m_a_i_l_-_r_c_p_t and _-_-_m_a_i_l_-_a_u_t_h.

       --mail-rcpt-allowfails
              (SMTP) When sending data to multiple recipients, by default curl
              aborts SMTP conversation if at least one of the recipients
              causes RCPT TO command to return an error.

              The default behavior can be changed by passing
              _-_-_m_a_i_l_-_r_c_p_t_-_a_l_l_o_w_f_a_i_l_s command-line option which makes curl
              ignore errors and proceed with the remaining valid recipients.

              If all recipients trigger RCPT TO failures and this flag is
              specified, curl still aborts the SMTP conversation and returns
              the error received from to the last RCPT TO command.

              Providing --mail-rcpt-allowfails multiple times has no extra
              effect.  Disable it again with --no-mail-rcpt-allowfails.

              Example:
               curl --mail-rcpt-allowfails --mail-rcpt dest@example.com smtp://example.com

              See also _-_-_m_a_i_l_-_r_c_p_t. Added in 7.69.0.

       --mail-rcpt <address>
              (SMTP) Specify a single email address, user name or mailing list
              name. Repeat this option several times to send to multiple
              recipients.

              When performing an address verification (VVRRFFYY command), the
              recipient should be specified as the user name or user name and
              domain (as per Section 3.5 of RFC 5321).

              When performing a mailing list expand (EXPN command), the
              recipient should be specified using the mailing list name, such
              as ""Friends"" or ""London-Office"".


              --mail-rcpt can be used several times in a command line

              Example:
               curl --mail-rcpt user@example.net smtp://example.com

              See also _-_-_m_a_i_l_-_r_c_p_t_-_a_l_l_o_w_f_a_i_l_s.

       -M, --manual
              Manual. Display the huge help text.

              Example:
               curl --manual

              See also _-_v_, _-_-_v_e_r_b_o_s_e, _-_-_l_i_b_c_u_r_l and _-_-_t_r_a_c_e.

       --max-filesize <bytes>
              (FTP HTTP MQTT) Specify the maximum size (in bytes) of a file to
              download. If the file requested is larger than this value, the
              transfer does not start and curl returns with exit code 63.

              A size modifier may be used. For example, Appending 'k' or 'K'
              counts the number as kilobytes, 'm' or 'M' makes it megabytes,
              while 'g' or 'G' makes it gigabytes. Examples: 200K, 3m and 1G.
              (Added in 7.58.0)

              NNOOTTEE: before curl 8.4.0, when the file size is not known prior
              to download, for such files this option has no effect even if
              the file transfer ends up being larger than this given limit.

              Starting with curl 8.4.0, this option aborts the transfer if it
              reaches the threshold during transfer.

              If --max-filesize is provided several times, the last set value
              is used.

              Example:
               curl --max-filesize 100K https://example.com

              See also _-_-_l_i_m_i_t_-_r_a_t_e.

       --max-redirs <num>
              (HTTP) Set maximum number of redirections to follow. When _-_L_,
              _-_-_l_o_c_a_t_i_o_n is used, to prevent curl from following too many
              redirects, by default, the limit is set to 50 redirects. Set
              this option to -1 to make it unlimited.

              If --max-redirs is provided several times, the last set value is
              used.

              Example:
               curl --max-redirs 3 --location https://example.com

              See also _-_L_, _-_-_l_o_c_a_t_i_o_n.

       -m, --max-time <fractional seconds>
              Maximum time in seconds that you allow each transfer to take.
              This is useful for preventing your batch jobs from hanging for
              hours due to slow networks or links going down. This option
              accepts decimal values.

              If you enable retrying the transfer (_-_-_r_e_t_r_y) then the maximum
              time counter is reset each time the transfer is retried. You can
              use _-_-_r_e_t_r_y_-_m_a_x_-_t_i_m_e to limit the retry time.

              The decimal value needs to provided using a dot (.) as decimal
              separator - not the local version even if it might be using
              another separator.

              If --max-time is provided several times, the last set value is
              used.

              Examples:
               curl --max-time 10 https://example.com
               curl --max-time 2.92 https://example.com

              See also _-_-_c_o_n_n_e_c_t_-_t_i_m_e_o_u_t and _-_-_r_e_t_r_y_-_m_a_x_-_t_i_m_e.

       --metalink
              This option was previously used to specify a Metalink resource.
              Metalink support is disabled in curl for security reasons (added
              in 7.78.0).

              If --metalink is provided several times, the last set value is
              used.

              Example:
               curl --metalink file https://example.com

              See also _-_Z_, _-_-_p_a_r_a_l_l_e_l.

       --negotiate
              (HTTP) Enables Negotiate (SPNEGO) authentication.

              This option requires a library built with GSS-API or SSPI
              support. Use _-_V_, _-_-_v_e_r_s_i_o_n to see if your curl supports
              GSS-API/SSPI or SPNEGO.

              When using this option, you must also provide a fake _-_u_, _-_-_u_s_e_r
              option to activate the authentication code properly. Sending a
              '-u :' is enough as the user name and password from the _-_u_,
              _-_-_u_s_e_r option are not actually used.

              Providing --negotiate multiple times has no extra effect.

              Example:
               curl --negotiate -u : https://example.com

              See also _-_-_b_a_s_i_c, _-_-_n_t_l_m, _-_-_a_n_y_a_u_t_h and _-_-_p_r_o_x_y_-_n_e_g_o_t_i_a_t_e.

       --netrc-file <filename>
              This option is similar to _-_n_, _-_-_n_e_t_r_c, except that you provide
              the path (absolute or relative) to the netrc file that curl
              should use. You can only specify one netrc file per invocation.

              It abides by _-_-_n_e_t_r_c_-_o_p_t_i_o_n_a_l if specified.

              If --netrc-file is provided several times, the last set value is
              used.

              Example:
               curl --netrc-file netrc https://example.com

              See also _-_n_, _-_-_n_e_t_r_c, _-_u_, _-_-_u_s_e_r and _-_K_, _-_-_c_o_n_f_i_g. This option
              is mutually exclusive to _-_n_, _-_-_n_e_t_r_c.

       --netrc-optional
              Similar to _-_n_, _-_-_n_e_t_r_c, but this option makes the .netrc usage
              ooppttiioonnaall and not mandatory as the _-_n_, _-_-_n_e_t_r_c option does.

              Providing --netrc-optional multiple times has no extra effect.
              Disable it again with --no-netrc-optional.

              Example:
               curl --netrc-optional https://example.com

              See also _-_-_n_e_t_r_c_-_f_i_l_e. This option is mutually exclusive to _-_n_,
              _-_-_n_e_t_r_c.

       -n, --netrc
              Makes curl scan the _._n_e_t_r_c file in the user's home directory for
              login name and password. This is typically used for FTP on Unix.
              If used with HTTP, curl enables user authentication. See
              _n_e_t_r_c_(_5_) and _f_t_p_(_1_) for details on the file format. Curl does
              not complain if that file does not have the right permissions
              (it should be neither world- nor group-readable). The
              environment variable ""HOME"" is used to find the home directory.

              On Windows two filenames in the home directory are checked:
              _._n_e_t_r_c and ___n_e_t_r_c, preferring the former. Older versions on
              Windows checked for ___n_e_t_r_c only.

              A quick and simple example of how to setup a _._n_e_t_r_c to allow
              curl to FTP to the machine host.domain.com with user name
              'myself' and password 'secret' could look similar to:

              machine host.domain.com
              login myself
              password secret

              Providing --netrc multiple times has no extra effect.
              Disable it again with --no-netrc.

              Example:
               curl --netrc https://example.com

              See also _-_-_n_e_t_r_c_-_f_i_l_e, _-_K_, _-_-_c_o_n_f_i_g and _-_u_, _-_-_u_s_e_r. This option
              is mutually exclusive to _-_-_n_e_t_r_c_-_f_i_l_e and _-_-_n_e_t_r_c_-_o_p_t_i_o_n_a_l.

       -:, --next
              Tells curl to use a separate operation for the following URL and
              associated options. This allows you to send several URL
              requests, each with their own specific options, for example,
              such as different user names or custom requests for each.

              _-_:_, _-_-_n_e_x_t resets all local options and only global ones have
              their values survive over to the operation following the _-_:_,
              _-_-_n_e_x_t instruction. Global options include _-_v_, _-_-_v_e_r_b_o_s_e,
              _-_-_t_r_a_c_e, _-_-_t_r_a_c_e_-_a_s_c_i_i and _-_-_f_a_i_l_-_e_a_r_l_y.

              For example, you can do both a GET and a POST in a single
              command line:

              curl www1.example.com --next -d postthis www2.example.com

              --next can be used several times in a command line

              Examples:
               curl https://example.com --next -d postthis www2.example.com
               curl -I https://example.com --next https://example.net/

              See also _-_Z_, _-_-_p_a_r_a_l_l_e_l and _-_K_, _-_-_c_o_n_f_i_g.

       --no-alpn
              (HTTPS) Disable the ALPN TLS extension. ALPN is enabled by
              default if libcurl was built with an SSL library that supports
              ALPN. ALPN is used by a libcurl that supports HTTP/2 to
              negotiate HTTP/2 support with the server during https sessions.

              Note that this is the negated option name documented. You can
              use --alpn to enable ALPN.

              Providing --no-alpn multiple times has no extra effect.  Disable
              it again with --alpn.

              Example:
               curl --no-alpn https://example.com

              See also _-_-_n_o_-_n_p_n and _-_-_h_t_t_p_2. _-_-_n_o_-_a_l_p_n requires that the
              underlying libcurl was built to support TLS.

       -N, --no-buffer
              Disables the buffering of the output stream. In normal work
              situations, curl uses a standard buffered output stream that has
              the effect that it outputs the data in chunks, not necessarily
              exactly when the data arrives. Using this option disables that
              buffering.

              Note that this is the negated option name documented. You can
              use --buffer to enable buffering again.

              Providing --no-buffer multiple times has no extra effect.
              Disable it again with --buffer.

              Example:
               curl --no-buffer https://example.com

              See also _-_#_, _-_-_p_r_o_g_r_e_s_s_-_b_a_r.

       --no-clobber
              When used in conjunction with the _-_o_, _-_-_o_u_t_p_u_t, _-_J_,
              _-_-_r_e_m_o_t_e_-_h_e_a_d_e_r_-_n_a_m_e, _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e, or _-_-_r_e_m_o_t_e_-_n_a_m_e_-_a_l_l
              options, curl avoids overwriting files that already exist.
              Instead, a dot and a number gets appended to the name of the
              file that would be created, up to filename.100 after which it
              does not create any file.

              Note that this is the negated option name documented. You can
              thus use --clobber to enforce the clobbering, even if _-_J_,
              _-_-_r_e_m_o_t_e_-_h_e_a_d_e_r_-_n_a_m_e is specified.

              Providing --no-clobber multiple times has no extra effect.
              Disable it again with --clobber.

              Example:
               curl --no-clobber --output local/dir/file https://example.com

              See also _-_o_, _-_-_o_u_t_p_u_t and _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e. Added in 7.83.0.

       --no-keepalive
              Disables the use of keepalive messages on the TCP connection.
              curl otherwise enables them by default.

              Note that this is the negated option name documented. You can
              thus use --keepalive to enforce keepalive.

              Providing --no-keepalive multiple times has no extra effect.
              Disable it again with --keepalive.

              Example:
               curl --no-keepalive https://example.com

              See also _-_-_k_e_e_p_a_l_i_v_e_-_t_i_m_e.

       --no-npn
              (HTTPS) curl never uses NPN, this option has no effect (added in
              7.86.0).

              Disable the NPN TLS extension. NPN is enabled by default if
              libcurl was built with an SSL library that supports NPN. NPN is
              used by a libcurl that supports HTTP/2 to negotiate HTTP/2
              support with the server during https sessions.

              Providing --no-npn multiple times has no extra effect.  Disable
              it again with --npn.

              Example:
               curl --no-npn https://example.com

              See also _-_-_n_o_-_a_l_p_n and _-_-_h_t_t_p_2. _-_-_n_o_-_n_p_n requires that the
              underlying libcurl was built to support TLS.

       --no-progress-meter
              Option to switch off the progress meter output without muting or
              otherwise affecting warning and informational messages like _-_s_,
              _-_-_s_i_l_e_n_t does.

              Note that this is the negated option name documented. You can
              thus use --progress-meter to enable the progress meter again.

              Providing --no-progress-meter multiple times has no extra
              effect.  Disable it again with --progress-meter.

              Example:
               curl --no-progress-meter -o store https://example.com

              See also _-_v_, _-_-_v_e_r_b_o_s_e and _-_s_, _-_-_s_i_l_e_n_t. Added in 7.67.0.

       --no-sessionid
              (TLS) Disable curl's use of SSL session-ID caching. By default
              all transfers are done using the cache. Note that while nothing
              should ever get hurt by attempting to reuse SSL session-IDs,
              there seem to be broken SSL implementations in the wild that may
              require you to disable this in order for you to succeed.

              Note that this is the negated option name documented. You can
              thus use --sessionid to enforce session-ID caching.

              Providing --no-sessionid multiple times has no extra effect.
              Disable it again with --sessionid.

              Example:
               curl --no-sessionid https://example.com

              See also _-_k_, _-_-_i_n_s_e_c_u_r_e.

       --noproxy <no-proxy-list>
              Comma-separated list of hosts for which not to use a proxy, if
              one is specified. The only wildcard is a single ""*"" character,
              which matches all hosts, and effectively disables the proxy.
              Each name in this list is matched as either a domain which
              contains the hostname, or the hostname itself. For example,
              ""local.com"" would match ""local.com"", ""local.com:80"", and
              ""www.local.com"", but not ""www.notlocal.com"".

              This option overrides the environment variables that disable the
              proxy (""no_proxy"" and ""NO_PROXY"") (added in 7.53.0). If there is
              an environment variable disabling a proxy, you can set the no
              proxy list to """" to override it.

              IP addresses specified to this option can be provided using CIDR
              notation (added in 7.86.0): an appended slash and number
              specifies the number of network bits out of the address to use
              in the comparison. For example ""192.168.0.0/16"" would match all
              addresses starting with ""192.168"".

              If --noproxy is provided several times, the last set value is
              used.

              Example:
               curl --noproxy ""www.example"" https://example.com

              See also _-_x_, _-_-_p_r_o_x_y.

       --ntlm-wb
              (HTTP) Enables NTLM much in the style _-_-_n_t_l_m does, but hand over
              the authentication to the separate binary ""ntlmauth"" application
              that is executed when needed.

              Providing --ntlm-wb multiple times has no extra effect.

              Example:
               curl --ntlm-wb -u user:password https://example.com

              See also _-_-_n_t_l_m and _-_-_p_r_o_x_y_-_n_t_l_m.

       --ntlm (HTTP) Enables NTLM authentication. The NTLM authentication
              method was designed by Microsoft and is used by IIS web servers.
              It is a proprietary protocol, reverse-engineered by clever
              people and implemented in curl based on their efforts. This kind
              of behavior should not be endorsed, you should encourage
              everyone who uses NTLM to switch to a public and documented
              authentication method instead, such as Digest.

              If you want to enable NTLM for your proxy authentication, then
              use _-_-_p_r_o_x_y_-_n_t_l_m.

              Providing --ntlm multiple times has no extra effect.

              Example:
               curl --ntlm -u user:password https://example.com

              See also _-_-_p_r_o_x_y_-_n_t_l_m. _-_-_n_t_l_m requires that the underlying
              libcurl was built to support TLS. This option is mutually
              exclusive to _-_-_b_a_s_i_c and _-_-_n_e_g_o_t_i_a_t_e and _-_-_d_i_g_e_s_t and _-_-_a_n_y_a_u_t_h.

       --oauth2-bearer <token>
              (IMAP LDAP POP3 SMTP HTTP) Specify the Bearer Token for OAUTH
              2.0 server authentication. The Bearer Token is used in
              conjunction with the user name which can be specified as part of
              the _-_-_u_r_l or _-_u_, _-_-_u_s_e_r options.

              The Bearer Token and user name are formatted according to RFC
              6750.

              If --oauth2-bearer is provided several times, the last set value
              is used.

              Example:
               curl --oauth2-bearer ""mF_9.B5f-4.1JqM"" https://example.com

              See also _-_-_b_a_s_i_c, _-_-_n_t_l_m and _-_-_d_i_g_e_s_t.

       --output-dir <dir>
              This option specifies the directory in which files should be
              stored, when _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e or _-_o_, _-_-_o_u_t_p_u_t are used.

              The given output directory is used for all URLs and output
              options on the command line, up until the first _-_:_, _-_-_n_e_x_t.

              If the specified target directory does not exist, the operation
              fails unless _-_-_c_r_e_a_t_e_-_d_i_r_s is also used.

              If --output-dir is provided several times, the last set value is
              used.

              Example:
               curl --output-dir ""tmp"" -O https://example.com

              See also _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e and _-_J_, _-_-_r_e_m_o_t_e_-_h_e_a_d_e_r_-_n_a_m_e. Added
              in 7.73.0.

       -o, --output <file>
              Write output to <file> instead of stdout. If you are using {} or
              [] to fetch multiple documents, you should quote the URL and you
              can use '#' followed by a number in the <file> specifier. That
              variable is replaced with the current string for the URL being
              fetched. Like in:

              curl ""http://{one,two}.example.com"" -o ""file_#1.txt""

              or use several variables like:

              curl ""http://{site,host}.host[1-5].example"" -o ""#1_#2""

              You may use this option as many times as the number of URLs you
              have. For example, if you specify two URLs on the same command
              line, you can use it like this:

              curl -o aa example.com -o bb example.net

              and the order of the -o options and the URLs does not matter,
              just that the first -o is for the first URL and so on, so the
              above command line can also be written as

              curl example.com example.net -o aa -o bb

              See also the _-_-_c_r_e_a_t_e_-_d_i_r_s option to create the local
              directories dynamically. Specifying the output as '-' (a single
              dash) passes the output to stdout.

              To suppress response bodies, you can redirect output to
              /dev/null:

              curl example.com -o /dev/null

              Or for Windows:

              curl example.com -o nul

              --output can be used several times in a command line

              Examples:
               curl -o file https://example.com
               curl ""http://{one,two}.example.com"" -o ""file_#1.txt""
               curl ""http://{site,host}.host[1-5].example"" -o ""#1_#2""
               curl -o file https://example.com -o file2 https://example.net

              See also _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e, _-_-_r_e_m_o_t_e_-_n_a_m_e_-_a_l_l and _-_J_,
              _-_-_r_e_m_o_t_e_-_h_e_a_d_e_r_-_n_a_m_e.

       --parallel-immediate
              When doing parallel transfers, this option instructs curl that
              it should rather prefer opening up more connections in parallel
              at once rather than waiting to see if new transfers can be added
              as multiplexed streams on another connection.

              This option is global and does not need to be specified for each
              use of --next.

              Providing --parallel-immediate multiple times has no extra
              effect.  Disable it again with --no-parallel-immediate.

              Example:
               curl --parallel-immediate -Z https://example.com -o file1 https://example.com -o file2

              See also _-_Z_, _-_-_p_a_r_a_l_l_e_l and _-_-_p_a_r_a_l_l_e_l_-_m_a_x. Added in 7.68.0.

       --parallel-max <num>
              When asked to do parallel transfers, using _-_Z_, _-_-_p_a_r_a_l_l_e_l, this
              option controls the maximum amount of transfers to do
              simultaneously.

              This option is global and does not need to be specified for each
              use of _-_:_, _-_-_n_e_x_t.

              The default is 50.

              If --parallel-max is provided several times, the last set value
              is used.

              Example:
               curl --parallel-max 100 -Z https://example.com ftp://example.com/

              See also _-_Z_, _-_-_p_a_r_a_l_l_e_l. Added in 7.66.0.

       -Z, --parallel
              Makes curl perform its transfers in parallel as compared to the
              regular serial manner.

              This option is global and does not need to be specified for each
              use of --next.

              Providing --parallel multiple times has no extra effect.
              Disable it again with --no-parallel.

              Example:
               curl --parallel https://example.com -o file1 https://example.com -o file2

              See also _-_:_, _-_-_n_e_x_t and _-_v_, _-_-_v_e_r_b_o_s_e. Added in 7.66.0.

       --pass <phrase>
              (SSH TLS) Passphrase for the private key.

              If --pass is provided several times, the last set value is used.

              Example:
               curl --pass secret --key file https://example.com

              See also _-_-_k_e_y and _-_u_, _-_-_u_s_e_r.

       --path-as-is
              Tell curl to not handle sequences of /../ or /./ in the given
              URL path. Normally curl squashes or merges them according to
              standards but with this option set you tell it not to do that.

              Providing --path-as-is multiple times has no extra effect.
              Disable it again with --no-path-as-is.

              Example:
               curl --path-as-is https://example.com/../../etc/passwd

              See also _-_-_r_e_q_u_e_s_t_-_t_a_r_g_e_t.

       --pinnedpubkey <hashes>
              (TLS) Tells curl to use the specified public key file (or
              hashes) to verify the peer. This can be a path to a file which
              contains a single public key in PEM or DER format, or any number
              of base64 encoded sha256 hashes preceded by 'sha256//' and
              separated by ';'.

              When negotiating a TLS or SSL connection, the server sends a
              certificate indicating its identity. A public key is extracted
              from this certificate and if it does not exactly match the
              public key provided to this option, curl aborts the connection
              before sending or receiving any data.

              This option is independent of option _-_k_, _-_-_i_n_s_e_c_u_r_e. If you use
              both options together then the peer is still verified by public
              key.

              PEM/DER support:

              OpenSSL and GnuTLS, wolfSSL (added in 7.43.0), mbedTLS , Secure
              Transport macOS 10.7+/iOS 10+ (7.54.1), Schannel (7.58.1)

              sha256 support:

              OpenSSL, GnuTLS and wolfSSL, mbedTLS (added in 7.47.0), Secure
              Transport macOS 10.7+/iOS 10+ (7.54.1), Schannel (7.58.1)

              Other SSL backends not supported.

              If --pinnedpubkey is provided several times, the last set value
              is used.

              Examples:
               curl --pinnedpubkey keyfile https://example.com
               curl --pinnedpubkey 'sha256//ce118b51897f4452dc' https://example.com

              See also _-_-_h_o_s_t_p_u_b_s_h_a_2_5_6.

       --post301
              (HTTP) Tells curl to respect RFC 7231/6.4.2 and not convert POST
              requests into GET requests when following a 301 redirection. The
              non-RFC behavior is ubiquitous in web browsers, so curl does the
              conversion by default to maintain consistency. However, a server
              may require a POST to remain a POST after such a redirection.
              This option is meaningful only when using _-_L_, _-_-_l_o_c_a_t_i_o_n.

              Providing --post301 multiple times has no extra effect.  Disable
              it again with --no-post301.

              Example:
               curl --post301 --location -d ""data"" https://example.com

              See also _-_-_p_o_s_t_3_0_2, _-_-_p_o_s_t_3_0_3 and _-_L_, _-_-_l_o_c_a_t_i_o_n.

       --post302
              (HTTP) Tells curl to respect RFC 7231/6.4.3 and not convert POST
              requests into GET requests when following a 302 redirection. The
              non-RFC behavior is ubiquitous in web browsers, so curl does the
              conversion by default to maintain consistency. However, a server
              may require a POST to remain a POST after such a redirection.
              This option is meaningful only when using _-_L_, _-_-_l_o_c_a_t_i_o_n.

              Providing --post302 multiple times has no extra effect.  Disable
              it again with --no-post302.

              Example:
               curl --post302 --location -d ""data"" https://example.com

              See also _-_-_p_o_s_t_3_0_1, _-_-_p_o_s_t_3_0_3 and _-_L_, _-_-_l_o_c_a_t_i_o_n.

       --post303
              (HTTP) Tells curl to violate RFC 7231/6.4.4 and not convert POST
              requests into GET requests when following 303 redirections. A
              server may require a POST to remain a POST after a 303
              redirection. This option is meaningful only when using _-_L_,
              _-_-_l_o_c_a_t_i_o_n.

              Providing --post303 multiple times has no extra effect.  Disable
              it again with --no-post303.

              Example:
               curl --post303 --location -d ""data"" https://example.com

              See also _-_-_p_o_s_t_3_0_2, _-_-_p_o_s_t_3_0_1 and _-_L_, _-_-_l_o_c_a_t_i_o_n.

       --preproxy [protocol://]host[:port]
              Use the specified SOCKS proxy before connecting to an HTTP or
              HTTPS _-_x_, _-_-_p_r_o_x_y. In such a case curl first connects to the
              SOCKS proxy and then connects (through SOCKS) to the HTTP or
              HTTPS proxy. Hence pre proxy.

              The pre proxy string should be specified with a protocol://
              prefix to specify alternative proxy protocols. Use socks4://,
              socks4a://, socks5:// or socks5h:// to request the specific
              SOCKS version to be used. No protocol specified makes curl
              default to SOCKS4.

              If the port number is not specified in the proxy string, it is
              assumed to be 1080.

              User and password that might be provided in the proxy string are
              URL decoded by curl. This allows you to pass in special
              characters such as @ by using %40 or pass in a colon with %3a.

              If --preproxy is provided several times, the last set value is
              used.

              Example:
               curl --preproxy socks5://proxy.example -x http://http.example https://example.com

              See also _-_x_, _-_-_p_r_o_x_y and _-_-_s_o_c_k_s_5. Added in 7.52.0.

       -#, --progress-bar
              Make curl display transfer progress as a simple progress bar
              instead of the standard, more informational, meter.

              This progress bar draws a single line of '#' characters across
              the screen and shows a percentage if the transfer size is known.
              For transfers without a known size, there is a space ship
              (-=o=-) that moves back and forth but only while data is being
              transferred, with a set of flying hash sign symbols on top.

              This option is global and does not need to be specified for each
              use of --next.

              Providing --progress-bar multiple times has no extra effect.
              Disable it again with --no-progress-bar.

              Example:
               curl -# -O https://example.com

              See also _-_-_s_t_y_l_e_d_-_o_u_t_p_u_t.

       --proto-default <protocol>
              Tells curl to use _p_r_o_t_o_c_o_l for any URL missing a scheme name.

              An unknown or unsupported protocol causes error
              _C_U_R_L_E___U_N_S_U_P_P_O_R_T_E_D___P_R_O_T_O_C_O_L (1).

              This option does not change the default proxy protocol (http).

              Without this option set, curl guesses protocol based on the host
              name, see _-_-_u_r_l for details.

              If --proto-default is provided several times, the last set value
              is used.

              Example:
               curl --proto-default https ftp.example.com

              See also _-_-_p_r_o_t_o and _-_-_p_r_o_t_o_-_r_e_d_i_r.

       --proto-redir <protocols>
              Tells curl to limit what protocols it may use on redirect.
              Protocols denied by _-_-_p_r_o_t_o are not overridden by this option.
              See _-_-_p_r_o_t_o for how protocols are represented.

              Example, allow only HTTP and HTTPS on redirect:

              curl --proto-redir -all,http,https http://example.com

              By default curl only allows HTTP, HTTPS, FTP and FTPS on
              redirects (added in 7.65.2). Specifying _a_l_l or _+_a_l_l enables all
              protocols on redirects, which is not good for security.

              If --proto-redir is provided several times, the last set value
              is used.

              Example:
               curl --proto-redir =http,https https://example.com

              See also _-_-_p_r_o_t_o.

       --proto <protocols>
              Tells curl to limit what protocols it may use for transfers.
              Protocols are evaluated left to right, are comma separated, and
              are each a protocol name or 'all', optionally prefixed by zero
              or more modifiers. Available modifiers are:

              +      Permit this protocol in addition to protocols already
                     permitted (this is the default if no modifier is used).

              -      Deny this protocol, removing it from the list of
                     protocols already permitted.

              =      Permit only this protocol (ignoring the list already
                     permitted), though subject to later modification by
                     subsequent entries in the comma separated list.

              For example: _-_-_p_r_o_t_o -ftps uses the default protocols, but
              disables ftps

              _-_-_p_r_o_t_o -all,https,+http only enables http and https

              _-_-_p_r_o_t_o =http,https also only enables http and https

              Unknown and disabled protocols produce a warning. This allows
              scripts to safely rely on being able to disable potentially
              dangerous protocols, without relying upon support for that
              protocol being built into curl to avoid an error.

              This option can be used multiple times, in which case the effect
              is the same as concatenating the protocols into one instance of
              the option.


              If --proto is provided several times, the last set value is
              used.

              Example:
               curl --proto =http,https,sftp https://example.com

              See also _-_-_p_r_o_t_o_-_r_e_d_i_r and _-_-_p_r_o_t_o_-_d_e_f_a_u_l_t.

       --proxy-anyauth
              Tells curl to pick a suitable authentication method when
              communicating with the given HTTP proxy. This might cause an
              extra request/response round-trip.

              Providing --proxy-anyauth multiple times has no extra effect.

              Example:
               curl --proxy-anyauth --proxy-user user:passwd -x proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y, _-_-_p_r_o_x_y_-_b_a_s_i_c and _-_-_p_r_o_x_y_-_d_i_g_e_s_t.

       --proxy-basic
              Tells curl to use HTTP Basic authentication when communicating
              with the given proxy. Use _-_-_b_a_s_i_c for enabling HTTP Basic with a
              remote host. Basic is the default authentication method curl
              uses with proxies.

              Providing --proxy-basic multiple times has no extra effect.

              Example:
               curl --proxy-basic --proxy-user user:passwd -x proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y, _-_-_p_r_o_x_y_-_a_n_y_a_u_t_h and _-_-_p_r_o_x_y_-_d_i_g_e_s_t.

       --proxy-ca-native
              (TLS) Tells curl to use the CA store from the native operating
              system to verify the HTTPS proxy. By default, curl uses a CA
              store provided in a single file or directory, but when using
              this option it interfaces the operating system's own vault.

              This option works for curl on Windows when built to use OpenSSL,
              wolfSSL (added in 8.3.0) or GnuTLS (added in 8.5.0). When curl
              on Windows is built to use Schannel, this feature is implied and
              curl then only uses the native CA store.

              Providing --proxy-ca-native multiple times has no extra effect.
              Disable it again with --no-proxy-ca-native.

              Example:
               curl --ca-native https://example.com

              See also _-_-_c_a_c_e_r_t, _-_-_c_a_p_a_t_h and _-_k_, _-_-_i_n_s_e_c_u_r_e. Added in 8.2.0.

       --proxy-cacert <file>
              Same as _-_-_c_a_c_e_r_t but used in HTTPS proxy context.

              If --proxy-cacert is provided several times, the last set value
              is used.

              Example:
               curl --proxy-cacert CA-file.txt -x https://proxy https://example.com

              See also _-_-_p_r_o_x_y_-_c_a_p_a_t_h, _-_-_c_a_c_e_r_t, _-_-_c_a_p_a_t_h and _-_x_, _-_-_p_r_o_x_y.
              Added in 7.52.0.

       --proxy-capath <dir>
              Same as _-_-_c_a_p_a_t_h but used in HTTPS proxy context.

              If --proxy-capath is provided several times, the last set value
              is used.

              Example:
               curl --proxy-capath /local/directory -x https://proxy https://example.com

              See also _-_-_p_r_o_x_y_-_c_a_c_e_r_t, _-_x_, _-_-_p_r_o_x_y and _-_-_c_a_p_a_t_h. Added in
              7.52.0.

       --proxy-cert-type <type>
              Same as _-_-_c_e_r_t_-_t_y_p_e but used in HTTPS proxy context.

              If --proxy-cert-type is provided several times, the last set
              value is used.

              Example:
               curl --proxy-cert-type PEM --proxy-cert file -x https://proxy https://example.com

              See also _-_-_p_r_o_x_y_-_c_e_r_t. Added in 7.52.0.

       --proxy-cert <cert[:passwd]>
              Same as _-_E_, _-_-_c_e_r_t but used in HTTPS proxy context.

              If --proxy-cert is provided several times, the last set value is
              used.

              Example:
               curl --proxy-cert file -x https://proxy https://example.com

              See also _-_-_p_r_o_x_y_-_c_e_r_t_-_t_y_p_e. Added in 7.52.0.

       --proxy-ciphers <list>
              Same as _-_-_c_i_p_h_e_r_s but used in HTTPS proxy context.

              Specifies which ciphers to use in the connection to the HTTPS
              proxy. The list of ciphers must specify valid ciphers. Read up
              on SSL cipher list details on this URL:

              https://curl.se/docs/ssl-ciphers.html

              If --proxy-ciphers is provided several times, the last set value
              is used.

              Example:
               curl --proxy-ciphers ECDHE-ECDSA-AES256-CCM8 -x https://proxy https://example.com

              See also _-_-_c_i_p_h_e_r_s, _-_-_c_u_r_v_e_s and _-_x_, _-_-_p_r_o_x_y. Added in 7.52.0.

       --proxy-crlfile <file>
              Same as _-_-_c_r_l_f_i_l_e but used in HTTPS proxy context.

              If --proxy-crlfile is provided several times, the last set value
              is used.

              Example:
               curl --proxy-crlfile rejects.txt -x https://proxy https://example.com

              See also _-_-_c_r_l_f_i_l_e and _-_x_, _-_-_p_r_o_x_y. Added in 7.52.0.

       --proxy-digest
              Tells curl to use HTTP Digest authentication when communicating
              with the given proxy. Use _-_-_d_i_g_e_s_t for enabling HTTP Digest with
              a remote host.

              Providing --proxy-digest multiple times has no extra effect.

              Example:
               curl --proxy-digest --proxy-user user:passwd -x proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y, _-_-_p_r_o_x_y_-_a_n_y_a_u_t_h and _-_-_p_r_o_x_y_-_b_a_s_i_c.

       --proxy-header <header/@file>
              (HTTP) Extra header to include in the request when sending HTTP
              to a proxy. You may specify any number of extra headers. This is
              the equivalent option to _-_H_, _-_-_h_e_a_d_e_r but is for proxy
              communication only like in CONNECT requests when you want a
              separate header sent to the proxy to what is sent to the actual
              remote host.

              curl makes sure that each header you add/replace is sent with
              the proper end-of-line marker, you should thus nnoott add that as a
              part of the header content: do not add newlines or carriage
              returns, they only mess things up for you.

              Headers specified with this option are not included in requests
              that curl knows are not be sent to a proxy.

              This option can take an argument in @filename style, which then
              adds a header for each line in the input file (added in 7.55.0).
              Using @- makes curl read the headers from stdin.

              This option can be used multiple times to add/replace/remove
              multiple headers.

              --proxy-header can be used several times in a command line

              Examples:
               curl --proxy-header ""X-First-Name: Joe"" -x http://proxy https://example.com
               curl --proxy-header ""User-Agent: surprise"" -x http://proxy https://example.com
               curl --proxy-header ""Host:"" -x http://proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y.

       --proxy-http2
              (HTTP) Tells curl to try negotiate HTTP version 2 with an HTTPS
              proxy. The proxy might still only offer HTTP/1 and then curl
              sticks to using that version.

              This has no effect for any other kinds of proxies.

              Providing --proxy-http2 multiple times has no extra effect.
              Disable it again with --no-proxy-http2.

              Example:
               curl --proxy-http2 -x proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y. _-_-_p_r_o_x_y_-_h_t_t_p_2 requires that the underlying
              libcurl was built to support HTTP/2. Added in 8.1.0.

       --proxy-insecure
              Same as _-_k_, _-_-_i_n_s_e_c_u_r_e but used in HTTPS proxy context.

              Providing --proxy-insecure multiple times has no extra effect.
              Disable it again with --no-proxy-insecure.

              Example:
               curl --proxy-insecure -x https://proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y and _-_k_, _-_-_i_n_s_e_c_u_r_e. Added in 7.52.0.

       --proxy-key-type <type>
              Same as _-_-_k_e_y_-_t_y_p_e but used in HTTPS proxy context.

              If --proxy-key-type is provided several times, the last set
              value is used.

              Example:
               curl --proxy-key-type DER --proxy-key here -x https://proxy https://example.com

              See also _-_-_p_r_o_x_y_-_k_e_y and _-_x_, _-_-_p_r_o_x_y. Added in 7.52.0.

       --proxy-key <key>
              Same as _-_-_k_e_y but used in HTTPS proxy context.

              If --proxy-key is provided several times, the last set value is
              used.

              Example:
               curl --proxy-key here -x https://proxy https://example.com

              See also _-_-_p_r_o_x_y_-_k_e_y_-_t_y_p_e and _-_x_, _-_-_p_r_o_x_y. Added in 7.52.0.

       --proxy-negotiate
              Tells curl to use HTTP Negotiate (SPNEGO) authentication when
              communicating with the given proxy. Use _-_-_n_e_g_o_t_i_a_t_e for enabling
              HTTP Negotiate (SPNEGO) with a remote host.

              Providing --proxy-negotiate multiple times has no extra effect.

              Example:
               curl --proxy-negotiate --proxy-user user:passwd -x proxy https://example.com

              See also _-_-_p_r_o_x_y_-_a_n_y_a_u_t_h and _-_-_p_r_o_x_y_-_b_a_s_i_c.

       --proxy-ntlm
              Tells curl to use HTTP NTLM authentication when communicating
              with the given proxy. Use _-_-_n_t_l_m for enabling NTLM with a remote
              host.

              Providing --proxy-ntlm multiple times has no extra effect.

              Example:
               curl --proxy-ntlm --proxy-user user:passwd -x http://proxy https://example.com

              See also _-_-_p_r_o_x_y_-_n_e_g_o_t_i_a_t_e and _-_-_p_r_o_x_y_-_a_n_y_a_u_t_h.

       --proxy-pass <phrase>
              Same as _-_-_p_a_s_s but used in HTTPS proxy context.

              If --proxy-pass is provided several times, the last set value is
              used.

              Example:
               curl --proxy-pass secret --proxy-key here -x https://proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y and _-_-_p_r_o_x_y_-_k_e_y. Added in 7.52.0.

       --proxy-pinnedpubkey <hashes>
              (TLS) Tells curl to use the specified public key file (or
              hashes) to verify the proxy. This can be a path to a file which
              contains a single public key in PEM or DER format, or any number
              of base64 encoded sha256 hashes preceded by 'sha256//' and
              separated by ';'.

              When negotiating a TLS or SSL connection, the server sends a
              certificate indicating its identity. A public key is extracted
              from this certificate and if it does not exactly match the
              public key provided to this option, curl aborts the connection
              before sending or receiving any data.

              If --proxy-pinnedpubkey is provided several times, the last set
              value is used.

              Examples:
               curl --proxy-pinnedpubkey keyfile https://example.com
               curl --proxy-pinnedpubkey 'sha256//ce118b51897f4452dc' https://example.com

              See also _-_-_p_i_n_n_e_d_p_u_b_k_e_y and _-_x_, _-_-_p_r_o_x_y. Added in 7.59.0.

       --proxy-service-name <name>
              This option allows you to change the service name for proxy
              negotiation.

              If --proxy-service-name is provided several times, the last set
              value is used.

              Example:
               curl --proxy-service-name ""shrubbery"" -x proxy https://example.com

              See also _-_-_s_e_r_v_i_c_e_-_n_a_m_e and _-_x_, _-_-_p_r_o_x_y.

       --proxy-ssl-allow-beast
              Same as _-_-_s_s_l_-_a_l_l_o_w_-_b_e_a_s_t but used in HTTPS proxy context.

              Providing --proxy-ssl-allow-beast multiple times has no extra
              effect.  Disable it again with --no-proxy-ssl-allow-beast.

              Example:
               curl --proxy-ssl-allow-beast -x https://proxy https://example.com

              See also _-_-_s_s_l_-_a_l_l_o_w_-_b_e_a_s_t and _-_x_, _-_-_p_r_o_x_y. Added in 7.52.0.

       --proxy-ssl-auto-client-cert
              Same as _-_-_s_s_l_-_a_u_t_o_-_c_l_i_e_n_t_-_c_e_r_t but used in HTTPS proxy context.

              Providing --proxy-ssl-auto-client-cert multiple times has no
              extra effect.  Disable it again with --no-proxy-ssl-auto-client-
              cert.

              Example:
               curl --proxy-ssl-auto-client-cert -x https://proxy https://example.com

              See also _-_-_s_s_l_-_a_u_t_o_-_c_l_i_e_n_t_-_c_e_r_t and _-_x_, _-_-_p_r_o_x_y. Added in
              7.77.0.

       --proxy-tls13-ciphers <ciphersuite list>
              (TLS) Specifies which cipher suites to use in the connection to
              your HTTPS proxy when it negotiates TLS 1.3. The list of ciphers
              suites must specify valid ciphers. Read up on TLS 1.3 cipher
              suite details on this URL:

              https://curl.se/docs/ssl-ciphers.html

              This option is currently used only when curl is built to use
              OpenSSL 1.1.1 or later. If you are using a different SSL backend
              you can try setting TLS 1.3 cipher suites by using the
              _-_-_p_r_o_x_y_-_c_i_p_h_e_r_s option.

              If --proxy-tls13-ciphers is provided several times, the last set
              value is used.

              Example:
               curl --proxy-tls13-ciphers TLS_AES_128_GCM_SHA256 -x proxy https://example.com

              See also _-_-_t_l_s_1_3_-_c_i_p_h_e_r_s, _-_-_c_u_r_v_e_s and _-_-_p_r_o_x_y_-_c_i_p_h_e_r_s. Added in
              7.61.0.

       --proxy-tlsauthtype <type>
              Same as _-_-_t_l_s_a_u_t_h_t_y_p_e but used in HTTPS proxy context.

              If --proxy-tlsauthtype is provided several times, the last set
              value is used.

              Example:
               curl --proxy-tlsauthtype SRP -x https://proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y and _-_-_p_r_o_x_y_-_t_l_s_u_s_e_r. Added in 7.52.0.

       --proxy-tlspassword <string>
              Same as _-_-_t_l_s_p_a_s_s_w_o_r_d but used in HTTPS proxy context.

              If --proxy-tlspassword is provided several times, the last set
              value is used.

              Example:
               curl --proxy-tlspassword passwd -x https://proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y and _-_-_p_r_o_x_y_-_t_l_s_u_s_e_r. Added in 7.52.0.

       --proxy-tlsuser <name>
              Same as _-_-_t_l_s_u_s_e_r but used in HTTPS proxy context.

              If --proxy-tlsuser is provided several times, the last set value
              is used.

              Example:
               curl --proxy-tlsuser smith -x https://proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y and _-_-_p_r_o_x_y_-_t_l_s_p_a_s_s_w_o_r_d. Added in 7.52.0.

       --proxy-tlsv1
              Same as _-_1_, _-_-_t_l_s_v_1 but used in HTTPS proxy context.

              Providing --proxy-tlsv1 multiple times has no extra effect.

              Example:
               curl --proxy-tlsv1 -x https://proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y. Added in 7.52.0.

       -U, --proxy-user <user:password>
              Specify the user name and password to use for proxy
              authentication.

              If you use a Windows SSPI-enabled curl binary and do either
              Negotiate or NTLM authentication then you can tell curl to
              select the user name and password from your environment by
              specifying a single colon with this option: ""-U :"".

              On systems where it works, curl hides the given option argument
              from process listings. This is not enough to protect credentials
              from possibly getting seen by other users on the same system as
              they still are visible for a moment before cleared. Such
              sensitive data should be retrieved from a file instead or
              similar and never used in clear text in a command line.

              If --proxy-user is provided several times, the last set value is
              used.

              Example:
               curl --proxy-user name:pwd -x proxy https://example.com

              See also _-_-_p_r_o_x_y_-_p_a_s_s.

       -x, --proxy [protocol://]host[:port]
              Use the specified proxy.

              The proxy string can be specified with a protocol:// prefix. No
              protocol specified or http:// it is treated as an HTTP proxy.
              Use socks4://, socks4a://, socks5:// or socks5h:// to request a
              specific SOCKS version to be used.

              Unix domain sockets are supported for socks proxy. Set localhost
              for the host part. e.g. socks5h://localhost/path/to/socket.sock

              HTTPS proxy support works set with the https:// protocol prefix
              for OpenSSL and GnuTLS (added in 7.52.0). It also works for
              BearSSL, mbedTLS, rustls, Schannel, Secure Transport and wolfSSL
              (added in 7.87.0).

              Unrecognized and unsupported proxy protocols cause an error
              (added in 7.52.0).  Ancient curl versions ignored unknown
              schemes and used http:// instead.

              If the port number is not specified in the proxy string, it is
              assumed to be 1080.

              This option overrides existing environment variables that set
              the proxy to use. If there is an environment variable setting a
              proxy, you can set proxy to """" to override it.

              All operations that are performed over an HTTP proxy are
              transparently converted to HTTP. It means that certain protocol
              specific operations might not be available. This is not the case
              if you can tunnel through the proxy, as one with the _-_p_,
              _-_-_p_r_o_x_y_t_u_n_n_e_l option.

              User and password that might be provided in the proxy string are
              URL decoded by curl. This allows you to pass in special
              characters such as @ by using %40 or pass in a colon with %3a.

              The proxy host can be specified the same way as the proxy
              environment variables, including the protocol prefix (http://)
              and the embedded user + password.

              When a proxy is used, the active FTP mode as set with _-_P_,
              _-_-_f_t_p_-_p_o_r_t, cannot be used.

              If --proxy is provided several times, the last set value is
              used.

              Example:
               curl --proxy http://proxy.example https://example.com

              See also _-_-_s_o_c_k_s_5 and _-_-_p_r_o_x_y_-_b_a_s_i_c.

       --proxy1.0 <host[:port]>
              Use the specified HTTP 1.0 proxy. If the port number is not
              specified, it is assumed at port 1080.

              The only difference between this and the HTTP proxy option _-_x_,
              _-_-_p_r_o_x_y, is that attempts to use CONNECT through the proxy
              specifies an HTTP 1.0 protocol instead of the default HTTP 1.1.

              Providing --proxy1.0 multiple times has no extra effect.

              Example:
               curl --proxy1.0 -x http://proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y, _-_-_s_o_c_k_s_5 and _-_-_p_r_e_p_r_o_x_y.

       -p, --proxytunnel
              When an HTTP proxy is used _-_x_, _-_-_p_r_o_x_y, this option makes curl
              tunnel the traffic through the proxy. The tunnel approach is
              made with the HTTP proxy CONNECT request and requires that the
              proxy allows direct connect to the remote port number curl wants
              to tunnel through to.

              To suppress proxy CONNECT response headers when curl is set to
              output headers use _-_-_s_u_p_p_r_e_s_s_-_c_o_n_n_e_c_t_-_h_e_a_d_e_r_s.

              Providing --proxytunnel multiple times has no extra effect.
              Disable it again with --no-proxytunnel.

              Example:
               curl --proxytunnel -x http://proxy https://example.com

              See also _-_x_, _-_-_p_r_o_x_y.

       --pubkey <key>
              (SFTP SCP) Public key file name. Allows you to provide your
              public key in this separate file.

              curl attempts to automatically extract the public key from the
              private key file, so passing this option is generally not
              required. Note that this public key extraction requires libcurl
              to be linked against a copy of libssh2 1.2.8 or higher that is
              itself linked against OpenSSL.

              If --pubkey is provided several times, the last set value is
              used.

              Example:
               curl --pubkey file.pub sftp://example.com/

              See also _-_-_p_a_s_s.

       -Q, --quote <command>
              (FTP SFTP) Send an arbitrary command to the remote FTP or SFTP
              server. Quote commands are sent BEFORE the transfer takes place
              (just after the initial PPWWDD command in an FTP transfer, to be
              exact). To make commands take place after a successful transfer,
              prefix them with a dash '-'.

              (FTP only) To make commands be sent after curl has changed the
              working directory, just before the file transfer command(s),
              prefix the command with a '+'. This is not performed when a
              directory listing is performed.

              You may specify any number of commands.

              By default curl stops at first failure. To make curl continue
              even if the command fails, prefix the command with an asterisk
              (*). Otherwise, if the server returns failure for one of the
              commands, the entire operation is aborted.

              You must send syntactically correct FTP commands as RFC 959
              defines to FTP servers, or one of the commands listed below to
              SFTP servers.

              SFTP is a binary protocol. Unlike for FTP, curl interprets SFTP
              quote commands itself before sending them to the server. File
              names may be quoted shell-style to embed spaces or special
              characters. Following is the list of all supported SFTP quote
              commands:

              atime date file
                     The atime command sets the last access time of the file
                     named by the file operand. The <date expression> can be
                     all sorts of date strings, see the _c_u_r_l___g_e_t_d_a_t_e_(_3_) man
                     page for date expression details. (Added in 7.73.0)

              chgrp group file
                     The chgrp command sets the group ID of the file named by
                     the file operand to the group ID specified by the group
                     operand. The group operand is a decimal integer group ID.

              chmod mode file
                     The chmod command modifies the file mode bits of the
                     specified file. The mode operand is an octal integer mode
                     number.

              chown user file
                     The chown command sets the owner of the file named by the
                     file operand to the user ID specified by the user
                     operand. The user operand is a decimal integer user ID.

              ln source_file target_file
                     The ln and symlink commands create a symbolic link at the
                     target_file location pointing to the source_file
                     location.

              mkdir directory_name
                     The mkdir command creates the directory named by the
                     directory_name operand.

              mtime date file
                     The mtime command sets the last modification time of the
                     file named by the file operand. The <date expression> can
                     be all sorts of date strings, see the _c_u_r_l___g_e_t_d_a_t_e_(_3_) man
                     page for date expression details. (Added in 7.73.0)

              pwd    The pwd command returns the absolute path name of the
                     current working directory.

              rename source target
                     The rename command renames the file or directory named by
                     the source operand to the destination path named by the
                     target operand.

              rm file
                     The rm command removes the file specified by the file
                     operand.

              rmdir directory
                     The rmdir command removes the directory entry specified
                     by the directory operand, provided it is empty.

              symlink source_file target_file
                     See ln.


              --quote can be used several times in a command line

              Example:
               curl --quote ""DELE file"" ftp://example.com/foo

              See also _-_X_, _-_-_r_e_q_u_e_s_t.

       --random-file <file>
              Deprecated option. This option is ignored (added in 7.84.0).
              Prior to that it only had an effect on curl if built to use old
              versions of OpenSSL.

              Specify the path name to file containing random data. The data
              may be used to seed the random engine for SSL connections.

              If --random-file is provided several times, the last set value
              is used.

              Example:
               curl --random-file rubbish https://example.com

              See also _-_-_e_g_d_-_f_i_l_e.

       -r, --range <range>
              (HTTP FTP SFTP FILE) Retrieve a byte range (i.e. a partial
              document) from an HTTP/1.1, FTP or SFTP server or a local FILE.
              Ranges can be specified in a number of ways.

              0-499  specifies the first 500 bytes

              500-999
                     specifies the second 500 bytes

              -500   specifies the last 500 bytes

              9500-  specifies the bytes from offset 9500 and forward

              0-0,-1 specifies the first and last byte only(*)(HTTP)

              100-199,500-599
                     specifies two separate 100-byte ranges(*) (HTTP)

              (*) = NOTE that these make the server reply with a multipart
              response, which is returned as-is by curl! Parsing or otherwise
              transforming this response is the responsibility of the caller.

              Only digit characters (0-9) are valid in the 'start' and 'stop'
              fields of the 'start-stop' range syntax. If a non-digit
              character is given in the range, the server's response is
              unspecified, depending on the server's configuration.

              Many HTTP/1.1 servers do not have this feature enabled, so that
              when you attempt to get a range, curl instead gets the whole
              document.

              FTP and SFTP range downloads only support the simple
              'start-stop' syntax (optionally with one of the numbers
              omitted). FTP use depends on the extended FTP command SIZE.


              If --range is provided several times, the last set value is
              used.

              Example:
               curl --range 22-44 https://example.com

              See also _-_C_, _-_-_c_o_n_t_i_n_u_e_-_a_t and _-_a_, _-_-_a_p_p_e_n_d.

       --rate <max request rate>
              Specify the maximum transfer frequency you allow curl to use -
              in number of transfer starts per time unit (sometimes called
              request rate). Without this option, curl starts the next
              transfer as fast as possible.

              If given several URLs and a transfer completes faster than the
              allowed rate, curl waits until the next transfer is started to
              maintain the requested rate. This option has no effect when _-_Z_,
              _-_-_p_a_r_a_l_l_e_l is used.

              The request rate is provided as ""N/U"" where N is an integer
              number and U is a time unit. Supported units are 's' (second),
              'm' (minute), 'h' (hour) and 'd' /(day, as in a 24 hour unit).
              The default time unit, if no ""/U"" is provided, is number of
              transfers per hour.

              If curl is told to allow 10 requests per minute, it does not
              start the next request until 6 seconds have elapsed since the
              previous transfer was started.

              This function uses millisecond resolution. If the allowed
              frequency is set more than 1000 per second, it instead runs
              unrestricted.

              When retrying transfers, enabled with _-_-_r_e_t_r_y, the separate
              retry delay logic is used and not this setting.

              This option is global and does not need to be specified for each
              use of --next.

              If --rate is provided several times, the last set value is used.

              Examples:
               curl --rate 2/s https://example.com ...
               curl --rate 3/h https://example.com ...
               curl --rate 14/m https://example.com ...

              See also _-_-_l_i_m_i_t_-_r_a_t_e and _-_-_r_e_t_r_y_-_d_e_l_a_y. Added in 7.84.0.

       --raw  (HTTP) When used, it disables all internal HTTP decoding of
              content or transfer encodings and instead makes them passed on
              unaltered, raw.

              Providing --raw multiple times has no extra effect.  Disable it
              again with --no-raw.

              Example:
               curl --raw https://example.com

              See also _-_-_t_r_-_e_n_c_o_d_i_n_g.

       -e, --referer <URL>
              (HTTP) Sends the ""Referrer Page"" information to the HTTP server.
              This can also be set with the _-_H_, _-_-_h_e_a_d_e_r flag of course. When
              used with _-_L_, _-_-_l_o_c_a_t_i_o_n you can append "";auto"" to the _-_e_,
              _-_-_r_e_f_e_r_e_r URL to make curl automatically set the previous URL
              when it follows a Location: header. The "";auto"" string can be
              used alone, even if you do not set an initial _-_e_, _-_-_r_e_f_e_r_e_r.

              If --referer is provided several times, the last set value is
              used.

              Examples:
               curl --referer ""https://fake.example"" https://example.com
               curl --referer ""https://fake.example;auto"" -L https://example.com
               curl --referer "";auto"" -L https://example.com

              See also _-_A_, _-_-_u_s_e_r_-_a_g_e_n_t and _-_H_, _-_-_h_e_a_d_e_r.

       -J, --remote-header-name
              (HTTP) This option tells the _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e option to use the
              server-specified Content-Disposition filename instead of
              extracting a filename from the URL. If the server-provided file
              name contains a path, that is stripped off before the file name
              is used.

              The file is saved in the current directory, or in the directory
              specified with _-_-_o_u_t_p_u_t_-_d_i_r.

              If the server specifies a file name and a file with that name
              already exists in the destination directory, it is not
              overwritten and an error occurs - unless you allow it by using
              the --clobber option. If the server does not specify a file name
              then this option has no effect.

              There is no attempt to decode %-sequences (yet) in the provided
              file name, so this option may provide you with rather unexpected
              file names.

              This feature uses the name from the ""filename"" field, it does
              not yet support the ""filename*"" field (filenames with explicit
              character sets).

              WWAARRNNIINNGG: Exercise judicious use of this option, especially on
              Windows. A rogue server could send you the name of a DLL or
              other file that could be loaded automatically by Windows or some
              third party software.

              Providing --remote-header-name multiple times has no extra
              effect.  Disable it again with --no-remote-header-name.

              Example:
               curl -OJ https://example.com/file

              See also _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e.

       --remote-name-all
              This option changes the default action for all given URLs to be
              dealt with as if _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e were used for each one. So if
              you want to disable that for a specific URL after
              _-_-_r_e_m_o_t_e_-_n_a_m_e_-_a_l_l has been used, you must use ""-o -"" or
              --no-remote-name.

              Providing --remote-name-all multiple times has no extra effect.
              Disable it again with --no-remote-name-all.

              Example:
               curl --remote-name-all ftp://example.com/file1 ftp://example.com/file2

              See also _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e.

       -O, --remote-name
              Write output to a local file named like the remote file we get.
              (Only the file part of the remote file is used, the path is cut
              off.)

              The file is saved in the current working directory. If you want
              the file saved in a different directory, make sure you change
              the current working directory before invoking curl with this
              option or use _-_-_o_u_t_p_u_t_-_d_i_r.

              The remote file name to use for saving is extracted from the
              given URL, nothing else, and if it already exists it is
              overwritten. If you want the server to be able to choose the
              file name refer to _-_J_, _-_-_r_e_m_o_t_e_-_h_e_a_d_e_r_-_n_a_m_e which can be used in
              addition to this option. If the server chooses a file name and
              that name already exists it is not overwritten.

              There is no URL decoding done on the file name. If it has %20 or
              other URL encoded parts of the name, they end up as-is as file
              name.

              You may use this option as many times as the number of URLs you
              have.

              --remote-name can be used several times in a command line

              Example:
               curl -O https://example.com/filename

              See also _-_-_r_e_m_o_t_e_-_n_a_m_e_-_a_l_l, _-_-_o_u_t_p_u_t_-_d_i_r and _-_J_,
              _-_-_r_e_m_o_t_e_-_h_e_a_d_e_r_-_n_a_m_e.

       -R, --remote-time
              Makes curl attempt to figure out the timestamp of the remote
              file that is getting downloaded, and if that is available make
              the local file get that same timestamp.

              Providing --remote-time multiple times has no extra effect.
              Disable it again with --no-remote-time.

              Example:
               curl --remote-time -o foo https://example.com

              See also _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e and _-_z_, _-_-_t_i_m_e_-_c_o_n_d.

       --remove-on-error
              When curl returns an error when told to save output in a local
              file, this option removes that saved file before exiting. This
              prevents curl from leaving a partial file in the case of an
              error during transfer.

              If the output is not a regular file, this option has no effect.

              Providing --remove-on-error multiple times has no extra effect.
              Disable it again with --no-remove-on-error.

              Example:
               curl --remove-on-error -o output https://example.com

              See also _-_f_, _-_-_f_a_i_l. Added in 7.83.0.

       --request-target <path>
              (HTTP) Tells curl to use an alternative ""target"" (path) instead
              of using the path as provided in the URL. Particularly useful
              when wanting to issue HTTP requests without leading slash or
              other data that does not follow the regular URL pattern, like
              ""OPTIONS *"".

              curl passes on the verbatim string you give it its the request
              without any filter or other safe guards. That includes white
              space and control characters.

              If --request-target is provided several times, the last set
              value is used.

              Example:
               curl --request-target ""*"" -X OPTIONS https://example.com

              See also _-_X_, _-_-_r_e_q_u_e_s_t. Added in 7.55.0.

       -X, --request <method>
              Change the method to use when starting the transfer.

              curl passes on the verbatim string you give it its the request
              without any filter or other safe guards. That includes white
              space and control characters.

              HTTP   Specifies a custom request method to use when
                     communicating with the HTTP server. The specified request
                     method is used instead of the method otherwise used
                     (which defaults to _G_E_T). Read the HTTP 1.1 specification
                     for details and explanations. Common additional HTTP
                     requests include _P_U_T and _D_E_L_E_T_E, while related
                     technologies like WebDAV offers _P_R_O_P_F_I_N_D, _C_O_P_Y, _M_O_V_E and
                     more.

                     Normally you do not need this option. All sorts of _G_E_T,
                     _H_E_A_D, _P_O_S_T and _P_U_T requests are rather invoked by using
                     dedicated command line options.

                     This option only changes the actual word used in the HTTP
                     request, it does not alter the way curl behaves. So for
                     example if you want to make a proper HEAD request, using
                     -X HEAD does not suffice. You need to use the _-_I_, _-_-_h_e_a_d
                     option.

                     The method string you set with _-_X_, _-_-_r_e_q_u_e_s_t is used for
                     all requests, which if you for example use _-_L_, _-_-_l_o_c_a_t_i_o_n
                     may cause unintended side-effects when curl does not
                     change request method according to the HTTP 30x response
                     codes - and similar.

              FTP    Specifies a custom FTP command to use instead of _L_I_S_T
                     when doing file lists with FTP.

              POP3   Specifies a custom POP3 command to use instead of _L_I_S_T or
                     _R_E_T_R.


              IMAP   Specifies a custom IMAP command to use instead of _L_I_S_T.

              SMTP   Specifies a custom SMTP command to use instead of _H_E_L_P or
                     VVRRFFYY.


              If --request is provided several times, the last set value is
              used.

              Examples:
               curl -X ""DELETE"" https://example.com
               curl -X NLST ftp://example.com/

              See also _-_-_r_e_q_u_e_s_t_-_t_a_r_g_e_t.

       --resolve <[+]host:port:addr[,addr]...>
              Provide a custom address for a specific host and port pair.
              Using this, you can make the curl requests(s) use a specified
              address and prevent the otherwise normally resolved address to
              be used. Consider it a sort of /etc/hosts alternative provided
              on the command line. The port number should be the number used
              for the specific protocol the host is used for. It means you
              need several entries if you want to provide address for the same
              host but different ports.

              By specifying '*' as host you can tell curl to resolve any host
              and specific port pair to the specified address. Wildcard is
              resolved last so any _-_-_r_e_s_o_l_v_e with a specific host and port is
              used first.

              The provided address set by this option is used even if _-_4_,
              _-_-_i_p_v_4 or _-_6_, _-_-_i_p_v_6 is set to make curl use another IP version.

              By prefixing the host with a '+' you can make the entry time out
              after curl's default timeout (1 minute). Note that this only
              makes sense for long running parallel transfers with a lot of
              files. In such cases, if this option is used curl tries to
              resolve the host as it normally would once the timeout has
              expired.

              Support for providing the IP address within [brackets] was added
              in 7.57.0.

              Support for providing multiple IP addresses per entry was added
              in 7.59.0.

              Support for resolving with wildcard was added in 7.64.0.

              Support for the '+' prefix was was added in 7.75.0.

              --resolve can be used several times in a command line

              Example:
               curl --resolve example.com:443:127.0.0.1 https://example.com

              See also _-_-_c_o_n_n_e_c_t_-_t_o and _-_-_a_l_t_-_s_v_c.

       --retry-all-errors
              Retry on any error. This option is used together with _-_-_r_e_t_r_y.

              This option is the ""sledgehammer"" of retrying. Do not use this
              option by default (for example in your ccuurrllrrcc), there may be
              unintended consequences such as sending or receiving duplicate
              data. Do not use with redirected input or output. You'd be much
              better off handling your unique problems in shell script. Please
              read the example below.

              WWAARRNNIINNGG: For server compatibility curl attempts to retry failed
              flaky transfers as close as possible to how they were started,
              but this is not possible with redirected input or output. For
              example, before retrying it removes output data from a failed
              partial transfer that was written to an output file. However
              this is not true of data redirected to a | pipe or > file, which
              are not reset. We strongly suggest you do not parse or record
              output via redirect in combination with this option, since you
              may receive duplicate data.

              By default curl does not return error for transfers with an HTTP
              response code that indicates an HTTP error, if the transfer was
              successful. For example, if a server replies 404 Not Found and
              the reply is fully received then that is not an error. When
              _-_-_r_e_t_r_y is used then curl retries on some HTTP response codes
              that indicate transient HTTP errors, but that does not include
              most 4xx response codes such as 404. If you want to retry on all
              response codes that indicate HTTP errors (4xx and 5xx) then
              combine with _-_f_, _-_-_f_a_i_l.

              Providing --retry-all-errors multiple times has no extra effect.
              Disable it again with --no-retry-all-errors.

              Example:
               curl --retry 5 --retry-all-errors https://example.com

              See also _-_-_r_e_t_r_y. Added in 7.71.0.

       --retry-connrefused
              In addition to the other conditions, consider ECONNREFUSED as a
              transient error too for _-_-_r_e_t_r_y. This option is used together
              with _-_-_r_e_t_r_y.

              Providing --retry-connrefused multiple times has no extra
              effect.  Disable it again with --no-retry-connrefused.

              Example:
               curl --retry-connrefused --retry 7 https://example.com

              See also _-_-_r_e_t_r_y and _-_-_r_e_t_r_y_-_a_l_l_-_e_r_r_o_r_s. Added in 7.52.0.

       --retry-delay <seconds>
              Make curl sleep this amount of time before each retry when a
              transfer has failed with a transient error (it changes the
              default backoff time algorithm between retries). This option is
              only interesting if _-_-_r_e_t_r_y is also used. Setting this delay to
              zero makes curl use the default backoff time.

              If --retry-delay is provided several times, the last set value
              is used.

              Example:
               curl --retry-delay 5 --retry 7 https://example.com

              See also _-_-_r_e_t_r_y.

       --retry-max-time <seconds>
              The retry timer is reset before the first transfer attempt.
              Retries are done as usual (see _-_-_r_e_t_r_y) as long as the timer has
              not reached this given limit. Notice that if the timer has not
              reached the limit, the request is made and while performing, it
              may take longer than this given time period. To limit a single
              request's maximum time, use _-_m_, _-_-_m_a_x_-_t_i_m_e. Set this option to
              zero to not timeout retries.

              If --retry-max-time is provided several times, the last set
              value is used.

              Example:
               curl --retry-max-time 30 --retry 10 https://example.com

              See also _-_-_r_e_t_r_y.

       --retry <num>
              If a transient error is returned when curl tries to perform a
              transfer, it retries this number of times before giving up.
              Setting the number to 0 makes curl do no retries (which is the
              default). Transient error means either: a timeout, an FTP 4xx
              response code or an HTTP 408, 429, 500, 502, 503 or 504 response
              code.

              When curl is about to retry a transfer, it first waits one
              second and then for all forthcoming retries it doubles the
              waiting time until it reaches 10 minutes which then remains
              delay between the rest of the retries. By using _-_-_r_e_t_r_y_-_d_e_l_a_y
              you disable this exponential backoff algorithm. See also
              _-_-_r_e_t_r_y_-_m_a_x_-_t_i_m_e to limit the total time allowed for retries.

              curl complies with the Retry-After: response header if one was
              present to know when to issue the next retry (added in 7.66.0).

              If --retry is provided several times, the last set value is
              used.

              Example:
               curl --retry 7 https://example.com

              See also _-_-_r_e_t_r_y_-_m_a_x_-_t_i_m_e.

       --sasl-authzid <identity>
              Use this authorization identity (aauutthhzziidd), during SASL PLAIN
              authentication, in addition to the authentication identity
              (aauutthhcciidd) as specified by _-_u_, _-_-_u_s_e_r.

              If the option is not specified, the server derives the aauutthhzziidd
              from the aauutthhcciidd, but if specified, and depending on the server
              implementation, it may be used to access another user's inbox,
              that the user has been granted access to, or a shared mailbox
              for example.

              If --sasl-authzid is provided several times, the last set value
              is used.

              Example:
               curl --sasl-authzid zid imap://example.com/

              See also _-_-_l_o_g_i_n_-_o_p_t_i_o_n_s. Added in 7.66.0.

       --sasl-ir
              Enable initial response in SASL authentication.

              Providing --sasl-ir multiple times has no extra effect.  Disable
              it again with --no-sasl-ir.

              Example:
               curl --sasl-ir imap://example.com/

              See also _-_-_s_a_s_l_-_a_u_t_h_z_i_d.

       --service-name <name>
              This option allows you to change the service name for SPNEGO.

              If --service-name is provided several times, the last set value
              is used.

              Example:
               curl --service-name sockd/server https://example.com

              See also _-_-_n_e_g_o_t_i_a_t_e and _-_-_p_r_o_x_y_-_s_e_r_v_i_c_e_-_n_a_m_e.

       -S, --show-error
              When used with _-_s_, _-_-_s_i_l_e_n_t, it makes curl show an error message
              if it fails.

              This option is global and does not need to be specified for each
              use of --next.

              Providing --show-error multiple times has no extra effect.
              Disable it again with --no-show-error.

              Example:
               curl --show-error --silent https://example.com

              See also _-_-_n_o_-_p_r_o_g_r_e_s_s_-_m_e_t_e_r.

       -s, --silent
              Silent or quiet mode. Do not show progress meter or error
              messages. Makes Curl mute. It still outputs the data you ask
              for, potentially even to the terminal/stdout unless you redirect
              it.

              Use _-_S_, _-_-_s_h_o_w_-_e_r_r_o_r in addition to this option to disable
              progress meter but still show error messages.

              Providing --silent multiple times has no extra effect.  Disable
              it again with --no-silent.

              Example:
               curl -s https://example.com

              See also _-_v_, _-_-_v_e_r_b_o_s_e, _-_-_s_t_d_e_r_r and _-_-_n_o_-_p_r_o_g_r_e_s_s_-_m_e_t_e_r.

       --socks4 <host[:port]>
              Use the specified SOCKS4 proxy. If the port number is not
              specified, it is assumed at port 1080. Using this socket type
              make curl resolve the host name and passing the address on to
              the proxy.

              To specify proxy on a unix domain socket, use localhost for
              host, e.g.  ""socks4://localhost/path/to/socket.sock""

              This option overrides any previous use of _-_x_, _-_-_p_r_o_x_y, as they
              are mutually exclusive.

              This option is superfluous since you can specify a socks4 proxy
              with _-_x_, _-_-_p_r_o_x_y using a socks4:// protocol prefix.

              _-_-_p_r_e_p_r_o_x_y can be used to specify a SOCKS proxy at the same time
              proxy is used with an HTTP/HTTPS proxy (added in 7.52.0). In
              such a case, curl first connects to the SOCKS proxy and then
              connects (through SOCKS) to the HTTP or HTTPS proxy.

              If --socks4 is provided several times, the last set value is
              used.

              Example:
               curl --socks4 hostname:4096 https://example.com

              See also _-_-_s_o_c_k_s_4_a, _-_-_s_o_c_k_s_5 and _-_-_s_o_c_k_s_5_-_h_o_s_t_n_a_m_e.

       --socks4a <host[:port]>
              Use the specified SOCKS4a proxy. If the port number is not
              specified, it is assumed at port 1080. This asks the proxy to
              resolve the host name.

              To specify proxy on a unix domain socket, use localhost for
              host, e.g.  ""socks4a://localhost/path/to/socket.sock""

              This option overrides any previous use of _-_x_, _-_-_p_r_o_x_y, as they
              are mutually exclusive.

              This option is superfluous since you can specify a socks4a proxy
              with _-_x_, _-_-_p_r_o_x_y using a socks4a:// protocol prefix.

              _-_-_p_r_e_p_r_o_x_y can be used to specify a SOCKS proxy at the same time
              _-_x_, _-_-_p_r_o_x_y is used with an HTTP/HTTPS proxy (added in 7.52.0).
              In such a case, curl first connects to the SOCKS proxy and then
              connects (through SOCKS) to the HTTP or HTTPS proxy.

              If --socks4a is provided several times, the last set value is
              used.

              Example:
               curl --socks4a hostname:4096 https://example.com

              See also _-_-_s_o_c_k_s_4, _-_-_s_o_c_k_s_5 and _-_-_s_o_c_k_s_5_-_h_o_s_t_n_a_m_e.

       --socks5-basic
              Tells curl to use username/password authentication when
              connecting to a SOCKS5 proxy. The username/password
              authentication is enabled by default. Use _-_-_s_o_c_k_s_5_-_g_s_s_a_p_i to
              force GSS-API authentication to SOCKS5 proxies.

              Providing --socks5-basic multiple times has no extra effect.

              Example:
               curl --socks5-basic --socks5 hostname:4096 https://example.com

              See also _-_-_s_o_c_k_s_5. Added in 7.55.0.

       --socks5-gssapi-nec
              As part of the GSS-API negotiation a protection mode is
              negotiated. RFC 1961 says in section 4.3/4.4 it should be
              protected, but the NEC reference implementation does not. The
              option _-_-_s_o_c_k_s_5_-_g_s_s_a_p_i_-_n_e_c allows the unprotected exchange of
              the protection mode negotiation.

              Providing --socks5-gssapi-nec multiple times has no extra
              effect.  Disable it again with --no-socks5-gssapi-nec.

              Example:
               curl --socks5-gssapi-nec --socks5 hostname:4096 https://example.com

              See also _-_-_s_o_c_k_s_5.

       --socks5-gssapi-service <name>
              The default service name for a socks server is rrccmmdd//sseerrvveerr--ffqqddnn.
              This option allows you to change it.

              If --socks5-gssapi-service is provided several times, the last
              set value is used.

              Example:
               curl --socks5-gssapi-service sockd --socks5 hostname:4096 https://example.com

              See also _-_-_s_o_c_k_s_5.

       --socks5-gssapi
              Tells curl to use GSS-API authentication when connecting to a
              SOCKS5 proxy.  The GSS-API authentication is enabled by default
              (if curl is compiled with GSS-API support). Use _-_-_s_o_c_k_s_5_-_b_a_s_i_c
              to force username/password authentication to SOCKS5 proxies.

              Providing --socks5-gssapi multiple times has no extra effect.
              Disable it again with --no-socks5-gssapi.

              Example:
               curl --socks5-gssapi --socks5 hostname:4096 https://example.com

              See also _-_-_s_o_c_k_s_5. Added in 7.55.0.

       --socks5-hostname <host[:port]>
              Use the specified SOCKS5 proxy (and let the proxy resolve the
              host name). If the port number is not specified, it is assumed
              at port 1080.

              To specify proxy on a unix domain socket, use localhost for
              host, e.g.  ""socks5h://localhost/path/to/socket.sock""

              This option overrides any previous use of _-_x_, _-_-_p_r_o_x_y, as they
              are mutually exclusive.

              This option is superfluous since you can specify a socks5
              hostname proxy with _-_x_, _-_-_p_r_o_x_y using a socks5h:// protocol
              prefix.

              _-_-_p_r_e_p_r_o_x_y can be used to specify a SOCKS proxy at the same time
              _-_x_, _-_-_p_r_o_x_y is used with an HTTP/HTTPS proxy (added in 7.52.0).
              In such a case, curl first connects to the SOCKS proxy and then
              connects (through SOCKS) to the HTTP or HTTPS proxy.

              If --socks5-hostname is provided several times, the last set
              value is used.

              Example:
               curl --socks5-hostname proxy.example:7000 https://example.com

              See also _-_-_s_o_c_k_s_5 and _-_-_s_o_c_k_s_4_a.

       --socks5 <host[:port]>
              Use the specified SOCKS5 proxy - but resolve the host name
              locally. If the port number is not specified, it is assumed at
              port 1080.

              To specify proxy on a unix domain socket, use localhost for
              host, e.g.  ""socks5://localhost/path/to/socket.sock""

              This option overrides any previous use of _-_x_, _-_-_p_r_o_x_y, as they
              are mutually exclusive.

              This option is superfluous since you can specify a socks5 proxy
              with _-_x_, _-_-_p_r_o_x_y using a socks5:// protocol prefix.

              _-_-_p_r_e_p_r_o_x_y can be used to specify a SOCKS proxy at the same time
              _-_x_, _-_-_p_r_o_x_y is used with an HTTP/HTTPS proxy (added in 7.52.0).
              In such a case, curl first connects to the SOCKS proxy and then
              connects (through SOCKS) to the HTTP or HTTPS proxy.

              This option (as well as _-_-_s_o_c_k_s_4) does not work with IPV6, FTPS
              or LDAP.

              If --socks5 is provided several times, the last set value is
              used.

              Example:
               curl --socks5 proxy.example:7000 https://example.com

              See also _-_-_s_o_c_k_s_5_-_h_o_s_t_n_a_m_e and _-_-_s_o_c_k_s_4_a.

       -Y, --speed-limit <speed>
              If a transfer is slower than this set speed (in bytes per
              second) for a given number of seconds, it gets aborted. The time
              period is set with _-_y_, _-_-_s_p_e_e_d_-_t_i_m_e and is 30 seconds by
              default.

              If --speed-limit is provided several times, the last set value
              is used.

              Example:
               curl --speed-limit 300 --speed-time 10 https://example.com

              See also _-_y_, _-_-_s_p_e_e_d_-_t_i_m_e, _-_-_l_i_m_i_t_-_r_a_t_e and _-_m_, _-_-_m_a_x_-_t_i_m_e.

       -y, --speed-time <seconds>
              If a transfer runs slower than speed-limit bytes per second
              during a speed-time period, the transfer is aborted. If
              speed-time is used, the default speed-limit is 1 unless set with
              _-_Y_, _-_-_s_p_e_e_d_-_l_i_m_i_t.

              This option controls transfers (in both directions) but does not
              affect slow connects etc. If this is a concern for you, try the
              _-_-_c_o_n_n_e_c_t_-_t_i_m_e_o_u_t option.

              If --speed-time is provided several times, the last set value is
              used.

              Example:
               curl --speed-limit 300 --speed-time 10 https://example.com

              See also _-_Y_, _-_-_s_p_e_e_d_-_l_i_m_i_t and _-_-_l_i_m_i_t_-_r_a_t_e.

       --ssl-allow-beast
              (TLS) This option tells curl to not work around a security flaw
              in the SSL3 and TLS1.0 protocols known as BEAST. If this option
              is not used, the SSL layer may use workarounds known to cause
              interoperability problems with some older SSL implementations.

              WWAARRNNIINNGG: this option loosens the SSL security, and by using this
              flag you ask for exactly that.

              Providing --ssl-allow-beast multiple times has no extra effect.
              Disable it again with --no-ssl-allow-beast.

              Example:
               curl --ssl-allow-beast https://example.com

              See also _-_-_p_r_o_x_y_-_s_s_l_-_a_l_l_o_w_-_b_e_a_s_t and _-_k_, _-_-_i_n_s_e_c_u_r_e.

       --ssl-auto-client-cert
              (TLS) (Schannel) Tell libcurl to automatically locate and use a
              client certificate for authentication, when requested by the
              server. Since the server can request any certificate that
              supports client authentication in the OS certificate store it
              could be a privacy violation and unexpected.

              Providing --ssl-auto-client-cert multiple times has no extra
              effect.  Disable it again with --no-ssl-auto-client-cert.

              Example:
               curl --ssl-auto-client-cert https://example.com

              See also _-_-_p_r_o_x_y_-_s_s_l_-_a_u_t_o_-_c_l_i_e_n_t_-_c_e_r_t. Added in 7.77.0.

       --ssl-no-revoke
              (TLS) (Schannel) This option tells curl to disable certificate
              revocation checks.  WARNING: this option loosens the SSL
              security, and by using this flag you ask for exactly that.

              Providing --ssl-no-revoke multiple times has no extra effect.
              Disable it again with --no-ssl-no-revoke.

              Example:
               curl --ssl-no-revoke https://example.com

              See also _-_-_c_r_l_f_i_l_e.

       --ssl-reqd
              (FTP IMAP POP3 SMTP LDAP) Require SSL/TLS for the connection.
              Terminates the connection if the transfer cannot be upgraded to
              use SSL/TLS.

              This option is handled in LDAP (added in 7.81.0). It is fully
              supported by the OpenLDAP backend and rejected by the generic
              ldap backend if explicit TLS is required.

              This option is unnecessary if you use a URL scheme that in
              itself implies immediate and implicit use of TLS, like for FTPS,
              IMAPS, POP3S, SMTPS and LDAPS. Such a transfer always fails if
              the TLS handshake does not work.

              This option was formerly known as --ftp-ssl-reqd.

              Providing --ssl-reqd multiple times has no extra effect.
              Disable it again with --no-ssl-reqd.

              Example:
               curl --ssl-reqd ftp://example.com

              See also _-_-_s_s_l and _-_k_, _-_-_i_n_s_e_c_u_r_e.

       --ssl-revoke-best-effort
              (TLS) (Schannel) This option tells curl to ignore certificate
              revocation checks when they failed due to missing/offline
              distribution points for the revocation check lists.

              Providing --ssl-revoke-best-effort multiple times has no extra
              effect.  Disable it again with --no-ssl-revoke-best-effort.

              Example:
               curl --ssl-revoke-best-effort https://example.com

              See also _-_-_c_r_l_f_i_l_e and _-_k_, _-_-_i_n_s_e_c_u_r_e. Added in 7.70.0.

       --ssl  (FTP IMAP POP3 SMTP LDAP) Warning: this is considered an
              insecure option. Consider using _-_-_s_s_l_-_r_e_q_d instead to be sure
              curl upgrades to a secure connection.

              Try to use SSL/TLS for the connection. Reverts to a non-secure
              connection if the server does not support SSL/TLS. See also
              _-_-_f_t_p_-_s_s_l_-_c_o_n_t_r_o_l and _-_-_s_s_l_-_r_e_q_d for different levels of
              encryption required.

              This option is handled in LDAP (added in 7.81.0). It is fully
              supported by the OpenLDAP backend and ignored by the generic
              ldap backend.

              Please note that a server may close the connection if the
              negotiation does not succeed.

              This option was formerly known as --ftp-ssl. That option name
              can still be used but might be removed in a future version.

              Providing --ssl multiple times has no extra effect.  Disable it
              again with --no-ssl.

              Example:
               curl --ssl pop3://example.com/

              See also _-_-_s_s_l_-_r_e_q_d, _-_k_, _-_-_i_n_s_e_c_u_r_e and _-_-_c_i_p_h_e_r_s.

       -2, --sslv2
              (SSL) This option previously asked curl to use SSLv2, but is now
              ignored (added in 7.77.0). SSLv2 is widely considered insecure
              (see RFC 6176).

              Providing --sslv2 multiple times has no extra effect.

              Example:
               curl --sslv2 https://example.com

              See also _-_-_h_t_t_p_1_._1 and _-_-_h_t_t_p_2. _-_2_, _-_-_s_s_l_v_2 requires that the
              underlying libcurl was built to support TLS. This option is
              mutually exclusive to _-_3_, _-_-_s_s_l_v_3 and _-_1_, _-_-_t_l_s_v_1 and _-_-_t_l_s_v_1_._1
              and _-_-_t_l_s_v_1_._2.

       -3, --sslv3
              (SSL) This option previously asked curl to use SSLv3, but is now
              ignored (added in 7.77.0). SSLv3 is widely considered insecure
              (see RFC 7568).

              Providing --sslv3 multiple times has no extra effect.

              Example:
               curl --sslv3 https://example.com

              See also _-_-_h_t_t_p_1_._1 and _-_-_h_t_t_p_2. _-_3_, _-_-_s_s_l_v_3 requires that the
              underlying libcurl was built to support TLS. This option is
              mutually exclusive to _-_2_, _-_-_s_s_l_v_2 and _-_1_, _-_-_t_l_s_v_1 and _-_-_t_l_s_v_1_._1
              and _-_-_t_l_s_v_1_._2.

       --stderr <file>
              Redirect all writes to stderr to the specified file instead. If
              the file name is a plain '-', it is instead written to stdout.

              This option is global and does not need to be specified for each
              use of --next.

              If --stderr is provided several times, the last set value is
              used.

              Example:
               curl --stderr output.txt https://example.com

              See also _-_v_, _-_-_v_e_r_b_o_s_e and _-_s_, _-_-_s_i_l_e_n_t.

       --styled-output
              Enables the automatic use of bold font styles when writing HTTP
              headers to the terminal. Use --no-styled-output to switch them
              off.

              Styled output requires a terminal that supports bold fonts. This
              feature is not present on curl for Windows due to lack of this
              capability.

              This option is global and does not need to be specified for each
              use of --next.

              Providing --styled-output multiple times has no extra effect.
              Disable it again with --no-styled-output.

              Example:
               curl --styled-output -I https://example.com

              See also _-_I_, _-_-_h_e_a_d and _-_v_, _-_-_v_e_r_b_o_s_e. Added in 7.61.0.

       --suppress-connect-headers
              When _-_p_, _-_-_p_r_o_x_y_t_u_n_n_e_l is used and a CONNECT request is made do
              not output proxy CONNECT response headers. This option is meant
              to be used with _-_D_, _-_-_d_u_m_p_-_h_e_a_d_e_r or _-_i_, _-_-_i_n_c_l_u_d_e which are
              used to show protocol headers in the output. It has no effect on
              debug options such as _-_v_, _-_-_v_e_r_b_o_s_e or _-_-_t_r_a_c_e, or any
              statistics.

              Providing --suppress-connect-headers multiple times has no extra
              effect.  Disable it again with --no-suppress-connect-headers.

              Example:
               curl --suppress-connect-headers --include -x proxy https://example.com

              See also _-_D_, _-_-_d_u_m_p_-_h_e_a_d_e_r, _-_i_, _-_-_i_n_c_l_u_d_e and _-_p_, _-_-_p_r_o_x_y_t_u_n_n_e_l.
              Added in 7.54.0.

       --tcp-fastopen
              Enable use of TCP Fast Open (RFC 7413). TCP Fast Open is a TCP
              extension that allows data to get sent earlier over the
              connection (before the final handshake ACK) if the client and
              server have been connected previously.

              Providing --tcp-fastopen multiple times has no extra effect.
              Disable it again with --no-tcp-fastopen.

              Example:
               curl --tcp-fastopen https://example.com

              See also _-_-_f_a_l_s_e_-_s_t_a_r_t.

       --tcp-nodelay
              Turn on the TCP_NODELAY option. See the _c_u_r_l___e_a_s_y___s_e_t_o_p_t_(_3_) man
              page for details about this option.

              curl sets this option by default and you need to explicitly
              switch it off if you do not want it on (added in 7.50.2).

              Providing --tcp-nodelay multiple times has no extra effect.
              Disable it again with --no-tcp-nodelay.

              Example:
               curl --tcp-nodelay https://example.com

              See also _-_N_, _-_-_n_o_-_b_u_f_f_e_r.

       -t, --telnet-option <opt=val>
              Pass options to the telnet protocol. Supported options are:

              `TTYPE=<term>`
                     Sets the terminal type.

              `XDISPLOC=<X display>`
                     Sets the X display location.

              `NEW_ENV=<var,val>`
                     Sets an environment variable.


              --telnet-option can be used several times in a command line

              Example:
               curl -t TTYPE=vt100 telnet://example.com/

              See also _-_K_, _-_-_c_o_n_f_i_g.

       --tftp-blksize <value>
              (TFTP) Set the TFTP BBLLKKSSIIZZEE option (must be >512). This is the
              block size that curl tries to use when transferring data to or
              from a TFTP server. By default 512 bytes are used.

              If --tftp-blksize is provided several times, the last set value
              is used.

              Example:
               curl --tftp-blksize 1024 tftp://example.com/file

              See also _-_-_t_f_t_p_-_n_o_-_o_p_t_i_o_n_s.

       --tftp-no-options
              (TFTP) Tells curl not to send TFTP options requests.

              This option improves interop with some legacy servers that do
              not acknowledge or properly implement TFTP options. When this
              option is used _-_-_t_f_t_p_-_b_l_k_s_i_z_e is ignored.

              Providing --tftp-no-options multiple times has no extra effect.
              Disable it again with --no-tftp-no-options.

              Example:
               curl --tftp-no-options tftp://192.168.0.1/

              See also _-_-_t_f_t_p_-_b_l_k_s_i_z_e.

       -z, --time-cond <time>
              (HTTP FTP) Request a file that has been modified later than the
              given time and date, or one that has been modified before that
              time. The <date expression> can be all sorts of date strings or
              if it does not match any internal ones, it is taken as a
              filename and tries to get the modification date (mtime) from
              <file> instead. See the _c_u_r_l___g_e_t_d_a_t_e_(_3_) man pages for date
              expression details.

              Start the date expression with a dash (-) to make it request for
              a document that is older than the given date/time, default is a
              document that is newer than the specified date/time.

              If provided a non-existing file, curl outputs a warning about
              that fact and proceeds to do the transfer without a time
              condition.

              If --time-cond is provided several times, the last set value is
              used.

              Examples:
               curl -z ""Wed 01 Sep 2021 12:18:00"" https://example.com
               curl -z ""-Wed 01 Sep 2021 12:18:00"" https://example.com
               curl -z file https://example.com

              See also _-_-_e_t_a_g_-_c_o_m_p_a_r_e and _-_R_, _-_-_r_e_m_o_t_e_-_t_i_m_e.

       --tls-max <VERSION>
              (TLS) VERSION defines maximum supported TLS version. The minimum
              acceptable version is set by tlsv1.0, tlsv1.1, tlsv1.2 or
              tlsv1.3.

              If the connection is done without TLS, this option has no
              effect. This includes QUIC-using (HTTP/3) transfers.

              default
                     Use up to recommended TLS version.

              1.0    Use up to TLSv1.0.

              1.1    Use up to TLSv1.1.

              1.2    Use up to TLSv1.2.

              1.3    Use up to TLSv1.3.


              If --tls-max is provided several times, the last set value is
              used.

              Examples:
               curl --tls-max 1.2 https://example.com
               curl --tls-max 1.3 --tlsv1.2 https://example.com

              See also _-_-_t_l_s_v_1_._0, _-_-_t_l_s_v_1_._1, _-_-_t_l_s_v_1_._2 and _-_-_t_l_s_v_1_._3.
              _-_-_t_l_s_-_m_a_x requires that the underlying libcurl was built to
              support TLS. Added in 7.54.0.

       --tls13-ciphers <ciphersuite list>
              (TLS) Specifies which cipher suites to use in the connection if
              it negotiates TLS 1.3. The list of ciphers suites must specify
              valid ciphers. Read up on TLS 1.3 cipher suite details on this
              URL:

              https://curl.se/docs/ssl-ciphers.html

              This option is currently used only when curl is built to use
              OpenSSL 1.1.1 or later, or Schannel. If you are using a
              different SSL backend you can try setting TLS 1.3 cipher suites
              by using the _-_-_c_i_p_h_e_r_s option.

              If --tls13-ciphers is provided several times, the last set value
              is used.

              Example:
               curl --tls13-ciphers TLS_AES_128_GCM_SHA256 https://example.com

              See also _-_-_c_i_p_h_e_r_s, _-_-_c_u_r_v_e_s and _-_-_p_r_o_x_y_-_t_l_s_1_3_-_c_i_p_h_e_r_s. Added in
              7.61.0.

       --tlsauthtype <type>
              (TLS) Set TLS authentication type. Currently, the only supported
              option is ""SRP"", for TLS-SRP (RFC 5054). If _-_-_t_l_s_u_s_e_r and
              _-_-_t_l_s_p_a_s_s_w_o_r_d are specified but _-_-_t_l_s_a_u_t_h_t_y_p_e is not, then this
              option defaults to ""SRP"". This option works only if the
              underlying libcurl is built with TLS-SRP support, which requires
              OpenSSL or GnuTLS with TLS-SRP support.

              If --tlsauthtype is provided several times, the last set value
              is used.

              Example:
               curl --tlsauthtype SRP https://example.com

              See also _-_-_t_l_s_u_s_e_r.

       --tlspassword <string>
              (TLS) Set password for use with the TLS authentication method
              specified with _-_-_t_l_s_a_u_t_h_t_y_p_e. Requires that _-_-_t_l_s_u_s_e_r also be
              set.

              This option does not work with TLS 1.3.

              If --tlspassword is provided several times, the last set value
              is used.

              Example:
               curl --tlspassword pwd --tlsuser user https://example.com

              See also _-_-_t_l_s_u_s_e_r.

       --tlsuser <name>
              (TLS) Set username for use with the TLS authentication method
              specified with _-_-_t_l_s_a_u_t_h_t_y_p_e. Requires that _-_-_t_l_s_p_a_s_s_w_o_r_d also
              is set.

              This option does not work with TLS 1.3.

              If --tlsuser is provided several times, the last set value is
              used.

              Example:
               curl --tlspassword pwd --tlsuser user https://example.com

              See also _-_-_t_l_s_p_a_s_s_w_o_r_d.

       --tlsv1.0
              (TLS) Forces curl to use TLS version 1.0 or later when
              connecting to a remote TLS server.

              In old versions of curl this option was documented to allow
              _only_ TLS 1.0.  That behavior was inconsistent depending on the
              TLS library. Use _-_-_t_l_s_-_m_a_x if you want to set a maximum TLS
              version.

              Providing --tlsv1.0 multiple times has no extra effect.

              Example:
               curl --tlsv1.0 https://example.com

              See also _-_-_t_l_s_v_1_._3.

       --tlsv1.1
              (TLS) Forces curl to use TLS version 1.1 or later when
              connecting to a remote TLS server.

              In old versions of curl this option was documented to allow
              _only_ TLS 1.1.  That behavior was inconsistent depending on the
              TLS library. Use _-_-_t_l_s_-_m_a_x if you want to set a maximum TLS
              version.

              Providing --tlsv1.1 multiple times has no extra effect.

              Example:
               curl --tlsv1.1 https://example.com

              See also _-_-_t_l_s_v_1_._3 and _-_-_t_l_s_-_m_a_x.

       --tlsv1.2
              (TLS) Forces curl to use TLS version 1.2 or later when
              connecting to a remote TLS server.

              In old versions of curl this option was documented to allow
              _only_ TLS 1.2.  That behavior was inconsistent depending on the
              TLS library. Use _-_-_t_l_s_-_m_a_x if you want to set a maximum TLS
              version.

              Providing --tlsv1.2 multiple times has no extra effect.

              Example:
               curl --tlsv1.2 https://example.com

              See also _-_-_t_l_s_v_1_._3 and _-_-_t_l_s_-_m_a_x.

       --tlsv1.3
              (TLS) Forces curl to use TLS version 1.3 or later when
              connecting to a remote TLS server.

              If the connection is done without TLS, this option has no
              effect. This includes QUIC-using (HTTP/3) transfers.

              Note that TLS 1.3 is not supported by all TLS backends.

              Providing --tlsv1.3 multiple times has no extra effect.

              Example:
               curl --tlsv1.3 https://example.com

              See also _-_-_t_l_s_v_1_._2 and _-_-_t_l_s_-_m_a_x. Added in 7.52.0.

       -1, --tlsv1
              (TLS) Tells curl to use at least TLS version 1.x when
              negotiating with a remote TLS server. That means TLS version 1.0
              or higher

              Providing --tlsv1 multiple times has no extra effect.

              Example:
               curl --tlsv1 https://example.com

              See also _-_-_h_t_t_p_1_._1 and _-_-_h_t_t_p_2. _-_1_, _-_-_t_l_s_v_1 requires that the
              underlying libcurl was built to support TLS. This option is
              mutually exclusive to _-_-_t_l_s_v_1_._1 and _-_-_t_l_s_v_1_._2 and _-_-_t_l_s_v_1_._3.

       --tr-encoding
              (HTTP) Request a compressed Transfer-Encoding response using one
              of the algorithms curl supports, and uncompress the data while
              receiving it.

              Providing --tr-encoding multiple times has no extra effect.
              Disable it again with --no-tr-encoding.

              Example:
               curl --tr-encoding https://example.com

              See also _-_-_c_o_m_p_r_e_s_s_e_d.

       --trace-ascii <file>
              Enables a full trace dump of all incoming and outgoing data,
              including descriptive information, to the given output file. Use
              ""-"" as filename to have the output sent to stdout.

              This is similar to _-_-_t_r_a_c_e, but leaves out the hex part and only
              shows the ASCII part of the dump. It makes smaller output that
              might be easier to read for untrained humans.

              Note that verbose output of curl activities and network traffic
              might contain sensitive data, including user names, credentials
              or secret data content. Be aware and be careful when sharing
              trace logs with others.

              This option is global and does not need to be specified for each
              use of --next.

              If --trace-ascii is provided several times, the last set value
              is used.

              Example:
               curl --trace-ascii log.txt https://example.com

              See also _-_v_, _-_-_v_e_r_b_o_s_e and _-_-_t_r_a_c_e. This option is mutually
              exclusive to _-_-_t_r_a_c_e and _-_v_, _-_-_v_e_r_b_o_s_e.

       --trace-config <string>
              Set configuration for trace output. A comma-separated list of
              components where detailed output can be made available from.
              Names are case-insensitive.  Specify 'all' to enable all trace
              components.

              In addition to trace component names, specify ""ids"" and ""time""
              to avoid extra _-_-_t_r_a_c_e_-_i_d_s or _-_-_t_r_a_c_e_-_t_i_m_e parameters.

              See the _c_u_r_l___g_l_o_b_a_l___t_r_a_c_e_(_3_) man page for more details.

              This option is global and does not need to be specified for each
              use of --next.

              --trace-config can be used several times in a command line

              Example:
               curl --trace-config ids,http/2 https://example.com

              See also _-_v_, _-_-_v_e_r_b_o_s_e and _-_-_t_r_a_c_e. This option is mutually
              exclusive to _-_-_t_r_a_c_e and _-_v_, _-_-_v_e_r_b_o_s_e. Added in 8.3.0.

       --trace-ids
              Prepends the transfer and connection identifiers to each trace
              or verbose line that curl displays.

              This option is global and does not need to be specified for each
              use of --next.

              Providing --trace-ids multiple times has no extra effect.
              Disable it again with --no-trace-ids.

              Example:
               curl --trace-ids --trace-ascii output https://example.com

              See also _-_-_t_r_a_c_e and _-_v_, _-_-_v_e_r_b_o_s_e. Added in 8.2.0.

       --trace-time
              Prepends a time stamp to each trace or verbose line that curl
              displays.

              This option is global and does not need to be specified for each
              use of --next.

              Providing --trace-time multiple times has no extra effect.
              Disable it again with --no-trace-time.

              Example:
               curl --trace-time --trace-ascii output https://example.com

              See also _-_-_t_r_a_c_e and _-_v_, _-_-_v_e_r_b_o_s_e.

       --trace <file>
              Enables a full trace dump of all incoming and outgoing data,
              including descriptive information, to the given output file. Use
              ""-"" as filename to have the output sent to stdout. Use ""%"" as
              filename to have the output sent to stderr.

              Note that verbose output of curl activities and network traffic
              might contain sensitive data, including user names, credentials
              or secret data content. Be aware and be careful when sharing
              trace logs with others.

              This option is global and does not need to be specified for each
              use of --next.

              If --trace is provided several times, the last set value is
              used.

              Example:
               curl --trace log.txt https://example.com

              See also _-_-_t_r_a_c_e_-_a_s_c_i_i, _-_-_t_r_a_c_e_-_c_o_n_f_i_g, _-_-_t_r_a_c_e_-_i_d_s and
              _-_-_t_r_a_c_e_-_t_i_m_e. This option is mutually exclusive to _-_v_, _-_-_v_e_r_b_o_s_e
              and _-_-_t_r_a_c_e_-_a_s_c_i_i.

       --unix-socket <path>
              (HTTP) Connect through this Unix domain socket, instead of using
              the network.

              If --unix-socket is provided several times, the last set value
              is used.

              Example:
               curl --unix-socket socket-path https://example.com

              See also _-_-_a_b_s_t_r_a_c_t_-_u_n_i_x_-_s_o_c_k_e_t.

       -T, --upload-file <file>
              This transfers the specified local file to the remote URL.

              If there is no file part in the specified URL, curl appends the
              local file name to the end of the URL before the operation
              starts. You must use a trailing slash (/) on the last directory
              to prove to curl that there is no file name or curl thinks that
              your last directory name is the remote file name to use.

              When putting the local file name at the end of the URL, curl
              ignores what is on the left side of any slash (/) or backslash
              (\) used in the file name and only appends what is on the right
              side of the rightmost such character.

              Use the file name ""-"" (a single dash) to use stdin instead of a
              given file.  Alternately, the file name ""."" (a single period)
              may be specified instead of ""-"" to use stdin in non-blocking
              mode to allow reading server output while stdin is being
              uploaded.

              If this option is used with a HTTP(S) URL, the PUT method is
              used.

              You can specify one _-_T_, _-_-_u_p_l_o_a_d_-_f_i_l_e for each URL on the
              command line. Each _-_T_, _-_-_u_p_l_o_a_d_-_f_i_l_e + URL pair specifies what
              to upload and to where. curl also supports ""globbing"" of the _-_T_,
              _-_-_u_p_l_o_a_d_-_f_i_l_e argument, meaning that you can upload multiple
              files to a single URL by using the same URL globbing style
              supported in the URL.

              When uploading to an SMTP server: the uploaded data is assumed
              to be RFC 5322 formatted. It has to feature the necessary set of
              headers and mail body formatted correctly by the user as curl
              does not transcode nor encode it further in any way.

              --upload-file can be used several times in a command line

              Examples:
               curl -T file https://example.com
               curl -T ""img[1-1000].png"" ftp://ftp.example.com/
               curl --upload-file ""{file1,file2}"" https://example.com

              See also _-_G_, _-_-_g_e_t, _-_I_, _-_-_h_e_a_d, _-_X_, _-_-_r_e_q_u_e_s_t and _-_d_, _-_-_d_a_t_a.

       --url-query <data>
              (all) This option adds a piece of data, usually a name + value
              pair, to the end of the URL query part. The syntax is identical
              to that used for _-_-_d_a_t_a_-_u_r_l_e_n_c_o_d_e with one extension:

              If the argument starts with a '+' (plus), the rest of the string
              is provided as-is unencoded.

              The query part of a URL is the one following the question mark
              on the right end.

              --url-query can be used several times in a command line

              Examples:
               curl --url-query name=val https://example.com
               curl --url-query =encodethis http://example.net/foo
               curl --url-query name@file https://example.com
               curl --url-query @fileonly https://example.com
               curl --url-query ""+name=%20foo"" https://example.com

              See also _-_-_d_a_t_a_-_u_r_l_e_n_c_o_d_e and _-_G_, _-_-_g_e_t. Added in 7.87.0.

       --url <url>
              Specify a URL to fetch. This option is mostly handy when you
              want to specify URL(s) in a config file.

              If the given URL is missing a scheme name (such as ""http://"" or
              ""ftp://"" etc) then curl makes a guess based on the host. If the
              outermost subdomain name matches DICT, FTP, IMAP, LDAP, POP3 or
              SMTP then that protocol is used, otherwise HTTP is used.
              Guessing can be avoided by providing a full URL including the
              scheme, or disabled by setting a default protocol (added in
              7.45.0), see _-_-_p_r_o_t_o_-_d_e_f_a_u_l_t for details.

              To control where this URL is written, use the _-_o_, _-_-_o_u_t_p_u_t or
              the _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e options.

              WWAARRNNIINNGG: On Windows, particular file:// accesses can be
              converted to network accesses by the operating system. Beware!

              --url can be used several times in a command line

              Example:
               curl --url https://example.com

              See also _-_:_, _-_-_n_e_x_t and _-_K_, _-_-_c_o_n_f_i_g.

       -B, --use-ascii
              (FTP LDAP) Enable ASCII transfer. For FTP, this can also be
              enforced by using a URL that ends with "";type=A"". This option
              causes data sent to stdout to be in text mode for win32 systems.

              Providing --use-ascii multiple times has no extra effect.
              Disable it again with --no-use-ascii.

              Example:
               curl -B ftp://example.com/README

              See also _-_-_c_r_l_f and _-_-_d_a_t_a_-_a_s_c_i_i.

       -A, --user-agent <name>
              (HTTP) Specify the User-Agent string to send to the HTTP server.
              To encode blanks in the string, surround the string with single
              quote marks. This header can also be set with the _-_H_, _-_-_h_e_a_d_e_r
              or the _-_-_p_r_o_x_y_-_h_e_a_d_e_r options.

              If you give an empty argument to _-_A_, _-_-_u_s_e_r_-_a_g_e_n_t (""""), it
              removes the header completely from the request. If you prefer a
              blank header, you can set it to a single space ("" "").

              If --user-agent is provided several times, the last set value is
              used.

              Example:
               curl -A ""Agent 007"" https://example.com

              See also _-_H_, _-_-_h_e_a_d_e_r and _-_-_p_r_o_x_y_-_h_e_a_d_e_r.

       -u, --user <user:password>
              Specify the user name and password to use for server
              authentication. Overrides _-_n_, _-_-_n_e_t_r_c and _-_-_n_e_t_r_c_-_o_p_t_i_o_n_a_l.

              If you simply specify the user name, curl prompts for a
              password.

              The user name and passwords are split up on the first colon,
              which makes it impossible to use a colon in the user name with
              this option. The password can, still.

              On systems where it works, curl hides the given option argument
              from process listings. This is not enough to protect credentials
              from possibly getting seen by other users on the same system as
              they still are visible for a moment before cleared. Such
              sensitive data should be retrieved from a file instead or
              similar and never used in clear text in a command line.

              When using Kerberos V5 with a Windows based server you should
              include the Windows domain name in the user name, in order for
              the server to successfully obtain a Kerberos Ticket. If you do
              not, then the initial authentication handshake may fail.

              When using NTLM, the user name can be specified simply as the
              user name, without the domain, if there is a single domain and
              forest in your setup for example.

              To specify the domain name use either Down-Level Logon Name or
              UPN (User Principal Name) formats. For example, EXAMPLE\user and
              user@example.com respectively.

              If you use a Windows SSPI-enabled curl binary and perform
              Kerberos V5, Negotiate, NTLM or Digest authentication then you
              can tell curl to select the user name and password from your
              environment by specifying a single colon with this option: ""-u
              :"".

              If --user is provided several times, the last set value is used.

              Example:
               curl -u user:secret https://example.com

              See also _-_n_, _-_-_n_e_t_r_c and _-_K_, _-_-_c_o_n_f_i_g.

       --variable <[%]name=text/@file>
              Set a variable with ""name=content"" or ""name@file"" (where ""file""
              can be stdin if set to a single dash (-)). The name is a case
              sensitive identifier that must consist of no other letters than
              a-z, A-Z, 0-9 or underscore. The specified content is then
              associated with this identifier.

              Setting the same variable name again overwrites the old contents
              with the new.

              The contents of a variable can be referenced in a later command
              line option when that option name is prefixed with ""--expand-"",
              and the name is used as ""{{name}}"" (without the quotes).

              _-_-_v_a_r_i_a_b_l_e can import environment variables into the name space.
              Opt to either require the environment variable to be set or
              provide a default value for the variable in case it is not
              already set.

              _-_-_v_a_r_i_a_b_l_e %name imports the variable called 'name' but exits
              with an error if that environment variable is not already set.
              To provide a default value if the environment variable is not
              set, use _-_-_v_a_r_i_a_b_l_e %name=content or _-_-_v_a_r_i_a_b_l_e %name@content.
              Note that on some systems - but not all - environment variables
              are case insensitive.

              When expanding variables, curl supports a set of functions that
              can make the variable contents more convenient to use. You apply
              a function to a variable expansion by adding a colon and then
              list the desired functions in a comma-separated list that is
              evaluated in a left-to-right order. Variable content holding
              null bytes that are not encoded when expanded, causes an error.

              Available functions:

              trim   removes all leading and trailing white space.

              json   outputs the content using JSON string quoting rules.

              url    shows the content URL (percent) encoded.

              b64    expands the variable base64 encoded


              --variable can be used several times in a command line

              Example:
               curl --variable name=smith https://example.com

              See also _-_K_, _-_-_c_o_n_f_i_g. Added in 8.3.0.

       -v, --verbose
              Makes curl verbose during the operation. Useful for debugging
              and seeing what's going on ""under the hood"". A line starting
              with '>' means ""header data"" sent by curl, '<' means ""header
              data"" received by curl that is hidden in normal cases, and a
              line starting with '*' means additional info provided by curl.

              If you only want HTTP headers in the output, _-_i_, _-_-_i_n_c_l_u_d_e or
              _-_D_, _-_-_d_u_m_p_-_h_e_a_d_e_r might be more suitable options.

              If you think this option still does not give you enough details,
              consider using _-_-_t_r_a_c_e or _-_-_t_r_a_c_e_-_a_s_c_i_i instead.

              Note that verbose output of curl activities and network traffic
              might contain sensitive data, including user names, credentials
              or secret data content. Be aware and be careful when sharing
              trace logs with others.

              This option is global and does not need to be specified for each
              use of --next.

              Providing --verbose multiple times has no extra effect.  Disable
              it again with --no-verbose.

              Example:
               curl --verbose https://example.com

              See also _-_i_, _-_-_i_n_c_l_u_d_e, _-_s_, _-_-_s_i_l_e_n_t, _-_-_t_r_a_c_e and _-_-_t_r_a_c_e_-_a_s_c_i_i.
              This option is mutually exclusive to _-_-_t_r_a_c_e and _-_-_t_r_a_c_e_-_a_s_c_i_i.

       -V, --version
              Displays information about curl and the libcurl version it uses.

              The first line includes the full version of curl, libcurl and
              other 3rd party libraries linked with the executable.

              The second line (starts with ""Release-Date:"") shows the release
              date.

              The third line (starts with ""Protocols:"") shows all protocols
              that libcurl reports to support.

              The fourth line (starts with ""Features:"") shows specific
              features libcurl reports to offer. Available features include:

              `alt-svc`
                     Support for the Alt-Svc: header is provided.

              `AsynchDNS`
                     This curl uses asynchronous name resolves. Asynchronous
                     name resolves can be done using either the c-ares or the
                     threaded resolver backends.

              `brotli`
                     Support for automatic brotli compression over HTTP(S).

              `CharConv`
                     curl was built with support for character set conversions
                     (like EBCDIC)

              `Debug`
                     This curl uses a libcurl built with Debug. This enables
                     more error-tracking and memory debugging etc. For
                     curl-developers only!

              `gsasl`
                     The built-in SASL authentication includes extensions to
                     support SCRAM because libcurl was built with libgsasl.

              `GSS-API`
                     GSS-API is supported.

              `HSTS` HSTS support is present.

              `HTTP2`
                     HTTP/2 support has been built-in.

              `HTTP3`
                     HTTP/3 support has been built-in.

              `HTTPS-proxy`
                     This curl is built to support HTTPS proxy.

              `IDN`  This curl supports IDN - international domain names.

              `IPv6` You can use IPv6 with this.

              `Kerberos`
                     Kerberos V5 authentication is supported.

              `Largefile`
                     This curl supports transfers of large files, files larger
                     than 2GB.

              `libz` Automatic decompression (via gzip, deflate) of compressed
                     files over HTTP is supported.

              `MultiSSL`
                     This curl supports multiple TLS backends.

              `NTLM` NTLM authentication is supported.

              `NTLM_WB`
                     NTLM delegation to winbind helper is supported.

              `PSL`  PSL is short for Public Suffix List and means that this
                     curl has been built with knowledge about ""public
                     suffixes"".

              `SPNEGO`
                     SPNEGO authentication is supported.

              `SSL`  SSL versions of various protocols are supported, such as
                     HTTPS, FTPS, POP3S and so on.

              `SSPI` SSPI is supported.

              `TLS-SRP`
                     SRP (Secure Remote Password) authentication is supported
                     for TLS.

              `TrackMemory`
                     Debug memory tracking is supported.

              `Unicode`
                     Unicode support on Windows.

              `UnixSockets`
                     Unix sockets support is provided.

              `zstd` Automatic decompression (via zstd) of compressed files
                     over HTTP is supported.


              Example:
               curl --version

              See also _-_h_, _-_-_h_e_l_p and _-_M_, _-_-_m_a_n_u_a_l.

       -w, --write-out <format>
              Make curl display information on stdout after a completed
              transfer. The format is a string that may contain plain text
              mixed with any number of variables. The format can be specified
              as a literal ""string"", or you can have curl read the format from
              a file with ""@filename"" and to tell curl to read the format from
              stdin you write ""@-"".

              The variables present in the output format are substituted by
              the value or text that curl thinks fit, as described below. All
              variables are specified as %{variable_name} and to output a
              normal % you just write them as %%. You can output a newline by
              using \n, a carriage return with \r and a tab space with \t.

              The output is by default written to standard output, but can be
              changed with %{stderr} and %output{}.

              Output HTTP headers from the most recent request by using
              _%_h_e_a_d_e_r_{_n_a_m_e_} where _n_a_m_e is the case insensitive name of the
              header (without the trailing colon). The header contents are
              exactly as sent over the network, with leading and trailing
              whitespace trimmed (added in 7.84.0).

              Select a specific target destination file to write the output
              to, by using _%_o_u_t_p_u_t_{_n_a_m_e_} (added in curl 8.3.0) where _n_a_m_e is
              the full file name. The output following that instruction is
              then written to that file. More than one _%_o_u_t_p_u_t_{_} instruction
              can be specified in the same write-out argument. If the file
              name cannot be created, curl leaves the output destination to
              the one used prior to the _%_o_u_t_p_u_t_{_} instruction. Use
              _%_o_u_t_p_u_t_{_>_>_n_a_m_e_} to append data to an existing file.

              NNOOTTEE:: In Windows the %-symbol is a special symbol used to expand
              environment variables. In batch files all occurrences of % must
              be doubled when using this option to properly escape. If this
              option is used at the command prompt then the % cannot be
              escaped and unintended expansion is possible.

              The variables available are:

              `certs`
                     Output the certificate chain with details. Supported only
                     by the OpenSSL, GnuTLS, Schannel and Secure Transport
                     backends. (Added in 7.88.0)

              `content_type`
                     The Content-Type of the requested document, if there was
                     any.

              `errormsg`
                     The error message. (Added in 7.75.0)

              `exitcode`
                     The numerical exit code of the transfer. (Added in
                     7.75.0)

              `filename_effective`
                     The ultimate filename that curl writes out to. This is
                     only meaningful if curl is told to write to a file with
                     the _-_O_, _-_-_r_e_m_o_t_e_-_n_a_m_e or _-_o_, _-_-_o_u_t_p_u_t option. It's most
                     useful in combination with the _-_J_, _-_-_r_e_m_o_t_e_-_h_e_a_d_e_r_-_n_a_m_e
                     option.

              `ftp_entry_path`
                     The initial path curl ended up in when logging on to the
                     remote FTP server.

              `header_json`
                     A JSON object with all HTTP response headers from the
                     recent transfer. Values are provided as arrays, since in
                     the case of multiple headers there can be multiple
                     values. (Added in 7.83.0)

                     The header names provided in lowercase, listed in order
                     of appearance over the wire. Except for duplicated
                     headers. They are grouped on the first occurrence of that
                     header, each value is presented in the JSON array.

              `http_code`
                     The numerical response code that was found in the last
                     retrieved HTTP(S) or FTP(s) transfer.

              `http_connect`
                     The numerical code that was found in the last response
                     (from a proxy) to a curl CONNECT request.

              `http_version`
                     The http version that was effectively used. (Added in
                     7.50.0)

              `json` A JSON object with all available keys. (Added in 7.70.0)

              `local_ip`
                     The IP address of the local end of the most recently done
                     connection - can be either IPv4 or IPv6.

              `local_port`
                     The local port number of the most recently done
                     connection.

              `method`
                     The http method used in the most recent HTTP request.
                     (Added in 7.72.0)

              `num_certs`
                     Number of server certificates received in the TLS
                     handshake. Supported only by the OpenSSL, GnuTLS,
                     Schannel and Secure Transport backends.  (Added in
                     7.88.0)

              `num_connects`
                     Number of new connects made in the recent transfer.

              `num_headers`
                     The number of response headers in the most recent request
                     (restarted at each redirect). Note that the status line
                     IS NOT a header. (Added in 7.73.0)

              `num_redirects`
                     Number of redirects that were followed in the request.

              `onerror`
                     The rest of the output is only shown if the transfer
                     returned a non-zero error.  (Added in 7.75.0)

              `proxy_ssl_verify_result`
                     The result of the HTTPS proxy's SSL peer certificate
                     verification that was requested. 0 means the verification
                     was successful. (Added in 7.52.0)

              `redirect_url`
                     When an HTTP request was made without _-_L_, _-_-_l_o_c_a_t_i_o_n to
                     follow redirects (or when _-_-_m_a_x_-_r_e_d_i_r_s is met), this
                     variable shows the actual URL a redirect _w_o_u_l_d have gone
                     to.

              `referer`
                     The Referer: header, if there was any. (Added in 7.76.0)

              `remote_ip`
                     The remote IP address of the most recently done
                     connection - can be either IPv4 or IPv6.

              `remote_port`
                     The remote port number of the most recently done
                     connection.

              `response_code`
                     The numerical response code that was found in the last
                     transfer (formerly known as ""http_code"").

              `scheme`
                     The URL scheme (sometimes called protocol) that was
                     effectively used. (Added in 7.52.0)

              `size_download`
                     The total amount of bytes that were downloaded. This is
                     the size of the body/data that was transferred, excluding
                     headers.

              `size_header`
                     The total amount of bytes of the downloaded headers.

              `size_request`
                     The total amount of bytes that were sent in the HTTP
                     request.

              `size_upload`
                     The total amount of bytes that were uploaded. This is the
                     size of the body/data that was transferred, excluding
                     headers.

              `speed_download`
                     The average download speed that curl measured for the
                     complete download. Bytes per second.

              `speed_upload`
                     The average upload speed that curl measured for the
                     complete upload. Bytes per second.

              `ssl_verify_result`
                     The result of the SSL peer certificate verification that
                     was requested. 0 means the verification was successful.

              `stderr`
                     From this point on, the _-_w_, _-_-_w_r_i_t_e_-_o_u_t output is written
                     to standard error. (Added in 7.63.0)

              `stdout`
                     From this point on, the _-_w_, _-_-_w_r_i_t_e_-_o_u_t output is written
                     to standard output.  This is the default, but can be used
                     to switch back after switching to stderr.  (Added in
                     7.63.0)

              `time_appconnect`
                     The time, in seconds, it took from the start until the
                     SSL/SSH/etc connect/handshake to the remote host was
                     completed.

              `time_connect`
                     The time, in seconds, it took from the start until the
                     TCP connect to the remote host (or proxy) was completed.

              `time_namelookup`
                     The time, in seconds, it took from the start until the
                     name resolving was completed.

              `time_pretransfer`
                     The time, in seconds, it took from the start until the
                     file transfer was just about to begin. This includes all
                     pre-transfer commands and negotiations that are specific
                     to the particular protocol(s) involved.

              `time_redirect`
                     The time, in seconds, it took for all redirection steps
                     including name lookup, connect, pretransfer and transfer
                     before the final transaction was started. ""time_redirect""
                     shows the complete execution time for multiple
                     redirections.

              `time_starttransfer`
                     The time, in seconds, it took from the start until the
                     first byte is received.  This includes time_pretransfer
                     and also the time the server needed to calculate the
                     result.

              `time_total`
                     The total time, in seconds, that the full operation
                     lasted.

              `url`  The URL that was fetched. (Added in 7.75.0)

              `url.scheme`
                     The scheme part of the URL that was fetched. (Added in
                     8.1.0)

              `url.user`
                     The user part of the URL that was fetched. (Added in
                     8.1.0)

              `url.password`
                     The password part of the URL that was fetched. (Added in
                     8.1.0)

              `url.options`
                     The options part of the URL that was fetched. (Added in
                     8.1.0)

              `url.host`
                     The host part of the URL that was fetched. (Added in
                     8.1.0)

              `url.port`
                     The port number of the URL that was fetched. If no port
                     number was specified and the URL scheme is known, that
                     scheme's default port number is shown. (Added in 8.1.0)

              `url.path`
                     The path part of the URL that was fetched. (Added in
                     8.1.0)

              `url.query`
                     The query part of the URL that was fetched. (Added in
                     8.1.0)

              `url.fragment`
                     The fragment part of the URL that was fetched. (Added in
                     8.1.0)

              `url.zoneid`
                     The zone id part of the URL that was fetched. (Added in
                     8.1.0)

              `urle.scheme`
                     The scheme part of the effective (last) URL that was
                     fetched. (Added in 8.1.0)

              `urle.user`
                     The user part of the effective (last) URL that was
                     fetched. (Added in 8.1.0)

              `urle.password`
                     The password part of the effective (last) URL that was
                     fetched. (Added in 8.1.0)

              `urle.options`
                     The options part of the effective (last) URL that was
                     fetched. (Added in 8.1.0)

              `urle.host`
                     The host part of the effective (last) URL that was
                     fetched. (Added in 8.1.0)

              `urle.port`
                     The port number of the effective (last) URL that was
                     fetched. If no port number was specified, but the URL
                     scheme is known, that scheme's default port number is
                     shown. (Added in 8.1.0)

              `urle.path`
                     The path part of the effective (last) URL that was
                     fetched. (Added in 8.1.0)

              `urle.query`
                     The query part of the effective (last) URL that was
                     fetched. (Added in 8.1.0)

              `urle.fragment`
                     The fragment part of the effective (last) URL that was
                     fetched. (Added in 8.1.0)

              `urle.zoneid`
                     The zone id part of the effective (last) URL that was
                     fetched. (Added in 8.1.0)

              `urlnum`
                     The URL index number of this transfer, 0-indexed.
                     Unglobbed URLs share the same index number as the origin
                     globbed URL. (Added in 7.75.0)

              `url_effective`
                     The URL that was fetched last. This is most meaningful if
                     you have told curl to follow location: headers.


              If --write-out is provided several times, the last set value is
              used.

              Example:
               curl -w '%{response_code}\n' https://example.com

              See also _-_v_, _-_-_v_e_r_b_o_s_e and _-_I_, _-_-_h_e_a_d.

       --xattr
              When saving output to a file, this option tells curl to store
              certain file metadata in extended file attributes. Currently,
              the URL is stored in the ""xdg.origin.url"" attribute and, for
              HTTP, the content type is stored in the ""mime_type"" attribute.
              If the file system does not support extended attributes, a
              warning is issued.

              Providing --xattr multiple times has no extra effect.  Disable
              it again with --no-xattr.

              Example:
               curl --xattr -o storage https://example.com

              See also _-_R_, _-_-_r_e_m_o_t_e_-_t_i_m_e, _-_w_, _-_-_w_r_i_t_e_-_o_u_t and _-_v_, _-_-_v_e_r_b_o_s_e.

FFIILLEESS
       _~_/_._c_u_r_l_r_c

       Default config file, see _-_K_, _-_-_c_o_n_f_i_g for details.

EENNVVIIRROONNMMEENNTT
       The environment variables can be specified in lower case or upper case.
       The lower case version has precedence. ""http_proxy"" is an exception as
       it is only available in lower case.

       Using an environment variable to set the proxy has the same effect as
       using the _-_x_, _-_-_p_r_o_x_y option.

       `http_proxy` [protocol://]<host>[:port]
              Sets the proxy server to use for HTTP.

       `HTTPS_PROXY` [protocol://]<host>[:port]
              Sets the proxy server to use for HTTPS.

       `[url-protocol]_PROXY` [protocol://]<host>[:port]
              Sets the proxy server to use for [url-protocol], where the
              protocol is a protocol that curl supports and as specified in a
              URL. FTP, FTPS, POP3, IMAP, SMTP, LDAP, etc.

       `ALL_PROXY` [protocol://]<host>[:port]
              Sets the proxy server to use if no protocol-specific proxy is
              set.

       `NO_PROXY` <comma-separated list of hosts/domains>
              list of host names that should not go through any proxy. If set
              to an asterisk '*' only, it matches all hosts. Each name in this
              list is matched as either a domain name which contains the
              hostname, or the hostname itself.

              This environment variable disables use of the proxy even when
              specified with the _-_x_, _-_-_p_r_o_x_y option. That is

              NO_PROXY=direct.example.com curl -x http://proxy.example.com
              http://direct.example.com

              accesses the target URL directly, and

              NO_PROXY=direct.example.com curl -x http://proxy.example.com
              http://somewhere.example.com

              accesses the target URL through the proxy.

              The list of host names can also be include numerical IP
              addresses, and IPv6 versions should then be given without
              enclosing brackets.

              IP addresses can be specified using CIDR notation: an appended
              slash and number specifies the number of ""network bits"" out of
              the address to use in the comparison (added in 7.86.0). For
              example ""192.168.0.0/16"" would match all addresses starting with
              ""192.168"".

       `APPDATA` <dir>
              On Windows, this variable is used when trying to find the home
              directory. If the primary home variable are all unset.

       `COLUMNS` <terminal width>
              If set, the specified number of characters is used as the
              terminal width when the alternative progress-bar is shown. If
              not set, curl tries to figure it out using other ways.

       `CURL_CA_BUNDLE` <file>
              If set, it is used as the _-_-_c_a_c_e_r_t value. This environment
              variable is ignored if Schannel is used as the TLS backend.

       `CURL_HOME` <dir>
              If set, is the first variable curl checks when trying to find
              its home directory. If not set, it continues to check
              _X_D_G___C_O_N_F_I_G___H_O_M_E

       `CURL_SSL_BACKEND` <TLS backend>
              If curl was built with support for ""MultiSSL"", meaning that it
              has built-in support for more than one TLS backend, this
              environment variable can be set to the case insensitive name of
              the particular backend to use when curl is invoked. Setting a
              name that is not a built-in alternative makes curl stay with the
              default.

              SSL backend names (case-insensitive): bbeeaarrssssll, ggnnuuttllss, mmbbeeddttllss,
              ooppeennssssll, rruussttllss, sscchhaannnneell, sseeccuurree--ttrraannssppoorrtt, wwoollffssssll

       `HOME` <dir>
              If set, this is used to find the home directory when that is
              needed. Like when looking for the default .curlrc. _C_U_R_L___H_O_M_E and
              _X_D_G___C_O_N_F_I_G___H_O_M_E have preference.

       `QLOGDIR` <directory name>
              If curl was built with HTTP/3 support, setting this environment
              variable to a local directory makes curl produce qqllooggss in that
              directory, using file names named after the destination
              connection id (in hex). Do note that these files can become
              rather large. Works with the ngtcp2 and quiche QUIC backends.

       `SHELL`
              Used on VMS when trying to detect if using a DDCCLL or a uunniixx
              shell.

       `SSL_CERT_DIR` <dir>
              If set, it is used as the _-_-_c_a_p_a_t_h value. This environment
              variable is ignored if Schannel is used as the TLS backend.

       `SSL_CERT_FILE` <path>
              If set, it is used as the _-_-_c_a_c_e_r_t value. This environment
              variable is ignored if Schannel is used as the TLS backend.

       `SSLKEYLOGFILE` <file name>
              If you set this environment variable to a file name, curl stores
              TLS secrets from its connections in that file when invoked to
              enable you to analyze the TLS traffic in real time using network
              analyzing tools such as Wireshark. This works with the following
              TLS backends: OpenSSL, libressl, BoringSSL, GnuTLS and wolfSSL.

       `USERPROFILE` <dir>
              On Windows, this variable is used when trying to find the home
              directory. If the other, primary, variable are all unset. If
              set, curl uses the path """"$$UUSSEERRPPRROOFFIILLEE\\AApppplliiccaattiioonn DDaattaa"""".

       `XDG_CONFIG_HOME` <dir>
              If _C_U_R_L___H_O_M_E is not set, this variable is checked when looking
              for a default .curlrc file.

PPRROOXXYY PPRROOTTOOCCOOLL PPRREEFFIIXXEESS
       The proxy string may be specified with a protocol:// prefix to specify
       alternative proxy protocols.

       If no protocol is specified in the proxy string or if the string does
       not match a supported one, the proxy is treated as an HTTP proxy.

       The supported proxy protocol prefixes are as follows:

       http://
              Makes it use it as an HTTP proxy. The default if no scheme
              prefix is used.

       https://
              Makes it treated as an HHTTTTPPSS proxy.

       socks4://
              Makes it the equivalent of _-_-_s_o_c_k_s_4

       socks4a://
              Makes it the equivalent of _-_-_s_o_c_k_s_4_a

       socks5://
              Makes it the equivalent of _-_-_s_o_c_k_s_5

       socks5h://
              Makes it the equivalent of _-_-_s_o_c_k_s_5_-_h_o_s_t_n_a_m_e

EEXXIITT CCOODDEESS
       There are a bunch of different error codes and their corresponding
       error messages that may appear under error conditions. At the time of
       this writing, the exit codes are:

       0      Success. The operation completed successfully according to the
              instructions.

       1      Unsupported protocol. This build of curl has no support for this
              protocol.

       2      Failed to initialize.

       3      URL malformed. The syntax was not correct.

       4      A feature or option that was needed to perform the desired
              request was not enabled or was explicitly disabled at
              build-time. To make curl able to do this, you probably need
              another build of libcurl.

       5      Could not resolve proxy. The given proxy host could not be
              resolved.

       6      Could not resolve host. The given remote host could not be
              resolved.

       7      Failed to connect to host.

       8      Weird server reply. The server sent data curl could not parse.

       9      FTP access denied. The server denied login or denied access to
              the particular resource or directory you wanted to reach. Most
              often you tried to change to a directory that does not exist on
              the server.

       10     FTP accept failed. While waiting for the server to connect back
              when an active FTP session is used, an error code was sent over
              the control connection or similar.

       11     FTP weird PASS reply. Curl could not parse the reply sent to the
              PASS request.

       12     During an active FTP session while waiting for the server to
              connect back to curl, the timeout expired.

       13     FTP weird PASV reply, Curl could not parse the reply sent to the
              PASV request.

       14     FTP weird 227 format. Curl could not parse the 227-line the
              server sent.

       15     FTP cannot use host. Could not resolve the host IP we got in the
              227-line.

       16     HTTP/2 error. A problem was detected in the HTTP2 framing layer.
              This is somewhat generic and can be one out of several problems,
              see the error message for details.

       17     FTP could not set binary. Could not change transfer method to
              binary.

       18     Partial file. Only a part of the file was transferred.

       19     FTP could not download/access the given file, the RETR (or
              similar) command failed.

       21     FTP quote error. A quote command returned error from the server.

       22     HTTP page not retrieved. The requested URL was not found or
              returned another error with the HTTP error code being 400 or
              above. This return code only appears if _-_f_, _-_-_f_a_i_l is used.

       23     Write error. Curl could not write data to a local filesystem or
              similar.

       25     Failed starting the upload. For FTP, the server typically denied
              the STOR command.

       26     Read error. Various reading problems.

       27     Out of memory. A memory allocation request failed.

       28     Operation timeout. The specified time-out period was reached
              according to the conditions.

       30     FTP PORT failed. The PORT command failed. Not all FTP servers
              support the PORT command, try doing a transfer using PASV
              instead.

       31     FTP could not use REST. The REST command failed. This command is
              used for resumed FTP transfers.

       33     HTTP range error. The range ""command"" did not work.

       34     HTTP post error. Internal post-request generation error.

       35     SSL connect error. The SSL handshaking failed.

       36     Bad download resume. Could not continue an earlier aborted
              download.

       37     FILE could not read file. Failed to open the file. Permissions?

       38     LDAP cannot bind. LDAP bind operation failed.

       39     LDAP search failed.

       41     Function not found. A required LDAP function was not found.

       42     Aborted by callback. An application told curl to abort the
              operation.

       43     Internal error. A function was called with a bad parameter.

       45     Interface error. A specified outgoing interface could not be
              used.

       47     Too many redirects. When following redirects, curl hit the
              maximum amount.

       48     Unknown option specified to libcurl. This indicates that you
              passed a weird option to curl that was passed on to libcurl and
              rejected. Read up in the manual!

       49     Malformed telnet option.

       52     The server did not reply anything, which here is considered an
              error.

       53     SSL crypto engine not found.

       54     Cannot set SSL crypto engine as default.

       55     Failed sending network data.

       56     Failure in receiving network data.

       58     Problem with the local certificate.

       59     Could not use specified SSL cipher.

       60     Peer certificate cannot be authenticated with known CA
              certificates.

       61     Unrecognized transfer encoding.

       63     Maximum file size exceeded.

       64     Requested FTP SSL level failed.

       65     Sending the data requires a rewind that failed.

       66     Failed to initialize SSL Engine.

       67     The user name, password, or similar was not accepted and curl
              failed to log in.

       68     File not found on TFTP server.

       69     Permission problem on TFTP server.

       70     Out of disk space on TFTP server.

       71     Illegal TFTP operation.

       72     Unknown TFTP transfer ID.

       73     File already exists (TFTP).

       74     No such user (TFTP).

       77     Problem reading the SSL CA cert (path? access rights?).

       78     The resource referenced in the URL does not exist.

       79     An unspecified error occurred during the SSH session.

       80     Failed to shut down the SSL connection.

       82     Could not load CRL file, missing or wrong format.

       83     Issuer check failed.

       84     The FTP PRET command failed.

       85     Mismatch of RTSP CSeq numbers.

       86     Mismatch of RTSP Session Identifiers.

       87     Unable to parse FTP file list.

       88     FTP chunk callback reported error.

       89     No connection available, the session is queued.

       90     SSL public key does not matched pinned public key.

       91     Invalid SSL certificate status.

       92     Stream error in HTTP/2 framing layer.

       93     An API function was called from inside a callback.

       94     An authentication function returned an error.

       95     A problem was detected in the HTTP/3 layer. This is somewhat
              generic and can be one out of several problems, see the error
              message for details.

       96     QUIC connection error. This error may be caused by an SSL
              library error. QUIC is the protocol used for HTTP/3 transfers.

       97     Proxy handshake error.

       98     A client-side certificate is required to complete the TLS
              handshake.

       99     Poll or select returned fatal error.

       XX     More error codes might appear here in future releases. The
              existing ones are meant to never change.

BBUUGGSS
       If you experience any problems with curl, submit an issue in the
       project's bug tracker on GitHub: https://github.com/curl/curl/issues

AAUUTTHHOORRSS
       Daniel Stenberg is the main author, but the whole list of contributors
       is found in the separate THANKS file.

WWWWWW
       https://curl.se

SSEEEE AALLSSOO
       ffttpp ((11)), wwggeett ((11))

curl 8.6.0                       March 12 2024                         curl(1)
"
tar,"TAR(1)                      General Commands Manual                     TAR(1)

NNAAMMEE
     ttaarr – manipulate tape archives

SSYYNNOOPPSSIISS
     ttaarr [_b_u_n_d_l_e_d_-_f_l_a_g_s ⟨args⟩] [⟨_f_i_l_e⟩ | ⟨_p_a_t_t_e_r_n⟩ ...]
     ttaarr {--cc} [_o_p_t_i_o_n_s] [_f_i_l_e_s | _d_i_r_e_c_t_o_r_i_e_s]
     ttaarr {--rr | --uu} --ff _a_r_c_h_i_v_e_-_f_i_l_e [_o_p_t_i_o_n_s] [_f_i_l_e_s | _d_i_r_e_c_t_o_r_i_e_s]
     ttaarr {--tt | --xx} [_o_p_t_i_o_n_s] [_p_a_t_t_e_r_n_s]

DDEESSCCRRIIPPTTIIOONN
     ttaarr creates and manipulates streaming archive files.  This implementation
     can extract from tar, pax, cpio, zip, jar, ar, xar, rpm, 7-zip, and ISO
     9660 cdrom images and can create tar, pax, cpio, ar, zip, 7-zip, and shar
     archives.

     The first synopsis form shows a “bundled” option word.  This usage is
     provided for compatibility with historical implementations.  See
     COMPATIBILITY below for details.

     The other synopsis forms show the preferred usage.  The first option to
     ttaarr is a mode indicator from the following list:
     --cc      Create a new archive containing the specified items.  The long
             option form is ----ccrreeaattee.
     --rr      Like --cc, but new entries are appended to the archive.  Note that
             this only works on uncompressed archives stored in regular files.
             The --ff option is required.  The long option form is ----aappppeenndd.
     --tt      List archive contents to stdout.  The long option form is ----lliisstt.
     --uu      Like --rr, but new entries are added only if they have a
             modification date newer than the corresponding entry in the
             archive.  Note that this only works on uncompressed archives
             stored in regular files.  The --ff option is required.  The long
             form is ----uuppddaattee.
     --xx      Extract to disk from the archive.  If a file with the same name
             appears more than once in the archive, each copy will be
             extracted, with later copies overwriting (replacing) earlier
             copies.  The long option form is ----eexxttrraacctt.

     In --cc, --rr, or --uu mode, each specified file or directory is added to the
     archive in the order specified on the command line.  By default, the
     contents of each directory are also archived.

     In extract or list mode, the entire command line is read and parsed
     before the archive is opened.  The pathnames or patterns on the command
     line indicate which items in the archive should be processed.  Patterns
     are shell-style globbing patterns as documented in tcsh(1).

OOPPTTIIOONNSS
     Unless specifically stated otherwise, options are applicable in all
     operating modes.

     @@_a_r_c_h_i_v_e
             (c and r modes only) The specified archive is opened and the
             entries in it will be appended to the current archive.  As a
             simple example,
                   ttaarr --cc --ff _- _n_e_w_f_i_l_e @@_o_r_i_g_i_n_a_l_._t_a_r
             writes a new archive to standard output containing a file _n_e_w_f_i_l_e
             and all of the entries from _o_r_i_g_i_n_a_l_._t_a_r.  In contrast,
                   ttaarr --cc --ff _- _n_e_w_f_i_l_e _o_r_i_g_i_n_a_l_._t_a_r
             creates a new archive with only two entries.  Similarly,
                   ttaarr --cczzff _- ----ffoorrmmaatt ppaaxx @@_-
             reads an archive from standard input (whose format will be
             determined automatically) and converts it into a gzip-compressed
             pax-format archive on stdout.  In this way, ttaarr can be used to
             convert archives from one format to another.

     --aa, ----aauuttoo--ccoommpprreessss
             (c mode only) Use the archive suffix to decide a set of the
             format and the compressions.  As a simple example,
                   ttaarr --aa --ccff _a_r_c_h_i_v_e_._t_g_z _s_o_u_r_c_e_._c _s_o_u_r_c_e_._h
             creates a new archive with restricted pax format and gzip
             compression,
                   ttaarr --aa --ccff _a_r_c_h_i_v_e_._t_a_r_._b_z_2_._u_u _s_o_u_r_c_e_._c _s_o_u_r_c_e_._h
             creates a new archive with restricted pax format and bzip2
             compression and uuencode compression,
                   ttaarr --aa --ccff _a_r_c_h_i_v_e_._z_i_p _s_o_u_r_c_e_._c _s_o_u_r_c_e_._h
             creates a new archive with zip format,
                   ttaarr --aa --jjccff _a_r_c_h_i_v_e_._t_g_z _s_o_u_r_c_e_._c _s_o_u_r_c_e_._h
             ignores the “-j” option, and creates a new archive with
             restricted pax format and gzip compression,
                   ttaarr --aa --jjccff _a_r_c_h_i_v_e_._x_x_x _s_o_u_r_c_e_._c _s_o_u_r_c_e_._h
             if it is unknown suffix or no suffix, creates a new archive with
             restricted pax format and bzip2 compression.

     ----aaccllss  (c, r, u, x modes only) Archive or extract POSIX.1e or NFSv4
             ACLs.  This is the reverse of ----nnoo--aaccllss and the default behavior
             in c, r, and u modes (except on Mac OS X) or if ttaarr is run in x
             mode as root.  On Mac OS X this option translates extended ACLs
             to NFSv4 ACLs.  To store extended ACLs the ----mmaacc--mmeettaaddaattaa option
             is preferred.

     --BB, ----rreeaadd--ffuullll--bblloocckkss
             Ignored for compatibility with other tar(1) implementations.

     --bb _b_l_o_c_k_s_i_z_e, ----bblloocckk--ssiizzee _b_l_o_c_k_s_i_z_e
             Specify the block size, in 512-byte records, for tape drive I/O.
             As a rule, this argument is only needed when reading from or
             writing to tape drives, and usually not even then as the default
             block size of 20 records (10240 bytes) is very common.

     --CC _d_i_r_e_c_t_o_r_y, ----ccdd _d_i_r_e_c_t_o_r_y, ----ddiirreeccttoorryy _d_i_r_e_c_t_o_r_y
             In c and r mode, this changes the directory before adding the
             following files.  In x mode, change directories after opening the
             archive but before extracting entries from the archive.

     ----cchhrroooott
             (x mode only) cchhrroooott() to the current directory after processing
             any --CC options and before extracting any files.

     ----cclleeaarr--nnoocchhaannggee--ffffllaaggss
             (x mode only) Before removing file system objects to replace
             them, clear platform-specific file attributes or file flags that
             might prevent removal.

     ----eexxcclluuddee _p_a_t_t_e_r_n
             Do not process files or directories that match the specified
             pattern.  Note that exclusions take precedence over patterns or
             filenames specified on the command line.

     ----eexxcclluuddee--vvccss
             Do not process files or directories internally used by the
             version control systems ‘Arch’, ‘Bazaar’, ‘CVS’, ‘Darcs’,
             ‘Mercurial’, ‘RCS’, ‘SCCS’, ‘SVN’ and ‘git’.

     ----ffffllaaggss
             (c, r, u, x modes only) Archive or extract platform-specific file
             attributes or file flags.  This is the reverse of ----nnoo--ffffllaaggss and
             the default behavior in c, r, and u modes or if ttaarr is run in x
             mode as root.

     ----ffoorrmmaatt _f_o_r_m_a_t
             (c, r, u mode only) Use the specified format for the created
             archive.  Supported formats include “cpio”, “pax”, “shar”, and
             “ustar”.  Other formats may also be supported; see
             libarchive-formats(5) for more information about currently-
             supported formats.  In r and u modes, when extending an existing
             archive, the format specified here must be compatible with the
             format of the existing archive on disk.

     --ff _f_i_l_e, ----ffiillee _f_i_l_e
             Read the archive from or write the archive to the specified file.
             The filename can be _- for standard input or standard output.  The
             default varies by system; on FreeBSD, the default is _/_d_e_v_/_s_a_0; on
             Linux, the default is _/_d_e_v_/_s_t_0.

     ----ggiidd _i_d
             Use the provided group id number.  On extract, this overrides the
             group id in the archive; the group name in the archive will be
             ignored.  On create, this overrides the group id read from disk;
             if ----ggnnaammee is not also specified, the group name will be set to
             match the group id.

     ----ggnnaammee _n_a_m_e
             Use the provided group name.  On extract, this overrides the
             group name in the archive; if the provided group name does not
             exist on the system, the group id (from the archive or from the
             ----ggiidd option) will be used instead.  On create, this sets the
             group name that will be stored in the archive; the name will not
             be verified against the system group database.

     --HH      (c and r modes only) Symbolic links named on the command line
             will be followed; the target of the link will be archived, not
             the link itself.

     --hh      (c and r modes only) Synonym for --LL.

     --II      Synonym for --TT.

     ----hheellpp  Show usage.

     ----hhffssCCoommpprreessssiioonn
             (x mode only) Mac OS X specific (v10.6 or later). Compress
             extracted regular files with HFS+ compression.

     ----iiggnnoorree--zzeerrooss
             An alias of ----ooppttiioonnss rreeaadd__ccoonnccaatteennaatteedd__aarrcchhiivveess for
             compatibility with GNU tar.

     ----iinncclluuddee _p_a_t_t_e_r_n
             Process only files or directories that match the specified
             pattern.  Note that exclusions specified with ----eexxcclluuddee take
             precedence over inclusions.  If no inclusions are explicitly
             specified, all entries are processed by default.  The ----iinncclluuddee
             option is especially useful when filtering archives.  For
             example, the command
                   ttaarr --cc --ff _n_e_w_._t_a_r ----iinncclluuddee==''**ffoooo**'' @@_o_l_d_._t_g_z
             creates a new archive _n_e_w_._t_a_r containing only the entries from
             _o_l_d_._t_g_z containing the string ‘foo’.

     --JJ, ----xxzz
             (c mode only) Compress the resulting archive with xz(1).  In
             extract or list modes, this option is ignored.  Note that this
             ttaarr implementation recognizes XZ compression automatically when
             reading archives.

     --jj, ----bbzziipp, ----bbzziipp22, ----bbuunnzziipp22
             (c mode only) Compress the resulting archive with bzip2(1).  In
             extract or list modes, this option is ignored.  Note that this
             ttaarr implementation recognizes bzip2 compression automatically
             when reading archives.

     --kk, ----kkeeeepp--oolldd--ffiilleess
             (x mode only) Do not overwrite existing files.  In particular, if
             a file appears more than once in an archive, later copies will
             not overwrite earlier copies.

     ----kkeeeepp--nneewweerr--ffiilleess
             (x mode only) Do not overwrite existing files that are newer than
             the versions appearing in the archive being extracted.

     --LL, ----ddeerreeffeerreennccee
             (c and r modes only) All symbolic links will be followed.
             Normally, symbolic links are archived as such.  With this option,
             the target of the link will be archived instead.

     --ll, ----cchheecckk--lliinnkkss
             (c and r modes only) Issue a warning message unless all links to
             each file are archived.

     ----llrrzziipp
             (c mode only) Compress the resulting archive with lrzip(1).  In
             extract or list modes, this option is ignored.  Note that this
             ttaarr implementation recognizes lrzip compression automatically
             when reading archives.

     ----llzz44   (c mode only) Compress the archive with lz4-compatible
             compression before writing it.  In extract or list modes, this
             option is ignored.  Note that this ttaarr implementation recognizes
             lz4 compression automatically when reading archives.

     ----zzssttdd  (c mode only) Compress the archive with zstd-compatible
             compression before writing it.  In extract or list modes, this
             option is ignored.  Note that this ttaarr implementation recognizes
             zstd compression automatically when reading archives.

     ----llzzmmaa  (c mode only) Compress the resulting archive with the original
             LZMA algorithm.  In extract or list modes, this option is
             ignored.  Use of this option is discouraged and new archives
             should be created with ----xxzz instead.  Note that this ttaarr
             implementation recognizes LZMA compression automatically when
             reading archives.

     ----llzzoopp  (c mode only) Compress the resulting archive with lzop(1).  In
             extract or list modes, this option is ignored.  Note that this
             ttaarr implementation recognizes LZO compression automatically when
             reading archives.

     --mm, ----mmooddiiffiiccaattiioonn--ttiimmee
             (x mode only) Do not extract modification time.  By default, the
             modification time is set to the time stored in the archive.

     ----mmaacc--mmeettaaddaattaa
             (c, r, u and x mode only) Mac OS X specific.  Archive or extract
             extended ACLs and extended file attributes using copyfile(3) in
             AppleDouble format.  This is the reverse of ----nnoo--mmaacc--mmeettaaddaattaa.
             and the default behavior in c, r, and u modes or if ttaarr is run in
             x mode as root.

     --nn, ----nnoorreeccuurrssee, ----nnoo--rreeccuurrssiioonn
             Do not operate recursively on the content of directories.

     ----nneewweerr _d_a_t_e
             (c, r, u modes only) Only include files and directories newer
             than the specified date.  This compares ctime entries.

     ----nneewweerr--mmttiimmee _d_a_t_e
             (c, r, u modes only) Like ----nneewweerr, except it compares mtime
             entries instead of ctime entries.

     ----nneewweerr--tthhaann _f_i_l_e
             (c, r, u modes only) Only include files and directories newer
             than the specified file.  This compares ctime entries.

     ----nneewweerr--mmttiimmee--tthhaann _f_i_l_e
             (c, r, u modes only) Like ----nneewweerr--tthhaann, except it compares mtime
             entries instead of ctime entries.

     ----nnoodduummpp
             (c and r modes only) Honor the nodump file flag by skipping this
             file.

     ----nnoopprreesseerrvveeHHFFSSCCoommpprreessssiioonn
             (x mode only) Mac OS X specific (v10.6 or later). Do not compress
             extracted regular files which were compressed with HFS+
             compression before archived.  By default, compress the regular
             files again with HFS+ compression.

     ----nnuullll  (use with --II or --TT) Filenames or patterns are separated by null
             characters, not by newlines.  This is often used to read
             filenames output by the --pprriinntt00 option to find(1).

     ----nnoo--aaccllss
             (c, r, u, x modes only) Do not archive or extract POSIX.1e or
             NFSv4 ACLs.  This is the reverse of ----aaccllss and the default
             behavior if ttaarr is run as non-root in x mode (on Mac OS X as any
             user in c, r, u and x modes).

     ----nnoo--ffffllaaggss
             (c, r, u, x modes only) Do not archive or extract file attributes
             or file flags.  This is the reverse of ----ffffllaaggss and the default
             behavior if ttaarr is run as non-root in x mode.

     ----nnoo--mmaacc--mmeettaaddaattaa
             (x mode only) Mac OS X specific.  Do not archive or extract ACLs
             and extended file attributes using copyfile(3) in AppleDouble
             format.  This is the reverse of ----mmaacc--mmeettaaddaattaa.  and the default
             behavior if ttaarr is run as non-root in x mode.

     ----nnoo--ssaaffee--wwrriitteess
             (x mode only) Do not create temporary files and use rename(2) to
             replace the original ones.  This is the reverse of ----ssaaffee--wwrriitteess.

     ----nnoo--ssaammee--oowwnneerr
             (x mode only) Do not extract owner and group IDs.  This is the
             reverse of ----ssaammee--oowwnneerr and the default behavior if ttaarr is run as
             non-root.

     ----nnoo--ssaammee--ppeerrmmiissssiioonnss
             (x mode only) Do not extract full permissions (SGID, SUID, sticky
             bit, file attributes or file flags, extended file attributes and
             ACLs).  This is the reverse of --pp and the default behavior if ttaarr
             is run as non-root.

     ----nnoo--xxaattttrrss
             (c, r, u, x modes only) Do not archive or extract extended file
             attributes.  This is the reverse of ----xxaattttrrss and the default
             behavior if ttaarr is run as non-root in x mode.

     ----nnuummeerriicc--oowwnneerr
             This is equivalent to ----uunnaammee """" ----ggnnaammee """".  On extract, it
             causes user and group names in the archive to be ignored in favor
             of the numeric user and group ids.  On create, it causes user and
             group names to not be stored in the archive.

     --OO, ----ttoo--ssttddoouutt
             (x, t modes only) In extract (-x) mode, files will be written to
             standard out rather than being extracted to disk.  In list (-t)
             mode, the file listing will be written to stderr rather than the
             usual stdout.

     --oo      (x mode) Use the user and group of the user running the program
             rather than those specified in the archive.  Note that this has
             no significance unless --pp is specified, and the program is being
             run by the root user.  In this case, the file modes and flags
             from the archive will be restored, but ACLs or owner information
             in the archive will be discarded.

     --oo      (c, r, u mode) A synonym for ----ffoorrmmaatt _u_s_t_a_r

     ----oollddeerr _d_a_t_e
             (c, r, u modes only) Only include files and directories older
             than the specified date.  This compares ctime entries.

     ----oollddeerr--mmttiimmee _d_a_t_e
             (c, r, u modes only) Like ----oollddeerr, except it compares mtime
             entries instead of ctime entries.

     ----oollddeerr--tthhaann _f_i_l_e
             (c, r, u modes only) Only include files and directories older
             than the specified file.  This compares ctime entries.

     ----oollddeerr--mmttiimmee--tthhaann _f_i_l_e
             (c, r, u modes only) Like ----oollddeerr--tthhaann, except it compares mtime
             entries instead of ctime entries.

     ----oonnee--ffiillee--ssyysstteemm
             (c, r, and u modes) Do not cross mount points.

     ----ooppttiioonnss _o_p_t_i_o_n_s
             Select optional behaviors for particular modules.  The argument
             is a text string containing comma-separated keywords and values.
             These are passed to the modules that handle particular formats to
             control how those formats will behave.  Each option has one of
             the following forms:
             _k_e_y_=_v_a_l_u_e
                     The key will be set to the specified value in every
                     module that supports it.  Modules that do not support
                     this key will ignore it.
             _k_e_y     The key will be enabled in every module that supports it.
                     This is equivalent to _k_e_y==11.
             _!_k_e_y    The key will be disabled in every module that supports
                     it.
             _m_o_d_u_l_e_:_k_e_y_=_v_a_l_u_e, _m_o_d_u_l_e_:_k_e_y, _m_o_d_u_l_e_:_!_k_e_y
                     As above, but the corresponding key and value will be
                     provided only to modules whose name matches _m_o_d_u_l_e.

             The complete list of supported modules and keys for create and
             append modes is in archive_write_set_options(3) and for extract
             and list modes in archive_read_set_options(3).

             Examples of supported options:
             iissoo99666600::jjoolliieett
                     Support Joliet extensions.  This is enabled by default,
                     use !!jjoolliieett or iissoo99666600::!!jjoolliieett to disable.
             iissoo99666600::rroocckkrriiddggee
                     Support Rock Ridge extensions.  This is enabled by
                     default, use !!rroocckkrriiddggee or iissoo99666600::!!rroocckkrriiddggee to disable.
             ggzziipp::ccoommpprreessssiioonn--lleevveell
                     A decimal integer from 1 to 9 specifying the gzip
                     compression level.
             ggzziipp::ttiimmeessttaammpp
                     Store timestamp.  This is enabled by default, use
                     !!ttiimmeessttaammpp or ggzziipp::!!ttiimmeessttaammpp to disable.
             llrrzziipp::ccoommpprreessssiioonn=_t_y_p_e
                     Use _t_y_p_e as compression method.  Supported values are
                     bzip2, gzip, lzo (ultra fast), and zpaq (best, extremely
                     slow).
             llrrzziipp::ccoommpprreessssiioonn--lleevveell
                     A decimal integer from 1 to 9 specifying the lrzip
                     compression level.
             llzz44::ccoommpprreessssiioonn--lleevveell
                     A decimal integer from 1 to 9 specifying the lzop
                     compression level.
             llzz44::ssttrreeaamm--cchheecckkssuumm
                     Enable stream checksum.  This is by default, use
                     llzz44::!!ssttrreeaamm--cchheecckkssuumm to disable.
             llzz44::bblloocckk--cchheecckkssuumm
                     Enable block checksum (Disabled by default).
             llzz44::bblloocckk--ssiizzee
                     A decimal integer from 4 to 7 specifying the lz4
                     compression block size (7 is set by default).
             llzz44::bblloocckk--ddeeppeennddeennccee
                     Use the previous block of the block being compressed for
                     a compression dictionary to improve compression ratio.
             zzssttdd::ccoommpprreessssiioonn--lleevveell
                     A decimal integer specifying the zstd compression level.
                     Supported values depend on the library version, common
                     values are from 1 to 22.
             llzzoopp::ccoommpprreessssiioonn--lleevveell
                     A decimal integer from 1 to 9 specifying the lzop
                     compression level.
             xxzz::ccoommpprreessssiioonn--lleevveell
                     A decimal integer from 0 to 9 specifying the xz
                     compression level.
             mmttrreeee::_k_e_y_w_o_r_d
                     The mtree writer module allows you to specify which mtree
                     keywords will be included in the output.  Supported
                     keywords include: cckkssuumm, ddeevviiccee, ffllaaggss, ggiidd, ggnnaammee,
                     iinnddeenntt, lliinnkk, mmdd55, mmooddee, nnlliinnkk, rrmmdd116600, sshhaa11, sshhaa225566,
                     sshhaa338844, sshhaa551122, ssiizzee, ttiimmee, uuiidd, uunnaammee.  The default is
                     equivalent to: “device, flags, gid, gname, link, mode,
                     nlink, size, time, type, uid, uname”.
             mmttrreeee::aallll
                     Enables all of the above keywords.  You can also use
                     mmttrreeee::!!aallll to disable all keywords.
             mmttrreeee::uussee--sseett
                     Enable generation of //sseett lines in the output.
             mmttrreeee::iinnddeenntt
                     Produce human-readable output by indenting options and
                     splitting lines to fit into 80 columns.
             zziipp::ccoommpprreessssiioonn=_t_y_p_e
                     Use _t_y_p_e as compression method.  Supported values are
                     store (uncompressed) and deflate (gzip algorithm).
             zziipp::eennccrryyppttiioonn
                     Enable encryption using traditional zip encryption.
             zziipp::eennccrryyppttiioonn=_t_y_p_e
                     Use _t_y_p_e as encryption type.  Supported values are
                     zipcrypt (traditional zip encryption), aes128 (WinZip
                     AES-128 encryption) and aes256 (WinZip AES-256
                     encryption).
             rreeaadd__ccoonnccaatteennaatteedd__aarrcchhiivveess
                     Ignore zeroed blocks in the archive, which occurs when
                     multiple tar archives have been concatenated together.
                     Without this option, only the contents of the first
                     concatenated archive would be read.  This option is
                     comparable to the --ii, ----iiggnnoorree--zzeerrooss option of GNU tar.
             If a provided option is not supported by any module, that is a
             fatal error.

     --PP, ----aabbssoolluuttee--ppaatthhss
             Preserve pathnames.  By default, absolute pathnames (those that
             begin with a / character) have the leading slash removed both
             when creating archives and extracting from them.  Also, ttaarr will
             refuse to extract archive entries whose pathnames contain _._. or
             whose target directory would be altered by a symlink.  This
             option suppresses these behaviors.

     --pp, ----iinnsseeccuurree, ----pprreesseerrvvee--ppeerrmmiissssiioonnss
             (x mode only) Preserve file permissions.  Attempt to restore the
             full permissions, including file modes, file attributes or file
             flags, extended file attributes and ACLs, if available, for each
             item extracted from the archive.  This is the reverse of
             ----nnoo--ssaammee--ppeerrmmiissssiioonnss and the default if ttaarr is being run as
             root.  It can be partially overridden by also specifying
             ----nnoo--aaccllss, ----nnoo--ffffllaaggss, ----nnoo--mmaacc--mmeettaaddaattaa or ----nnoo--xxaattttrrss.

     ----ppaasssspphhrraassee _p_a_s_s_p_h_r_a_s_e
             The _p_a_s_s_p_h_r_a_s_e is used to extract or create an encrypted archive.
             Currently, zip is the only supported format that supports
             encryption.  You shouldn't use this option unless you realize how
             insecure use of this option is.

     ----ppoossiixx
             (c, r, u mode only) Synonym for ----ffoorrmmaatt _p_a_x

     --qq, ----ffaasstt--rreeaadd
             (x and t mode only) Extract or list only the first archive entry
             that matches each pattern or filename operand.  Exit as soon as
             each specified pattern or filename has been matched.  By default,
             the archive is always read to the very end, since there can be
             multiple entries with the same name and, by convention, later
             entries overwrite earlier entries.  This option is provided as a
             performance optimization.

     --SS      (x mode only) Extract files as sparse files.  For every block on
             disk, check first if it contains only NULL bytes and seek over it
             otherwise.  This works similar to the conv=sparse option of dd.

     --ss _p_a_t_t_e_r_n
             Modify file or archive member names according to _p_a_t_t_e_r_n.  The
             pattern has the format _/_o_l_d_/_n_e_w_/[ghHprRsS] where _o_l_d is a basic
             regular expression, _n_e_w is the replacement string of the matched
             part, and the optional trailing letters modify how the
             replacement is handled.  If _o_l_d is not matched, the pattern is
             skipped.  Within _n_e_w, ~ is substituted with the match, \1 to \9
             with the content of the corresponding captured group.  The
             optional trailing g specifies that matching should continue after
             the matched part and stop on the first unmatched pattern.  The
             optional trailing s specifies that the pattern applies to the
             value of symbolic links.  The optional trailing p specifies that
             after a successful substitution the original path name and the
             new path name should be printed to standard error.  Optional
             trailing H, R, or S characters suppress substitutions for
             hardlink targets, regular filenames, or symlink targets,
             respectively.  Optional trailing h, r, or s characters enable
             substitutions for hardlink targets, regular filenames, or symlink
             targets, respectively.  The default is _h_r_s which applies
             substitutions to all names.  In particular, it is never necessary
             to specify h, r, or s.

     ----ssaaffee--wwrriitteess
             (x mode only) Extract files atomically.  By default ttaarr unlinks
             the original file with the same name as the extracted file (if it
             exists), and then creates it immediately under the same name and
             writes to it.  For a short period of time, applications trying to
             access the file might not find it, or see incomplete results.  If
             ----ssaaffee--wwrriitteess is enabled, ttaarr first creates a unique temporary
             file, then writes the new contents to the temporary file, and
             finally renames the temporary file to its final name atomically
             using rename(2).  This guarantees that an application accessing
             the file, will either see the old contents or the new contents at
             all times.

     ----ssaammee--oowwnneerr
             (x mode only) Extract owner and group IDs.  This is the reverse
             of ----nnoo--ssaammee--oowwnneerr and the default behavior if ttaarr is run as
             root.

     ----ssttrriipp--ccoommppoonneennttss _c_o_u_n_t
             Remove the specified number of leading path elements.  Pathnames
             with fewer elements will be silently skipped.  Note that the
             pathname is edited after checking inclusion/exclusion patterns
             but before security checks.

     --TT _f_i_l_e_n_a_m_e, ----ffiilleess--ffrroomm _f_i_l_e_n_a_m_e
             In x or t mode, ttaarr will read the list of names to be extracted
             from _f_i_l_e_n_a_m_e.  In c mode, ttaarr will read names to be archived
             from _f_i_l_e_n_a_m_e.  The special name “-C” on a line by itself will
             cause the current directory to be changed to the directory
             specified on the following line.  Names are terminated by
             newlines unless ----nnuullll is specified.  Note that ----nnuullll also
             disables the special handling of lines containing “-C”.  Note:
             If you are generating lists of files using find(1), you probably
             want to use --nn as well.

     ----ttoottaallss
             (c, r, u modes only) After archiving all files, print a summary
             to stderr.

     --UU, ----uunnlliinnkk, ----uunnlliinnkk--ffiirrsstt
             (x mode only) Unlink files before creating them.  This can be a
             minor performance optimization if most files already exist, but
             can make things slower if most files do not already exist.  This
             flag also causes ttaarr to remove intervening directory symlinks
             instead of reporting an error.  See the SECURITY section below
             for more details.

     ----uuiidd _i_d
             Use the provided user id number and ignore the user name from the
             archive.  On create, if ----uunnaammee is not also specified, the user
             name will be set to match the user id.

     ----uunnaammee _n_a_m_e
             Use the provided user name.  On extract, this overrides the user
             name in the archive; if the provided user name does not exist on
             the system, it will be ignored and the user id (from the archive
             or from the ----uuiidd option) will be used instead.  On create, this
             sets the user name that will be stored in the archive; the name
             is not verified against the system user database.

     ----uussee--ccoommpprreessss--pprrooggrraamm _p_r_o_g_r_a_m
             Pipe the input (in x or t mode) or the output (in c mode) through
             _p_r_o_g_r_a_m instead of using the builtin compression support.

     --vv, ----vveerrbboossee
             Produce verbose output.  In create and extract modes, ttaarr will
             list each file name as it is read from or written to the archive.
             In list mode, ttaarr will produce output similar to that of ls(1).
             An additional --vv option will also provide ls-like details in
             create and extract mode.

     ----vveerrssiioonn
             Print version of ttaarr and lliibbaarrcchhiivvee, and exit.

     --ww, ----ccoonnffiirrmmaattiioonn, ----iinntteerraaccttiivvee
             Ask for confirmation for every action.

     --XX _f_i_l_e_n_a_m_e, ----eexxcclluuddee--ffrroomm _f_i_l_e_n_a_m_e
             Read a list of exclusion patterns from the specified file.  See
             ----eexxcclluuddee for more information about the handling of exclusions.

     ----xxaattttrrss
             (c, r, u, x modes only) Archive or extract extended file
             attributes.  This is the reverse of ----nnoo--xxaattttrrss and the default
             behavior in c, r, and u modes or if ttaarr is run in x mode as root.

     --yy      (c mode only) Compress the resulting archive with bzip2(1).  In
             extract or list modes, this option is ignored.  Note that this
             ttaarr implementation recognizes bzip2 compression automatically
             when reading archives.

     --ZZ, ----ccoommpprreessss, ----uunnccoommpprreessss
             (c mode only) Compress the resulting archive with compress(1).
             In extract or list modes, this option is ignored.  Note that this
             ttaarr implementation recognizes compress compression automatically
             when reading archives.

     --zz, ----gguunnzziipp, ----ggzziipp
             (c mode only) Compress the resulting archive with gzip(1).  In
             extract or list modes, this option is ignored.  Note that this
             ttaarr implementation recognizes gzip compression automatically when
             reading archives.

EENNVVIIRROONNMMEENNTT
     The following environment variables affect the execution of ttaarr:

     TAR_READER_OPTIONS
                    The default options for format readers and compression
                    readers.  The ----ooppttiioonnss option overrides this.

     TAR_WRITER_OPTIONS
                    The default options for format writers and compression
                    writers.  The ----ooppttiioonnss option overrides this.

     LANG           The locale to use.  See environ(7) for more information.

     TAPE           The default device.  The --ff option overrides this.  Please
                    see the description of the --ff option above for more
                    details.

     TZ             The timezone to use when displaying dates.  See environ(7)
                    for more information.

EEXXIITT SSTTAATTUUSS
     The ttaarr utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     The following creates a new archive called _f_i_l_e_._t_a_r_._g_z that contains two
     files _s_o_u_r_c_e_._c and _s_o_u_r_c_e_._h:
           ttaarr --cczzff _f_i_l_e_._t_a_r_._g_z _s_o_u_r_c_e_._c _s_o_u_r_c_e_._h

     To view a detailed table of contents for this archive:
           ttaarr --ttvvff _f_i_l_e_._t_a_r_._g_z

     To extract all entries from the archive on the default tape drive:
           ttaarr --xx

     To examine the contents of an ISO 9660 cdrom image:
           ttaarr --ttff _i_m_a_g_e_._i_s_o

     To move file hierarchies, invoke ttaarr as
           ttaarr --ccff _- --CC _s_r_c_d_i_r _. | ttaarr --xxppff _- --CC _d_e_s_t_d_i_r
     or more traditionally
           cd srcdir ; ttaarr --ccff _- _. | (_c_d _d_e_s_t_d_i_r _; ttaarr --xxppff _-)

     In create mode, the list of files and directories to be archived can also
     include directory change instructions of the form --CC_f_o_o_/_b_a_z and archive
     inclusions of the form @@_a_r_c_h_i_v_e_-_f_i_l_e.  For example, the command line
           ttaarr --cc --ff _n_e_w_._t_a_r _f_o_o_1 @@_o_l_d_._t_g_z --CC_/_t_m_p _f_o_o_2
     will create a new archive _n_e_w_._t_a_r.  ttaarr will read the file _f_o_o_1 from the
     current directory and add it to the output archive.  It will then read
     each entry from _o_l_d_._t_g_z and add those entries to the output archive.
     Finally, it will switch to the _/_t_m_p directory and add _f_o_o_2 to the output
     archive.

     An input file in mtree(5) format can be used to create an output archive
     with arbitrary ownership, permissions, or names that differ from existing
     data on disk:

           $ cat input.mtree
           #mtree
           usr/bin uid=0 gid=0 mode=0755 type=dir
           usr/bin/ls uid=0 gid=0 mode=0755 type=file content=myls
           $ tar -cvf output.tar @input.mtree

     The ----nneewweerr and ----nneewweerr--mmttiimmee switches accept a variety of common date
     and time specifications, including “12 Mar 2005 7:14:29pm”, “2005-03-12
     19:14”, “5 minutes ago”, and “19:14 PST May 1”.

     The ----ooppttiioonnss argument can be used to control various details of archive
     generation or reading.  For example, you can generate mtree output which
     only contains ttyyppee, ttiimmee, and uuiidd keywords:
           ttaarr --ccff _f_i_l_e_._t_a_r ----ffoorrmmaatt==mmttrreeee ----ooppttiioonnss==''!!aallll,,ttyyppee,,ttiimmee,,uuiidd'' _d_i_r
     or you can set the compression level used by gzip or xz compression:
           ttaarr --cczzff _f_i_l_e_._t_a_r ----ooppttiioonnss==''ccoommpprreessssiioonn--lleevveell==99''.
     For more details, see the explanation of the aarrcchhiivvee__rreeaadd__sseett__ooppttiioonnss()
     and aarrcchhiivvee__wwrriittee__sseett__ooppttiioonnss() API calls that are described in
     archive_read(3) and archive_write(3).

CCOOMMPPAATTIIBBIILLIITTYY
     The bundled-arguments format is supported for compatibility with historic
     implementations.  It consists of an initial word (with no leading -
     character) in which each character indicates an option.  Arguments follow
     as separate words.  The order of the arguments must match the order of
     the corresponding characters in the bundled command word.  For example,
           ttaarr ttbbff 3322 _f_i_l_e_._t_a_r
     specifies three flags tt, bb, and ff.  The bb and ff flags both require
     arguments, so there must be two additional items on the command line.
     The _3_2 is the argument to the bb flag, and _f_i_l_e_._t_a_r is the argument to the
     ff flag.

     The mode options c, r, t, u, and x and the options b, f, l, m, o, v, and
     w comply with SUSv2.

     For maximum portability, scripts that invoke ttaarr should use the bundled-
     argument format above, should limit themselves to the cc, tt, and xx modes,
     and the bb, ff, mm, vv, and ww options.

     Additional long options are provided to improve compatibility with other
     tar implementations.

SSEECCUURRIITTYY
     Certain security issues are common to many archiving programs, including
     ttaarr.  In particular, carefully-crafted archives can request that ttaarr
     extract files to locations outside of the target directory.  This can
     potentially be used to cause unwitting users to overwrite files they did
     not intend to overwrite.  If the archive is being extracted by the
     superuser, any file on the system can potentially be overwritten.  There
     are three ways this can happen.  Although ttaarr has mechanisms to protect
     against each one, savvy users should be aware of the implications:

     ••       Archive entries can have absolute pathnames.  By default, ttaarr
             removes the leading _/ character from filenames before restoring
             them to guard against this problem.

     ••       Archive entries can have pathnames that include _._. components.
             By default, ttaarr will not extract files containing _._. components
             in their pathname.

     ••       Archive entries can exploit symbolic links to restore files to
             other directories.  An archive can restore a symbolic link to
             another directory, then use that link to restore a file into that
             directory.  To guard against this, ttaarr checks each extracted path
             for symlinks.  If the final path element is a symlink, it will be
             removed and replaced with the archive entry.  If --UU is specified,
             any intermediate symlink will also be unconditionally removed.
             If neither --UU nor --PP is specified, ttaarr will refuse to extract the
             entry.
     To protect yourself, you should be wary of any archives that come from
     untrusted sources.  You should examine the contents of an archive with
           ttaarr --ttff _f_i_l_e_n_a_m_e
     before extraction.  You should use the --kk option to ensure that ttaarr will
     not overwrite any existing files or the --UU option to remove any pre-
     existing files.  You should generally not extract archives while running
     with super-user privileges.  Note that the --PP option to ttaarr disables the
     security checks above and allows you to extract an archive while
     preserving any absolute pathnames, _._. components, or symlinks to other
     directories.

SSEEEE AALLSSOO
     bzip2(1), compress(1), cpio(1), gzip(1), pax(1), shar(1), xz(1),
     libarchive(3), libarchive-formats(5), tar(5)

SSTTAANNDDAARRDDSS
     There is no current POSIX standard for the tar command; it appeared in
     ISO/IEC 9945-1:1996 (“POSIX.1”) but was dropped from IEEE Std 1003.1-2001
     (“POSIX.1”).  The options supported by this implementation were developed
     by surveying a number of existing tar implementations as well as the old
     POSIX specification for tar and the current POSIX specification for pax.

     The ustar and pax interchange file formats are defined by IEEE Std
     1003.1-2001 (“POSIX.1”) for the pax command.

HHIISSTTOORRYY
     A ttaarr command appeared in Seventh Edition Unix, which was released in
     January, 1979.  There have been numerous other implementations, many of
     which extended the file format.  John Gilmore's ppddttaarr public-domain
     implementation (circa November, 1987) was quite influential, and formed
     the basis of GNU tar.  GNU tar was included as the standard system tar in
     FreeBSD beginning with FreeBSD 1.0.

     This is a complete re-implementation based on the libarchive(3) library.
     It was first released with FreeBSD 5.4 in May, 2005.

BBUUGGSS
     This program follows ISO/IEC 9945-1:1996 (“POSIX.1”) for the definition
     of the --ll option.  Note that GNU tar prior to version 1.15 treated --ll as
     a synonym for the ----oonnee--ffiillee--ssyysstteemm option.

     The --CC _d_i_r option may differ from historic implementations.

     All archive output is written in correctly-sized blocks, even if the
     output is being compressed.  Whether or not the last output block is
     padded to a full block size varies depending on the format and the output
     device.  For tar and cpio formats, the last block of output is padded to
     a full block size if the output is being written to standard output or to
     a character or block device such as a tape drive.  If the output is being
     written to a regular file, the last block will not be padded.  Many
     compressors, including gzip(1) and bzip2(1), complain about the null
     padding when decompressing an archive created by ttaarr, although they still
     extract it correctly.

     The compression and decompression is implemented internally, so there may
     be insignificant differences between the compressed output generated by
           ttaarr --cczzff _- _f_i_l_e
     and that generated by
           ttaarr --ccff _- _f_i_l_e | ggzziipp

     The default should be to read and write archives to the standard I/O
     paths, but tradition (and POSIX) dictates otherwise.

     The rr and uu modes require that the archive be uncompressed and located in
     a regular file on disk.  Other archives can be modified using cc mode with
     the _@_a_r_c_h_i_v_e_-_f_i_l_e extension.

     To archive a file called _@_f_o_o or _-_f_o_o you must specify it as _._/_@_f_o_o or
     _._/_-_f_o_o, respectively.

     In create mode, a leading _._/ is always removed.  A leading _/ is stripped
     unless the --PP option is specified.

     There needs to be better support for file selection on both create and
     extract.

     There is not yet any support for multi-volume archives.

     Converting between dissimilar archive formats (such as tar and cpio)
     using the @@_- convention can cause hard link information to be lost.
     (This is a consequence of the incompatible ways that different archive
     formats store hardlink information.)

macOS 14.6                     January 31, 2020                     macOS 14.6
"
zip,"ZIP(1L)                                                                ZIP(1L)

NNAAMMEE
       zip - package and compress (archive) files

SSYYNNOOPPSSIISS
       zziipp [-aaAABBccddDDeeEEffFFgghhjjkkllLLmmooqqrrRRSSTTuuvvVVwwXXyyzz!!@@$$] [--longoption ...] [-bb path]
       [-nn suffixes] [-tt date] [-tttt date] [_z_i_p_f_i_l_e [_f_i_l_e ...]] [--xxii list]

       zziippccllooaakk (see separate man page)

       zziippnnoottee (see separate man page)

       zziippsspplliitt (see separate man page)

       Note:  Command line processing in _z_i_p has been changed to support long
       options and handle all options and arguments more consistently.  Some
       old command lines that depend on command line inconsistencies may no
       longer work.

DDEESSCCRRIIPPTTIIOONN
       _z_i_p is a compression and file packaging utility for Unix, VMS, MSDOS,
       OS/2, Windows 9x/NT/XP, Minix, Atari, Macintosh, Amiga, and Acorn RISC
       OS.  It is analogous to a combination of the Unix commands _t_a_r(1) and
       _c_o_m_p_r_e_s_s(1) and is compatible with PKZIP (Phil Katz's ZIP for MSDOS
       systems).

       A companion program (_u_n_z_i_p(1L)) unpacks _z_i_p archives.  The _z_i_p and
       _u_n_z_i_p(1L) programs can work with archives produced by PKZIP (supporting
       most PKZIP features up to PKZIP version 4.6), and PKZIP and PKUNZIP can
       work with archives produced by _z_i_p (with some exceptions, notably
       streamed archives, but recent changes in the zip file standard may
       facilitate better compatibility).  _z_i_p version 3.0 is compatible with
       PKZIP 2.04 and also supports the Zip64 extensions of PKZIP 4.5 which
       allow archives as well as files to exceed the previous 2 GB limit (4 GB
       in some cases).  _z_i_p also now supports bbzziipp22 compression if the bbzziipp22
       library is included when _z_i_p is compiled.  Note that PKUNZIP 1.10
       cannot extract files produced by PKZIP 2.04 or _z_i_p_ _3_._0. You must use
       PKUNZIP 2.04g or _u_n_z_i_p_ _5_._0_p_1 (or later versions) to extract them.

       See the EEXXAAMMPPLLEESS section at the bottom of this page for examples of
       some typical uses of _z_i_p.

       LLaarrggee  AArrcchhiivveess  aanndd  ZZiipp6644.. _z_i_p automatically uses the Zip64 extensions
       when files larger than 4 GB are added to an archive, an archive
       containing Zip64 entries is updated (if the resulting archive still
       needs Zip64), the size of the archive will exceed 4 GB, or when the
       number of entries in the archive will exceed about 64K.  Zip64 is also
       used for archives streamed from standard input as the size of such
       archives are not known in advance, but the option --ffzz-- can be used to
       force _z_i_p to create PKZIP 2 compatible archives (as long as Zip64
       extensions are not needed).  You must use a PKZIP 4.5 compatible unzip,
       such as _u_n_z_i_p_ _6_._0 or later, to extract files using the Zip64
       extensions.

       In addition, streamed archives, entries encrypted with standard
       encryption, or split archives created with the pause option may not be
       compatible with PKZIP as data descriptors are used and PKZIP at the
       time of this writing does not support data descriptors (but recent
       changes in the PKWare published zip standard now include some support
       for the data descriptor format _z_i_p uses).


       MMaacc OOSS XX..  Though previous Mac versions had their own _z_i_p port, _z_i_p
       supports Mac OS X as part of the Unix port and most Unix features
       apply.  References to ""MacOS"" below generally refer to MacOS versions
       older than OS X.  Support for some Mac OS features in the Unix Mac OS X
       port, such as resource forks, is expected in the next _z_i_p release.


       For a brief help on _z_i_p and _u_n_z_i_p, run each without specifying any
       parameters on the command line.


UUSSEE
       The program is useful for packaging a set of files for distribution;
       for archiving files; and for saving disk space by temporarily
       compressing unused files or directories.

       The _z_i_p program puts one or more compressed files into a single _z_i_p
       archive, along with information about the files (name, path, date, time
       of last modification, protection, and check information to verify file
       integrity).  An entire directory structure can be packed into a _z_i_p
       archive with a single command.  Compression ratios of 2:1 to 3:1 are
       common for text files.  _z_i_p has one compression method (deflation) and
       can also store files without compression.  (If bbzziipp22 support is added,
       _z_i_p can also compress using bbzziipp22 compression, but such entries require
       a reasonably modern unzip to decompress.  When bbzziipp22 compression is
       selected, it replaces deflation as the default method.)  _z_i_p
       automatically chooses the better of the two (deflation or store or, if
       bbzziipp22 is selected, bbzziipp22 or store) for each file to be compressed.

       CCoommmmaanndd  ffoorrmmaatt..  The basic command format is

              zziipp options archive inpath inpath ...

       where aarrcchhiivvee is a new or existing _z_i_p archive and iinnppaatthh is a
       directory or file path optionally including wildcards.  When given the
       name of an existing _z_i_p archive, _z_i_p will replace identically named
       entries in the _z_i_p archive (matching the relative names as stored in
       the archive) or add entries for new names.  For example, if _f_o_o_._z_i_p
       exists and contains _f_o_o_/_f_i_l_e_1 and _f_o_o_/_f_i_l_e_2, and the directory _f_o_o
       contains the files _f_o_o_/_f_i_l_e_1 and _f_o_o_/_f_i_l_e_3, then:

              zip -r foo.zip foo

       or more concisely

              zip -r foo foo

       will replace _f_o_o_/_f_i_l_e_1 in _f_o_o_._z_i_p and add _f_o_o_/_f_i_l_e_3 to _f_o_o_._z_i_p.  After
       this, _f_o_o_._z_i_p contains _f_o_o_/_f_i_l_e_1, _f_o_o_/_f_i_l_e_2, and _f_o_o_/_f_i_l_e_3, with
       _f_o_o_/_f_i_l_e_2 unchanged from before.

       So if before the zip command is executed _f_o_o_._z_i_p has:

               foo/file1 foo/file2

       and directory foo has:

               file1 file3

       then _f_o_o_._z_i_p will have:

               foo/file1 foo/file2 foo/file3

       where _f_o_o_/_f_i_l_e_1 is replaced and _f_o_o_/_f_i_l_e_3 is new.

       --@@  ffiillee  lliissttss..  If a file list is specified as --@@ [Not on MacOS], _z_i_p
       takes the list of input files from standard input instead of from the
       command line.  For example,

              zip -@ foo

       will store the files listed one per line on stdin in _f_o_o_._z_i_p.

       Under Unix, this option can be used to powerful effect in conjunction
       with the _f_i_n_d (1) command.  For example, to archive all the C source
       files in the current directory and its subdirectories:

              find . -name ""*.[ch]"" -print | zip source -@

       (note that the pattern must be quoted to keep the shell from expanding
       it).

       SSttrreeaammiinngg  iinnppuutt  aanndd  oouuttppuutt.. _z_i_p will also accept a single dash (""-"") as
       the zip file name, in which case it will write the zip file to standard
       output, allowing the output to be piped to another program. For
       example:

              zip -r - . | dd of=/dev/nrst0 obs=16k

       would write the zip output directly to a tape with the specified block
       size for the purpose of backing up the current directory.

       _z_i_p also accepts a single dash (""-"") as the name of a file to be
       compressed, in which case it will read the file from standard input,
       allowing zip to take input from another program. For example:

              tar cf - . | zip backup -

       would compress the output of the tar command for the purpose of backing
       up the current directory. This generally produces better compression
       than the previous example using the -r option because _z_i_p can take
       advantage of redundancy between files. The backup can be restored using
       the command

              unzip -p backup | tar xf -

       When no zip file name is given and stdout is not a terminal, _z_i_p acts
       as a filter, compressing standard input to standard output.  For
       example,

              tar cf - . | zip | dd of=/dev/nrst0 obs=16k

       is equivalent to

              tar cf - . | zip - - | dd of=/dev/nrst0 obs=16k

       _z_i_p archives created in this manner can be extracted with the program
       _f_u_n_z_i_p which is provided in the _u_n_z_i_p package, or by _g_u_n_z_i_p which is
       provided in the _g_z_i_p package (but some _g_u_n_z_i_p may not support this if
       _z_i_p used the Zip64 extensions). For example:

              dd if=/dev/nrst0  ibs=16k | funzip | tar xvf -

       The stream can also be saved to a file and _u_n_z_i_p used.

       If Zip64 support for large files and archives is enabled and _z_i_p is
       used as a filter, _z_i_p creates a Zip64 archive that requires a PKZIP 4.5
       or later compatible unzip to read it.  This is to avoid amgibuities in
       the zip file structure as defined in the current zip standard (PKWARE
       AppNote) where the decision to use Zip64 needs to be made before data
       is written for the entry, but for a stream the size of the data is not
       known at that point.  If the data is known to be smaller than 4 GB, the
       option --ffzz-- can be used to prevent use of Zip64, but _z_i_p will exit with
       an error if Zip64 was in fact needed.  _z_i_p_ _3 and _u_n_z_i_p_ _6 and later can
       read archives with Zip64 entries.  Also, _z_i_p removes the Zip64
       extensions if not needed when archive entries are copied (see the --UU
       (----ccooppyy) option).

       When directing the output to another file, note that all options should
       be before the redirection including --xx.  For example:

              zip archive ""*.h"" ""*.c"" -x donotinclude.h orthis.h > tofile

       ZZiipp  ffiilleess..  When changing an existing _z_i_p archive, _z_i_p will write a
       temporary file with the new contents, and only replace the old one when
       the process of creating the new version has been completed without
       error.

       If the name of the _z_i_p archive does not contain an extension, the
       extension ..zziipp is added. If the name already contains an extension
       other than ..zziipp, the existing extension is kept unchanged.  However,
       split archives (archives split over multiple files) require the ..zziipp
       extension on the last split.

       SSccaannnniinngg  aanndd  rreeaaddiinngg  ffiilleess.. When _z_i_p starts, it scans for files to
       process (if needed).  If this scan takes longer than about 5 seconds,
       _z_i_p will display a ""Scanning files"" message and start displaying
       progress dots every 2 seconds or every so many entries processed,
       whichever takes longer.  If there is more than 2 seconds between dots
       it could indicate that finding each file is taking time and could mean
       a slow network connection for example.  (Actually the initial file scan
       is a two-step process where the directory scan is followed by a sort
       and these two steps are separated with a space in the dots.  If
       updating an existing archive, a space also appears between the existing
       file scan and the new file scan.)  The scanning files dots are not
       controlled by the --ddss dot size option, but the dots are turned off by
       the --qq quiet option.  The --ssff show files option can be used to scan for
       files and get the list of files scanned without actually processing
       them.

       If _z_i_p is not able to read a file, it issues a warning but continues.
       See the --MMMM option below for more on how _z_i_p handles patterns that are
       not matched and files that are not readable.  If some files were
       skipped, a warning is issued at the end of the zip operation noting how
       many files were read and how many skipped.

       CCoommmmaanndd  mmooddeess..  _z_i_p now supports two distinct types of command modes,
       eexxtteerrnnaall and iinntteerrnnaall.  The eexxtteerrnnaall modes (add, update, and freshen)
       read files from the file system (as well as from an existing archive)
       while the iinntteerrnnaall modes (delete and copy) operate exclusively on
       entries in an existing archive.

       aadddd            
              Update existing entries and add new files.  If the archive does
              not exist create it.  This is the default mode.

       uuppddaattee  (--uu)
              Update existing entries if newer on the file system and add new
              files.  If the archive does not exist issue warning then create
              a new archive.

       ffrreesshheenn  (--ff)
              Update existing entries of an archive if newer on the file
              system.  Does not add new files to the archive.

       ddeelleettee  (--dd)
              Select entries in an existing archive and delete them.

       ccooppyy  (--UU)
              Select entries in an existing archive and copy them to a new
              archive.  This new mode is similar to uuppddaattee but command line
              patterns select entries in the existing archive rather than
              files from the file system and it uses the ----oouutt option to write
              the resulting archive to a new file rather than update the
              existing archive, leaving the original archive unchanged.

       The new File Sync option (--FFSS) is also considered a new mode, though it
       is similar to uuppddaattee.  This mode synchronizes the archive with the
       files on the OS, only replacing files in the archive if the file time
       or size of the OS file is different, adding new files, and deleting
       entries from the archive where there is no matching file.  As this mode
       can delete entries from the archive, consider making a backup copy of
       the archive.

       Also see --DDFF for creating difference archives.

       See each option description below for details and the EEXXAAMMPPLLEESS section
       below for examples.

       SSpplliitt  aarrcchhiivveess..  _z_i_p version 3.0 and later can create split archives.
       A sspplliitt aarrcchhiivvee is a standard zip archive split over multiple files.
       (Note that split archives are not just archives split in to pieces, as
       the offsets of entries are now based on the start of each split.
       Concatenating the pieces together will invalidate these offsets, but
       _u_n_z_i_p can usually deal with it.  _z_i_p will usually refuse to process
       such a spliced archive unless the --FFFF fix option is used to fix the
       offsets.)

       One use of split archives is storing a large archive on multiple
       removable media.  For a split archive with 20 split files the files are
       typically named (replace ARCHIVE with the name of your archive)
       ARCHIVE.z01, ARCHIVE.z02, ..., ARCHIVE.z19, ARCHIVE.zip.  Note that the
       last file is the ..zziipp file.  In contrast, ssppaannnneedd aarrcchhiivveess are the
       original multi-disk archive generally requiring floppy disks and using
       volume labels to store disk numbers.  _z_i_p supports split archives but
       not spanned archives, though a procedure exists for converting split
       archives of the right size to spanned archives.  The reverse is also
       true, where each file of a spanned archive can be copied in order to
       files with the above names to create a split archive.

       Use --ss to set the split size and create a split archive.  The size is
       given as a number followed optionally by one of k (kB), m (MB), g (GB),
       or t (TB) (the default is m).  The --sspp option can be used to pause _z_i_p
       between splits to allow changing removable media, for example, but read
       the descriptions and warnings for both --ss and --sspp below.

       Though _z_i_p does not update split archives, _z_i_p provides the new option
       --OO (----oouuttppuutt--ffiillee or ----oouutt) to allow split archives to be updated and
       saved in a new archive.  For example,

              zip inarchive.zip foo.c bar.c --out outarchive.zip

       reads archive iinnaarrcchhiivvee..zziipp, even if split, adds the files ffoooo..cc and
       bbaarr..cc, and writes the resulting archive to oouuttaarrcchhiivvee..zziipp.  If
       iinnaarrcchhiivvee..zziipp is split then oouuttaarrcchhiivvee..zziipp defaults to the same split
       size.  Be aware that if oouuttaarrcchhiivvee..zziipp and any split files that are
       created with it already exist, these are always overwritten as needed
       without warning.  This may be changed in the future.

       UUnniiccooddee..  Though the zip standard requires storing paths in an archive
       using a specific character set, in practice zips have stored paths in
       archives in whatever the local character set is.  This creates problems
       when an archive is created or updated on a system using one character
       set and then extracted on another system using a different character
       set.  When compiled with Unicode support enabled on platforms that
       support wide characters, _z_i_p now stores, in addition to the standard
       local path for backward compatibility, the UTF-8 translation of the
       path.  This provides a common universal character set for storing paths
       that allows these paths to be fully extracted on other systems that
       support Unicode and to match as close as possible on systems that
       don't.

       On Win32 systems where paths are internally stored as Unicode but
       represented in the local character set, it's possible that some paths
       will be skipped during a local character set directory scan.  _z_i_p with
       Unicode support now can read and store these paths.  Note that Win 9x
       systems and FAT file systems don't fully support Unicode.

       Be aware that console windows on Win32 and Unix, for example, sometimes
       don't accurately show all characters due to how each operating system
       switches in character sets for display.  However, directory navigation
       tools should show the correct paths if the needed fonts are loaded.

       CCoommmmaanndd lliinnee ffoorrmmaatt..  This version of _z_i_p has updated command line
       processing and support for long options.

       Short options take the form

              -s[-][s[-]...][value][=value][ value]

       where s is a one or two character short option.  A short option that
       takes a value is last in an argument and anything after it is taken as
       the value.  If the option can be negated and ""-"" immediately follows
       the option, the option is negated.  Short options can also be given as
       separate arguments

              -s[-][value][=value][ value] -s[-][value][=value][ value] ...

       Short options in general take values either as part of the same
       argument or as the following argument.  An optional = is also
       supported.  So

              -ttmmddyyyy

       and

              -tt=mmddyyyy

       and

              -tt mmddyyyy

       all work.  The --xx and --ii options accept lists of values and use a
       slightly different format described below.  See the --xx and --ii options.

       Long options take the form

              --longoption[-][=value][ value]

       where the option starts with --, has a multicharacter name, can include
       a trailing dash to negate the option (if the option supports it), and
       can have a value (option argument) specified by preceeding it with =
       (no spaces).  Values can also follow the argument.  So

              --before-date=mmddyyyy

       and

              --before-date mmddyyyy

       both work.

       Long option names can be shortened to the shortest unique abbreviation.
       See the option descriptions below for which support long options.  To
       avoid confusion, avoid abbreviating a negatable option with an embedded
       dash (""-"") at the dash if you plan to negate it (the parser would
       consider a trailing dash, such as for the option ----ssoommee--ooppttiioonn using
       ----ssoommee-- as the option, as part of the name rather than a negating
       dash).  This may be changed to force the last dash in ----ssoommee-- to be
       negating in the future.

OOPPTTIIOONNSS
       --aa
       ----aasscciiii
              [Systems using EBCDIC] Translate file to ASCII format.


       --AA
       ----aaddjjuusstt--ssffxx
              Adjust self-extracting executable archive.  A self-extracting
              executable archive is created by prepending the SFX stub to an
              existing archive. The --AA option tells _z_i_p to adjust the entry
              offsets stored in the archive to take into account this
              ""preamble"" data.

       Note: self-extracting archives for the Amiga are a special case.  At
       present, only the Amiga port of _z_i_p is capable of adjusting or updating
       these without corrupting them. -J can be used to remove the SFX stub if
       other updates need to be made.


       --AACC
       ----aarrcchhiivvee--cclleeaarr
              [WIN32]  Once archive is created (and tested if --TT is used,
              which is recommended), clear the archive bits of files
              processed.  WARNING: Once the bits are cleared they are cleared.
              You may want to use the --ssff show files option to store the list
              of files processed in case the archive operation must be
              repeated.  Also consider using the --MMMM must match option.  Be
              sure to check out --DDFF as a possibly better way to do incremental
              backups.


       --AASS
       ----aarrcchhiivvee--sseett
              [WIN32]  Only include files that have the archive bit set.
              Directories are not stored when --AASS is used, though by default
              the paths of entries, including directories, are stored as usual
              and can be used by most unzips to recreate directories.

              The archive bit is set by the operating system when a file is
              modified and, if used with --AACC, --AASS can provide an incremental
              backup capability.  However, other applications can modify the
              archive bit and it may not be a reliable indicator of which
              files have changed since the last archive operation.
              Alternative ways to create incremental backups are using --tt to
              use file dates, though this won't catch old files copied to
              directories being archived, and --DDFF to create a differential
              archive.


       --BB
       ----bbiinnaarryy
              [VM/CMS and MVS] force file to be read binary (default is text).


       --BBn    [TANDEM] set Edit/Enscribe formatting options with n defined as
              bit  0: Don't add delimiter (Edit/Enscribe)
              bit  1: Use LF rather than CR/LF as delimiter (Edit/Enscribe)
              bit  2: Space fill record to maximum record length (Enscribe)
              bit  3: Trim trailing space (Enscribe)
              bit  8: Force 30K (Expand) large read for unstructured files


       --bb  path
       ----tteemmpp--ppaatthh  path
              Use the specified _p_a_t_h for the temporary _z_i_p archive. For
              example:

                     zip -b /tmp stuff *

              will put the temporary _z_i_p archive in the directory _/_t_m_p,
              copying over _s_t_u_f_f_._z_i_p to the current directory when done. This
              option is useful when updating an existing archive and the file
              system containing this old archive does not have enough space to
              hold both old and new archives at the same time.  It may also be
              useful when streaming in some cases to avoid the need for data
              descriptors.  Note that using this option may require _z_i_p take
              additional time to copy the archive file when done to the
              destination file system.


       --cc
       ----eennttrryy--ccoommmmeennttss
              Add one-line comments for each file.  File operations (adding,
              updating) are done first, and the user is then prompted for a
              one-line comment for each file.  Enter the comment followed by
              return, or just return for no comment.


       --CC
       ----pprreesseerrvvee--ccaassee
              [VMS]  Preserve case all on VMS.  Negating this option (--CC--)
              downcases.


       --CC22
       ----pprreesseerrvvee--ccaassee--22
              [VMS]  Preserve case ODS2 on VMS.  Negating this option (--CC22--)
              downcases.


       --CC55
       ----pprreesseerrvvee--ccaassee--55
              [VMS]  Preserve case ODS5 on VMS.  Negating this option (--CC55--)
              downcases.


       --dd
       ----ddeelleettee
              Remove (delete) entries from a _z_i_p archive.  For example:

                     zip -d foo foo/tom/junk foo/harry/\* \*.o

              will remove the entry _f_o_o_/_t_o_m_/_j_u_n_k, all of the files that start
              with _f_o_o_/_h_a_r_r_y_/, and all of the files that end with ..oo (in any
              path).  Note that shell pathname expansion has been inhibited
              with backslashes, so that _z_i_p can see the asterisks, enabling
              _z_i_p to match on the contents of the _z_i_p archive instead of the
              contents of the current directory.  (The backslashes are not
              used on MSDOS-based platforms.)  Can also use quotes to escape
              the asterisks as in

                     zip -d foo foo/tom/junk ""foo/harry/*"" ""*.o""

              Not escaping the asterisks on a system where the shell expands
              wildcards could result in the asterisks being converted to a
              list of files in the current directory and that list used to
              delete entries from the archive.

              Under MSDOS, --dd is case sensitive when it matches names in the
              _z_i_p archive.  This requires that file names be entered in upper
              case if they were zipped by PKZIP on an MSDOS system.  (We
              considered making this case insensitive on systems where paths
              were case insensitive, but it is possible the archive came from
              a system where case does matter and the archive could include
              both BBaarr and bbaarr as separate files in the archive.)  But see the
              new option --iicc to ignore case in the archive.


       --ddbb
       ----ddiissppllaayy--bbyytteess
              Display running byte counts showing the bytes zipped and the
              bytes to go.


       --ddcc
       ----ddiissppllaayy--ccoouunnttss
              Display running count of entries zipped and entries to go.


       --dddd
       ----ddiissppllaayy--ddoottss
              Display dots while each entry is zipped (except on ports that
              have their own progress indicator).  See --ddss below for setting
              dot size.  The default is a dot every 10 MB of input file
              processed.  The --vv option also displays dots (previously at a
              much higher rate than this but now --vv also defaults to 10 MB)
              and this rate is also controlled by --ddss.


       --ddff
       ----ddaattaaffoorrkk
              [MacOS] Include only data-fork of files zipped into the archive.
              Good for exporting files to foreign operating-systems.
              Resource-forks will be ignored at all.


       --ddgg
       ----ddiissppllaayy--gglloobbaallddoottss
              Display progress dots for the archive instead of for each file.
              The command

                         zip -qdgds 10m

              will turn off most output except dots every 10 MB.


       --ddss  size
       ----ddoott--ssiizzee  size
              Set amount of input file processed for each dot displayed.  See
              --dddd to enable displaying dots.  Setting this option implies --dddd.
              Size is in the format nm where n is a number and m is a
              multiplier.  Currently m can be k (KB), m (MB), g (GB), or t
              (TB), so if n is 100 and m is k, size would be 100k which is 100
              KB.  The default is 10 MB.

              The --vv option also displays dots and now defaults to 10 MB also.
              This rate is also controlled by this option.  A size of 0 turns
              dots off.

              This option does not control the dots from the ""Scanning files""
              message as _z_i_p scans for input files.  The dot size for that is
              fixed at 2 seconds or a fixed number of entries, whichever is
              longer.


       --dduu
       ----ddiissppllaayy--uussiizzee
              Display the uncompressed size of each entry.


       --ddvv
       ----ddiissppllaayy--vvoolluummee
              Display the volume (disk) number each entry is being read from,
              if reading an existing archive, and being written to.


       --DD
       ----nnoo--ddiirr--eennttrriieess
              Do not create entries in the _z_i_p archive for directories.
              Directory entries are created by default so that their
              attributes can be saved in the zip archive.  The environment
              variable ZIPOPT can be used to change the default options. For
              example under Unix with sh:

                     ZIPOPT=""-D""; export ZIPOPT

              (The variable ZIPOPT can be used for any option, including --ii
              and --xx using a new option format detailed below, and can include
              several options.) The option --DD is a shorthand for --xx ""*/"" but
              the latter previously could not be set as default in the ZIPOPT
              environment variable as the contents of ZIPOPT gets inserted
              near the beginning of the command line and the file list had to
              end at the end of the line.

              This version of _z_i_p does allow --xx and --ii options in ZIPOPT if
              the form

               --xx file file ...  @@

              is used, where the @ (an argument that is just @) terminates the
              list.


       --DDFF
       ----ddiiffffeerreennccee--aarrcchhiivvee
              Create an archive that contains all new and changed files since
              the original archive was created.  For this to work, the input
              file list and current directory must be the same as during the
              original _z_i_p operation.

              For example, if the existing archive was created using

                     zip -r foofull .

              from the _b_a_r directory, then the command

                     zip -r foofull . -DF --out foonew

              also from the _b_a_r directory creates the archive _f_o_o_n_e_w with just
              the files not in _f_o_o_f_u_l_l and the files where the size or file
              time of the files do not match those in _f_o_o_f_u_l_l.

              Note that the timezone environment variable TZ should be set
              according to the local timezone in order for this option to work
              correctly.  A change in timezone since the original archive was
              created could result in no times matching and all files being
              included.

              A possible approach to backing up a directory might be to create
              a normal archive of the contents of the directory as a full
              backup, then use this option to create incremental backups.


       --ee
       ----eennccrryypptt
              Encrypt the contents of the _z_i_p archive using a password which
              is entered on the terminal in response to a prompt (this will
              not be echoed; if standard error is not a tty, _z_i_p will exit
              with an error).  The password prompt is repeated to save the
              user from typing errors.


       --EE
       ----lloonnggnnaammeess
              [OS/2] Use the .LONGNAME Extended Attribute (if found) as
              filename.


       --ff
       ----ffrreesshheenn
              Replace (freshen) an existing entry in the _z_i_p archive only if
              it has been modified more recently than the version already in
              the _z_i_p archive; unlike the update option (--uu) this will not add
              files that are not already in the _z_i_p archive.  For example:

                     zip -f foo

              This command should be run from the same directory from which
              the original _z_i_p command was run, since paths stored in _z_i_p
              archives are always relative.

              Note that the timezone environment variable TZ should be set
              according to the local timezone in order for the --ff, --uu and --oo
              options to work correctly.

              The reasons behind this are somewhat subtle but have to do with
              the differences between the Unix-format file times (always in
              GMT) and most of the other operating systems (always local time)
              and the necessity to compare the two.  A typical TZ value is
              ``MET-1MEST'' (Middle European time with automatic adjustment
              for ``summertime'' or Daylight Savings Time).

              The format is TTThhDDD, where TTT is the time zone such as MET,
              hh is the difference between GMT and local time such as -1
              above, and DDD is the time zone when daylight savings time is in
              effect.  Leave off the DDD if there is no daylight savings time.
              For the US Eastern time zone EST5EDT.


       --FF
       ----ffiixx            
       --FFFF
       ----ffiixxffiixx    
              Fix the _z_i_p archive. The --FF option can be used if some portions
              of the archive are missing, but requires a reasonably intact
              central directory.  The input archive is scanned as usual, but
              _z_i_p will ignore some problems.  The resulting archive should be
              valid, but any inconsistent entries will be left out.

              When doubled as in --FFFF, the archive is scanned from the
              beginning and _z_i_p scans for special signatures to identify the
              limits between the archive members. The single --FF is more
              reliable if the archive is not too much damaged, so try this
              option first.

              If the archive is too damaged or the end has been truncated, you
              must use --FFFF.  This is a change from _z_i_p_ _2_._3_2, where the --FF
              option is able to read a truncated archive.  The --FF option now
              more reliably fixes archives with minor damage and the --FFFF
              option is needed to fix archives where --FF might have been
              sufficient before.

              Neither option will recover archives that have been incorrectly
              transferred in ascii mode instead of binary. After the repair,
              the --tt option of _u_n_z_i_p may show that some files have a bad CRC.
              Such files cannot be recovered; you can remove them from the
              archive using the --dd option of _z_i_p.

              Note that --FFFF may have trouble fixing archives that include an
              embedded zip archive that was stored (without compression) in
              the archive and, depending on the damage, it may find the
              entries in the embedded archive rather than the archive itself.
              Try --FF first as it does not have this problem.

              The format of the fix commands have changed.  For example, to
              fix the damaged archive _f_o_o_._z_i_p,

                     zip -F foo --out foofix

              tries to read the entries normally, copying good entries to the
              new archive _f_o_o_f_i_x_._z_i_p.  If this doesn't work, as when the
              archive is truncated, or if some entries you know are in the
              archive are missed, then try

                     zip -FF foo --out foofixfix

              and compare the resulting archive to the archive created by --FF.
              The --FFFF option may create an inconsistent archive.  Depending on
              what is damaged, you can then use the --FF option to fix that
              archive.

              A split archive with missing split files can be fixed using --FF
              if you have the last split of the archive (the ..zziipp file).  If
              this file is missing, you must use --FFFF to fix the archive, which
              will prompt you for the splits you have.

              Currently the fix options can't recover entries that have a bad
              checksum or are otherwise damaged.


       --FFII
       ----ffiiffoo [Unix]  Normally _z_i_p skips reading any FIFOs (named pipes)
              encountered, as _z_i_p can hang if the FIFO is not being fed.  This
              option tells _z_i_p to read the contents of any FIFO it finds.


       --FFSS
       ----ffiilleessyynncc
              Synchronize the contents of an archive with the files on the OS.
              Normally when an archive is updated, new files are added and
              changed files are updated but files that no longer exist on the
              OS are not deleted from the archive.  This option enables a new
              mode that checks entries in the archive against the file system.
              If the file time and file size of the entry matches that of the
              OS file, the entry is copied from the old archive instead of
              being read from the file system and compressed.  If the OS file
              has changed, the entry is read and compressed as usual.  If the
              entry in the archive does not match a file on the OS, the entry
              is deleted.  Enabling this option should create archives that
              are the same as new archives, but since existing entries are
              copied instead of compressed, updating an existing archive with
              --FFSS can be much faster than creating a new archive.  Also
              consider using --uu for updating an archive.

              For this option to work, the archive should be updated from the
              same directory it was created in so the relative paths match.
              If few files are being copied from the old archive, it may be
              faster to create a new archive instead.

              Note that the timezone environment variable TZ should be set
              according to the local timezone in order for this option to work
              correctly.  A change in timezone since the original archive was
              created could result in no times matching and recompression of
              all files.

              This option deletes files from the archive.  If you need to
              preserve the original archive, make a copy of the archive first
              or use the ----oouutt option to output the updated archive to a new
              file.  Even though it may be slower, creating a new archive with
              a new archive name is safer, avoids mismatches between archive
              and OS paths, and is preferred.


       --gg
       ----ggrrooww             
              Grow (append to) the specified _z_i_p archive, instead of creating
              a new one. If this operation fails, _z_i_p attempts to restore the
              archive to its original state. If the restoration fails, the
              archive might become corrupted. This option is ignored when
              there's no existing archive or when at least one archive member
              must be updated or deleted.


       --hh
       --??
       ----hheellpp             
              Display the _z_i_p help information (this also appears if _z_i_p is
              run with no arguments).


       --hh22
       ----mmoorree--hheellpp
              Display extended help including more on command line format,
              pattern matching, and more obscure options.


       --ii  files
       ----iinncclluuddee  files
              Include only the specified files, as in:

                     zip -r foo . -i \*.c

              which will include only the files that end in .c in the current
              directory and its subdirectories. (Note for PKZIP users: the
              equivalent command is

                     pkzip -rP foo *.c

              PKZIP does not allow recursion in directories other than the
              current one.)  The backslash avoids the shell filename
              substitution, so that the name matching is performed by _z_i_p at
              all directory levels.  [This is for Unix and other systems where
              \  escapes the next character.  For other systems where the
              shell does not process * do not use \ and the above is

                     zip -r foo . -i *.c

              Examples are for Unix unless otherwise specified.]  So to
              include dir, a directory directly under the current directory,
              use

                     zip -r foo . -i dir/\*

              or

                     zip -r foo . -i ""dir/*""

              to match paths such as dir/a and dir/b/file.c [on ports without
              wildcard expansion in the shell such as MSDOS and Windows

                     zip -r foo . -i dir/*

              is used.]  Note that currently the trailing / is needed for
              directories (as in

                     zip -r foo . -i dir/

              to include directory dir).

              The long option form of the first example is

                     zip -r foo . --include \*.c

              and does the same thing as the short option form.

              Though the command syntax used to require --ii at the end of the
              command line, this version actually allows --ii (or ----iinncclluuddee)
              anywhere.  The list of files terminates at the next argument
              starting with --, the end of the command line, or the list
              terminator @@ (an argument that is just @).  So the above can be
              given as

                     zip -i \*.c @ -r foo .

              for example.  There must be a space between the option and the
              first file of a list.  For just one file you can use the single
              value form

                     zip -i\*.c -r foo .

              (no space between option and value) or

                     zip --include=\*.c -r foo .

              as additional examples.  The single value forms are not
              recommended because they can be confusing and, in particular,
              the --iiffiillee format can cause problems if the first letter of ffiillee
              combines with ii to form a two-letter option starting with ii.
              Use --sscc to see how your command line will be parsed.

              Also possible:

                     zip -r foo  . -i@include.lst

              which will only include the files in the current directory and
              its subdirectories that match the patterns in the file
              include.lst.

              Files to --ii and --xx are patterns matching internal archive paths.
              See --RR for more on patterns.


       --II
       ----nnoo--iimmaaggee
              [Acorn RISC OS] Don't scan through Image files.  When used, _z_i_p
              will not consider Image files (eg. DOS partitions or Spark
              archives when SparkFS is loaded) as directories but will store
              them as single files.

              For example, if you have SparkFS loaded, zipping a Spark archive
              will result in a zipfile containing a directory (and its
              content) while using the 'I' option will result in a zipfile
              containing a Spark archive. Obviously this second case will also
              be obtained (without the 'I' option) if SparkFS isn't loaded.


       --iicc
       ----iiggnnoorree--ccaassee
              [VMS, WIN32] Ignore case when matching archive entries.  This
              option is only available on systems where the case of files is
              ignored.  On systems with case-insensitive file systems, case is
              normally ignored when matching files on the file system but is
              not ignored for -f (freshen), -d (delete), -U (copy), and
              similar modes when matching against archive entries (currently
              -f ignores case on VMS) because archive entries can be from
              systems where case does matter and names that are the same
              except for case can exist in an archive.  The --iicc option makes
              all matching case insensitive.  This can result in multiple
              archive entries matching a command line pattern.


       --jj
       ----jjuunnkk--ppaatthhss
              Store just the name of a saved file (junk the path), and do not
              store directory names. By default, _z_i_p will store the full path
              (relative to the current directory).


       --jjjj
       ----aabbssoolluuttee--ppaatthh
              [MacOS] record Fullpath (+ Volname). The complete path including
              volume will be stored. By default the relative path will be
              stored.


       --JJ
       ----jjuunnkk--ssffxx
              Strip any prepended data (e.g. a SFX stub) from the archive.

       --kk
       ----DDOOSS--nnaammeess
              Attempt to convert the names and paths to conform to MSDOS,
              store only the MSDOS attribute (just the user write attribute
              from Unix), and mark the entry as made under MSDOS (even though
              it was not); for compatibility with PKUNZIP under MSDOS which
              cannot handle certain names such as those with two dots.

       --ll
       ----ttoo--ccrrllff
              Translate the Unix end-of-line character LF into the MSDOS
              convention CR LF. This option should not be used on binary
              files.  This option can be used on Unix if the zip file is
              intended for PKUNZIP under MSDOS. If the input files already
              contain CR LF, this option adds an extra CR. This is to ensure
              that uunnzziipp --aa on Unix will get back an exact copy of the
              original file, to undo the effect of zziipp --ll.  See --llll for how
              binary files are handled.

       --llaa
       ----lloogg--aappppeenndd
              Append to existing logfile.  Default is to overwrite.

       --llff  logfilepath
       ----llooggffiillee--ppaatthh  logfilepath
              Open a logfile at the given path.  By default any existing file
              at that location is overwritten, but the --llaa option will result
              in an existing file being opened and the new log information
              appended to any existing information.  Only warnings and errors
              are written to the log unless the --llii option is also given, then
              all information messages are also written to the log.

       --llii
       ----lloogg--iinnffoo
              Include information messages, such as file names being zipped,
              in the log.  The default is to only include the command line,
              any warnings and errors, and the final status.

       --llll
       ----ffrroomm--ccrrllff
              Translate the MSDOS end-of-line CR LF into Unix LF.  This option
              should not be used on binary files.  This option can be used on
              MSDOS if the zip file is intended for unzip under Unix.  If the
              file is converted and the file is later determined to be binary
              a warning is issued and the file is probably corrupted.  In this
              release if --llll detects binary in the first buffer read from a
              file, _z_i_p now issues a warning and skips line end conversion on
              the file.  This check seems to catch all binary files tested,
              but the original check remains and if a converted file is later
              determined to be binary that warning is still issued.  A new
              algorithm is now being used for binary detection that should
              allow line end conversion of text files in UUTTFF--88 and similar
              encodings.

       --LL
       ----lliicceennssee
              Display the _z_i_p license.

       --mm
       ----mmoovvee       
              Move the specified files into the _z_i_p archive; actually, this
              deletes the target directories/files after making the specified
              _z_i_p archive. If a directory becomes empty after removal of the
              files, the directory is also removed. No deletions are done
              until _z_i_p has created the archive without error.  This is useful
              for conserving disk space, but is potentially dangerous so it is
              recommended to use it in combination with --TT to test the archive
              before removing all input files.

       --MMMM
       ----mmuusstt--mmaattcchh
              All input patterns must match at least one file and all input
              files found must be readable.  Normally when an input pattern
              does not match a file the ""name not matched"" warning is issued
              and when an input file has been found but later is missing or
              not readable a missing or not readable warning is issued.  In
              either case _z_i_p continues creating the archive, with missing or
              unreadable new files being skipped and files already in the
              archive remaining unchanged.  After the archive is created, if
              any files were not readable _z_i_p returns the OPEN error code (18
              on most systems) instead of the normal success return (0 on most
              systems).  With --MMMM set, _z_i_p exits as soon as an input pattern
              is not matched (whenever the ""name not matched"" warning would be
              issued) or when an input file is not readable.  In either case
              _z_i_p exits with an OPEN error and no archive is created.

              This option is useful when a known list of files is to be zipped
              so any missing or unreadable files will result in an error.  It
              is less useful when used with wildcards, but _z_i_p will still exit
              with an error if any input pattern doesn't match at least one
              file and if any matched files are unreadable.  If you want to
              create the archive anyway and only need to know if files were
              skipped, don't use --MMMM and just check the return code.  Also --llff
              could be useful.

       --nn  suffixes
       ----ssuuffffiixxeess  suffixes
              Do not attempt to compress files named with the given ssuuffffiixxeess.
              Such files are simply stored (0% compression) in the output zip
              file, so that _z_i_p doesn't waste its time trying to compress
              them.  The suffixes are separated by either colons or
              semicolons.  For example:

                     zip -rn .Z:.zip:.tiff:.gif:.snd  foo foo

              will copy everything from _f_o_o into _f_o_o_._z_i_p, but will store any
              files that end in _._Z, _._z_i_p, _._t_i_f_f, _._g_i_f, or _._s_n_d without trying
              to compress them (image and sound files often have their own
              specialized compression methods).  By default, _z_i_p does not
              compress files with extensions in the list
              _._Z_:_._z_i_p_:_._z_o_o_:_._a_r_c_:_._l_z_h_:_._a_r_j_.  Such files are stored directly in
              the output archive.  The environment variable ZIPOPT can be used
              to change the default options. For example under Unix with csh:

                     setenv ZIPOPT ""-n .gif:.zip""

              To attempt compression on all files, use:

                     zip -n : foo

              The maximum compression option --99 also attempts compression on
              all files regardless of extension.

              On Acorn RISC OS systems the suffixes are actually filetypes (3
              hex digit format). By default, _z_i_p does not compress files with
              filetypes in the list DDC:D96:68E (i.e. Archives, CFS files and
              PackDir files).

       --nnww
       ----nnoo--wwiilldd
              Do not perform internal wildcard processing (shell processing of
              wildcards is still done by the shell unless the arguments are
              escaped).  Useful if a list of paths is being read and no
              wildcard substitution is desired.

       --NN
       ----nnootteess
              [Amiga, MacOS] Save Amiga or MacOS filenotes as zipfile
              comments. They can be restored by using the -N option of _u_n_z_i_p.
              If -c is used also, you are prompted for comments only for those
              files that do not have filenotes.

       --oo
       ----llaatteesstt--ttiimmee
              Set the ""last modified"" time of the _z_i_p archive to the latest
              (oldest) ""last modified"" time found among the entries in the _z_i_p
              archive.  This can be used without any other operations, if
              desired.  For example:

              zip -o foo

              will change the last modified time of ffoooo..zziipp to the latest time
              of the entries in ffoooo..zziipp.

       --OO output-file
       ----oouuttppuutt--ffiillee output-file
              Process the archive changes as usual, but instead of updating
              the existing archive, output the new archive to output-file.
              Useful for updating an archive without changing the existing
              archive and the input archive must be a different file than the
              output archive.

              This option can be used to create updated split archives.  It
              can also be used with --UU to copy entries from an existing
              archive to a new archive.  See the EEXXAAMMPPLLEESS section below.

              Another use is converting _z_i_p files from one split size to
              another.  For instance, to convert an archive with 700 MB CD
              splits to one with 2 GB DVD splits, can use:

                     zip -s 2g cd-split.zip --out dvd-split.zip

              which uses copy mode.  See --UU below.  Also:

                     zip -s 0 split.zip --out unsplit.zip

              will convert a split archive to a single-file archive.

              Copy mode will convert stream entries (using data descriptors
              and which should be compatible with most unzips) to normal
              entries (which should be compatible with all unzips), except if
              standard encryption was used.  For archives with encrypted
              entries, _z_i_p_c_l_o_a_k will decrypt the entries and convert them to
              normal entries.

       --pp
       ----ppaatthhss
              Include relative file paths as part of the names of files stored
              in the archive.  This is the default.  The --jj option junks the
              paths and just stores the names of the files.

       --PP  password
       ----ppaasssswwoorrdd  password
              Use _p_a_s_s_w_o_r_d to encrypt zipfile entries (if any).  TTHHIISS IISS
              IINNSSEECCUURREE!!  Many multi-user operating systems provide ways for
              any user to see the current command line of any other user; even
              on stand-alone systems there is always the threat of over-the-
              shoulder peeking.  Storing the plaintext password as part of a
              command line in an automated script is even worse.  Whenever
              possible, use the non-echoing, interactive prompt to enter
              passwords.  (And where security is truly important, use strong
              encryption such as Pretty Good Privacy instead of the relatively
              weak standard encryption provided by zipfile utilities.)

       --qq
       ----qquuiieett
              Quiet mode; eliminate informational messages and comment
              prompts.  (Useful, for example, in shell scripts and background
              tasks).

       --QQn
       ----QQ--ffllaagg  n
              [QDOS] store information about the file in the file header with
              n defined as
              bit  0: Don't add headers for any file
              bit  1: Add headers for all files
              bit  2: Don't wait for interactive key press on exit

       --rr
       ----rreeccuurrssee--ppaatthhss
              Travel the directory structure recursively; for example:

                     zip -r foo.zip foo

              or more concisely

                     zip -r foo foo

              In this case, all the files and directories in ffoooo are saved in
              a _z_i_p archive named ffoooo..zziipp, including files with names starting
              with """".."""", since the recursion does not use the shell's file-name
              substitution mechanism.  If you wish to include only a specific
              subset of the files in directory ffoooo and its subdirectories, use
              the --ii option to specify the pattern of files to be included.
              You should not use --rr with the name """"..**"""", since that matches
              """"...."""" which will attempt to zip up the parent directory (probably
              not what was intended).

              Multiple source directories are allowed as in

                     zip -r foo foo1 foo2

              which first zips up ffoooo11 and then ffoooo22, going down each
              directory.

              Note that while wildcards to --rr are typically resolved while
              recursing down directories in the file system, any --RR,, --xx, and
              --ii wildcards are applied to internal archive pathnames once the
              directories are scanned.  To have wildcards apply to files in
              subdirectories when recursing on Unix and similar systems where
              the shell does wildcard substitution, either escape all
              wildcards or put all arguments with wildcards in quotes.  This
              lets _z_i_p see the wildcards and match files in subdirectories
              using them as it recurses.

       --RR
       ----rreeccuurrssee--ppaatttteerrnnss
              Travel the directory structure recursively starting at the
              current directory; for example:

                     zip -R foo ""*.c""

              In this case, all the files matching **..cc in the tree starting at
              the current directory are stored into a _z_i_p archive named
              ffoooo..zziipp.  Note that **..cc will match ffiillee..cc, aa//ffiillee..cc and aa//bb//..cc.
              More than one pattern can be listed as separate arguments.  Note
              for PKZIP users: the equivalent command is

                     pkzip -rP foo *.c

              Patterns are relative file paths as they appear in the archive,
              or will after zipping, and can have optional wildcards in them.
              For example, given the current directory is ffoooo and under it are
              directories ffoooo11 and ffoooo22 and in ffoooo11 is the file bbaarr..cc,

                     zip -R foo/*

              will zip up ffoooo, ffoooo//ffoooo11, ffoooo//ffoooo11//bbaarr..cc, and ffoooo//ffoooo22.

                     zip -R */bar.c

              will zip up ffoooo//ffoooo11//bbaarr..cc.  See the note for --rr on escaping
              wildcards.


       --RREE
       ----rreeggeexx
              [WIN32]  Before _z_i_p _3_._0, regular expression list matching was
              enabled by default on Windows platforms.  Because of confusion
              resulting from the need to escape ""["" and ""]"" in names, it is
              now off by default for Windows so ""["" and ""]"" are just normal
              characters in names.  This option enables [] matching again.


       --ss  splitsize
       ----sspplliitt--ssiizzee  splitsize
              Enable creating a split archive and set the split size.  A split
              archive is an archive that could be split over many files.  As
              the archive is created, if the size of the archive reaches the
              specified split size, that split is closed and the next split
              opened.  In general all splits but the last will be the split
              size and the last will be whatever is left.  If the entire
              archive is smaller than the split size a single-file archive is
              created.

              Split archives are stored in numbered files.  For example, if
              the output archive is named aarrcchhiivvee and three splits are
              required, the resulting archive will be in the three files
              aarrcchhiivvee..zz0011, aarrcchhiivvee..zz0022, and aarrcchhiivvee..zziipp.  Do not change the
              numbering of these files or the archive will not be readable as
              these are used to determine the order the splits are read.

              Split size is a number optionally followed by a multiplier.
              Currently the number must be an integer.  The multiplier can
              currently be one of kk (kilobytes), mm (megabytes), gg (gigabytes),
              or tt (terabytes).  As 64k is the minimum split size, numbers
              without multipliers default to megabytes.  For example, to
              create a split archive called ffoooo with the contents of the bbaarr
              directory with splits of 670 MB that might be useful for burning
              on CDs, the command:

                     zip -s 670m -r foo bar

              could be used.

              Currently the old splits of a split archive are not excluded
              from a new archive, but they can be specifically excluded.  If
              possible, keep the input and output archives out of the path
              being zipped when creating split archives.

              Using --ss without --sspp as above creates all the splits where ffoooo
              is being written, in this case the current directory.  This
              split mode updates the splits as the archive is being created,
              requiring all splits to remain writable, but creates split
              archives that are readable by any unzip that supports split
              archives.  See --sspp below for enabling split pause mode which
              allows splits to be written directly to removable media.

              The option --ssvv can be used to enable verbose splitting and
              provide details of how the splitting is being done.  The --ssbb
              option can be used to ring the bell when _z_i_p pauses for the next
              split destination.

              Split archives cannot be updated, but see the --OO (----oouutt) option
              for how a split archive can be updated as it is copied to a new
              archive.  A split archive can also be converted into a single-
              file archive using a split size of 0 or negating the --ss option:

                     zip -s 0 split.zip --out single.zip

              Also see --UU (----ccooppyy) for more on using copy mode.

       --ssbb
       ----sspplliitt--bbeellll
              If splitting and using split pause mode, ring the bell when _z_i_p
              pauses for each split destination.

       --sscc
       ----sshhooww--ccoommmmaanndd
              Show the command line starting _z_i_p as processed and exit.  The
              new command parser permutes the arguments, putting all options
              and any values associated with them before any non-option
              arguments.  This allows an option to appear anywhere in the
              command line as long as any values that go with the option go
              with it.  This option displays the command line as _z_i_p sees it,
              including any arguments from the environment such as from the
              ZZIIPPOOPPTT variable.  Where allowed, options later in the command
              line can override options earlier in the command line.

       --ssff
       ----sshhooww--ffiilleess
              Show the files that would be operated on, then exit.  For
              instance, if creating a new archive, this will list the files
              that would be added.  If the option is negated, --ssff--, output
              only to an open log file.  Screen display is not recommended for
              large lists.

       --ssoo
       ----sshhooww--ooppttiioonnss
              Show all available options supported by _z_i_p as compiled on the
              current system.  As this command reads the option table, it
              should include all options.  Each line includes the short option
              (if defined), the long option (if defined), the format of any
              value that goes with the option, if the option can be negated,
              and a small description.  The value format can be no value,
              required value, optional value, single character value, number
              value, or a list of values.  The output of this option is not
              intended to show how to use any option but only show what
              options are available.

       --sspp
       ----sspplliitt--ppaauussee
              If splitting is enabled with --ss, enable split pause mode.  This
              creates split archives as --ss does, but stream writing is used so
              each split can be closed as soon as it is written and _z_i_p will
              pause between each split to allow changing split destination or
              media.

              Though this split mode allows writing splits directly to
              removable media, it uses stream archive format that may not be
              readable by some unzips.  Before relying on splits created with
              --sspp, test a split archive with the unzip you will be using.

              To convert a stream split archive (created with --sspp) to a
              standard archive see the ----oouutt option.

       --ssuu
       ----sshhooww--uunniiccooddee
              As --ssff, but also show Unicode version of the path if exists.

       --ssUU
       ----sshhooww--jjuusstt--uunniiccooddee
              As --ssff, but only show Unicode version of the path if exists,
              otherwise show the standard version of the path.

       --ssvv
       ----sspplliitt--vveerrbboossee
              Enable various verbose messages while splitting, showing how the
              splitting is being done.

       --SS
       ----ssyysstteemm--hhiiddddeenn
              [MSDOS, OS/2, WIN32 and ATARI] Include system and hidden files.
              [MacOS] Includes finder invisible files, which are ignored
              otherwise.

       --tt  mmddyyyy
       ----ffrroomm--ddaattee  mmddyyyy
              Do not operate on files modified prior to the specified date,
              where mmmm is the month (00-12), dddd is the day of the month
              (01-31), and yyyyyyyy is the year.  The _I_S_O_ _8_6_0_1 date format
              yyyyyyyy--mmmm--dddd is also accepted.  For example:

                     zip -rt 12071991 infamy foo

                     zip -rt 1991-12-07 infamy foo

              will add all the files in ffoooo and its subdirectories that were
              last modified on or after 7 December 1991, to the _z_i_p archive
              iinnffaammyy..zziipp.

       --tttt  mmddyyyy
       ----bbeeffoorree--ddaattee  mmddyyyy
              Do not operate on files modified after or at the specified date,
              where mmmm is the month (00-12), dddd is the day of the month
              (01-31), and yyyyyyyy is the year.  The _I_S_O_ _8_6_0_1 date format
              yyyyyyyy--mmmm--dddd is also accepted.  For example:

                     zip -rtt 11301995 infamy foo

                     zip -rtt 1995-11-30 infamy foo

              will add all the files in ffoooo and its subdirectories that were
              last modified before 30 November 1995, to the _z_i_p archive
              iinnffaammyy..zziipp.

       --TT
       ----tteesstt        
              Test the integrity of the new zip file. If the check fails, the
              old zip file is unchanged and (with the --mm option) no input
              files are removed.

       --TTTT  cmd
       ----uunnzziipp--ccoommmmaanndd  cmd
              Use command cmd instead of 'unzip -tqq' to test an archive when
              the --TT option is used.  On Unix, to use a copy of unzip in the
              current directory instead of the standard system unzip, could
              use:

               zip archive file1 file2 -T -TT ""./unzip -tqq""

              In cmd, {} is replaced by the name of the temporary archive,
              otherwise the name of the archive is appended to the end of the
              command.  The return code is checked for success (0 on Unix).

       --uu
       ----uuppddaattee
              Replace (update) an existing entry in the _z_i_p archive only if it
              has been modified more recently than the version already in the
              _z_i_p archive.  For example:

                     zip -u stuff *

              will add any new files in the current directory, and update any
              files which have been modified since the _z_i_p archive _s_t_u_f_f_._z_i_p
              was last created/modified (note that _z_i_p will not try to pack
              _s_t_u_f_f_._z_i_p into itself when you do this).

              Note that the --uu option with no input file arguments acts like
              the --ff (freshen) option.

       --UU
       ----ccooppyy--eennttrriieess
              Copy entries from one archive to another.  Requires the ----oouutt
              option to specify a different output file than the input
              archive.  Copy mode is the reverse of --dd delete.  When delete is
              being used with ----oouutt, the selected entries are deleted from the
              archive and all other entries are copied to the new archive,
              while copy mode selects the files to include in the new archive.
              Unlike --uu update, input patterns on the command line are matched
              against archive entries only and not the file system files.  For
              instance,

                     zip inarchive ""*.c"" --copy --out outarchive

              copies entries with names ending in ..cc from iinnaarrcchhiivvee to
              oouuttaarrcchhiivvee.  The wildcard must be escaped on some systems to
              prevent the shell from substituting names of files from the file
              system which may have no relevance to the entries in the
              archive.

              If no input files appear on the command line and ----oouutt is used,
              copy mode is assumed:

                     zip inarchive --out outarchive

              This is useful for changing split size for instance.  Encrypting
              and decrypting entries is not yet supported using copy mode.
              Use _z_i_p_c_l_o_a_k for that.

       --UUNN  v
       ----uunniiccooddee  v
              Determine what _z_i_p should do with Unicode file names.  _z_i_p_ _3_._0,
              in addition to the standard file path, now includes the UTF-8
              translation of the path if the entry path is not entirely 7-bit
              ASCII.  When an entry is missing the Unicode path, _z_i_p reverts
              back to the standard file path.  The problem with using the
              standard path is this path is in the local character set of the
              zip that created the entry, which may contain characters that
              are not valid in the character set being used by the unzip.
              When _z_i_p is reading an archive, if an entry also has a Unicode
              path, _z_i_p now defaults to using the Unicode path to recreate the
              standard path using the current local character set.

              This option can be used to determine what _z_i_p should do with
              this path if there is a mismatch between the stored standard
              path and the stored UTF-8 path (which can happen if the standard
              path was updated).  In all cases, if there is a mismatch it is
              assumed that the standard path is more current and _z_i_p uses
              that.  Values for vv are

                     q - quit if paths do not match

                     w - warn, continue with standard path

                     i - ignore, continue with standard path

                     n - no Unicode, do not use Unicode paths

              The default is to warn and continue.

              Characters that are not valid in the current character set are
              escaped as ##UUxxxxxxxx and ##LLxxxxxxxxxxxx, where x is an ASCII character
              for a hex digit.  The first is used if a 16-bit character number
              is sufficient to represent the Unicode character and the second
              if the character needs more than 16 bits to represent it's
              Unicode character code.  Setting --UUNN to

                     e - escape

              as in

                     zip archive -sU -UN=e

              forces _z_i_p to escape all characters that are not printable 7-bit
              ASCII.

              Normally _z_i_p stores UTF-8 directly in the standard path field on
              systems where UTF-8 is the current character set and stores the
              UTF-8 in the new extra fields otherwise.  The option

                     u - UTF-8

              as in

                     zip archive dir -r -UN=UTF8

              forces _z_i_p to store UTF-8 as native in the archive.  Note that
              storing UTF-8 directly is the default on Unix systems that
              support it.  This option could be useful on Windows systems
              where the escaped path is too large to be a valid path and the
              UTF-8 version of the path is smaller, but native UTF-8 is not
              backward compatible on Windows systems.


       --vv
       ----vveerrbboossee
              Verbose mode or print diagnostic version info.

              Normally, when applied to real operations, this option enables
              the display of a progress indicator during compression (see --dddd
              for more on dots) and requests verbose diagnostic info about
              zipfile structure oddities.

              However, when --vv is the only command line argument a diagnostic
              screen is printed instead.  This should now work even if stdout
              is redirected to a file, allowing easy saving of the information
              for sending with bug reports to Info-ZIP.  The version screen
              provides the help screen header with program name, version, and
              release date, some pointers to the Info-ZIP home and
              distribution sites, and shows information about the target
              environment (compiler type and version, OS version, compilation
              date and the enabled optional features used to create the _z_i_p
              executable).

       --VV
       ----VVMMSS--ppoorrttaabbllee
              [VMS] Save VMS file attributes.  (Files are  truncated at EOF.)
              When a -V archive is unpacked on a non-VMS system,  some file
              types (notably Stream_LF text files  and  pure binary files
              like fixed-512) should be extracted intact.  Indexed files and
              file types with embedded record sizes (notably variable-length
              record types) will probably be seen as corrupt elsewhere.

       --VVVV
       ----VVMMSS--ssppeecciiffiicc
              [VMS] Save VMS file attributes, and  all allocated blocks in a
              file,  including  any  data beyond EOF.  Useful for moving ill-
              formed files  among  VMS systems.   When a -VV archive is
              unpacked on a non-VMS system, almost all files will appear
              corrupt.

       --ww
       ----VVMMSS--vveerrssiioonnss
              [VMS] Append the version number of the files to the name,
              including multiple versions of files.  Default is to use only
              the most recent version of a specified file.

       --wwww
       ----VVMMSS--ddoott--vveerrssiioonnss
              [VMS] Append the version number of the files to the name,
              including multiple versions of files, using the .nnn format.
              Default is to use only the most recent version of a specified
              file.

       --wwss
       ----wwiilldd--ssttoopp--ddiirrss
              Wildcards match only at a directory level.  Normally _z_i_p handles
              paths as strings and given the paths

                     /foo/bar/dir/file1.c

                     /foo/bar/file2.c

              an input pattern such as

                     /foo/bar/*

              normally would match both paths, the * matching ddiirr//ffiillee11..cc and
              ffiillee22..cc.  Note that in the first case a directory boundary (/)
              was crossed in the match.  With --wwss no directory bounds will be
              included in the match, making wildcards local to a specific
              directory level.  So, with --wwss enabled, only the second path
              would be matched.

              When using --wwss, use ** to match across directory boundaries as *
              does normally.

       --xx  files
       ----eexxcclluuddee  files
              Explicitly exclude the specified files, as in:

                     zip -r foo foo -x \*.o

              which will include the contents of ffoooo in ffoooo..zziipp while
              excluding all the files that end in ..oo.  The backslash avoids
              the shell filename substitution, so that the name matching is
              performed by _z_i_p at all directory levels.

              Also possible:

                     zip -r foo foo -x@exclude.lst

              which will include the contents of ffoooo in ffoooo..zziipp while
              excluding all the files that match the patterns in the file
              eexxcclluuddee..llsstt.

              The long option forms of the above are

                     zip -r foo foo --exclude \*.o

              and

                     zip -r foo foo --exclude @exclude.lst

              Multiple patterns can be specified, as in:

                     zip -r foo foo -x \*.o \*.c

              If there is no space between --xx and the pattern, just one value
              is assumed (no list):

                     zip -r foo foo -x\*.o

              See --ii for more on include and exclude.

       --XX
       ----nnoo--eexxttrraa
              Do not save extra file attributes (Extended Attributes on OS/2,
              uid/gid and file times on Unix).  The zip format uses extra
              fields to include additional information for each entry.  Some
              extra fields are specific to particular systems while others are
              applicable to all systems.  Normally when _z_i_p reads entries from
              an existing archive, it reads the extra fields it knows, strips
              the rest, and adds the extra fields applicable to that system.
              With --XX, _z_i_p strips all old fields and only includes the Unicode
              and Zip64 extra fields (currently these two extra fields cannot
              be disabled).

              Negating this option, --XX--, includes all the default extra
              fields, but also copies over any unrecognized extra fields.

       --yy
       ----ssyymmlliinnkkss
              For UNIX and VMS (V8.3 and later), store symbolic links as such
              in the _z_i_p archive, instead of compressing and storing the file
              referred to by the link.  This can avoid multiple copies of
              files being included in the archive as _z_i_p recurses the
              directory trees and accesses files directly and by links.

       --zz
       ----aarrcchhiivvee--ccoommmmeenntt
              Prompt for a multi-line comment for the entire _z_i_p archive.  The
              comment is ended by a line containing just a period, or an end
              of file condition (^D on Unix, ^Z on MSDOS, OS/2, and VMS).  The
              comment can be taken from a file:

                     zip -z foo < foowhat

       --ZZ  cm
       ----ccoommpprreessssiioonn--mmeetthhoodd  cm
              Set the default compression method.  Currently the main methods
              supported by _z_i_p are ssttoorree and ddeeffllaattee.  Compression method can
              be set to:

              ssttoorree - Setting the compression method to ssttoorree forces _z_i_p to
              store entries with no compression.  This is generally faster
              than compressing entries, but results in no space savings.  This
              is the same as using --00 (compression level zero).

              ddeeffllaattee - This is the default method for _z_i_p.  If _z_i_p determines
              that storing is better than deflation, the entry will be stored
              instead.

              bbzziipp22 - If bbzziipp22 support is compiled in, this compression method
              also becomes available.  Only some modern unzips currently
              support the bbzziipp22 compression method, so test the unzip you will
              be using before relying on archives using this method
              (compression method 12).

              For example, to add bbaarr..cc to archive ffoooo using bbzziipp22
              compression:

                     zip -Z bzip2 foo bar.c

              The compression method can be abbreviated:

                     zip -Zb foo bar.c

       --##
       ((--00,, --11,, --22,, --33,, --44,, --55,, --66,, --77,, --88,, --99))
              Regulate the speed of compression using the specified digit ##,
              where --00 indicates no compression (store all files), --11
              indicates the fastest compression speed (less compression) and
              --99 indicates the slowest compression speed (optimal compression,
              ignores the suffix list). The default compression level is --66..

              Though still being worked, the intention is this setting will
              control compression speed for all compression methods.
              Currently only deflation is controlled.

       --!!
       ----uussee--pprriivviilleeggeess
              [WIN32] Use priviliges (if granted) to obtain all aspects of
              WinNT security.

       --@@
       ----nnaammeess--ssttddiinn
              Take the list of input files from standard input. Only one
              filename per line.

       --$$
       ----vvoolluummee--llaabbeell
              [MSDOS, OS/2, WIN32] Include the volume label for the drive
              holding the first file to be compressed.  If you want to include
              only the volume label or to force a specific drive, use the
              drive name as first file name, as in:

                     zip -$ foo a: c:bar

EEXXAAMMPPLLEESS
       The simplest example:

              zip stuff *

       creates the archive _s_t_u_f_f_._z_i_p (assuming it does not exist) and puts all
       the files in the current directory in it, in compressed form (the ..zziipp
       suffix is added automatically, unless the archive name contains a dot
       already; this allows the explicit specification of other suffixes).

       Because of the way the shell on Unix does filename substitution, files
       starting with ""."" are not included; to include these as well:

              zip stuff .* *

       Even this will not include any subdirectories from the current
       directory.

       To zip up an entire directory, the command:

              zip -r foo foo

       creates the archive _f_o_o_._z_i_p, containing all the files and directories
       in the directory _f_o_o that is contained within the current directory.

       You may want to make a _z_i_p archive that contains the files in _f_o_o,
       without recording the directory name, _f_o_o.  You can use the --jj option
       to leave off the paths, as in:

              zip -j foo foo/*

       If you are short on disk space, you might not have enough room to hold
       both the original directory and the corresponding compressed _z_i_p
       archive.  In this case, you can create the archive in steps using the
       --mm option.  If _f_o_o contains the subdirectories _t_o_m, _d_i_c_k, and _h_a_r_r_y,
       you can:

              zip -rm foo foo/tom
              zip -rm foo foo/dick
              zip -rm foo foo/harry

       where the first command creates _f_o_o_._z_i_p, and the next two add to it.
       At the completion of each _z_i_p command, the last created archive is
       deleted, making room for the next _z_i_p command to function.




       Use --ss to set the split size and create a split archive.  The size is
       given as a number followed optionally by one of k (kB), m (MB), g (GB),
       or t (TB).  The command

              zip -s 2g -r split.zip foo

       creates a split archive of the directory foo with splits no bigger than
       2 GB each.  If foo contained 5 GB of contents and the contents were
       stored in the split archive without compression (to make this example
       simple), this would create three splits, split.z01 at 2 GB, split.z02
       at 2 GB, and split.zip at a little over 1 GB.

       The --sspp option can be used to pause _z_i_p between splits to allow
       changing removable media, for example, but read the descriptions and
       warnings for both --ss and --sspp below.

       Though _z_i_p does not update split archives, _z_i_p provides the new option
       --OO (----oouuttppuutt--ffiillee) to allow split archives to be updated and saved in a
       new archive.  For example,

              zip inarchive.zip foo.c bar.c --out outarchive.zip

       reads archive iinnaarrcchhiivvee..zziipp, even if split, adds the files ffoooo..cc and
       bbaarr..cc, and writes the resulting archive to oouuttaarrcchhiivvee..zziipp.  If
       iinnaarrcchhiivvee..zziipp is split then oouuttaarrcchhiivvee..zziipp defaults to the same split
       size.  Be aware that oouuttaarrcchhiivvee..zziipp and any split files that are
       created with it are always overwritten without warning.  This may be
       changed in the future.





PPAATTTTEERRNN MMAATTCCHHIINNGG
       This section applies only to Unix.  Watch this space for details on
       MSDOS and VMS operation.  However, the special wildcard characters **
       and [[]] below apply to at least MSDOS also.

       The Unix shells (_s_h, _c_s_h, _b_a_s_h, and others) normally do filename
       substitution (also called ""globbing"") on command arguments.  Generally
       the special characters are:

       ??      match any single character

       **      match any number of characters (including none)

       [[]]     match any character in the range indicated within the brackets
              (example: [a-f], [0-9]).  This form of wildcard matching allows
              a user to specify a list of characters between square brackets
              and if any of the characters match the expression matches.  For
              example:

                     zip archive ""*.[hc]""

              would archive all files in the current directory that end in ..hh
              or ..cc.

              Ranges of characters are supported:

                     zip archive ""[a-f]*""

              would add to the archive all files starting with ""a"" through
              ""f"".

              Negation is also supported, where any character in that position
              not in the list matches.  Negation is supported by adding !! or ^^
              to the beginning of the list:

                     zip archive ""*.[!o]""

              matches files that don't end in "".o"".

              On WIN32, [] matching needs to be turned on with the -RE option
              to avoid the confusion that names with [ or ] have caused.


       When these characters are encountered (without being escaped with a
       backslash or quotes), the shell will look for files relative to the
       current path that match the pattern, and replace the argument with a
       list of the names that matched.

       The _z_i_p program can do the same matching on names that are in the _z_i_p
       archive being modified or, in the case of the --xx (exclude) or --ii
       (include) options, on the list of files to be operated on, by using
       backslashes or quotes to tell the shell not to do the name expansion.
       In general, when _z_i_p encounters a name in the list of files to do, it
       first looks for the name in the file system.  If it finds it, it then
       adds it to the list of files to do.  If it does not find it, it looks
       for the name in the _z_i_p archive being modified (if it exists), using
       the pattern matching characters described above, if present.  For each
       match, it will add that name to the list of files to be processed,
       unless this name matches one given with the --xx option, or does not
       match any name given with the --ii option.

       The pattern matching includes the path, and so patterns like \*.o match
       names that end in "".o"", no matter what the path prefix is.  Note that
       the backslash must precede every special character (i.e. ?*[]), or the
       entire argument must be enclosed in double quotes ("""").

       In general, use backslashes or double quotes for paths that have
       wildcards to make _z_i_p do the pattern matching for file paths, and
       always for paths and strings that have spaces or wildcards for --ii, --xx,
       --RR, --dd, and --UU and anywhere _z_i_p needs to process the wildcards.

EENNVVIIRROONNMMEENNTT
       The following environment variables are read and used by _z_i_p as
       described.

       ZZIIPPOOPPTT    
              contains default options that will be used when running _z_i_p.
              The contents of this environment variable will get added to the
              command line just after the zziipp command.

       ZZIIPP          
              [Not on RISC OS and VMS] see ZIPOPT

       ZZiipp$$OOppttiioonnss
              [RISC OS] see ZIPOPT

       ZZiipp$$EExxttss
              [RISC OS] contains extensions separated by a : that will cause
              native filenames with one of the specified extensions to be
              added to the zip file with basename and extension swapped.

       ZZIIPP__OOPPTTSS
              [VMS] see ZIPOPT

SSEEEE AALLSSOO
       compress(1), shar(1L), tar(1), unzip(1L), gzip(1L)

DDIIAAGGNNOOSSTTIICCSS
       The exit status (or error level) approximates the exit codes defined by
       PKWARE and takes on the following values, except under VMS:

              0      normal; no errors or warnings detected.

              2      unexpected end of zip file.

              3      a generic error in the zipfile format was detected.
                     Processing may have completed successfully anyway; some
                     broken zipfiles created by other archivers have simple
                     work-arounds.

              4      _z_i_p was unable to allocate memory for one or more buffers
                     during program initialization.

              5      a severe error in the zipfile format was detected.
                     Processing probably failed immediately.

              6      entry too large to be processed (such as input files
                     larger than 2 GB when not using Zip64 or trying to read
                     an existing archive that is too large) or entry too large
                     to be split with _z_i_p_s_p_l_i_t

              7      invalid comment format

              8      _z_i_p -T failed or out of memory

              9      the user aborted _z_i_p prematurely with control-C (or
                     similar)

              10     _z_i_p encountered an error while using a temp file

              11     read or seek error

              12     _z_i_p has nothing to do

              13     missing or empty zip file

              14     error writing to a file

              15     _z_i_p was unable to create a file to write to

              16     bad command line parameters

              18     _z_i_p could not open a specified file to read

              19     _z_i_p was compiled with options not supported on this
                     system

       VMS interprets standard Unix (or PC) return values as other, scarier-
       looking things, so _z_i_p instead maps them into VMS-style status codes.
       In general, _z_i_p sets VMS Facility = 1955 (0x07A3), Code = 2*
       Unix_status, and an appropriate Severity (as specified in ziperr.h).
       More details are included in the VMS-specific documentation.  See
       [.vms]NOTES.TXT and [.vms]vms_msg_gen.c.

BBUUGGSS
       _z_i_p 3.0 is not compatible with PKUNZIP 1.10. Use _z_i_p 1.1 to produce _z_i_p
       files which can be extracted by PKUNZIP 1.10.

       _z_i_p files produced by _z_i_p 3.0 must not be _u_p_d_a_t_e_d by _z_i_p 1.1 or PKZIP
       1.10, if they contain encrypted members or if they have been produced
       in a pipe or on a non-seekable device. The old versions of _z_i_p or PKZIP
       would create an archive with an incorrect format.  The old versions can
       list the contents of the zip file but cannot extract it anyway (because
       of the new compression algorithm).  If you do not use encryption and
       use regular disk files, you do not have to care about this problem.

       Under VMS, not all of the odd file formats are treated properly.  Only
       stream-LF format _z_i_p files are expected to work with _z_i_p.  Others can
       be converted using Rahul Dhesi's BILF program.  This version of _z_i_p
       handles some of the conversion internally.  When using Kermit to
       transfer zip files from VMS to MSDOS, type ""set file type block"" on
       VMS.  When transfering from MSDOS to VMS, type ""set file type fixed"" on
       VMS.  In both cases, type ""set file type binary"" on MSDOS.

       Under some older VMS versions, _z_i_p may hang for file specifications
       that use DECnet syntax _f_o_o_:_:_*_._*_.

       On OS/2, zip cannot match some names, such as those including an
       exclamation mark or a hash sign.  This is a bug in OS/2 itself: the
       32-bit DosFindFirst/Next don't find such names.  Other programs such as
       GNU tar are also affected by this bug.

       Under OS/2, the amount of Extended Attributes displayed by DIR is (for
       compatibility) the amount returned by the 16-bit version of
       DosQueryPathInfo(). Otherwise OS/2 1.3 and 2.0 would report different
       EA sizes when DIRing a file.  However, the structure layout returned by
       the 32-bit DosQueryPathInfo() is a bit different, it uses extra padding
       bytes and link pointers (it's a linked list) to have all fields on
       4-byte boundaries for portability to future RISC OS/2 versions.
       Therefore the value reported by _z_i_p (which uses this 32-bit-mode size)
       differs from that reported by DIR.  _z_i_p stores the 32-bit format for
       portability, even the 16-bit MS-C-compiled version running on OS/2 1.3,
       so even this one shows the 32-bit-mode size.

AAUUTTHHOORRSS
       Copyright (C) 1997-2008 Info-ZIP.

       Currently distributed under the Info-ZIP license.

       Copyright (C) 1990-1997 Mark Adler, Richard B. Wales, Jean-loup Gailly,
       Onno van der Linden, Kai Uwe Rommel, Igor Mandrichenko, John Bush and
       Paul Kienitz.

       Original copyright:

       Permission is granted to any individual or institution to use, copy, or
       redistribute this software so long as all of the original files are
       included, that it is not sold for profit, and that this copyright
       notice is retained.

       LIKE ANYTHING ELSE THAT'S FREE, ZIP AND ITS ASSOCIATED UTILITIES ARE
       PROVIDED AS IS AND COME WITH NO WARRANTY OF ANY KIND, EITHER EXPRESSED
       OR IMPLIED. IN NO EVENT WILL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
       DAMAGES RESULTING FROM THE USE OF THIS SOFTWARE.

       Please send bug reports and comments using the web page at:
       _w_w_w_._i_n_f_o_-_z_i_p_._o_r_g.  For bug reports, please include the version of _z_i_p
       (see _z_i_p_ _-_h), the make options used to compile it (see _z_i_p_ _-_v), the
       machine and operating system in use, and as much additional information
       as possible.

AACCKKNNOOWWLLEEDDGGEEMMEENNTTSS
       Thanks to R. P. Byrne for his _S_h_r_i_n_k_._P_a_s program, which inspired this
       project, and from which the shrink algorithm was stolen; to Phil Katz
       for placing in the public domain the _z_i_p file format, compression
       format, and .ZIP filename extension, and for accepting minor changes to
       the file format; to Steve Burg for clarifications on the deflate
       format; to Haruhiko Okumura and Leonid Broukhis for providing some
       useful ideas for the compression algorithm; to Keith Petersen, Rich
       Wales, Hunter Goatley and Mark Adler for providing a mailing list and
       _f_t_p site for the Info-ZIP group to use; and most importantly, to the
       Info-ZIP group itself (listed in the file _i_n_f_o_z_i_p_._w_h_o) without whose
       tireless testing and bug-fixing efforts a portable _z_i_p would not have
       been possible.  Finally we should thank (blame) the first Info-ZIP
       moderator, David Kirschbaum, for getting us into this mess in the first
       place.  The manual page was rewritten for Unix by R. P. C. Rodgers and
       updated by E. Gordon for _z_i_p 3.0.

Info-ZIP                      16 June 2008 (v3.0)                      ZIP(1L)
"
unzip,"UNZIP(1L)                                                            UNZIP(1L)

NNAAMMEE
       unzip - list, test and extract compressed files in a ZIP archive

SSYYNNOOPPSSIISS
       uunnzziipp [--ZZ] [--ccffllppttTTuuvvzz[aabbjjnnooqqssCCDDKKLLMMUUVVWWXX$$//::^^]] _f_i_l_e[_._z_i_p] [_f_i_l_e_(_s_) ...]
       [--xx _x_f_i_l_e_(_s_) ...] [--dd _e_x_d_i_r]

DDEESSCCRRIIPPTTIIOONN
       _u_n_z_i_p will list, test, or extract files from a ZIP archive, commonly
       found on MS-DOS systems.  The default behavior (with no options) is to
       extract into the current directory (and subdirectories below it) all
       files from the specified ZIP archive.  A companion program, _z_i_p(1L),
       creates ZIP archives; both programs are compatible with archives
       created by PKWARE's _P_K_Z_I_P and _P_K_U_N_Z_I_P for MS-DOS, but in many cases the
       program options or default behaviors differ.

AARRGGUUMMEENNTTSS
       _f_i_l_e[_._z_i_p]
              Path of the ZIP archive(s).  If the file specification is a
              wildcard, each matching file is processed in an order determined
              by the operating system (or file system).  Only the filename can
              be a wildcard; the path itself cannot.  Wildcard expressions are
              similar to those supported in commonly used Unix shells (_s_h,
              _k_s_h, _c_s_h) and may contain:

              *      matches a sequence of 0 or more characters

              ?      matches exactly 1 character

              [...]  matches any single character found inside the brackets;
                     ranges are specified by a beginning character, a hyphen,
                     and an ending character.  If an exclamation point or a
                     caret (`!' or `^') follows the left bracket, then the
                     range of characters within the brackets is complemented
                     (that is, anything _e_x_c_e_p_t the characters inside the
                     brackets is considered a match).  To specify a verbatim
                     left bracket, the three-character sequence ``[[]'' has to
                     be used.

              (Be sure to quote any character that might otherwise be
              interpreted or modified by the operating system, particularly
              under Unix and VMS.)  If no matches are found, the specification
              is assumed to be a literal filename; and if that also fails, the
              suffix .zip is appended.  Note that self-extracting ZIP files
              are supported, as with any other ZIP archive; just specify the
              .exe suffix (if any) explicitly.

       [_f_i_l_e_(_s_)]
              An optional list of archive members to be processed, separated
              by spaces.  (VMS versions compiled with VMSCLI defined must
              delimit files with commas instead.  See --vv in OOPPTTIIOONNSS below.)
              Regular expressions (wildcards) may be used to match multiple
              members; see above.  Again, be sure to quote expressions that
              would otherwise be expanded or modified by the operating system.

       [--xx _x_f_i_l_e_(_s_)]
              An optional list of archive members to be excluded from
              processing.  Since wildcard characters normally match (`/')
              directory separators (for exceptions see the option --WW), this
              option may be used to exclude any files that are in
              subdirectories.  For example, ``unzip foo *.[ch] -x */*'' would
              extract all C source files in the main directory, but none in
              any subdirectories.  Without the --xx option, all C source files
              in all directories within the zipfile would be extracted.

       [--dd _e_x_d_i_r]
              An optional directory to which to extract files.  By default,
              all files and subdirectories are recreated in the current
              directory; the --dd option allows extraction in an arbitrary
              directory (always assuming one has permission to write to the
              directory).  This option need not appear at the end of the
              command line; it is also accepted before the zipfile
              specification (with the normal options), immediately after the
              zipfile specification, or between the _f_i_l_e_(_s_) and the --xx option.
              The option and directory may be concatenated without any white
              space between them, but note that this may cause normal shell
              behavior to be suppressed.  In particular, ``-d ~'' (tilde) is
              expanded by Unix C shells into the name of the user's home
              directory, but ``-d~'' is treated as a literal subdirectory
              ``~~'' of the current directory.

OOPPTTIIOONNSS
       Note that, in order to support obsolescent hardware, _u_n_z_i_p's usage
       screen is limited to 22 or 23 lines and should therefore be considered
       only a reminder of the basic _u_n_z_i_p syntax rather than an exhaustive
       list of all possible flags.  The exhaustive list follows:

       --ZZ     _z_i_p_i_n_f_o(1L) mode.  If the first option on the command line is
              --ZZ, the remaining options are taken to be _z_i_p_i_n_f_o(1L) options.
              See the appropriate manual page for a description of these
              options.

       --AA     [OS/2, Unix DLL] print extended help for the DLL's programming
              interface (API).

       --cc     extract files to stdout/screen (``CRT'').  This option is
              similar to the --pp option except that the name of each file is
              printed as it is extracted, the --aa option is allowed, and ASCII-
              EBCDIC conversion is automatically performed if appropriate.
              This option is not listed in the _u_n_z_i_p usage screen.

       --ff     freshen existing files, i.e., extract only those files that
              already exist on disk and that are newer than the disk copies.
              By default _u_n_z_i_p queries before overwriting, but the --oo option
              may be used to suppress the queries.  Note that under many
              operating systems, the TZ (timezone) environment variable must
              be set correctly in order for --ff and --uu to work properly (under
              Unix the variable is usually set automatically).  The reasons
              for this are somewhat subtle but have to do with the differences
              between DOS-format file times (always local time) and Unix-
              format times (always in GMT/UTC) and the necessity to compare
              the two.  A typical TZ value is ``PST8PDT'' (US Pacific time
              with automatic adjustment for Daylight Savings Time or ``summer
              time'').

       --ll     list archive files (short format).  The names, uncompressed file
              sizes and modification dates and times of the specified files
              are printed, along with totals for all files specified.  If
              UnZip was compiled with OS2_EAS defined, the --ll option also
              lists columns for the sizes of stored OS/2 extended attributes
              (EAs) and OS/2 access control lists (ACLs).  In addition, the
              zipfile comment and individual file comments (if any) are
              displayed.  If a file was archived from a single-case file
              system (for example, the old MS-DOS FAT file system) and the --LL
              option was given, the filename is converted to lowercase and is
              prefixed with a caret (^).

       --pp     extract files to pipe (stdout).  Nothing but the file data is
              sent to stdout, and the files are always extracted in binary
              format, just as they are stored (no conversions).

       --tt     test archive files.  This option extracts each specified file in
              memory and compares the CRC (cyclic redundancy check, an
              enhanced checksum) of the expanded file with the original file's
              stored CRC value.

       --TT     [most OSes] set the timestamp on the archive(s) to that of the
              newest file in each one.  This corresponds to _z_i_p's --ggoo option
              except that it can be used on wildcard zipfiles (e.g., ``unzip
              -T \*.zip'') and is much faster.

       --uu     update existing files and create new ones if needed.  This
              option performs the same function as the --ff option, extracting
              (with query) files that are newer than those with the same name
              on disk, and in addition it extracts those files that do not
              already exist on disk.  See --ff above for information on setting
              the timezone properly.

       --vv     list archive files (verbose format) or show diagnostic version
              info.  This option has evolved and now behaves as both an option
              and a modifier.  As an option it has two purposes:  when a
              zipfile is specified with no other options, --vv lists archive
              files verbosely, adding to the basic --ll info the compression
              method, compressed size, compression ratio and 32-bit CRC.  In
              contrast to most of the competing utilities, _u_n_z_i_p removes the
              12 additional header bytes of encrypted entries from the
              compressed size numbers.  Therefore, compressed size and
              compression ratio figures are independent of the entry's
              encryption status and show the correct compression performance.
              (The complete size of the encrypted compressed data stream for
              zipfile entries is reported by the more verbose _z_i_p_i_n_f_o(1L)
              reports, see the separate manual.)  When no zipfile is specified
              (that is, the complete command is simply ``unzip -v''), a
              diagnostic screen is printed.  In addition to the normal header
              with release date and version, _u_n_z_i_p lists the home Info-ZIP ftp
              site and where to find a list of other ftp and non-ftp sites;
              the target operating system for which it was compiled, as well
              as (possibly) the hardware on which it was compiled, the
              compiler and version used, and the compilation date; any special
              compilation options that might affect the program's operation
              (see also DDEECCRRYYPPTTIIOONN below); and any options stored in
              environment variables that might do the same (see EENNVVIIRROONNMMEENNTT
              OOPPTTIIOONNSS below).  As a modifier it works in conjunction with
              other options (e.g., --tt) to produce more verbose or debugging
              output; this is not yet fully implemented but will be in future
              releases.

       --zz     display only the archive comment.

MMOODDIIFFIIEERRSS
       --aa     convert text files.  Ordinarily all files are extracted exactly
              as they are stored (as ``binary'' files).  The --aa option causes
              files identified by _z_i_p as text files (those with the `t' label
              in _z_i_p_i_n_f_o listings, rather than `b') to be automatically
              extracted as such, converting line endings, end-of-file
              characters and the character set itself as necessary.  (For
              example, Unix files use line feeds (LFs) for end-of-line (EOL)
              and have no end-of-file (EOF) marker; Macintoshes use carriage
              returns (CRs) for EOLs; and most PC operating systems use CR+LF
              for EOLs and control-Z for EOF.  In addition, IBM mainframes and
              the Michigan Terminal System use EBCDIC rather than the more
              common ASCII character set, and NT supports Unicode.)  Note that
              _z_i_p's identification of text files is by no means perfect; some
              ``text'' files may actually be binary and vice versa.  _u_n_z_i_p
              therefore prints ``[text]'' or ``[binary]'' as a visual check
              for each file it extracts when using the --aa option.  The --aaaa
              option forces all files to be extracted as text, regardless of
              the supposed file type.  On VMS, see also --SS.

       --bb     [general] treat all files as binary (no text conversions).  This
              is a shortcut for ------aa.

       --bb     [Tandem] force the creation files with filecode type 180 ('C')
              when extracting Zip entries marked as ""text"". (On Tandem, --aa is
              enabled by default, see above).

       --bb     [VMS] auto-convert binary files (see --aa above) to fixed-length,
              512-byte record format.  Doubling the option (--bbbb) forces all
              files to be extracted in this format. When extracting to
              standard output (--cc or --pp option in effect), the default
              conversion of text record delimiters is disabled for binary (--bb)
              resp. all (--bbbb) files.

       --BB     [when compiled with UNIXBACKUP defined] save a backup copy of
              each overwritten file. The backup file is gets the name of the
              target file with a tilde and optionally a unique sequence number
              (up to 5 digits) appended.  The sequence number is applied
              whenever another file with the original name plus tilde already
              exists.  When used together with the ""overwrite all"" option --oo,
              numbered backup files are never created. In this case, all
              backup files are named as the original file with an appended
              tilde, existing backup files are deleted without notice.  This
              feature works similarly to the default behavior of _e_m_a_c_s(1) in
              many locations.

              Example: the old copy of ``foo'' is renamed to ``foo~''.

              Warning: Users should be aware that the --BB option does not
              prevent loss of existing data under all circumstances.  For
              example, when _u_n_z_i_p is run in overwrite-all mode, an existing
              ``foo~'' file is deleted before _u_n_z_i_p attempts to rename ``foo''
              to ``foo~''.  When this rename attempt fails (because of a file
              locks, insufficient privileges, or ...), the extraction of
              ``foo~'' gets cancelled, but the old backup file is already
              lost.  A similar scenario takes place when the sequence number
              range for numbered backup files gets exhausted (99999, or 65535
              for 16-bit systems).  In this case, the backup file with the
              maximum sequence number is deleted and replaced by the new
              backup version without notice.

       --CC     use case-insensitive matching for the selection of archive
              entries from the command-line list of extract selection
              patterns.  _u_n_z_i_p's philosophy is ``you get what you ask for''
              (this is also responsible for the --LL/--UU change; see the relevant
              options below).  Because some file systems are fully case-
              sensitive (notably those under the Unix operating system) and
              because both ZIP archives and _u_n_z_i_p itself are portable across
              platforms, _u_n_z_i_p's default behavior is to match both wildcard
              and literal filenames case-sensitively.  That is, specifying
              ``makefile'' on the command line will _o_n_l_y match ``makefile'' in
              the archive, not ``Makefile'' or ``MAKEFILE'' (and similarly for
              wildcard specifications).  Since this does not correspond to the
              behavior of many other operating/file systems (for example, OS/2
              HPFS, which preserves mixed case but is not sensitive to it),
              the --CC option may be used to force all filename matches to be
              case-insensitive.  In the example above, all three files would
              then match ``makefile'' (or ``make*'', or similar).  The --CC
              option affects file specs in both the normal file list and the
              excluded-file list (xlist).

              Please note that the --CC option does neither affect the search
              for the zipfile(s) nor the matching of archive entries to
              existing files on the extraction path.  On a case-sensitive file
              system, _u_n_z_i_p will never try to overwrite a file ``FOO'' when
              extracting an entry ``foo''!

       --DD     skip restoration of timestamps for extracted items.  Normally,
              _u_n_z_i_p tries to restore all meta-information for extracted items
              that are supplied in the Zip archive (and do not require
              privileges or impose a security risk).  By specifying --DD, _u_n_z_i_p
              is told to suppress restoration of timestamps for directories
              explicitly created from Zip archive entries.  This option only
              applies to ports that support setting timestamps for directories
              (currently ATheOS, BeOS, MacOS, OS/2, Unix, VMS, Win32, for
              other _u_n_z_i_p ports, --DD has no effect).  The duplicated option --DDDD
              forces suppression of timestamp restoration for all extracted
              entries (files and directories).  This option results in setting
              the timestamps for all extracted entries to the current time.

              On VMS, the default setting for this option is --DD for
              consistency with the behaviour of BACKUP: file timestamps are
              restored, timestamps of extracted directories are left at the
              current time.  To enable restoration of directory timestamps,
              the negated option ----DD should be specified.  On VMS, the option
              --DD disables timestamp restoration for all extracted Zip archive
              items.  (Here, a single --DD on the command line combines with the
              default --DD to do what an explicit --DDDD does on other systems.)

       --FF     [Acorn only] suppress removal of NFS filetype extension from
              stored filenames.

       --FF     [non-Acorn systems supporting long filenames with embedded
              commas, and only if compiled with ACORN_FTYPE_NFS defined]
              translate filetype information from ACORN RISC OS extra field
              blocks into a NFS filetype extension and append it to the names
              of the extracted files.  (When the stored filename appears to
              already have an appended NFS filetype extension, it is replaced
              by the info from the extra field.)

       --jj     junk paths.  The archive's directory structure is not recreated;
              all files are deposited in the extraction directory (by default,
              the current one).

       --JJ     [BeOS only] junk file attributes.  The file's BeOS file
              attributes are not restored, just the file's data.

       --KK     [AtheOS, BeOS, Unix only] retain SUID/SGID/Tacky file
              attributes.  Without this flag, these attribute bits are cleared
              for security reasons.

       --LL     convert to lowercase any filename originating on an uppercase-
              only operating system or file system.  (This was _u_n_z_i_p's default
              behavior in releases prior to 5.11; the new default behavior is
              identical to the old behavior with the --UU option, which is now
              obsolete and will be removed in a future release.)  Depending on
              the archiver, files archived under single-case file systems
              (VMS, old MS-DOS FAT, etc.) may be stored as all-uppercase
              names; this can be ugly or inconvenient when extracting to a
              case-preserving file system such as OS/2 HPFS or a case-
              sensitive one such as under Unix.  By default _u_n_z_i_p lists and
              extracts such filenames exactly as they're stored (excepting
              truncation, conversion of unsupported characters, etc.); this
              option causes the names of all files from certain systems to be
              converted to lowercase.  The --LLLL option forces conversion of
              every filename to lowercase, regardless of the originating file
              system.

       --MM     pipe all output through an internal pager similar to the Unix
              _m_o_r_e(1) command.  At the end of a screenful of output, _u_n_z_i_p
              pauses with a ``--More--'' prompt; the next screenful may be
              viewed by pressing the Enter (Return) key or the space bar.
              _u_n_z_i_p can be terminated by pressing the ``q'' key and, on some
              systems, the Enter/Return key.  Unlike Unix _m_o_r_e(1), there is no
              forward-searching or editing capability.  Also, _u_n_z_i_p doesn't
              notice if long lines wrap at the edge of the screen, effectively
              resulting in the printing of two or more lines and the
              likelihood that some text will scroll off the top of the screen
              before being viewed.  On some systems the number of available
              lines on the screen is not detected, in which case _u_n_z_i_p assumes
              the height is 24 lines.

       --nn     never overwrite existing files.  If a file already exists, skip
              the extraction of that file without prompting.  By default _u_n_z_i_p
              queries before extracting any file that already exists; the user
              may choose to overwrite only the current file, overwrite all
              files, skip extraction of the current file, skip extraction of
              all existing files, or rename the current file.

       --NN     [Amiga] extract file comments as Amiga filenotes.  File comments
              are created with the -c option of _z_i_p(1L), or with the -N option
              of the Amiga port of _z_i_p(1L), which stores filenotes as
              comments.

       --oo     overwrite existing files without prompting.  This is a dangerous
              option, so use it with care.  (It is often used with --ff,
              however, and is the only way to overwrite directory EAs under
              OS/2.)

       --PP _p_a_s_s_w_o_r_d
              use _p_a_s_s_w_o_r_d to decrypt encrypted zipfile entries (if any).
              TTHHIISS IISS IINNSSEECCUURREE!!  Many multi-user operating systems provide
              ways for any user to see the current command line of any other
              user; even on stand-alone systems there is always the threat of
              over-the-shoulder peeking.  Storing the plaintext password as
              part of a command line in an automated script is even worse.
              Whenever possible, use the non-echoing, interactive prompt to
              enter passwords.  (And where security is truly important, use
              strong encryption such as Pretty Good Privacy instead of the
              relatively weak encryption provided by standard zipfile
              utilities.)

       --qq     perform operations quietly (--qqqq = even quieter).  Ordinarily
              _u_n_z_i_p prints the names of the files it's extracting or testing,
              the extraction methods, any file or zipfile comments that may be
              stored in the archive, and possibly a summary when finished with
              each archive.  The --qq[qq] options suppress the printing of some
              or all of these messages.

       --ss     [OS/2, NT, MS-DOS] convert spaces in filenames to underscores.
              Since all PC operating systems allow spaces in filenames, _u_n_z_i_p
              by default extracts filenames with spaces intact (e.g.,
              ``EA DATA. SF'').  This can be awkward, however, since MS-DOS in
              particular does not gracefully support spaces in filenames.
              Conversion of spaces to underscores can eliminate the
              awkwardness in some cases.

       --SS     [VMS] convert text files (--aa, --aaaa) into Stream_LF record format,
              instead of the text-file default, variable-length record format.
              (Stream_LF is the default record format of VMS _u_n_z_i_p. It is
              applied unless conversion (--aa, --aaaa and/or --bb, --bbbb) is requested
              or a VMS-specific entry is processed.)

       --UU     [UNICODE_SUPPORT only] modify or disable UTF-8 handling.  When
              UNICODE_SUPPORT is available, the option --UU forces _u_n_z_i_p to
              escape all non-ASCII characters from UTF-8 coded filenames as
              ``#Uxxxx'' (for UCS-2 characters, or ``#Lxxxxxx'' for unicode
              codepoints needing 3 octets).  This option is mainly provided
              for debugging purpose when the fairly new UTF-8 support is
              suspected to mangle up extracted filenames.

              The option --UUUU allows to entirely disable the recognition of
              UTF-8 encoded filenames.  The handling of filename codings
              within _u_n_z_i_p falls back to the behaviour of previous versions.

              [old, obsolete usage] leave filenames uppercase if created under
              MS-DOS, VMS, etc.  See --LL above.

       --VV     retain (VMS) file version numbers.  VMS files can be stored with
              a version number, in the format file.ext;##.  By default the
              ``;##'' version numbers are stripped, but this option allows
              them to be retained.  (On file systems that limit filenames to
              particularly short lengths, the version numbers may be truncated
              or stripped regardless of this option.)

       --WW     [only when WILD_STOP_AT_DIR compile-time option enabled]
              modifies the pattern matching routine so that both `?' (single-
              char wildcard) and `*' (multi-char wildcard) do not match the
              directory separator character `/'.  (The two-character sequence
              ``**'' acts as a multi-char wildcard that includes the directory
              separator in its matched characters.)  Examples:

           ""*.c"" matches ""foo.c"" but not ""mydir/foo.c""
           ""**.c"" matches both ""foo.c"" and ""mydir/foo.c""
           ""*/*.c"" matches ""bar/foo.c"" but not ""baz/bar/foo.c""
           ""??*/*"" matches ""ab/foo"" and ""abc/foo""
                   but not ""a/foo"" or ""a/b/foo""

              This modified behaviour is equivalent to the pattern matching
              style used by the shells of some of UnZip's supported target OSs
              (one example is Acorn RISC OS).  This option may not be
              available on systems where the Zip archive's internal directory
              separator character `/' is allowed as regular character in
              native operating system filenames.  (Currently, UnZip uses the
              same pattern matching rules for both wildcard zipfile
              specifications and zip entry selection patterns in most ports.
              For systems allowing `/' as regular filename character, the -W
              option would not work as expected on a wildcard zipfile
              specification.)

       --XX     [VMS, Unix, OS/2, NT, Tandem] restore owner/protection info
              (UICs and ACL entries) under VMS, or user and group info
              (UID/GID) under Unix, or access control lists (ACLs) under
              certain network-enabled versions of OS/2 (Warp Server with IBM
              LAN Server/Requester 3.0 to 5.0; Warp Connect with IBM Peer
              1.0), or security ACLs under Windows NT.  In most cases this
              will require special system privileges, and doubling the option
              (--XXXX) under NT instructs _u_n_z_i_p to use privileges for extraction;
              but under Unix, for example, a user who belongs to several
              groups can restore files owned by any of those groups, as long
              as the user IDs match his or her own.  Note that ordinary file
              attributes are always restored--this option applies only to
              optional, extra ownership info available on some operating
              systems.  [NT's access control lists do not appear to be
              especially compatible with OS/2's, so no attempt is made at
              cross-platform portability of access privileges.  It is not
              clear under what conditions this would ever be useful anyway.]

       --YY     [VMS] treat archived file name endings of ``.nnn'' (where
              ``nnn'' is a decimal  number) as if they were VMS version
              numbers (``;nnn'').  (The default is to treat them as file
              types.)  Example:
                   ""a.b.3"" -> ""a.b;3"".

       --$$     [MS-DOS, OS/2, NT] restore the volume label if the extraction
              medium is removable (e.g., a diskette).  Doubling the option
              (--$$$$) allows fixed media (hard disks) to be labelled as well.
              By default, volume labels are ignored.

       --// _e_x_t_e_n_s_i_o_n_s
              [Acorn only] overrides the extension list supplied by Unzip$Ext
              environment variable. During extraction, filename extensions
              that match one of the items in this extension list are swapped
              in front of the base name of the extracted file.

       --::     [all but Acorn, VM/CMS, MVS, Tandem] allows to extract archive
              members into locations outside of the current `` extraction root
              folder''. For security reasons, _u_n_z_i_p normally removes ``parent
              dir'' path components (``../'') from the names of extracted
              file.  This safety feature (new for version 5.50) prevents _u_n_z_i_p
              from accidentally writing files to ``sensitive'' areas outside
              the active extraction folder tree head.  The --:: option lets
              _u_n_z_i_p switch back to its previous, more liberal behaviour, to
              allow exact extraction of (older) archives that used ``../''
              components to create multiple directory trees at the level of
              the current extraction folder.  This option does not enable
              writing explicitly to the root directory (``/'').  To achieve
              this, it is necessary to set the extraction target folder to
              root (e.g. --dd // ).  However, when the --:: option is specified, it
              is still possible to implicitly write to the root directory by
              specifying enough ``../'' path components within the zip
              archive.  Use this option with extreme caution.

       --^^     [Unix only] allow control characters in names of extracted ZIP
              archive entries.  On Unix, a file name may contain any (8-bit)
              character code with the two exception '/' (directory delimiter)
              and NUL (0x00, the C string termination indicator), unless the
              specific file system has more restrictive conventions.
              Generally, this allows to embed ASCII control characters (or
              even sophisticated control sequences) in file names, at least on
              'native' Unix file systems.  However, it may be highly
              suspicious to make use of this Unix ""feature"".  Embedded control
              characters in file names might have nasty side effects when
              displayed on screen by some listing code without sufficient
              filtering.  And, for ordinary users, it may be difficult to
              handle such file names (e.g. when trying to specify it for open,
              copy, move, or delete operations).  Therefore, _u_n_z_i_p applies a
              filter by default that removes potentially dangerous control
              characters from the extracted file names. The --^^ option allows
              to override this filter in the rare case that embedded filename
              control characters are to be intentionally restored.

       --22     [VMS] force unconditionally conversion of file names to
              ODS2-compatible names.  The default is to exploit the
              destination file system, preserving case and extended file name
              characters on an ODS5 destination file system; and applying the
              ODS2-compatibility file name filtering on an ODS2 destination
              file system.

EENNVVIIRROONNMMEENNTT OOPPTTIIOONNSS
       _u_n_z_i_p's default behavior may be modified via options placed in an
       environment variable.  This can be done with any option, but it is
       probably most useful with the --aa, --LL, --CC, --qq, --oo, or --nn modifiers:
       make _u_n_z_i_p auto-convert text files by default, make it convert
       filenames from uppercase systems to lowercase, make it match names
       case-insensitively, make it quieter, or make it always overwrite or
       never overwrite files as it extracts them.  For example, to make _u_n_z_i_p
       act as quietly as possible, only reporting errors, one would use one of
       the following commands:

         Unix Bourne shell:
              UNZIP=-qq; export UNZIP

         Unix C shell:
              setenv UNZIP -qq

         OS/2 or MS-DOS:
              set UNZIP=-qq

         VMS (quotes for _l_o_w_e_r_c_a_s_e):
              define UNZIP_OPTS ""-qq""

       Environment options are, in effect, considered to be just like any
       other command-line options, except that they are effectively the first
       options on the command line.  To override an environment option, one
       may use the ``minus operator'' to remove it.  For instance, to override
       one of the quiet-flags in the example above, use the command

       unzip --q[_o_t_h_e_r _o_p_t_i_o_n_s] zipfile

       The first hyphen is the normal switch character, and the second is a
       minus sign, acting on the q option.  Thus the effect here is to cancel
       one quantum of quietness.  To cancel both quiet flags, two (or more)
       minuses may be used:

       unzip -t--q zipfile
       unzip ---qt zipfile

       (the two are equivalent).  This may seem awkward or confusing, but it
       is reasonably intuitive:  just ignore the first hyphen and go from
       there.  It is also consistent with the behavior of Unix _n_i_c_e(1).

       As suggested by the examples above, the default variable names are
       UNZIP_OPTS for VMS (where the symbol used to install _u_n_z_i_p as a foreign
       command would otherwise be confused with the environment variable), and
       UNZIP for all other operating systems.  For compatibility with _z_i_p(1L),
       UNZIPOPT is also accepted (don't ask).  If both UNZIP and UNZIPOPT are
       defined, however, UNZIP takes precedence.  _u_n_z_i_p's diagnostic option
       (--vv with no zipfile name) can be used to check the values of all four
       possible _u_n_z_i_p and _z_i_p_i_n_f_o environment variables.

       The timezone variable (TZ) should be set according to the local
       timezone in order for the --ff and --uu to operate correctly.  See the
       description of --ff above for details.  This variable may also be
       necessary to get timestamps of extracted files to be set correctly.
       The WIN32 (Win9x/ME/NT4/2K/XP/2K3) port of _u_n_z_i_p gets the timezone
       configuration from the registry, assuming it is correctly set in the
       Control Panel.  The TZ variable is ignored for this port.

DDEECCRRYYPPTTIIOONN
       Encrypted archives are fully supported by Info-ZIP software, but due to
       United States export restrictions, de-/encryption support might be
       disabled in your compiled binary.  However, since spring 2000, US
       export restrictions have been liberated, and our source archives do now
       include full crypt code.  In case you need binary distributions with
       crypt support enabled, see the file ``WHERE'' in any Info-ZIP source or
       binary distribution for locations both inside and outside the US.

       Some compiled versions of _u_n_z_i_p may not support decryption.  To check a
       version for crypt support, either attempt to test or extract an
       encrypted archive, or else check _u_n_z_i_p's diagnostic screen (see the --vv
       option above) for ``[decryption]'' as one of the special compilation
       options.

       As noted above, the --PP option may be used to supply a password on the
       command line, but at a cost in security.  The preferred decryption
       method is simply to extract normally; if a zipfile member is encrypted,
       _u_n_z_i_p will prompt for the password without echoing what is typed.
       _u_n_z_i_p continues to use the same password as long as it appears to be
       valid, by testing a 12-byte header on each file.  The correct password
       will always check out against the header, but there is a 1-in-256
       chance that an incorrect password will as well.  (This is a security
       feature of the PKWARE zipfile format; it helps prevent brute-force
       attacks that might otherwise gain a large speed advantage by testing
       only the header.)  In the case that an incorrect password is given but
       it passes the header test anyway, either an incorrect CRC will be
       generated for the extracted data or else _u_n_z_i_p will fail during the
       extraction because the ``decrypted'' bytes do not constitute a valid
       compressed data stream.

       If the first password fails the header check on some file, _u_n_z_i_p will
       prompt for another password, and so on until all files are extracted.
       If a password is not known, entering a null password (that is, just a
       carriage return or ``Enter'') is taken as a signal to skip all further
       prompting.  Only unencrypted files in the archive(s) will thereafter be
       extracted.  (In fact, that's not quite true; older versions of _z_i_p(1L)
       and _z_i_p_c_l_o_a_k(1L) allowed null passwords, so _u_n_z_i_p checks each encrypted
       file to see if the null password works.  This may result in ``false
       positives'' and extraction errors, as noted above.)

       Archives encrypted with 8-bit passwords (for example, passwords with
       accented European characters) may not be portable across systems and/or
       other archivers.  This problem stems from the use of multiple encoding
       methods for such characters, including Latin-1 (ISO 8859-1) and OEM
       code page 850.  DOS _P_K_Z_I_P 2.04g uses the OEM code page; Windows _P_K_Z_I_P
       2.50 uses Latin-1 (and is therefore incompatible with DOS _P_K_Z_I_P); Info-
       ZIP uses the OEM code page on DOS, OS/2 and Win3.x ports but ISO coding
       (Latin-1 etc.) everywhere else; and Nico Mak's _W_i_n_Z_i_p 6.x does not
       allow 8-bit passwords at all.  _U_n_Z_i_p 5.3 (or newer) attempts to use the
       default character set first (e.g., Latin-1), followed by the alternate
       one (e.g., OEM code page) to test passwords.  On EBCDIC systems, if
       both of these fail, EBCDIC encoding will be tested as a last resort.
       (EBCDIC is not tested on non-EBCDIC systems, because there are no known
       archivers that encrypt using EBCDIC encoding.)  ISO character encodings
       other than Latin-1 are not supported.  The new addition of (partially)
       Unicode (resp.  UTF-8) support in _U_n_Z_i_p 6.0 has not yet been adapted to
       the encryption password handling in _u_n_z_i_p.  On systems that use UTF-8
       as native character encoding, _u_n_z_i_p simply tries decryption with the
       native UTF-8 encoded password; the built-in attempts to check the
       password in translated encoding have not yet been adapted for UTF-8
       support and will consequently fail.

EEXXAAMMPPLLEESS
       To use _u_n_z_i_p to extract all members of the archive _l_e_t_t_e_r_s_._z_i_p into the
       current directory and subdirectories below it, creating any
       subdirectories as necessary:

       unzip letters

       To extract all members of _l_e_t_t_e_r_s_._z_i_p into the current directory only:

       unzip -j letters

       To test _l_e_t_t_e_r_s_._z_i_p, printing only a summary message indicating whether
       the archive is OK or not:

       unzip -tq letters

       To test _a_l_l zipfiles in the current directory, printing only the
       summaries:

       unzip -tq \*.zip

       (The backslash before the asterisk is only required if the shell
       expands wildcards, as in Unix; double quotes could have been used
       instead, as in the source examples below.)  To extract to standard
       output all members of _l_e_t_t_e_r_s_._z_i_p whose names end in _._t_e_x, auto-
       converting to the local end-of-line convention and piping the output
       into _m_o_r_e(1):

       unzip -ca letters \*.tex | more

       To extract the binary file _p_a_p_e_r_1_._d_v_i to standard output and pipe it to
       a printing program:

       unzip -p articles paper1.dvi | dvips

       To extract all FORTRAN and C source files--*.f, *.c, *.h, and
       Makefile--into the /tmp directory:

       unzip source.zip ""*.[fch]"" Makefile -d /tmp

       (the double quotes are necessary only in Unix and only if globbing is
       turned on).  To extract all FORTRAN and C source files, regardless of
       case (e.g., both *.c and *.C, and any makefile, Makefile, MAKEFILE or
       similar):

       unzip -C source.zip ""*.[fch]"" makefile -d /tmp

       To extract any such files but convert any uppercase MS-DOS or VMS names
       to lowercase and convert the line-endings of all of the files to the
       local standard (without respect to any files that might be marked
       ``binary''):

       unzip -aaCL source.zip ""*.[fch]"" makefile -d /tmp

       To extract only newer versions of the files already in the current
       directory, without querying (NOTE:  be careful of unzipping in one
       timezone a zipfile created in another--ZIP archives other than those
       created by Zip 2.1 or later contain no timezone information, and a
       ``newer'' file from an eastern timezone may, in fact, be older):

       unzip -fo sources

       To extract newer versions of the files already in the current directory
       and to create any files not already there (same caveat as previous
       example):

       unzip -uo sources

       To display a diagnostic screen showing which _u_n_z_i_p and _z_i_p_i_n_f_o options
       are stored in environment variables, whether decryption support was
       compiled in, the compiler with which _u_n_z_i_p was compiled, etc.:

       unzip -v

       In the last five examples, assume that UNZIP or UNZIP_OPTS is set to
       -q.  To do a singly quiet listing:

       unzip -l file.zip

       To do a doubly quiet listing:

       unzip -ql file.zip

       (Note that the ``.zip'' is generally not necessary.)  To do a standard
       listing:

       unzip --ql file.zip
       or
       unzip -l-q file.zip
       or
       unzip -l--q file.zip
       (Extra minuses in options don't hurt.)

TTIIPPSS
       The current maintainer, being a lazy sort, finds it very useful to
       define a pair of aliases:  tt for ``unzip -tq'' and ii for ``unzip -Z''
       (or ``zipinfo'').  One may then simply type ``tt zipfile'' to test an
       archive, something that is worth making a habit of doing.  With luck
       _u_n_z_i_p will report ``No errors detected in compressed data of
       zipfile.zip,'' after which one may breathe a sigh of relief.

       The maintainer also finds it useful to set the UNZIP environment
       variable to ``-aL'' and is tempted to add ``-C'' as well.  His ZIPINFO
       variable is set to ``-z''.

DDIIAAGGNNOOSSTTIICCSS
       The exit status (or error level) approximates the exit codes defined by
       PKWARE and takes on the following values, except under VMS:

              0      normal; no errors or warnings detected.

              1      one or more warning errors were encountered, but
                     processing completed successfully anyway.  This includes
                     zipfiles where one or more files was skipped due to
                     unsupported compression method or encryption with an
                     unknown password.

              2      a generic error in the zipfile format was detected.
                     Processing may have completed successfully anyway; some
                     broken zipfiles created by other archivers have simple
                     work-arounds.

              3      a severe error in the zipfile format was detected.
                     Processing probably failed immediately.

              4      _u_n_z_i_p was unable to allocate memory for one or more
                     buffers during program initialization.

              5      _u_n_z_i_p was unable to allocate memory or unable to obtain a
                     tty to read the decryption password(s).

              6      _u_n_z_i_p was unable to allocate memory during decompression
                     to disk.

              7      _u_n_z_i_p was unable to allocate memory during in-memory
                     decompression.

              8      [currently not used]

              9      the specified zipfiles were not found.

              10     invalid options were specified on the command line.

              11     no matching files were found.

              50     the disk is (or was) full during extraction.

              51     the end of the ZIP archive was encountered prematurely.

              80     the user aborted _u_n_z_i_p prematurely with control-C (or
                     similar)

              81     testing or extraction of one or more files failed due to
                     unsupported compression methods or unsupported
                     decryption.

              82     no files were found due to bad decryption password(s).
                     (If even one file is successfully processed, however, the
                     exit status is 1.)

       VMS interprets standard Unix (or PC) return values as other, scarier-
       looking things, so _u_n_z_i_p instead maps them into VMS-style status codes.
       The current mapping is as follows:   1 (success) for normal exit,
       0x7fff0001 for warning errors, and (0x7fff000? +
       16*normal_unzip_exit_status) for all other errors, where the `?' is 2
       (error) for _u_n_z_i_p values 2, 9-11 and 80-82, and 4 (fatal error) for the
       remaining ones (3-8, 50, 51).  In addition, there is a compilation
       option to expand upon this behavior:  defining RETURN_CODES results in
       a human-readable explanation of what the error status means.

BBUUGGSS
       Multi-part archives are not yet supported, except in conjunction with
       _z_i_p.  (All parts must be concatenated together in order, and then ``zip
       -F'' (for _z_i_p _2_._x) or ``zip -FF'' (for _z_i_p _3_._x) must be performed on
       the concatenated archive in order to ``fix'' it.  Also, _z_i_p _3_._0 and
       later can combine multi-part (split) archives into a combined single-
       file archive using ``zip -s- inarchive -O outarchive''.  See the _z_i_p _3
       manual page for more information.)  This will definitely be corrected
       in the next major release.

       Archives read from standard input are not yet supported, except with
       _f_u_n_z_i_p (and then only the first member of the archive can be
       extracted).

       Archives encrypted with 8-bit passwords (e.g., passwords with accented
       European characters) may not be portable across systems and/or other
       archivers.  See the discussion in DDEECCRRYYPPTTIIOONN above.

       _u_n_z_i_p's --MM (``more'') option tries to take into account automatic
       wrapping of long lines. However, the code may fail to detect the
       correct wrapping locations. First, TAB characters (and similar control
       sequences) are not taken into account, they are handled as ordinary
       printable characters.  Second, depending on the actual system / OS
       port, _u_n_z_i_p may not detect the true screen geometry but rather rely on
       ""commonly used"" default dimensions.  The correct handling of tabs would
       require the implementation of a query for the actual tabulator setup on
       the output console.

       Dates, times and permissions of stored directories are not restored
       except under Unix. (On Windows NT and successors, timestamps are now
       restored.)

       [MS-DOS] When extracting or testing files from an archive on a
       defective floppy diskette, if the ``Fail'' option is chosen from DOS's
       ``Abort, Retry, Fail?'' message, older versions of _u_n_z_i_p may hang the
       system, requiring a reboot.  This problem appears to be fixed, but
       control-C (or control-Break) can still be used to terminate _u_n_z_i_p.

       Under DEC Ultrix, _u_n_z_i_p would sometimes fail on long zipfiles (bad CRC,
       not always reproducible).  This was apparently due either to a hardware
       bug (cache memory) or an operating system bug (improper handling of
       page faults?).  Since Ultrix has been abandoned in favor of Digital
       Unix (OSF/1), this may not be an issue anymore.

       [Unix] Unix special files such as FIFO buffers (named pipes), block
       devices and character devices are not restored even if they are somehow
       represented in the zipfile, nor are hard-linked files relinked.
       Basically the only file types restored by _u_n_z_i_p are regular files,
       directories and symbolic (soft) links.

       [OS/2] Extended attributes for existing directories are only updated if
       the --oo (``overwrite all'') option is given.  This is a limitation of
       the operating system; because directories only have a creation time
       associated with them, _u_n_z_i_p has no way to determine whether the stored
       attributes are newer or older than those on disk.  In practice this may
       mean a two-pass approach is required:  first unpack the archive
       normally (with or without freshening/updating existing files), then
       overwrite just the directory entries (e.g., ``unzip -o foo */'').

       [VMS] When extracting to another directory, only the _[_._f_o_o_] syntax is
       accepted for the --dd option; the simple Unix _f_o_o syntax is silently
       ignored (as is the less common VMS _f_o_o_._d_i_r syntax).

       [VMS] When the file being extracted already exists, _u_n_z_i_p's query only
       allows skipping, overwriting or renaming; there should additionally be
       a choice for creating a new version of the file.  In fact, the
       ``overwrite'' choice does create a new version; the old version is not
       overwritten or deleted.

SSEEEE AALLSSOO
       _f_u_n_z_i_p(1L), _z_i_p(1L), _z_i_p_c_l_o_a_k(1L), _z_i_p_g_r_e_p(1L), _z_i_p_i_n_f_o(1L),
       _z_i_p_n_o_t_e(1L), _z_i_p_s_p_l_i_t(1L)

UURRLL
       The Info-ZIP home page is currently at
       http://www.info-zip.org/pub/infozip/
       or
       ftp://ftp.info-zip.org/pub/infozip/ .

AAUUTTHHOORRSS
       The primary Info-ZIP authors (current semi-active members of the Zip-
       Bugs workgroup) are:  Ed Gordon (Zip, general maintenance, shared code,
       Zip64, Win32, Unix, Unicode); Christian Spieler (UnZip maintenance
       coordination, VMS, MS-DOS, Win32, shared code, general Zip and UnZip
       integration and optimization); Onno van der Linden (Zip); Mike White
       (Win32, Windows GUI, Windows DLLs); Kai Uwe Rommel (OS/2, Win32);
       Steven M. Schweda (VMS, Unix, support of new features); Paul Kienitz
       (Amiga, Win32, Unicode); Chris Herborth (BeOS, QNX, Atari); Jonathan
       Hudson (SMS/QDOS); Sergio Monesi (Acorn RISC OS); Harald Denker (Atari,
       MVS); John Bush (Solaris, Amiga); Hunter Goatley (VMS, Info-ZIP Site
       maintenance); Steve Salisbury (Win32); Steve Miller (Windows CE GUI),
       Johnny Lee (MS-DOS, Win32, Zip64); and Dave Smith (Tandem NSK).

       The following people were former members of the Info-ZIP development
       group and provided major contributions to key parts of the current
       code: Greg ``Cave Newt'' Roelofs (UnZip, unshrink decompression); Jean-
       loup Gailly (deflate compression); Mark Adler (inflate decompression,
       fUnZip).

       The author of the original unzip code upon which Info-ZIP's was based
       is Samuel H. Smith; Carl Mascott did the first Unix port; and David P.
       Kirschbaum organized and led Info-ZIP in its early days with Keith
       Petersen hosting the original mailing list at WSMR-SimTel20.  The full
       list of contributors to UnZip has grown quite large; please refer to
       the CONTRIBS file in the UnZip source distribution for a relatively
       complete version.

VVEERRSSIIOONNSS
       v1.2   15 Mar 89
       Samuel H. Smith
       v2.0    9 Sep 89
       Samuel H. Smith
       v2.x   fall 1989
       many Usenet contributors
       v3.0    1 May 90
       Info-ZIP (DPK, consolidator)
       v3.1   15 Aug 90
       Info-ZIP (DPK, consolidator)
       v4.0    1 Dec 90
       Info-ZIP (GRR, maintainer)
       v4.1   12 May 91
       Info-ZIP
       v4.2   20 Mar 92
       Info-ZIP (Zip-Bugs subgroup, GRR)
       v5.0   21 Aug 92
       Info-ZIP (Zip-Bugs subgroup, GRR)
       v5.01  15 Jan 93
       Info-ZIP (Zip-Bugs subgroup, GRR)
       v5.1    7 Feb 94
       Info-ZIP (Zip-Bugs subgroup, GRR)
       v5.11   2 Aug 94
       Info-ZIP (Zip-Bugs subgroup, GRR)
       v5.12  28 Aug 94
       Info-ZIP (Zip-Bugs subgroup, GRR)
       v5.2   30 Apr 96
       Info-ZIP (Zip-Bugs subgroup, GRR)
       v5.3   22 Apr 97
       Info-ZIP (Zip-Bugs subgroup, GRR)
       v5.31  31 May 97
       Info-ZIP (Zip-Bugs subgroup, GRR)
       v5.32   3 Nov 97
       Info-ZIP (Zip-Bugs subgroup, GRR)
       v5.4   28 Nov 98
       Info-ZIP (Zip-Bugs subgroup, SPC)
       v5.41  16 Apr 00
       Info-ZIP (Zip-Bugs subgroup, SPC)
       v5.42  14 Jan 01
       Info-ZIP (Zip-Bugs subgroup, SPC)
       v5.5   17 Feb 02
       Info-ZIP (Zip-Bugs subgroup, SPC)
       v5.51  22 May 04
       Info-ZIP (Zip-Bugs subgroup, SPC)
       v5.52  28 Feb 05
       Info-ZIP (Zip-Bugs subgroup, SPC)
       v6.0   20 Apr 09
       Info-ZIP (Zip-Bugs subgroup, SPC)

Info-ZIP                     20 April 2009 (v6.0)                    UNZIP(1L)
"
ssh,"SSH(1)                      General Commands Manual                     SSH(1)

NNAAMMEE
     sssshh – OpenSSH remote login client

SSYYNNOOPPSSIISS
     sssshh [--4466AAaaCCffGGggKKkkMMNNnnqqssTTttVVvvXXxxYYyy] [--BB _b_i_n_d___i_n_t_e_r_f_a_c_e] [--bb _b_i_n_d___a_d_d_r_e_s_s]
         [--cc _c_i_p_h_e_r___s_p_e_c] [--DD [_b_i_n_d___a_d_d_r_e_s_s:]_p_o_r_t] [--EE _l_o_g___f_i_l_e]
         [--ee _e_s_c_a_p_e___c_h_a_r] [--FF _c_o_n_f_i_g_f_i_l_e] [--II _p_k_c_s_1_1] [--ii _i_d_e_n_t_i_t_y___f_i_l_e]
         [--JJ _d_e_s_t_i_n_a_t_i_o_n] [--LL _a_d_d_r_e_s_s] [--ll _l_o_g_i_n___n_a_m_e] [--mm _m_a_c___s_p_e_c]
         [--OO _c_t_l___c_m_d] [--oo _o_p_t_i_o_n] [--PP _t_a_g] [--pp _p_o_r_t] [--RR _a_d_d_r_e_s_s]
         [--SS _c_t_l___p_a_t_h] [--WW _h_o_s_t:_p_o_r_t] [--ww _l_o_c_a_l___t_u_n[:_r_e_m_o_t_e___t_u_n]] _d_e_s_t_i_n_a_t_i_o_n
         [_c_o_m_m_a_n_d [_a_r_g_u_m_e_n_t _._._.]]
     sssshh [--QQ _q_u_e_r_y___o_p_t_i_o_n]

DDEESSCCRRIIPPTTIIOONN
     sssshh (SSH client) is a program for logging into a remote machine and for
     executing commands on a remote machine.  It is intended to provide secure
     encrypted communications between two untrusted hosts over an insecure
     network.  X11 connections, arbitrary TCP ports and UNIX-domain sockets
     can also be forwarded over the secure channel.

     sssshh connects and logs into the specified _d_e_s_t_i_n_a_t_i_o_n, which may be
     specified as either [user@]hostname or a URI of the form
     ssh://[user@]hostname[:port].  The user must prove their identity to the
     remote machine using one of several methods (see below).

     If a _c_o_m_m_a_n_d is specified, it will be executed on the remote host instead
     of a login shell.  A complete command line may be specified as _c_o_m_m_a_n_d,
     or it may have additional arguments.  If supplied, the arguments will be
     appended to the command, separated by spaces, before it is sent to the
     server to be executed.

     The options are as follows:

     --44      Forces sssshh to use IPv4 addresses only.

     --66      Forces sssshh to use IPv6 addresses only.

     --AA      Enables forwarding of connections from an authentication agent
             such as ssh-agent(1).  This can also be specified on a per-host
             basis in a configuration file.

             Agent forwarding should be enabled with caution.  Users with the
             ability to bypass file permissions on the remote host (for the
             agent's UNIX-domain socket) can access the local agent through
             the forwarded connection.  An attacker cannot obtain key material
             from the agent, however they can perform operations on the keys
             that enable them to authenticate using the identities loaded into
             the agent.  A safer alternative may be to use a jump host (see
             --JJ).

     --aa      Disables forwarding of the authentication agent connection.

     --BB _b_i_n_d___i_n_t_e_r_f_a_c_e
             Bind to the address of _b_i_n_d___i_n_t_e_r_f_a_c_e before attempting to
             connect to the destination host.  This is only useful on systems
             with more than one address.

     --bb _b_i_n_d___a_d_d_r_e_s_s
             Use _b_i_n_d___a_d_d_r_e_s_s on the local machine as the source address of
             the connection.  Only useful on systems with more than one
             address.

     --CC      Requests compression of all data (including stdin, stdout,
             stderr, and data for forwarded X11, TCP and UNIX-domain
             connections).  The compression algorithm is the same used by
             gzip(1).  Compression is desirable on modem lines and other slow
             connections, but will only slow down things on fast networks.
             The default value can be set on a host-by-host basis in the
             configuration files; see the CCoommpprreessssiioonn option in ssh_config(5).

     --cc _c_i_p_h_e_r___s_p_e_c
             Selects the cipher specification for encrypting the session.
             _c_i_p_h_e_r___s_p_e_c is a comma-separated list of ciphers listed in order
             of preference.  See the CCiipphheerrss keyword in ssh_config(5) for more
             information.

     --DD [_b_i_n_d___a_d_d_r_e_s_s:]_p_o_r_t
             Specifies a local “dynamic” application-level port forwarding.
             This works by allocating a socket to listen to _p_o_r_t on the local
             side, optionally bound to the specified _b_i_n_d___a_d_d_r_e_s_s.  Whenever a
             connection is made to this port, the connection is forwarded over
             the secure channel, and the application protocol is then used to
             determine where to connect to from the remote machine.  Currently
             the SOCKS4 and SOCKS5 protocols are supported, and sssshh will act
             as a SOCKS server.  Only root can forward privileged ports.
             Dynamic port forwardings can also be specified in the
             configuration file.

             IPv6 addresses can be specified by enclosing the address in
             square brackets.  Only the superuser can forward privileged
             ports.  By default, the local port is bound in accordance with
             the GGaatteewwaayyPPoorrttss setting.  However, an explicit _b_i_n_d___a_d_d_r_e_s_s may
             be used to bind the connection to a specific address.  The
             _b_i_n_d___a_d_d_r_e_s_s of “localhost” indicates that the listening port be
             bound for local use only, while an empty address or ‘*’ indicates
             that the port should be available from all interfaces.

     --EE _l_o_g___f_i_l_e
             Append debug logs to _l_o_g___f_i_l_e instead of standard error.

     --ee _e_s_c_a_p_e___c_h_a_r
             Sets the escape character for sessions with a pty (default: ‘~’).
             The escape character is only recognized at the beginning of a
             line.  The escape character followed by a dot (‘.’) closes the
             connection; followed by control-Z suspends the connection; and
             followed by itself sends the escape character once.  Setting the
             character to “none” disables any escapes and makes the session
             fully transparent.

     --FF _c_o_n_f_i_g_f_i_l_e
             Specifies an alternative per-user configuration file.  If a
             configuration file is given on the command line, the system-wide
             configuration file (_/_e_t_c_/_s_s_h_/_s_s_h___c_o_n_f_i_g) will be ignored.  The
             default for the per-user configuration file is _~_/_._s_s_h_/_c_o_n_f_i_g.  If
             set to “none”, no configuration files will be read.

     --ff      Requests sssshh to go to background just before command execution.
             This is useful if sssshh is going to ask for passwords or
             passphrases, but the user wants it in the background.  This
             implies --nn.  The recommended way to start X11 programs at a
             remote site is with something like sssshh --ff hhoosstt xxtteerrmm.

             If the EExxiittOOnnFFoorrwwaarrddFFaaiilluurree configuration option is set to “yes”,
             then a client started with --ff will wait for all remote port
             forwards to be successfully established before placing itself in
             the background.  Refer to the description of
             FFoorrkkAAfftteerrAAuutthheennttiiccaattiioonn in ssh_config(5) for details.

     --GG      Causes sssshh to print its configuration after evaluating HHoosstt and
             MMaattcchh blocks and exit.

     --gg      Allows remote hosts to connect to local forwarded ports.  If used
             on a multiplexed connection, then this option must be specified
             on the master process.

     --II _p_k_c_s_1_1
             Specify the PKCS#11 shared library sssshh should use to communicate
             with a PKCS#11 token providing keys for user authentication.  Use
             of this option will disable UUsseeKKeeyycchhaaiinn.

     --ii _i_d_e_n_t_i_t_y___f_i_l_e
             Selects a file from which the identity (private key) for public
             key authentication is read.  You can also specify a public key
             file to use the corresponding private key that is loaded in
             ssh-agent(1) when the private key file is not present locally.
             The default is _~_/_._s_s_h_/_i_d___r_s_a, _~_/_._s_s_h_/_i_d___e_c_d_s_a,
             _~_/_._s_s_h_/_i_d___e_c_d_s_a___s_k, _~_/_._s_s_h_/_i_d___e_d_2_5_5_1_9, _~_/_._s_s_h_/_i_d___e_d_2_5_5_1_9___s_k and
             _~_/_._s_s_h_/_i_d___d_s_a.  Identity files may also be specified on a per-
             host basis in the configuration file.  It is possible to have
             multiple --ii options (and multiple identities specified in
             configuration files).  If no certificates have been explicitly
             specified by the CCeerrttiiffiiccaatteeFFiillee directive, sssshh will also try to
             load certificate information from the filename obtained by
             appending _-_c_e_r_t_._p_u_b to identity filenames.

     --JJ _d_e_s_t_i_n_a_t_i_o_n
             Connect to the target host by first making an sssshh connection to
             the jump host described by _d_e_s_t_i_n_a_t_i_o_n and then establishing a
             TCP forwarding to the ultimate destination from there.  Multiple
             jump hops may be specified separated by comma characters.  This
             is a shortcut to specify a PPrrooxxyyJJuummpp configuration directive.
             Note that configuration directives supplied on the command-line
             generally apply to the destination host and not any specified
             jump hosts.  Use _~_/_._s_s_h_/_c_o_n_f_i_g to specify configuration for jump
             hosts.

     --KK      Enables GSSAPI-based authentication and forwarding (delegation)
             of GSSAPI credentials to the server.

     --kk      Disables forwarding (delegation) of GSSAPI credentials to the
             server.

     --LL [_b_i_n_d___a_d_d_r_e_s_s:]_p_o_r_t:_h_o_s_t:_h_o_s_t_p_o_r_t
     --LL [_b_i_n_d___a_d_d_r_e_s_s:]_p_o_r_t:_r_e_m_o_t_e___s_o_c_k_e_t
     --LL _l_o_c_a_l___s_o_c_k_e_t:_h_o_s_t:_h_o_s_t_p_o_r_t
     --LL _l_o_c_a_l___s_o_c_k_e_t:_r_e_m_o_t_e___s_o_c_k_e_t
             Specifies that connections to the given TCP port or Unix socket
             on the local (client) host are to be forwarded to the given host
             and port, or Unix socket, on the remote side.  This works by
             allocating a socket to listen to either a TCP _p_o_r_t on the local
             side, optionally bound to the specified _b_i_n_d___a_d_d_r_e_s_s, or to a
             Unix socket.  Whenever a connection is made to the local port or
             socket, the connection is forwarded over the secure channel, and
             a connection is made to either _h_o_s_t port _h_o_s_t_p_o_r_t, or the Unix
             socket _r_e_m_o_t_e___s_o_c_k_e_t, from the remote machine.

             Port forwardings can also be specified in the configuration file.
             Only the superuser can forward privileged ports.  IPv6 addresses
             can be specified by enclosing the address in square brackets.

             By default, the local port is bound in accordance with the
             GGaatteewwaayyPPoorrttss setting.  However, an explicit _b_i_n_d___a_d_d_r_e_s_s may be
             used to bind the connection to a specific address.  The
             _b_i_n_d___a_d_d_r_e_s_s of “localhost” indicates that the listening port be
             bound for local use only, while an empty address or ‘*’ indicates
             that the port should be available from all interfaces.

     --ll _l_o_g_i_n___n_a_m_e
             Specifies the user to log in as on the remote machine.  This also
             may be specified on a per-host basis in the configuration file.

     --MM      Places the sssshh client into “master” mode for connection sharing.
             Multiple --MM options places sssshh into “master” mode but with
             confirmation required using ssh-askpass(1) before each operation
             that changes the multiplexing state (e.g. opening a new session).
             Refer to the description of CCoonnttrroollMMaasstteerr in ssh_config(5) for
             details.

     --mm _m_a_c___s_p_e_c
             A comma-separated list of MAC (message authentication code)
             algorithms, specified in order of preference.  See the MMAACCss
             keyword in ssh_config(5) for more information.

     --NN      Do not execute a remote command.  This is useful for just
             forwarding ports.  Refer to the description of SSeessssiioonnTTyyppee in
             ssh_config(5) for details.

     --nn      Redirects stdin from _/_d_e_v_/_n_u_l_l (actually, prevents reading from
             stdin).  This must be used when sssshh is run in the background.  A
             common trick is to use this to run X11 programs on a remote
             machine.  For example, sssshh --nn sshhaaddoowwss..ccss..hhuutt..ffii eemmaaccss && will
             start an emacs on shadows.cs.hut.fi, and the X11 connection will
             be automatically forwarded over an encrypted channel.  The sssshh
             program will be put in the background.  (This does not work if
             sssshh needs to ask for a password or passphrase; see also the --ff
             option.)  Refer to the description of SSttddiinnNNuullll in ssh_config(5)
             for details.

     --OO _c_t_l___c_m_d
             Control an active connection multiplexing master process.  When
             the --OO option is specified, the _c_t_l___c_m_d argument is interpreted
             and passed to the master process.  Valid commands are: “check”
             (check that the master process is running), “forward” (request
             forwardings without command execution), “cancel” (cancel
             forwardings), “exit” (request the master to exit), and “stop”
             (request the master to stop accepting further multiplexing
             requests).

     --oo _o_p_t_i_o_n
             Can be used to give options in the format used in the
             configuration file.  This is useful for specifying options for
             which there is no separate command-line flag.  For full details
             of the options listed below, and their possible values, see
             ssh_config(5).

                   AddKeysToAgent
                   AddressFamily
                   BatchMode
                   BindAddress
                   CanonicalDomains
                   CanonicalizeFallbackLocal
                   CanonicalizeHostname
                   CanonicalizeMaxDots
                   CanonicalizePermittedCNAMEs
                   CASignatureAlgorithms
                   CertificateFile
                   CheckHostIP
                   Ciphers
                   ClearAllForwardings
                   Compression
                   ConnectionAttempts
                   ConnectTimeout
                   ControlMaster
                   ControlPath
                   ControlPersist
                   DynamicForward
                   EnableEscapeCommandline
                   EscapeChar
                   ExitOnForwardFailure
                   FingerprintHash
                   ForkAfterAuthentication
                   ForwardAgent
                   ForwardX11
                   ForwardX11Timeout
                   ForwardX11Trusted
                   GatewayPorts
                   GlobalKnownHostsFile
                   GSSAPIAuthentication
                   GSSAPIDelegateCredentials
                   HashKnownHosts
                   Host
                   HostbasedAcceptedAlgorithms
                   HostbasedAuthentication
                   HostKeyAlgorithms
                   HostKeyAlias
                   Hostname
                   IdentitiesOnly
                   IdentityAgent
                   IdentityFile
                   IPQoS
                   KbdInteractiveAuthentication
                   KbdInteractiveDevices
                   KexAlgorithms
                   KnownHostsCommand
                   LocalCommand
                   LocalForward
                   LogLevel
                   MACs
                   Match
                   NoHostAuthenticationForLocalhost
                   NumberOfPasswordPrompts
                   PasswordAuthentication
                   PermitLocalCommand
                   PermitRemoteOpen
                   PKCS11Provider
                   Port
                   PreferredAuthentications
                   ProxyCommand
                   ProxyJump
                   ProxyUseFdpass
                   PubkeyAcceptedAlgorithms
                   PubkeyAuthentication
                   RekeyLimit
                   RemoteCommand
                   RemoteForward
                   RequestTTY
                   RequiredRSASize
                   SendEnv
                   ServerAliveInterval
                   ServerAliveCountMax
                   SessionType
                   SetEnv
                   StdinNull
                   StreamLocalBindMask
                   StreamLocalBindUnlink
                   StrictHostKeyChecking
                   TCPKeepAlive
                   Tunnel
                   TunnelDevice
                   UpdateHostKeys
                   UseKeychain
                   User
                   UserKnownHostsFile
                   VerifyHostKeyDNS
                   VisualHostKey
                   XAuthLocation

     --PP _t_a_g  Specify a tag name that may be used to select configuration in
             ssh_config(5).  Refer to the TTaagg and MMaattcchh keywords in
             ssh_config(5) for more information.
     --pp _p_o_r_t
             Port to connect to on the remote host.  This can be specified on
             a per-host basis in the configuration file.

     --QQ _q_u_e_r_y___o_p_t_i_o_n
             Queries for the algorithms supported by one of the following
             features: _c_i_p_h_e_r (supported symmetric ciphers), _c_i_p_h_e_r_-_a_u_t_h
             (supported symmetric ciphers that support authenticated
             encryption), _h_e_l_p (supported query terms for use with the --QQ
             flag), _m_a_c (supported message integrity codes), _k_e_x (key exchange
             algorithms), _k_e_y (key types), _k_e_y_-_c_a_-_s_i_g_n (valid CA signature
             algorithms for certificates), _k_e_y_-_c_e_r_t (certificate key types),
             _k_e_y_-_p_l_a_i_n (non-certificate key types), _k_e_y_-_s_i_g (all key types and
             signature algorithms), _p_r_o_t_o_c_o_l_-_v_e_r_s_i_o_n (supported SSH protocol
             versions), and _s_i_g (supported signature algorithms).
             Alternatively, any keyword from ssh_config(5) or sshd_config(5)
             that takes an algorithm list may be used as an alias for the
             corresponding query_option.

     --qq      Quiet mode.  Causes most warning and diagnostic messages to be
             suppressed.

     --RR [_b_i_n_d___a_d_d_r_e_s_s:]_p_o_r_t:_h_o_s_t:_h_o_s_t_p_o_r_t
     --RR [_b_i_n_d___a_d_d_r_e_s_s:]_p_o_r_t:_l_o_c_a_l___s_o_c_k_e_t
     --RR _r_e_m_o_t_e___s_o_c_k_e_t:_h_o_s_t:_h_o_s_t_p_o_r_t
     --RR _r_e_m_o_t_e___s_o_c_k_e_t:_l_o_c_a_l___s_o_c_k_e_t
     --RR [_b_i_n_d___a_d_d_r_e_s_s:]_p_o_r_t
             Specifies that connections to the given TCP port or Unix socket
             on the remote (server) host are to be forwarded to the local
             side.

             This works by allocating a socket to listen to either a TCP _p_o_r_t
             or to a Unix socket on the remote side.  Whenever a connection is
             made to this port or Unix socket, the connection is forwarded
             over the secure channel, and a connection is made from the local
             machine to either an explicit destination specified by _h_o_s_t port
             _h_o_s_t_p_o_r_t, or _l_o_c_a_l___s_o_c_k_e_t, or, if no explicit destination was
             specified, sssshh will act as a SOCKS 4/5 proxy and forward
             connections to the destinations requested by the remote SOCKS
             client.

             Port forwardings can also be specified in the configuration file.
             Privileged ports can be forwarded only when logging in as root on
             the remote machine.  IPv6 addresses can be specified by enclosing
             the address in square brackets.

             By default, TCP listening sockets on the server will be bound to
             the loopback interface only.  This may be overridden by
             specifying a _b_i_n_d___a_d_d_r_e_s_s.  An empty _b_i_n_d___a_d_d_r_e_s_s, or the address
             ‘*’, indicates that the remote socket should listen on all
             interfaces.  Specifying a remote _b_i_n_d___a_d_d_r_e_s_s will only succeed
             if the server's GGaatteewwaayyPPoorrttss option is enabled (see
             sshd_config(5)).

             If the _p_o_r_t argument is ‘0’, the listen port will be dynamically
             allocated on the server and reported to the client at run time.
             When used together with --OO ffoorrwwaarrdd, the allocated port will be
             printed to the standard output.

     --SS _c_t_l___p_a_t_h
             Specifies the location of a control socket for connection
             sharing, or the string “none” to disable connection sharing.
             Refer to the description of CCoonnttrroollPPaatthh and CCoonnttrroollMMaasstteerr in
             ssh_config(5) for details.

     --ss      May be used to request invocation of a subsystem on the remote
             system.  Subsystems facilitate the use of SSH as a secure
             transport for other applications (e.g. sftp(1)).  The subsystem
             is specified as the remote command.  Refer to the description of
             SSeessssiioonnTTyyppee in ssh_config(5) for details.

     --TT      Disable pseudo-terminal allocation.

     --tt      Force pseudo-terminal allocation.  This can be used to execute
             arbitrary screen-based programs on a remote machine, which can be
             very useful, e.g. when implementing menu services.  Multiple --tt
             options force tty allocation, even if sssshh has no local tty.

     --VV      Display the version number and exit.

     --vv      Verbose mode.  Causes sssshh to print debugging messages about its
             progress.  This is helpful in debugging connection,
             authentication, and configuration problems.  Multiple --vv options
             increase the verbosity.  The maximum is 3.

     --WW _h_o_s_t:_p_o_r_t
             Requests that standard input and output on the client be
             forwarded to _h_o_s_t on _p_o_r_t over the secure channel.  Implies --NN,
             --TT, EExxiittOOnnFFoorrwwaarrddFFaaiilluurree and CClleeaarrAAllllFFoorrwwaarrddiinnggss, though these
             can be overridden in the configuration file or using --oo command
             line options.

     --ww _l_o_c_a_l___t_u_n[:_r_e_m_o_t_e___t_u_n]
             Requests tunnel device forwarding with the specified tun(4)
             devices between the client (_l_o_c_a_l___t_u_n) and the server
             (_r_e_m_o_t_e___t_u_n).

             The devices may be specified by numerical ID or the keyword
             “any”, which uses the next available tunnel device.  If
             _r_e_m_o_t_e___t_u_n is not specified, it defaults to “any”.  See also the
             TTuunnnneell and TTuunnnneellDDeevviiccee directives in ssh_config(5).

             If the TTuunnnneell directive is unset, it will be set to the default
             tunnel mode, which is “point-to-point”.  If a different TTuunnnneell
             forwarding mode it desired, then it should be specified before
             --ww.

     --XX      Enables X11 forwarding.  This can also be specified on a per-host
             basis in a configuration file.

             X11 forwarding should be enabled with caution.  Users with the
             ability to bypass file permissions on the remote host (for the
             user's X authorization database) can access the local X11 display
             through the forwarded connection.  An attacker may then be able
             to perform activities such as keystroke monitoring.

             For this reason, X11 forwarding is subjected to X11 SECURITY
             extension restrictions by default.  Refer to the sssshh --YY option
             and the FFoorrwwaarrddXX1111TTrruusstteedd directive in ssh_config(5) for more
             information.

     --xx      Disables X11 forwarding.

     --YY      Enables trusted X11 forwarding.  Trusted X11 forwardings are not
             subjected to the X11 SECURITY extension controls.

     --yy      Send log information using the syslog(3) system module.  By
             default this information is sent to stderr.

     sssshh may additionally obtain configuration data from a per-user
     configuration file and a system-wide configuration file.  The file format
     and configuration options are described in ssh_config(5).

AAUUTTHHEENNTTIICCAATTIIOONN
     The OpenSSH SSH client supports SSH protocol 2.

     The methods available for authentication are: GSSAPI-based
     authentication, host-based authentication, public key authentication,
     keyboard-interactive authentication, and password authentication.
     Authentication methods are tried in the order specified above, though
     PPrreeffeerrrreeddAAuutthheennttiiccaattiioonnss can be used to change the default order.

     Host-based authentication works as follows: If the machine the user logs
     in from is listed in _/_e_t_c_/_h_o_s_t_s_._e_q_u_i_v or _/_e_t_c_/_s_h_o_s_t_s_._e_q_u_i_v on the remote
     machine, the user is non-root and the user names are the same on both
     sides, or if the files _~_/_._r_h_o_s_t_s or _~_/_._s_h_o_s_t_s exist in the user's home
     directory on the remote machine and contain a line containing the name of
     the client machine and the name of the user on that machine, the user is
     considered for login.  Additionally, the server _m_u_s_t be able to verify
     the client's host key (see the description of _/_e_t_c_/_s_s_h_/_s_s_h___k_n_o_w_n___h_o_s_t_s
     and _~_/_._s_s_h_/_k_n_o_w_n___h_o_s_t_s, below) for login to be permitted.  This
     authentication method closes security holes due to IP spoofing, DNS
     spoofing, and routing spoofing.  [Note to the administrator:
     _/_e_t_c_/_h_o_s_t_s_._e_q_u_i_v, _~_/_._r_h_o_s_t_s, and the rlogin/rsh protocol in general, are
     inherently insecure and should be disabled if security is desired.]

     Public key authentication works as follows: The scheme is based on
     public-key cryptography, using cryptosystems where encryption and
     decryption are done using separate keys, and it is unfeasible to derive
     the decryption key from the encryption key.  The idea is that each user
     creates a public/private key pair for authentication purposes.  The
     server knows the public key, and only the user knows the private key.
     sssshh implements public key authentication protocol automatically, using
     one of the DSA, ECDSA, Ed25519 or RSA algorithms.  The HISTORY section of
     ssl(8) contains a brief discussion of the DSA and RSA algorithms.

     The file _~_/_._s_s_h_/_a_u_t_h_o_r_i_z_e_d___k_e_y_s lists the public keys that are permitted
     for logging in.  When the user logs in, the sssshh program tells the server
     which key pair it would like to use for authentication.  The client
     proves that it has access to the private key and the server checks that
     the corresponding public key is authorized to accept the account.

     The server may inform the client of errors that prevented public key
     authentication from succeeding after authentication completes using a
     different method.  These may be viewed by increasing the LLooggLLeevveell to
     DDEEBBUUGG or higher (e.g. by using the --vv flag).

     The user creates their key pair by running ssh-keygen(1).  This stores
     the private key in _~_/_._s_s_h_/_i_d___d_s_a (DSA), _~_/_._s_s_h_/_i_d___e_c_d_s_a (ECDSA),
     _~_/_._s_s_h_/_i_d___e_c_d_s_a___s_k (authenticator-hosted ECDSA), _~_/_._s_s_h_/_i_d___e_d_2_5_5_1_9
     (Ed25519), _~_/_._s_s_h_/_i_d___e_d_2_5_5_1_9___s_k (authenticator-hosted Ed25519), or
     _~_/_._s_s_h_/_i_d___r_s_a (RSA) and stores the public key in _~_/_._s_s_h_/_i_d___d_s_a_._p_u_b (DSA),
     _~_/_._s_s_h_/_i_d___e_c_d_s_a_._p_u_b (ECDSA), _~_/_._s_s_h_/_i_d___e_c_d_s_a___s_k_._p_u_b (authenticator-hosted
     ECDSA), _~_/_._s_s_h_/_i_d___e_d_2_5_5_1_9_._p_u_b (Ed25519), _~_/_._s_s_h_/_i_d___e_d_2_5_5_1_9___s_k_._p_u_b
     (authenticator-hosted Ed25519), or _~_/_._s_s_h_/_i_d___r_s_a_._p_u_b (RSA) in the user's
     home directory.  The user should then copy the public key to
     _~_/_._s_s_h_/_a_u_t_h_o_r_i_z_e_d___k_e_y_s in their home directory on the remote machine.
     The _a_u_t_h_o_r_i_z_e_d___k_e_y_s file corresponds to the conventional _~_/_._r_h_o_s_t_s file,
     and has one key per line, though the lines can be very long.  After this,
     the user can log in without giving the password.

     A variation on public key authentication is available in the form of
     certificate authentication: instead of a set of public/private keys,
     signed certificates are used.  This has the advantage that a single
     trusted certification authority can be used in place of many
     public/private keys.  See the CERTIFICATES section of ssh-keygen(1) for
     more information.

     The most convenient way to use public key or certificate authentication
     may be with an authentication agent.  See ssh-agent(1) and (optionally)
     the AAddddKKeeyyssTTooAAggeenntt directive in ssh_config(5) for more information.

     Keyboard-interactive authentication works as follows: The server sends an
     arbitrary ""challenge"" text and prompts for a response, possibly multiple
     times.  Examples of keyboard-interactive authentication include BSD
     Authentication (see login.conf(5)) and PAM (some non-OpenBSD systems).

     Finally, if other authentication methods fail, sssshh prompts the user for a
     password.  The password is sent to the remote host for checking; however,
     since all communications are encrypted, the password cannot be seen by
     someone listening on the network.

     sssshh automatically maintains and checks a database containing
     identification for all hosts it has ever been used with.  Host keys are
     stored in _~_/_._s_s_h_/_k_n_o_w_n___h_o_s_t_s in the user's home directory.  Additionally,
     the file _/_e_t_c_/_s_s_h_/_s_s_h___k_n_o_w_n___h_o_s_t_s is automatically checked for known
     hosts.  Any new hosts are automatically added to the user's file.  If a
     host's identification ever changes, sssshh warns about this and disables
     password authentication to prevent server spoofing or man-in-the-middle
     attacks, which could otherwise be used to circumvent the encryption.  The
     SSttrriiccttHHoossttKKeeyyCChheecckkiinngg option can be used to control logins to machines
     whose host key is not known or has changed.

     When the user's identity has been accepted by the server, the server
     either executes the given command in a non-interactive session or, if no
     command has been specified, logs into the machine and gives the user a
     normal shell as an interactive session.  All communication with the
     remote command or shell will be automatically encrypted.

     If an interactive session is requested, sssshh by default will only request
     a pseudo-terminal (pty) for interactive sessions when the client has one.
     The flags --TT and --tt can be used to override this behaviour.

     If a pseudo-terminal has been allocated, the user may use the escape
     characters noted below.

     If no pseudo-terminal has been allocated, the session is transparent and
     can be used to reliably transfer binary data.  On most systems, setting
     the escape character to “none” will also make the session transparent
     even if a tty is used.

     The session terminates when the command or shell on the remote machine
     exits and all X11 and TCP connections have been closed.

EESSCCAAPPEE CCHHAARRAACCTTEERRSS
     When a pseudo-terminal has been requested, sssshh supports a number of
     functions through the use of an escape character.

     A single tilde character can be sent as ~~~~ or by following the tilde by a
     character other than those described below.  The escape character must
     always follow a newline to be interpreted as special.  The escape
     character can be changed in configuration files using the EEssccaappeeCChhaarr
     configuration directive or on the command line by the --ee option.

     The supported escapes (assuming the default ‘~’) are:

     ~~..      Disconnect.

     ~~^^ZZ     Background sssshh.

     ~~##      List forwarded connections.

     ~~&&      Background sssshh at logout when waiting for forwarded connection /
             X11 sessions to terminate.

     ~~??      Display a list of escape characters.

     ~~BB      Send a BREAK to the remote system (only useful if the peer
             supports it).

     ~~CC      Open command line.  Currently this allows the addition of port
             forwardings using the --LL, --RR and --DD options (see above).  It also
             allows the cancellation of existing port-forwardings with
             --KKLL[_b_i_n_d___a_d_d_r_e_s_s:]_p_o_r_t for local, --KKRR[_b_i_n_d___a_d_d_r_e_s_s:]_p_o_r_t for
             remote and --KKDD[_b_i_n_d___a_d_d_r_e_s_s:]_p_o_r_t for dynamic port-forwardings.
             !!_c_o_m_m_a_n_d allows the user to execute a local command if the
             PPeerrmmiittLLooccaallCCoommmmaanndd option is enabled in ssh_config(5).  Basic
             help is available, using the --hh option.

     ~~RR      Request rekeying of the connection (only useful if the peer
             supports it).

     ~~VV      Decrease the verbosity (LLooggLLeevveell) when errors are being written
             to stderr.

     ~~vv      Increase the verbosity (LLooggLLeevveell) when errors are being written
             to stderr.

TTCCPP FFOORRWWAARRDDIINNGG
     Forwarding of arbitrary TCP connections over a secure channel can be
     specified either on the command line or in a configuration file.  One
     possible application of TCP forwarding is a secure connection to a mail
     server; another is going through firewalls.

     In the example below, we look at encrypting communication for an IRC
     client, even though the IRC server it connects to does not directly
     support encrypted communication.  This works as follows: the user
     connects to the remote host using sssshh, specifying the ports to be used to
     forward the connection.  After that it is possible to start the program
     locally, and sssshh will encrypt and forward the connection to the remote
     server.

     The following example tunnels an IRC session from the client to an IRC
     server at “server.example.com”, joining channel “#users”, nickname
     “pinky”, using the standard IRC port, 6667:

         $ ssh -f -L 6667:localhost:6667 server.example.com sleep 10
         $ irc -c '#users' pinky IRC/127.0.0.1

     The --ff option backgrounds sssshh and the remote command “sleep 10” is
     specified to allow an amount of time (10 seconds, in the example) to
     start the program which is going to use the tunnel.  If no connections
     are made within the time specified, sssshh will exit.

XX1111 FFOORRWWAARRDDIINNGG
     If the FFoorrwwaarrddXX1111 variable is set to “yes” (or see the description of the
     --XX, --xx, and --YY options above) and the user is using X11 (the DISPLAY
     environment variable is set), the connection to the X11 display is
     automatically forwarded to the remote side in such a way that any X11
     programs started from the shell (or command) will go through the
     encrypted channel, and the connection to the real X server will be made
     from the local machine.  The user should not manually set DISPLAY.
     Forwarding of X11 connections can be configured on the command line or in
     configuration files.

     The DISPLAY value set by sssshh will point to the server machine, but with a
     display number greater than zero.  This is normal, and happens because
     sssshh creates a “proxy” X server on the server machine for forwarding the
     connections over the encrypted channel.

     sssshh will also automatically set up Xauthority data on the server machine.
     For this purpose, it will generate a random authorization cookie, store
     it in Xauthority on the server, and verify that any forwarded connections
     carry this cookie and replace it by the real cookie when the connection
     is opened.  The real authentication cookie is never sent to the server
     machine (and no cookies are sent in the plain).

     If the FFoorrwwaarrddAAggeenntt variable is set to “yes” (or see the description of
     the --AA and --aa options above) and the user is using an authentication
     agent, the connection to the agent is automatically forwarded to the
     remote side.

VVEERRIIFFYYIINNGG HHOOSSTT KKEEYYSS
     When connecting to a server for the first time, a fingerprint of the
     server's public key is presented to the user (unless the option
     SSttrriiccttHHoossttKKeeyyCChheecckkiinngg has been disabled).  Fingerprints can be determined
     using ssh-keygen(1):

           $ ssh-keygen -l -f /etc/ssh/ssh_host_rsa_key

     If the fingerprint is already known, it can be matched and the key can be
     accepted or rejected.  If only legacy (MD5) fingerprints for the server
     are available, the ssh-keygen(1) --EE option may be used to downgrade the
     fingerprint algorithm to match.

     Because of the difficulty of comparing host keys just by looking at
     fingerprint strings, there is also support to compare host keys visually,
     using _r_a_n_d_o_m _a_r_t.  By setting the VViissuuaallHHoossttKKeeyy option to “yes”, a small
     ASCII graphic gets displayed on every login to a server, no matter if the
     session itself is interactive or not.  By learning the pattern a known
     server produces, a user can easily find out that the host key has changed
     when a completely different pattern is displayed.  Because these patterns
     are not unambiguous however, a pattern that looks similar to the pattern
     remembered only gives a good probability that the host key is the same,
     not guaranteed proof.

     To get a listing of the fingerprints along with their random art for all
     known hosts, the following command line can be used:

           $ ssh-keygen -lv -f ~/.ssh/known_hosts

     If the fingerprint is unknown, an alternative method of verification is
     available: SSH fingerprints verified by DNS.  An additional resource
     record (RR), SSHFP, is added to a zonefile and the connecting client is
     able to match the fingerprint with that of the key presented.

     In this example, we are connecting a client to a server,
     “host.example.com”.  The SSHFP resource records should first be added to
     the zonefile for host.example.com:

           $ ssh-keygen -r host.example.com.

     The output lines will have to be added to the zonefile.  To check that
     the zone is answering fingerprint queries:

           $ dig -t SSHFP host.example.com

     Finally the client connects:

           $ ssh -o ""VerifyHostKeyDNS ask"" host.example.com
           [...]
           Matching host key fingerprint found in DNS.
           Are you sure you want to continue connecting (yes/no)?

     See the VVeerriiffyyHHoossttKKeeyyDDNNSS option in ssh_config(5) for more information.

SSSSHH--BBAASSEEDD VVIIRRTTUUAALL PPRRIIVVAATTEE NNEETTWWOORRKKSS
     sssshh contains support for Virtual Private Network (VPN) tunnelling using
     the tun(4) network pseudo-device, allowing two networks to be joined
     securely.  The sshd_config(5) configuration option PPeerrmmiittTTuunnnneell controls
     whether the server supports this, and at what level (layer 2 or 3
     traffic).

     The following example would connect client network 10.0.50.0/24 with
     remote network 10.0.99.0/24 using a point-to-point connection from
     10.1.1.1 to 10.1.1.2, provided that the SSH server running on the gateway
     to the remote network, at 192.168.1.15, allows it.

     On the client:

           # ssh -f -w 0:1 192.168.1.15 true
           # ifconfig tun0 10.1.1.1 10.1.1.2 netmask 255.255.255.252
           # route add 10.0.99.0/24 10.1.1.2

     On the server:

           # ifconfig tun1 10.1.1.2 10.1.1.1 netmask 255.255.255.252
           # route add 10.0.50.0/24 10.1.1.1

     Client access may be more finely tuned via the _/_r_o_o_t_/_._s_s_h_/_a_u_t_h_o_r_i_z_e_d___k_e_y_s
     file (see below) and the PPeerrmmiittRRoooottLLooggiinn server option.  The following
     entry would permit connections on tun(4) device 1 from user “jane” and on
     tun device 2 from user “john”, if PPeerrmmiittRRoooottLLooggiinn is set to
     “forced-commands-only”:

       tunnel=""1"",command=""sh /etc/netstart tun1"" ssh-rsa ... jane
       tunnel=""2"",command=""sh /etc/netstart tun2"" ssh-rsa ... john

     Since an SSH-based setup entails a fair amount of overhead, it may be
     more suited to temporary setups, such as for wireless VPNs.  More
     permanent VPNs are better provided by tools such as ipsecctl(8) and
     isakmpd(8).

EENNVVIIRROONNMMEENNTT
     sssshh will normally set the following environment variables:

     DISPLAY               The DISPLAY variable indicates the location of the
                           X11 server.  It is automatically set by sssshh to
                           point to a value of the form “hostname:n”, where
                           “hostname” indicates the host where the shell runs,
                           and ‘n’ is an integer ≥ 1.  sssshh uses this special
                           value to forward X11 connections over the secure
                           channel.  The user should normally not set DISPLAY
                           explicitly, as that will render the X11 connection
                           insecure (and will require the user to manually
                           copy any required authorization cookies).

     HOME                  Set to the path of the user's home directory.

     LOGNAME               Synonym for USER; set for compatibility with
                           systems that use this variable.

     MAIL                  Set to the path of the user's mailbox.

     PATH                  Set to the default PATH, as specified when
                           compiling sssshh.

     SSH_ASKPASS           If sssshh needs a passphrase, it will read the
                           passphrase from the current terminal if it was run
                           from a terminal.  If sssshh does not have a terminal
                           associated with it but DISPLAY and SSH_ASKPASS are
                           set, it will execute the program specified by
                           SSH_ASKPASS and open an X11 window to read the
                           passphrase.  This is particularly useful when
                           calling sssshh from a _._x_s_e_s_s_i_o_n or related script.
                           (Note that on some machines it may be necessary to
                           redirect the input from _/_d_e_v_/_n_u_l_l to make this
                           work.)

     SSH_ASKPASS_REQUIRE   Allows further control over the use of an askpass
                           program.  If this variable is set to “never” then
                           sssshh will never attempt to use one.  If it is set to
                           “prefer”, then sssshh will prefer to use the askpass
                           program instead of the TTY when requesting
                           passwords.  Finally, if the variable is set to
                           “force”, then the askpass program will be used for
                           all passphrase input regardless of whether DISPLAY
                           is set.

     SSH_AUTH_SOCK         Identifies the path of a UNIX-domain socket used to
                           communicate with the agent.

     SSH_CONNECTION        Identifies the client and server ends of the
                           connection.  The variable contains four space-
                           separated values: client IP address, client port
                           number, server IP address, and server port number.

     SSH_ORIGINAL_COMMAND  This variable contains the original command line if
                           a forced command is executed.  It can be used to
                           extract the original arguments.

     SSH_TTY               This is set to the name of the tty (path to the
                           device) associated with the current shell or
                           command.  If the current session has no tty, this
                           variable is not set.

     SSH_TUNNEL            Optionally set by sshd(8) to contain the interface
                           names assigned if tunnel forwarding was requested
                           by the client.

     SSH_USER_AUTH         Optionally set by sshd(8), this variable may
                           contain a pathname to a file that lists the
                           authentication methods successfully used when the
                           session was established, including any public keys
                           that were used.

     TZ                    This variable is set to indicate the present time
                           zone if it was set when the daemon was started
                           (i.e. the daemon passes the value on to new
                           connections).

     USER                  Set to the name of the user logging in.

     Additionally, sssshh reads _~_/_._s_s_h_/_e_n_v_i_r_o_n_m_e_n_t, and adds lines of the format
     “VARNAME=value” to the environment if the file exists and users are
     allowed to change their environment.  For more information, see the
     PPeerrmmiittUUsseerrEEnnvviirroonnmmeenntt option in sshd_config(5).

FFIILLEESS
     _~_/_._r_h_o_s_t_s
             This file is used for host-based authentication (see above).  On
             some machines this file may need to be world-readable if the
             user's home directory is on an NFS partition, because sshd(8)
             reads it as root.  Additionally, this file must be owned by the
             user, and must not have write permissions for anyone else.  The
             recommended permission for most machines is read/write for the
             user, and not accessible by others.

     _~_/_._s_h_o_s_t_s
             This file is used in exactly the same way as _._r_h_o_s_t_s, but allows
             host-based authentication without permitting login with
             rlogin/rsh.

     _~_/_._s_s_h_/
             This directory is the default location for all user-specific
             configuration and authentication information.  There is no
             general requirement to keep the entire contents of this directory
             secret, but the recommended permissions are read/write/execute
             for the user, and not accessible by others.

     _~_/_._s_s_h_/_a_u_t_h_o_r_i_z_e_d___k_e_y_s
             Lists the public keys (DSA, ECDSA, Ed25519, RSA) that can be used
             for logging in as this user.  The format of this file is
             described in the sshd(8) manual page.  This file is not highly
             sensitive, but the recommended permissions are read/write for the
             user, and not accessible by others.

     _~_/_._s_s_h_/_c_o_n_f_i_g
             This is the per-user configuration file.  The file format and
             configuration options are described in ssh_config(5).  Because of
             the potential for abuse, this file must have strict permissions:
             read/write for the user, and not writable by others.

     _~_/_._s_s_h_/_e_n_v_i_r_o_n_m_e_n_t
             Contains additional definitions for environment variables; see
             _E_N_V_I_R_O_N_M_E_N_T, above.

     _~_/_._s_s_h_/_i_d___d_s_a
     _~_/_._s_s_h_/_i_d___e_c_d_s_a
     _~_/_._s_s_h_/_i_d___e_c_d_s_a___s_k
     _~_/_._s_s_h_/_i_d___e_d_2_5_5_1_9
     _~_/_._s_s_h_/_i_d___e_d_2_5_5_1_9___s_k
     _~_/_._s_s_h_/_i_d___r_s_a
             Contains the private key for authentication.  These files contain
             sensitive data and should be readable by the user but not
             accessible by others (read/write/execute).  sssshh will simply
             ignore a private key file if it is accessible by others.  It is
             possible to specify a passphrase when generating the key which
             will be used to encrypt the sensitive part of this file using
             AES-128.

     _~_/_._s_s_h_/_i_d___d_s_a_._p_u_b
     _~_/_._s_s_h_/_i_d___e_c_d_s_a_._p_u_b
     _~_/_._s_s_h_/_i_d___e_c_d_s_a___s_k_._p_u_b
     _~_/_._s_s_h_/_i_d___e_d_2_5_5_1_9_._p_u_b
     _~_/_._s_s_h_/_i_d___e_d_2_5_5_1_9___s_k_._p_u_b
     _~_/_._s_s_h_/_i_d___r_s_a_._p_u_b
             Contains the public key for authentication.  These files are not
             sensitive and can (but need not) be readable by anyone.

     _~_/_._s_s_h_/_k_n_o_w_n___h_o_s_t_s
             Contains a list of host keys for all hosts the user has logged
             into that are not already in the systemwide list of known host
             keys.  See sshd(8) for further details of the format of this
             file.

     _~_/_._s_s_h_/_r_c
             Commands in this file are executed by sssshh when the user logs in,
             just before the user's shell (or command) is started.  See the
             sshd(8) manual page for more information.

     _/_e_t_c_/_h_o_s_t_s_._e_q_u_i_v
             This file is for host-based authentication (see above).  It
             should only be writable by root.

     _/_e_t_c_/_s_h_o_s_t_s_._e_q_u_i_v
             This file is used in exactly the same way as _h_o_s_t_s_._e_q_u_i_v, but
             allows host-based authentication without permitting login with
             rlogin/rsh.

     _/_e_t_c_/_s_s_h_/_s_s_h___c_o_n_f_i_g
             Systemwide configuration file.  The file format and configuration
             options are described in ssh_config(5).

     _/_e_t_c_/_s_s_h_/_s_s_h___h_o_s_t___k_e_y
     _/_e_t_c_/_s_s_h_/_s_s_h___h_o_s_t___d_s_a___k_e_y
     _/_e_t_c_/_s_s_h_/_s_s_h___h_o_s_t___e_c_d_s_a___k_e_y
     _/_e_t_c_/_s_s_h_/_s_s_h___h_o_s_t___e_d_2_5_5_1_9___k_e_y
     _/_e_t_c_/_s_s_h_/_s_s_h___h_o_s_t___r_s_a___k_e_y
             These files contain the private parts of the host keys and are
             used for host-based authentication.

     _/_e_t_c_/_s_s_h_/_s_s_h___k_n_o_w_n___h_o_s_t_s
             Systemwide list of known host keys.  This file should be prepared
             by the system administrator to contain the public host keys of
             all machines in the organization.  It should be world-readable.
             See sshd(8) for further details of the format of this file.

     _/_e_t_c_/_s_s_h_/_s_s_h_r_c
             Commands in this file are executed by sssshh when the user logs in,
             just before the user's shell (or command) is started.  See the
             sshd(8) manual page for more information.

EEXXIITT SSTTAATTUUSS
     sssshh exits with the exit status of the remote command or with 255 if an
     error occurred.

SSEEEE AALLSSOO
     scp(1), sftp(1), ssh-add(1), ssh-agent(1), ssh-keygen(1), ssh-keyscan(1),
     tun(4), ssh_config(5), ssh-keysign(8), sshd(8)

SSTTAANNDDAARRDDSS
     S. Lehtinen and C. Lonvick, _T_h_e _S_e_c_u_r_e _S_h_e_l_l _(_S_S_H_) _P_r_o_t_o_c_o_l _A_s_s_i_g_n_e_d
     _N_u_m_b_e_r_s, RFC 4250, January 2006.

     T. Ylonen and C. Lonvick, _T_h_e _S_e_c_u_r_e _S_h_e_l_l _(_S_S_H_) _P_r_o_t_o_c_o_l _A_r_c_h_i_t_e_c_t_u_r_e,
     RFC 4251, January 2006.

     T. Ylonen and C. Lonvick, _T_h_e _S_e_c_u_r_e _S_h_e_l_l _(_S_S_H_) _A_u_t_h_e_n_t_i_c_a_t_i_o_n _P_r_o_t_o_c_o_l,
     RFC 4252, January 2006.

     T. Ylonen and C. Lonvick, _T_h_e _S_e_c_u_r_e _S_h_e_l_l _(_S_S_H_) _T_r_a_n_s_p_o_r_t _L_a_y_e_r
     _P_r_o_t_o_c_o_l, RFC 4253, January 2006.

     T. Ylonen and C. Lonvick, _T_h_e _S_e_c_u_r_e _S_h_e_l_l _(_S_S_H_) _C_o_n_n_e_c_t_i_o_n _P_r_o_t_o_c_o_l, RFC
     4254, January 2006.

     J. Schlyter and W. Griffin, _U_s_i_n_g _D_N_S _t_o _S_e_c_u_r_e_l_y _P_u_b_l_i_s_h _S_e_c_u_r_e _S_h_e_l_l
     _(_S_S_H_) _K_e_y _F_i_n_g_e_r_p_r_i_n_t_s, RFC 4255, January 2006.

     F. Cusack and M. Forssen, _G_e_n_e_r_i_c _M_e_s_s_a_g_e _E_x_c_h_a_n_g_e _A_u_t_h_e_n_t_i_c_a_t_i_o_n _f_o_r _t_h_e
     _S_e_c_u_r_e _S_h_e_l_l _P_r_o_t_o_c_o_l _(_S_S_H_), RFC 4256, January 2006.

     J. Galbraith and P. Remaker, _T_h_e _S_e_c_u_r_e _S_h_e_l_l _(_S_S_H_) _S_e_s_s_i_o_n _C_h_a_n_n_e_l _B_r_e_a_k
     _E_x_t_e_n_s_i_o_n, RFC 4335, January 2006.

     M. Bellare, T. Kohno, and C. Namprempre, _T_h_e _S_e_c_u_r_e _S_h_e_l_l _(_S_S_H_) _T_r_a_n_s_p_o_r_t
     _L_a_y_e_r _E_n_c_r_y_p_t_i_o_n _M_o_d_e_s, RFC 4344, January 2006.

     B. Harris, _I_m_p_r_o_v_e_d _A_r_c_f_o_u_r _M_o_d_e_s _f_o_r _t_h_e _S_e_c_u_r_e _S_h_e_l_l _(_S_S_H_) _T_r_a_n_s_p_o_r_t
     _L_a_y_e_r _P_r_o_t_o_c_o_l, RFC 4345, January 2006.

     M. Friedl, N. Provos, and W. Simpson, _D_i_f_f_i_e_-_H_e_l_l_m_a_n _G_r_o_u_p _E_x_c_h_a_n_g_e _f_o_r
     _t_h_e _S_e_c_u_r_e _S_h_e_l_l _(_S_S_H_) _T_r_a_n_s_p_o_r_t _L_a_y_e_r _P_r_o_t_o_c_o_l, RFC 4419, March 2006.

     J. Galbraith and R. Thayer, _T_h_e _S_e_c_u_r_e _S_h_e_l_l _(_S_S_H_) _P_u_b_l_i_c _K_e_y _F_i_l_e
     _F_o_r_m_a_t, RFC 4716, November 2006.

     D. Stebila and J. Green, _E_l_l_i_p_t_i_c _C_u_r_v_e _A_l_g_o_r_i_t_h_m _I_n_t_e_g_r_a_t_i_o_n _i_n _t_h_e
     _S_e_c_u_r_e _S_h_e_l_l _T_r_a_n_s_p_o_r_t _L_a_y_e_r, RFC 5656, December 2009.

     A. Perrig and D. Song, _H_a_s_h _V_i_s_u_a_l_i_z_a_t_i_o_n_: _a _N_e_w _T_e_c_h_n_i_q_u_e _t_o _i_m_p_r_o_v_e
     _R_e_a_l_-_W_o_r_l_d _S_e_c_u_r_i_t_y, 1999, International Workshop on Cryptographic
     Techniques and E-Commerce (CrypTEC '99).

AAUUTTHHOORRSS
     OpenSSH is a derivative of the original and free ssh 1.2.12 release by
     Tatu Ylonen.  Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos, Theo
     de Raadt and Dug Song removed many bugs, re-added newer features and
     created OpenSSH.  Markus Friedl contributed the support for SSH protocol
     versions 1.5 and 2.0.

macOS 14.6                     October 11, 2023                     macOS 14.6
"
scp,"SCP(1)                      General Commands Manual                     SCP(1)

NNAAMMEE
     ssccpp – OpenSSH secure file copy

SSYYNNOOPPSSIISS
     ssccpp [--334466AABBCCOOppqqRRrrssTTvv] [--cc _c_i_p_h_e_r] [--DD _s_f_t_p___s_e_r_v_e_r___p_a_t_h] [--FF _s_s_h___c_o_n_f_i_g]
         [--ii _i_d_e_n_t_i_t_y___f_i_l_e] [--JJ _d_e_s_t_i_n_a_t_i_o_n] [--ll _l_i_m_i_t] [--oo _s_s_h___o_p_t_i_o_n]
         [--PP _p_o_r_t] [--SS _p_r_o_g_r_a_m] [--XX _s_f_t_p___o_p_t_i_o_n] _s_o_u_r_c_e _._._. _t_a_r_g_e_t

DDEESSCCRRIIPPTTIIOONN
     ssccpp copies files between hosts on a network.

     ssccpp uses the SFTP protocol over a ssh(1) connection for data transfer,
     and uses the same authentication and provides the same security as a
     login session.

     ssccpp will ask for passwords or passphrases if they are needed for
     authentication.

     The _s_o_u_r_c_e and _t_a_r_g_e_t may be specified as a local pathname, a remote host
     with optional path in the form [user@]host:[path], or a URI in the form
     scp://[user@]host[:port][/path].  Local file names can be made explicit
     using absolute or relative pathnames to avoid ssccpp treating file names
     containing ‘:’ as host specifiers.

     When copying between two remote hosts, if the URI format is used, a _p_o_r_t
     cannot be specified on the _t_a_r_g_e_t if the --RR option is used.

     The options are as follows:

     --33      Copies between two remote hosts are transferred through the local
             host.  Without this option the data is copied directly between
             the two remote hosts.  Note that, when using the legacy SCP
             protocol (via the --OO flag), this option selects batch mode for
             the second host as ssccpp cannot ask for passwords or passphrases
             for both hosts.  This mode is the default.

     --44      Forces ssccpp to use IPv4 addresses only.

     --66      Forces ssccpp to use IPv6 addresses only.

     --AA      Allows forwarding of ssh-agent(1) to the remote system.  The
             default is not to forward an authentication agent.

     --BB      Selects batch mode (prevents asking for passwords or
             passphrases).

     --CC      Compression enable.  Passes the --CC flag to ssh(1) to enable
             compression.

     --cc _c_i_p_h_e_r
             Selects the cipher to use for encrypting the data transfer.  This
             option is directly passed to ssh(1).

     --DD _s_f_t_p___s_e_r_v_e_r___p_a_t_h
             Connect directly to a local SFTP server program rather than a
             remote one via ssh(1).  This option may be useful in debugging
             the client and server.

     --FF _s_s_h___c_o_n_f_i_g
             Specifies an alternative per-user configuration file for sssshh.
             This option is directly passed to ssh(1).

     --ii _i_d_e_n_t_i_t_y___f_i_l_e
             Selects the file from which the identity (private key) for public
             key authentication is read.  This option is directly passed to
             ssh(1).

     --JJ _d_e_s_t_i_n_a_t_i_o_n
             Connect to the target host by first making an ssccpp connection to
             the jump host described by _d_e_s_t_i_n_a_t_i_o_n and then establishing a
             TCP forwarding to the ultimate destination from there.  Multiple
             jump hops may be specified separated by comma characters.  This
             is a shortcut to specify a PPrrooxxyyJJuummpp configuration directive.
             This option is directly passed to ssh(1).

     --ll _l_i_m_i_t
             Limits the used bandwidth, specified in Kbit/s.

     --OO      Use the legacy SCP protocol for file transfers instead of the
             SFTP protocol.  Forcing the use of the SCP protocol may be
             necessary for servers that do not implement SFTP, for backwards-
             compatibility for particular filename wildcard patterns and for
             expanding paths with a ‘~’ prefix for older SFTP servers.

     --oo _s_s_h___o_p_t_i_o_n
             Can be used to pass options to sssshh in the format used in
             ssh_config(5).  This is useful for specifying options for which
             there is no separate ssccpp command-line flag.  For full details of
             the options listed below, and their possible values, see
             ssh_config(5).

                   AddressFamily
                   BatchMode
                   BindAddress
                   BindInterface
                   CanonicalDomains
                   CanonicalizeFallbackLocal
                   CanonicalizeHostname
                   CanonicalizeMaxDots
                   CanonicalizePermittedCNAMEs
                   CASignatureAlgorithms
                   CertificateFile
                   CheckHostIP
                   Ciphers
                   Compression
                   ConnectionAttempts
                   ConnectTimeout
                   ControlMaster
                   ControlPath
                   ControlPersist
                   GlobalKnownHostsFile
                   GSSAPIAuthentication
                   GSSAPIDelegateCredentials
                   HashKnownHosts
                   Host
                   HostbasedAcceptedAlgorithms
                   HostbasedAuthentication
                   HostKeyAlgorithms
                   HostKeyAlias
                   Hostname
                   IdentitiesOnly
                   IdentityAgent
                   IdentityFile
                   IPQoS
                   KbdInteractiveAuthentication
                   KbdInteractiveDevices
                   KexAlgorithms
                   KnownHostsCommand
                   LogLevel
                   MACs
                   NoHostAuthenticationForLocalhost
                   NumberOfPasswordPrompts
                   PasswordAuthentication
                   PKCS11Provider
                   Port
                   PreferredAuthentications
                   ProxyCommand
                   ProxyJump
                   PubkeyAcceptedAlgorithms
                   PubkeyAuthentication
                   RekeyLimit
                   RequiredRSASize
                   SendEnv
                   ServerAliveInterval
                   ServerAliveCountMax
                   SetEnv
                   StrictHostKeyChecking
                   TCPKeepAlive
                   UpdateHostKeys
                   User
                   UserKnownHostsFile
                   VerifyHostKeyDNS

     --PP _p_o_r_t
             Specifies the port to connect to on the remote host.  Note that
             this option is written with a capital ‘P’, because --pp is already
             reserved for preserving the times and mode bits of the file.

     --pp      Preserves modification times, access times, and file mode bits
             from the source file.

     --qq      Quiet mode: disables the progress meter as well as warning and
             diagnostic messages from ssh(1).

     --RR      Copies between two remote hosts are performed by connecting to
             the origin host and executing ssccpp there.  This requires that ssccpp
             running on the origin host can authenticate to the destination
             host without requiring a password.

     --rr      Recursively copy entire directories.  Note that ssccpp follows
             symbolic links encountered in the tree traversal.

     --SS _p_r_o_g_r_a_m
             Name of _p_r_o_g_r_a_m to use for the encrypted connection.  The program
             must understand ssh(1) options.

     --TT      Disable strict filename checking.  By default when copying files
             from a remote host to a local directory ssccpp checks that the
             received filenames match those requested on the command-line to
             prevent the remote end from sending unexpected or unwanted files.
             Because of differences in how various operating systems and
             shells interpret filename wildcards, these checks may cause
             wanted files to be rejected.  This option disables these checks
             at the expense of fully trusting that the server will not send
             unexpected filenames.

     --vv      Verbose mode.  Causes ssccpp and ssh(1) to print debugging messages
             about their progress.  This is helpful in debugging connection,
             authentication, and configuration problems.

     --XX _s_f_t_p___o_p_t_i_o_n
             Specify an option that controls aspects of SFTP protocol
             behaviour.  The valid options are:

             nnrreeqquueessttss=_v_a_l_u_e
                     Controls how many concurrent SFTP read or write requests
                     may be in progress at any point in time during a download
                     or upload.  By default 64 requests may be active
                     concurrently.

             bbuuffffeerr=_v_a_l_u_e
                     Controls the maximum buffer size for a single SFTP
                     read/write operation used during download or upload.  By
                     default a 32KB buffer is used.

EEXXIITT SSTTAATTUUSS
     The ssccpp utility exits 0 on success, and >0 if an error occurs.

SSEEEE AALLSSOO
     sftp(1), ssh(1), ssh-add(1), ssh-agent(1), ssh-keygen(1), ssh_config(5),
     sftp-server(8), sshd(8)

HHIISSTTOORRYY
     ssccpp is based on the rcp program in BSD source code from the Regents of
     the University of California.

     Since OpenSSH 9.0, ssccpp has used the SFTP protocol for transfers by
     default.

AAUUTTHHOORRSS
     Timo Rinne <_t_r_i_@_i_k_i_._f_i>
     Tatu Ylonen <_y_l_o_@_c_s_._h_u_t_._f_i>

CCAAVVEEAATTSS
     The legacy SCP protocol (selected by the --OO flag) requires execution of
     the remote user's shell to perform glob(3) pattern matching.  This
     requires careful quoting of any characters that have special meaning to
     the remote shell, such as quote characters.

macOS 14.6                     December 16, 2022                    macOS 14.6
"
nano,"pico(1)                     General Commands Manual                    pico(1)

NNaammee
       pico - simple text editor in the style of the Alpine Composer

SSyynnttaaxx
       ppiiccoo [ _o_p_t_i_o_n_s ] [ _f_i_l_e ]

DDeessccrriippttiioonn
       _P_i_c_o is a simple, display-oriented text editor based on the Alpine
       message system composer.  As with Alpine, commands are displayed at the
       bottom of the screen, and context-sensitive help is provided.  As
       characters are typed they are immediately inserted into the text.

       Editing commands are entered using control-key combinations.  As a
       work-around for communications programs that swallow certain control
       characters, you can emulate a control key by pressing ESCAPE twice,
       followed by the desired control character, e.g. ""ESC ESC c"" would be
       equivalent to entering a ctrl-c.  The editor has five basic features:
       paragraph justification, searching, block cut/paste, a spelling
       checker, and a file browser.

       Paragraph justification (or filling) takes place in the paragraph that
       contains the cursor, or, if the cursor is between lines, in the
       paragraph immediately below.  Paragraphs are delimited by blank lines,
       or by lines beginning with a space or tab.  Unjustification can be done
       immediately after justification using the control-U key combination.

       String searches are not sensitive to case.  A search begins at the
       current cursor position and wraps around the end of the text.  The most
       recent search string is offered as the default in subsequent searches.

       Blocks of text can be moved, copied or deleted with creative use of the
       command for mark (ctrl-^), delete (ctrl-k) and undelete (ctrl-u).  The
       delete command will remove text between the ""mark"" and the current
       cursor position, and place it in the ""cut"" buffer.  The undelete
       command effects a ""paste"" at the current cursor position.

       The spell checker examines all words in the text.  It then offers, in
       turn, each misspelled word for correction while highlighting it in the
       text.  Spell checking can be cancelled at any time.  Alternatively,
       _p_i_c_o will substitute for the default spell checking routine a routine
       defined by the SPELL environment variable.  The replacement routine
       should read standard input and write standard output.

       The file browser is offered as an option in the ""Read File"" and ""Write
       Out"" command prompts.  It is intended to help in searching for specific
       files and navigating directory hierarchies.  Filenames with sizes and
       names of directories in the current working directory are presented for
       selection.  The current working directory is displayed on the top line
       of the display while the list of available commands takes up the bottom
       two.  Several basic file manipulation functions are supported:  file
       renaming, copying, and deletion.

       More specific help is available in _p_i_c_o's online help.

OOppttiioonnss
       ++_n     Causes _p_i_c_o to be started with the cursor located _n lines into
              the file. (Note: no space between ""+"" sign and number)

       --aa     Display all files including those beginning with a period (.).

       --bb     Enable word wrap.

       --dd     Rebind the ""delete"" key so the character the cursor is on is
              rubbed out rather than the character to its left.

       --ee     Enable file name completion.

       --ff     Use function keys for commands.  This option supported only in
              conjunction with UW Enhanced NCSA telnet.

       --hh     List valid command line options.

       --jj     Enable ""Goto"" command in the file browser.  This enables the
              command to permit explicitly telling _p_i_l_o_t which directory to
              visit.

       --gg     Enable ""Show Cursor"" mode in file browser.  Cause cursor to be
              positioned before the current selection rather than placed at
              the lower left of the display.

       --kk     Causes ""Cut Text"" command to remove characters from the cursor
              position to the end of the line rather than remove the entire
              line.

       --mm     Enable mouse functionality.  This only works when _p_i_c_o is run
              from within an X Window System ""xterm"" window.

       --nn_n    The -n_n option enables new mail notification.  The _n argument is
              optional, and specifies how often, in seconds, your mailbox is
              checked for new mail.  For example, -n60 causes _p_i_c_o to check
              for new mail once every minute.  The default interval is 180
              seconds, while the minimum allowed is 30. (Note: no space
              between ""n"" and the number)

       --oo  _d_i_r Sets operating directory.  Only files within this directory are
              accessible.  Likewise, the file browser is limited to the
              specified directory subtree.

       --rr_n    Sets column used to limit the ""Justify"" command's right margin

       --ss  _s_p_e_l_l_e_r
              Specify an alternate program _s_p_e_l_l to use when spell checking.

       --tt     Enable ""tool"" mode.  Intended for when _p_i_c_o is used as the
              editor within other tools (e.g., Elm, Pnews).  _P_i_c_o will not
              prompt for save on exit, and will not rename the buffer during
              the ""Write Out"" command.

       --vv     View the file only, disallowing any editing.

       --vveerrssiioonn
              Print Pico version and exit.

       --ww     Disable word wrap (thus allow editing of long lines).

       --xx     Disable keymenu at the bottom of the screen.

       --zz     Enable ^Z suspension of _p_i_c_o.

       --pp     Preserve the ""start"" and ""stop"" characters, typically Ctrl-Q and
              Ctrl-S, which are sometimes used in communications paths to
              control data flow between devices that operate at different
              speeds.

       --QQ  _q_u_o_t_e_s_t_r
              Set the quote string.  Especially useful when composing email,
              setting this allows the quote string to be checked for when
              Justifying paragraphs.  A common quote string is ""> "".

       --WW  _w_o_r_d___s_e_p_a_r_a_t_o_r_s
              If characters listed here appear in the middle of a word
              surrounded by alphanumeric characters that word is split into
              two words. This is used by the Forward and Backward word
              commands and by the spell checker.

       --qq     Termcap or terminfo definition for input escape sequences are
              used in preference to sequences defined by default.  This option
              is only available if _p_i_c_o was compiled with the TERMCAP_WINS
              define turned on.

       --sseettllooccaallee__ccttyyppee
              Do setlocale(LC_CTYPE) if available. Default is to not do this
              setlocale.

       --nnoo__sseettllooccaallee__ccoollllaattee
              Do not do setlocale(LC_COLLATE). Default is to do this
              setlocale.

       Lastly, when a running _p_i_c_o is disconnected (i.e., receives a SIGHUP),
       _p_i_c_o will save the current work if needed before exiting.  Work is
       saved under the current filename with "".save"" appended.  If the current
       work is unnamed, it is saved under the filename ""pico.save"".

CCoolloorr SSuuppppoorrtt
       If your terminal supports colors, Pico can be configured to color text.
       Users can configure the color of the text, the text in the key menu,
       the titlebar, messages and prompt in the status line. As an added
       feature Pico can also be used to configure the color of up to three
       different levels of quoted text, and the signature of an email message.
       This is useful when Pico is used as a tool (with the -t command line
       switch.)

       Pico can tell you the number of colors that your terminal supports,
       when started with the switch -color_codes. In addition Pico will print
       a table showing the numerical code of every color supported in that
       terminal. In order to configure colors, one must use these numerical
       codes. For example, 0 is for black, so in order to configure a black
       color, one must use its code, the number 0.

       In order to activate colors, one must use the option -ncolors with a
       numerical value indicating the number of colors that your terminal
       supports, for example, _-_n_c_o_l_o_r_s _2_5_6 indicates that the user wishes to
       use a table of 256 colors.

       All options that control color, are four letter options. Their last two
       letters are either ""fc"" or ""bc"", indicating _f_o_r_e_g_r_o_u_n_d _c_o_l_o_r and
       _b_a_c_g_r_o_u_n_d _c_o_l_o_r, respectively. The first two letters indicate the type
       of text that is being configured, for example ""nt"" stands for _n_o_r_m_a_l
       _t_e_x_t, so that -ntfc represents the color of the normal text, while
       -ntbc represents the color of the background of normal text. Here is a
       complete list of the color options supported by Pico.

       --ccoolloorr__ccooddee
              displays the number of colors supported by the terminal, and a
              table showing the association of colors and numerical codes

       --nnccoolloorrss  _n_u_m_b_e_r
              activates color support in Pico, and tells Pico how many colors
              to use.  Depending on your terminal _n_u_m_b_e_r could be 8, 16, or
              256.

       --nnttffcc  _n_u_m
              specifies the number _n_u_m of the color to be used to color normal
              text.

       --nnttbbcc  _n_u_m
              specifies the number _n_u_m of the color of the background for
              normal text.

       --rrttffcc  _n_u_m
              specifies the number _n_u_m of the color of reverse text. Default:
              same as background color of normal text (if specified.)

       --rrttbbcc  _n_u_m
              specifies the number _n_u_m of the color of the background of
              reverse text. Default: same as color of normal text (if
              specified.)

       --ttbbffcc  _n_u_m
              specifies the number _n_u_m of then color of text of the title bar.
              Default: same as foreground color of reverse text.

       --ttbbbbcc  _n_u_m
              specifies the number _n_u_m of the color in the background of the
              title bar.

       --kkllffcc  _n_u_m
              specifies the number _n_u_m of the color of the text of the key
              label.

       --kkllbbcc  _n_u_m
              specifies the number _n_u_m of the color in the background of the
              key label.

       --kknnffcc  _n_u_m
              specifies the number _n_u_m of the color of the text of the key
              name.

       --kknnbbcc  _n_u_m
              specifies the number _n_u_m of the color of the background of the
              key name.

       --ssttffcc  _n_u_m
              specifies the number _n_u_m of the color of the text of the status
              line.

       --ssttbbcc  _n_u_m
              specifies the number _n_u_m of the color of the background of the
              status line.

       --pprrffcc  _n_u_m
              specifies the number _n_u_m of the color of the text of a prompt.

       --pprrbbcc  _n_u_m
              specifies the number _n_u_m of the color of the background of a
              prompt.

       --qq11ffcc  _n_u_m
              specifies the number _n_u_m of the color of the text of level one
              of quoted text.

       --qq11bbcc  _n_u_m
              specifies the number _n_u_m of the color of the background of level
              one of quoted text. If the option -q1bc is used, the default
              value of this option is the background color or normal text.

       --qq22ffcc  _n_u_m
              specifies the number _n_u_m of the color of text of level two of
              quoted text.

       --qq22bbcc  _n_u_m
              specifies the number _n_u_m of the color of the background of level
              two of quoted text. If the option -q1bc is used, the default
              value of this option is the background color or normal text.

       --qq33ffcc  _n_u_m
              specifies the number _n_u_m of the color of text of level three of
              quoted text.

       --ssbbffcc  _n_u_m
              specifies the number _n_u_m of the color of text of signature block
              text.

       --ssbbbbcc  _n_u_m
              specifies the number _n_u_m of the color of the background of
              signature block text.

BBuuggss
       The manner in which lines longer than the display width are dealt is
       not immediately obvious.  Lines that continue beyond the edge of the
       display are indicated by a '$' character at the end of the line.  Long
       lines are scrolled horizontally as the cursor moves through them.

FFiilleess
       pico.save        Unnamed interrupted work saved here.
       *.save           Interrupted work on a named file is saved here.

AAuutthhoorrss
       Michael Seibel <mikes@cac.washington.edu>
       Laurence Lundblade <lgl@cac.washington.edu>
       Pico was originally derived from MicroEmacs 3.6, by Dave G. Conroy.
       Copyright 1989-2008 by the University of Washington.

SSeeee AAllssoo
       alpine(1)
       Source distribution (part of the Alpine Message System):

       $Date: 2009-02-02 13:54:23 -0600 (Mon, 02 Feb 2009) $

                                 Version 5.09                          pico(1)
"
vim,"VIM(1)                      General Commands Manual                     VIM(1)

NNAAMMEE
       vim - Vi IMproved, a programmer's text editor

SSYYNNOOPPSSIISS
       vviimm [options] [file ..]
       vviimm [options] -
       vviimm [options] -t tag
       vviimm [options] -q [errorfile]

       eexx
       vviieeww
       ggvviimm ggvviieeww eevviimm eevviieeww
       rrvviimm rrvviieeww rrggvviimm rrggvviieeww

DDEESSCCRRIIPPTTIIOONN
       VViimm is a text editor that is upwards compatible to Vi.  It can be used
       to edit all kinds of plain text.  It is especially useful for editing
       programs.

       There are a lot of enhancements above Vi: multi level undo, multi
       windows and buffers, syntax highlighting, command line editing,
       filename completion, on-line help, visual selection, etc..  See "":help
       vi_diff.txt"" for a summary of the differences between VViimm and Vi.

       While running VViimm a lot of help can be obtained from the on-line help
       system, with the "":help"" command.  See the ON-LINE HELP section below.

       Most often VViimm is started to edit a single file with the command

            vim file

       More generally VViimm is started with:

            vim [options] [filelist]

       If the filelist is missing, the editor will start with an empty buffer.
       Otherwise exactly one out of the following four may be used to choose
       one or more files to be edited.

       file ..     A list of filenames.  The first one will be the current
                   file and read into the buffer.  The cursor will be
                   positioned on the first line of the buffer.  You can get to
                   the other files with the "":next"" command.  To edit a file
                   that starts with a dash, precede the filelist with ""--"".

       -           The file to edit is read from stdin.  Commands are read
                   from stderr, which should be a tty.

       -t {tag}    The file to edit and the initial cursor position depends on
                   a ""tag"", a sort of goto label.  {tag} is looked up in the
                   tags file, the associated file becomes the current file and
                   the associated command is executed.  Mostly this is used
                   for C programs, in which case {tag} could be a function
                   name.  The effect is that the file containing that function
                   becomes the current file and the cursor is positioned on
                   the start of the function.  See "":help tag-commands"".

       -q [errorfile]
                   Start in quickFix mode.  The file [errorfile] is read and
                   the first error is displayed.  If [errorfile] is omitted,
                   the filename is obtained from the 'errorfile' option
                   (defaults to ""AztecC.Err"" for the Amiga, ""errors.err"" on
                   other systems).  Further errors can be jumped to with the
                   "":cn"" command.  See "":help quickfix"".

       VViimm behaves differently, depending on the name of the command (the
       executable may still be the same file).

       vim       The ""normal"" way, everything is default.

       ex        Start in Ex mode.  Go to Normal mode with the "":vi"" command.
                 Can also be done with the ""-e"" argument.

       view      Start in read-only mode.  You will be protected from writing
                 the files.  Can also be done with the ""-R"" argument.

       gvim gview
                 The GUI version.  Starts a new window.  Can also be done with
                 the ""-g"" argument.

       evim eview
                 The GUI version in easy mode.  Starts a new window.  Can also
                 be done with the ""-y"" argument.

       rvim rview rgvim rgview
                 Like the above, but with restrictions.  It will not be
                 possible to start shell commands, or suspend VViimm..  Can also
                 be done with the ""-Z"" argument.

OOPPTTIIOONNSS
       The options may be given in any order, before or after filenames.
       Options without an argument can be combined after a single dash.

       +[num]      For the first file the cursor will be positioned on line
                   ""num"".  If ""num"" is missing, the cursor will be positioned
                   on the last line.

       +/{pat}     For the first file the cursor will be positioned in the
                   line with the first occurrence of {pat}.  See "":help
                   search-pattern"" for the available search patterns.

       +{command}

       -c {command}
                   {command} will be executed after the first file has been
                   read.  {command} is interpreted as an Ex command.  If the
                   {command} contains spaces it must be enclosed in double
                   quotes (this depends on the shell that is used).  Example:
                   vim ""+set si"" main.c
                   Note: You can use up to 10 ""+"" or ""-c"" commands.

       -S {file}   {file} will be sourced after the first file has been read.
                   This is equivalent to -c ""source {file}"".  {file} cannot
                   start with '-'.  If {file} is omitted ""Session.vim"" is used
                   (only works when -S is the last argument).

       --cmd {command}
                   Like using ""-c"", but the command is executed just before
                   processing any vimrc file.  You can use up to 10 of these
                   commands, independently from ""-c"" commands.

       -A          If VViimm has been compiled with ARABIC support for editing
                   right-to-left oriented files and Arabic keyboard mapping,
                   this option starts VViimm in Arabic mode, i.e. 'arabic' is
                   set.  Otherwise an error message is given and VViimm aborts.

       -b          Binary mode.  A few options will be set that makes it
                   possible to edit a binary or executable file.

       -C          Compatible.  Set the 'compatible' option.  This will make
                   VViimm behave mostly like Vi, even though a .vimrc file
                   exists.

       -d          Start in diff mode.  There should between two to eight file
                   name arguments.  VViimm will open all the files and show
                   differences between them.  Works like vimdiff(1).

       -d {device} Open {device} for use as a terminal.  Only on the Amiga.
                   Example: ""-d con:20/30/600/150"".

       -D          Debugging.  Go to debugging mode when executing the first
                   command from a script.

       -e          Start VViimm in Ex mode, just like the executable was called
                   ""ex"".

       -E          Start VViimm in improved Ex mode, just like the executable was
                   called ""exim"".

       -f          Foreground.  For the GUI version, VViimm will not fork and
                   detach from the shell it was started in.  On the Amiga, VViimm
                   is not restarted to open a new window.  This option should
                   be used when VViimm is executed by a program that will wait
                   for the edit session to finish (e.g. mail).  On the Amiga
                   the "":sh"" and "":!"" commands will not work.

       --nofork    Foreground.  For the GUI version, VViimm will not fork and
                   detach from the shell it was started in.

       -F          If VViimm has been compiled with FKMAP support for editing
                   right-to-left oriented files and Farsi keyboard mapping,
                   this option starts VViimm in Farsi mode, i.e. 'fkmap' and
                   'rightleft' are set.  Otherwise an error message is given
                   and VViimm aborts.

       -g          If VViimm has been compiled with GUI support, this option
                   enables the GUI.  If no GUI support was compiled in, an
                   error message is given and VViimm aborts.

       -h          Give a bit of help about the command line arguments and
                   options.  After this VViimm exits.

       -H          If VViimm has been compiled with RIGHTLEFT support for editing
                   right-to-left oriented files and Hebrew keyboard mapping,
                   this option starts VViimm in Hebrew mode, i.e. 'hkmap' and
                   'rightleft' are set.  Otherwise an error message is given
                   and VViimm aborts.

       -i {viminfo}
                   Specifies the filename to use when reading or writing the
                   viminfo file, instead of the default ""~/.viminfo"".  This
                   can also be used to skip the use of the .viminfo file, by
                   giving the name ""NONE"".

       -L          Same as -r.

       -l          Lisp mode.  Sets the 'lisp' and 'showmatch' options on.

       -m          Modifying files is disabled.  Resets the 'write' option.
                   You can still modify the buffer, but writing a file is not
                   possible.

       -M          Modifications not allowed.  The 'modifiable' and 'write'
                   options will be unset, so that changes are not allowed and
                   files can not be written.  Note that these options can be
                   set to enable making modifications.

       -N          No-compatible mode.  Resets the 'compatible' option.  This
                   will make VViimm behave a bit better, but less Vi compatible,
                   even though a .vimrc file does not exist.

       -n          No swap file will be used.  Recovery after a crash will be
                   impossible.  Handy if you want to edit a file on a very
                   slow medium (e.g. floppy).  Can also be done with "":set
                   uc=0"".  Can be undone with "":set uc=200"".

       -nb         Become an editor server for NetBeans.  See the docs for
                   details.

       -o[N]       Open N windows stacked.  When N is omitted, open one window
                   for each file.

       -O[N]       Open N windows side by side.  When N is omitted, open one
                   window for each file.

       -p[N]       Open N tab pages.  When N is omitted, open one tab page for
                   each file.

       -R          Read-only mode.  The 'readonly' option will be set.  You
                   can still edit the buffer, but will be prevented from
                   accidentally overwriting a file.  If you do want to
                   overwrite a file, add an exclamation mark to the Ex
                   command, as in "":w!"".  The -R option also implies the -n
                   option (see above).  The 'readonly' option can be reset
                   with "":set noro"".  See "":help 'readonly'"".

       -r          List swap files, with information about using them for
                   recovery.

       -r {file}   Recovery mode.  The swap file is used to recover a crashed
                   editing session.  The swap file is a file with the same
                   filename as the text file with "".swp"" appended.  See "":help
                   recovery"".

       -s          Silent mode.  Only when started as ""Ex"" or when the ""-e""
                   option was given before the ""-s"" option.

       -s {scriptin}
                   The script file {scriptin} is read.  The characters in the
                   file are interpreted as if you had typed them.  The same
                   can be done with the command "":source! {scriptin}"".  If the
                   end of the file is reached before the editor exits, further
                   characters are read from the keyboard.

       -T {terminal}
                   Tells VViimm the name of the terminal you are using.  Only
                   required when the automatic way doesn't work.  Should be a
                   terminal known to VViimm (builtin) or defined in the termcap
                   or terminfo file.

       -u {vimrc}  Use the commands in the file {vimrc} for initializations.
                   All the other initializations are skipped.  Use this to
                   edit a special kind of files.  It can also be used to skip
                   all initializations by giving the name ""NONE"".  See "":help
                   initialization"" within vim for more details.

       -U {gvimrc} Use the commands in the file {gvimrc} for GUI
                   initializations.  All the other GUI initializations are
                   skipped.  It can also be used to skip all GUI
                   initializations by giving the name ""NONE"".  See "":help
                   gui-init"" within vim for more details.

       -V[N]       Verbose.  Give messages about which files are sourced and
                   for reading and writing a viminfo file.  The optional
                   number N is the value for 'verbose'.  Default is 10.

       -v          Start VViimm in Vi mode, just like the executable was called
                   ""vi"".  This only has effect when the executable is called
                   ""ex"".

       -w {scriptout}
                   All the characters that you type are recorded in the file
                   {scriptout}, until you exit VViimm..  This is useful if you
                   want to create a script file to be used with ""vim -s"" or
                   "":source!"".  If the {scriptout} file exists, characters are
                   appended.

       -W {scriptout}
                   Like -w, but an existing file is overwritten.

       -x          Use encryption when writing files.  Will prompt for a crypt
                   key.

       -X          Don't connect to the X server.  Shortens startup time in a
                   terminal, but the window title and clipboard will not be
                   used.

       -y          Start VViimm in easy mode, just like the executable was called
                   ""evim"" or ""eview"".  Makes VViimm behave like a click-and-type
                   editor.

       -Z          Restricted mode.  Works like the executable starts with
                   ""r"".

       --          Denotes the end of the options.  Arguments after this will
                   be handled as a file name.  This can be used to edit a
                   filename that starts with a '-'.

       --clean     Do not use any personal configuration (vimrc, plugins,
                   etc.).  Useful to see if a problem reproduces with a clean
                   Vim setup.

       --echo-wid  GTK GUI only: Echo the Window ID on stdout.

       --help      Give a help message and exit, just like ""-h"".

       --literal   Take file name arguments literally, do not expand
                   wildcards.  This has no effect on Unix where the shell
                   expands wildcards.

       --noplugin  Skip loading plugins.  Implied by -u NONE.

       --remote    Connect to a Vim server and make it edit the files given in
                   the rest of the arguments.  If no server is found a warning
                   is given and the files are edited in the current Vim.

       --remote-expr {expr}
                   Connect to a Vim server, evaluate {expr} in it and print
                   the result on stdout.

       --remote-send {keys}
                   Connect to a Vim server and send {keys} to it.

       --remote-silent
                   As --remote, but without the warning when no server is
                   found.

       --remote-wait
                   As --remote, but Vim does not exit until the files have
                   been edited.

       --remote-wait-silent
                   As --remote-wait, but without the warning when no server is
                   found.

       --serverlist
                   List the names of all Vim servers that can be found.

       --servername {name}
                   Use {name} as the server name.  Used for the current Vim,
                   unless used with a --remote argument, then it's the name of
                   the server to connect to.

       --socketid {id}
                   GTK GUI only: Use the GtkPlug mechanism to run gvim in
                   another window.

       --startuptime {file}
                   During startup write timing messages to the file {fname}.

       --version   Print version information and exit.

OONN--LLIINNEE HHEELLPP
       Type "":help"" in VViimm to get started.  Type "":help subject"" to get help
       on a specific subject.  For example: "":help ZZ"" to get help for the
       ""ZZ"" command.  Use <Tab> and CTRL-D to complete subjects ("":help
       cmdline-completion"").  Tags are present to jump from one place to
       another (sort of hypertext links, see "":help"").  All documentation
       files can be viewed in this way, for example "":help syntax.txt"".

FFIILLEESS
       /usr/local/lib/vim/doc/*.txt
                      The VViimm documentation files.  Use "":help doc-file-list""
                      to get the complete list.

       /usr/local/lib/vim/doc/tags
                      The tags file used for finding information in the
                      documentation files.

       /usr/local/lib/vim/syntax/syntax.vim
                      System wide syntax initializations.

       /usr/local/lib/vim/syntax/*.vim
                      Syntax files for various languages.

       /usr/local/lib/vim/vimrc
                      System wide VViimm initializations.

       ~/.vimrc       Your personal VViimm initializations.

       /usr/local/lib/vim/gvimrc
                      System wide gvim initializations.

       ~/.gvimrc      Your personal gvim initializations.

       /usr/local/lib/vim/optwin.vim
                      Script used for the "":options"" command, a nice way to
                      view and set options.

       /usr/local/lib/vim/menu.vim
                      System wide menu initializations for gvim.

       /usr/local/lib/vim/bugreport.vim
                      Script to generate a bug report.  See "":help bugs"".

       /usr/local/lib/vim/filetype.vim
                      Script to detect the type of a file by its name.  See
                      "":help 'filetype'"".

       /usr/local/lib/vim/scripts.vim
                      Script to detect the type of a file by its contents.
                      See "":help 'filetype'"".

       /usr/local/lib/vim/print/*.ps
                      Files used for PostScript printing.

       For recent info read the VIM home page:
       <URL:http://www.vim.org/>

SSEEEE AALLSSOO
       vimtutor(1)

AAUUTTHHOORR
       Most of VViimm was made by Bram Moolenaar, with a lot of help from others.
       See "":help credits"" in VViimm..
       VViimm is based on Stevie, worked on by: Tim Thompson, Tony Andrews and
       G.R. (Fred) Walter.  Although hardly any of the original code remains.

BBUUGGSS
       Probably.  See "":help todo"" for a list of known problems.

       Note that a number of things that may be regarded as bugs by some, are
       in fact caused by a too-faithful reproduction of Vi's behaviour.  And
       if you think other things are bugs ""because Vi does it differently"",
       you should take a closer look at the vi_diff.txt file (or type :help
       vi_diff.txt when in Vim).  Also have a look at the 'compatible' and
       'cpoptions' options.

                                  2021 Jun 13                           VIM(1)
"
apt-get,No manual entry for apt-get
yum,No manual entry for yum
service,No manual entry for service
systemctl,No manual entry for systemctl
reboot,"REBOOT(8)                   System Manager's Manual                  REBOOT(8)

NNAAMMEE
     hhaalltt, rreebboooott – stopping and restarting the system

SSYYNNOOPPSSIISS
     hhaalltt [--llNNnnqq]
     rreebboooott [--llNNnnqq]

DDEESSCCRRIIPPTTIIOONN
     The hhaalltt and rreebboooott utilities flush the file system cache to disk, send
     all running processes a SIGTERM (and subsequently a SIGKILL) and,
     respectively, halt or restart the system.  The action is logged,
     including entering a shutdown record into the user accounting database.

     When the system is halted with the halt command, the system is powered
     off.

     The options are as follows:

     --ll      The halt or reboot is _n_o_t logged to the system log.  This option
             is intended for applications such as shutdown(8), that call hhaalltt
             or rreebboooott and log this themselves.

     --NN      The file system cache is not flushed during the initial process
             clean-up, however the kernel level reboot(2) is still processed
             with a sync.  This option can be useful for performing a
             “best-effort” reboot when devices might be unavailable.  This can
             happen when devices have been disconnected.

     --nn      The file system cache is not flushed.  This option should
             probably not be used.

     --qq      The system is halted or restarted quickly and ungracefully, and
             only the flushing of the file system cache is performed (if the
             --nn option is not specified).  This option should probably not be
             used.

     Normally, the shutdown(8) utility is used when the system needs to be
     halted or restarted, giving users advance warning of their impending doom
     and cleanly terminating specific programs.

SSIIGGTTEERRMM TTOO SSIIGGKKIILLLL IINNTTEERRVVAALL
     The SIGKILL will follow the SIGTERM by an intentionally indeterminate
     period of time.  Programs are expected to take only enough time to flush
     all dirty data and exit.  Developers are encouraged to file a bug with
     the OS vendor, should they encounter an issue with this functionality.

SSEEEE AALLSSOO
     getutxent(3), wtmp(5), shutdown(8), sync(8)

HHIISSTTOORRYY
     A rreebboooott utility appeared in 4.0BSD.

macOS 14.6                       June 6, 2023                       macOS 14.6
"
shutdown,"SHUTDOWN(8)                 System Manager's Manual                SHUTDOWN(8)

NNAAMMEE
     sshhuuttddoowwnn – close down the system at a given time

SSYYNNOOPPSSIISS
     sshhuuttddoowwnn [--] [--hh | --pp | --rr | --ss | --kk] [--oo [--nn]] _t_i_m_e
              [_w_a_r_n_i_n_g_-_m_e_s_s_a_g_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The sshhuuttddoowwnn utility provides an automated shutdown procedure for super-
     users to nicely notify users when the system is shutting down, saving
     them from system administrators, hackers, and gurus, who would otherwise
     not bother with such niceties.

     The following options are available:

     --hh      The system is halted and powered off at the specified _t_i_m_e.

     --pp      This flag is the equivalent of --hh.

     --rr      The system is rebooted at the specified _t_i_m_e.

     --ss      The system is put to sleep at the specified _t_i_m_e.

     --kk      Kick everybody off.  The --kk option does not actually halt the
             system, but leaves the system multi-user with logins disabled
             (for all but super-user).

     --oo      If one of the --hh or --rr options are specified, sshhuuttddoowwnn will
             execute halt(8) or reboot(8) instead of sending a signal to
             launchd(8).

     --nn      If the --oo option is specified, prevent the file system cache from
             being flushed by passing --nn to halt(8) or reboot(8).  The use of
             this option is discouraged as it can result in data loss.

     _t_i_m_e    _T_i_m_e is the time at which sshhuuttddoowwnn will bring the system down and
             may be the case-insensitive word _n_o_w (indicating an immediate
             shutdown) or a future time in one of two formats: _+_n_u_m_b_e_r, or
             _y_y_m_m_d_d_h_h_m_m, where the year, month, and day may be defaulted to
             the current system values.  The first form brings the system down
             in _n_u_m_b_e_r minutes and the second at the absolute time specified.
             _+_n_u_m_b_e_r may be specified in units other than minutes by appending
             the corresponding suffix: “s”, “sec”, “m”, “min”, “h”, “hour”.

             If an absolute time is specified, but not a date, and that time
             today has already passed, sshhuuttddoowwnn will assume that the same time
             tomorrow was meant.  (If a complete date is specified which has
             already passed, sshhuuttddoowwnn will print an error and exit without
             shutting the system down.)

     _w_a_r_n_i_n_g_-_m_e_s_s_a_g_e
             Any other arguments comprise the warning message that is
             broadcast to users currently logged into the system.

     --       If ‘--’ is supplied as an option, the warning message is read from
             the standard input.

     At intervals, becoming more frequent as apocalypse approaches and
     starting at ten hours before shutdown, warning messages are displayed on
     the terminals of all users logged in.  Five minutes before shutdown, or
     immediately if shutdown is in less than 5 minutes, logins are disabled by
     creating _/_v_a_r_/_r_u_n_/_n_o_l_o_g_i_n and copying the warning message there.  If this
     file exists when a user attempts to log in, login(1) prints its contents
     and exits.  The file is removed just before sshhuuttddoowwnn exits.

     At shutdown time a message is written to the system log, containing the
     time of shutdown, the person who initiated the shutdown and the reason.
     The corresponding signal is then sent to launchd(8) to respectively halt,
     reboot or bring the system down to single-user state (depending on the
     above options).  The time of the shutdown and the warning message are
     placed in _/_v_a_r_/_r_u_n_/_n_o_l_o_g_i_n and should be used to inform the users about
     when the system will be back up and why it is going down (or anything
     else).

     A scheduled shutdown can be canceled by killing the sshhuuttddoowwnn process (a
     SIGTERM should suffice).  The _/_v_a_r_/_r_u_n_/_n_o_l_o_g_i_n file that sshhuuttddoowwnn created
     will be removed automatically.

     When run without options, the sshhuuttddoowwnn utility will place the system into
     single user mode at the _t_i_m_e specified.

SSIIGGTTEERRMM TTOO SSIIGGKKIILLLL IINNTTEERRVVAALL
     Upon shutdown, all running processes are sent a SIGTERM followed by a
     SIGKILL.  The SIGKILL will follow the SIGTERM by an intentionally
     indeterminate period of time.  Programs are expected to take only enough
     time to flush all dirty data and exit.  Developers are encouraged to file
     a bug with the OS vendor, should they encounter an issue with this
     functionality.

FFIILLEESS
     _/_v_a_r_/_r_u_n_/_n_o_l_o_g_i_n  tells login(1) not to let anyone log in

EEXXAAMMPPLLEESS
     Reboot the system in 30 minutes and display a warning message on the
     terminals of all users currently logged in:

           # shutdown -r +30 ""System will reboot""

CCOOMMPPAATTIIBBIILLIITTYY
     The hours and minutes in the second time format may be separated by a
     colon (``:'') for backward compatibility.

SSEEEE AALLSSOO
     kill(1), login(1), wall(1), nologin(5), halt(8), launchd(8), reboot(8)

HHIISSTTOORRYY
     A sshhuuttddoowwnn command was originally written by Ian Johnstone for UNSW's
     modified AT&T UNIX 6th Edn.  It was modified and then incorporated in
     4.1BSD.

macOS 14.6                       June 6, 2023                       macOS 14.6
"
whoami,"WHOAMI(1)                   General Commands Manual                  WHOAMI(1)

NNAAMMEE
     wwhhooaammii – display effective user id

SSYYNNOOPPSSIISS
     wwhhooaammii

DDEESSCCRRIIPPTTIIOONN
     The wwhhooaammii utility has been obsoleted by the id(1) utility, and is
     equivalent to “iidd --uunn”.  The command “iidd --pp” is suggested for normal
     interactive use.

     The wwhhooaammii utility displays your effective user ID as a name.

EEXXIITT SSTTAATTUUSS
     The wwhhooaammii utility exits 0 on success, and >0 if an error occurs.

SSEEEE AALLSSOO
     id(1)

macOS 14.6                       June 6, 1993                       macOS 14.6
"
man,"MAN(1)                      General Commands Manual                     MAN(1)

NNAAMMEE
     mmaann, aapprrooppooss, wwhhaattiiss – display online manual documentation pages

SSYYNNOOPPSSIISS
     mmaann [--aaddhhoo] [--tt | --ww] [--MM _m_a_n_p_a_t_h] [--PP _p_a_g_e_r] [--SS _m_a_n_s_e_c_t]
         [--mm _a_r_c_h[:_m_a_c_h_i_n_e]] [--pp [_e_p_r_t_v]] [_m_a_n_s_e_c_t] _p_a_g_e _._._.

     mmaann --ff [--dd] [--MM _m_a_n_p_a_t_h] [--PP _p_a_g_e_r] [--SS _m_a_n_s_e_c_t] _k_e_y_w_o_r_d _._._.
     wwhhaattiiss [--dd] [--ss _m_a_n_s_e_c_t] _k_e_y_w_o_r_d _._._.

     mmaann --kk [--dd] [--MM _m_a_n_p_a_t_h] [--PP _p_a_g_e_r] [--SS _m_a_n_s_e_c_t] _k_e_y_w_o_r_d _._._.
     aapprrooppooss [--dd] [--ss _m_a_n_s_e_c_t] _k_e_y_w_o_r_d _._._.

DDEESSCCRRIIPPTTIIOONN
     The mmaann utility finds and displays online manual documentation pages.  If
     _m_a_n_s_e_c_t is provided, mmaann restricts the search to the specific section of
     the manual.

     The sections of the manual are:
           1.   General Commands Manual
           2.   System Calls Manual
           3.   Library Functions Manual
           4.   Kernel Interfaces Manual
           5.   File Formats Manual
           6.   Games Manual
           7.   Miscellaneous Information Manual
           8.   System Manager's Manual
           9.   Kernel Developer's Manual

     Options that mmaann understands:

     --MM _m_a_n_p_a_t_h
             Forces a specific colon separated manual path instead of the
             default search path.  See manpath(1).  Overrides the MANPATH
             environment variable.

     --PP _p_a_g_e_r
             Use specified pager.  Defaults to “less -sR” if color support is
             enabled, or “less -s”.  Overrides the MANPAGER environment
             variable, which in turn overrides the PAGER environment variable.

     --SS _m_a_n_s_e_c_t
             Restricts manual sections searched to the specified colon
             delimited list.  Defaults to “1:8:2:3:3lua:n:4:5:6:7:9:l”.
             Overrides the MANSECT environment variable.

     --aa      Display all manual pages instead of just the first found for each
             _p_a_g_e argument.

     --dd      Print extra debugging information.  Repeat for increased
             verbosity.  Does not display the manual page.

     --ff      Emulate whatis(1).  Note that only a subset of options will have
             any effect when mmaann is invoked in this mode.  See the below
             description of wwhhaattiiss options for details.

     --hh      Display short help message and exit.

     --kk      Emulate apropos(1).  Note that only a subset of options will have
             any effect when mmaann is invoked in this mode.  See the below
             description of aapprrooppooss options for details.

     --mm _a_r_c_h[:_m_a_c_h_i_n_e]
             Override the default architecture and machine settings allowing
             lookup of other platform specific manual pages.  This option is
             accepted, but not implemented, on macOS.

     --oo      Force use of non-localized manual pages.  See _I_M_P_L_E_M_E_N_T_A_T_I_O_N
             _N_O_T_E_S for how locale specific searches work.  Overrides the
             LC_ALL, LC_CTYPE, and LANG environment variables.

     --pp [eepprrttvv]
             Use the list of given preprocessors before running nroff(1) or
             troff(1).  Valid preprocessors arguments:

             ee       eqn(1)
             pp       pic(1)
             rr       refer(1)
             tt       tbl(1)
             vv       vgrind(1)

             Overrides the MANROFFSEQ environment variable.

     --tt      Send manual page source through troff(1) allowing transformation
             of the manual pages to other formats.

     --ww      Display the location of the manual page instead of the contents
             of the manual page.

     Options that aapprrooppooss and wwhhaattiiss understand:

     --dd      Same as the --dd option for mmaann.

     --ss      Same as the --SS option for mmaann.

     When mmaann is operated in aapprrooppooss or wwhhaattiiss emulation mode, only a subset
     of its options will be honored.  Specifically, --dd, --MM, --PP, and --SS have
     equivalent functionality in the aapprrooppooss and wwhhaattiiss implementation
     provided.  The MANPATH, MANSECT, and MANPAGER environment variables will
     similarly be honored.

IIMMPPLLEEMMEENNTTAATTIIOONN NNOOTTEESS
   LLooccaallee SSppeecciiffiicc SSeeaarrcchheess
     The mmaann utility supports manual pages in different locales.  The search
     behavior is dictated by the first of three environment variables with a
     nonempty string: LC_ALL, LC_CTYPE, or LANG.  If set, mmaann will search for
     locale specific manual pages using the following logic:

           _l_a_n_g__c_o_u_n_t_r_y._c_h_a_r_s_e_t
           _l_a_n_g._c_h_a_r_s_e_t
           en._c_h_a_r_s_e_t

     For example, if LC_ALL is set to “ja_JP.eucJP”, mmaann will search the
     following paths when considering section 1 manual pages in
     _/_u_s_r_/_s_h_a_r_e_/_m_a_n:

           _/_u_s_r_/_s_h_a_r_e_/_m_a_n_/_j_a___J_P_._e_u_c_J_P_/_m_a_n_1
           _/_u_s_r_/_s_h_a_r_e_/_m_a_n_/_j_a_._e_u_c_J_P_/_m_a_n_1
           _/_u_s_r_/_s_h_a_r_e_/_m_a_n_/_e_n_._e_u_c_J_P_/_m_a_n_1
           _/_u_s_r_/_s_h_a_r_e_/_m_a_n_/_m_a_n_1

   DDiissppllaayyiinngg SSppeecciiffiicc MMaannuuaall FFiilleess
     The mmaann utility also supports displaying a specific manual page if passed
     a path to the file as long as it contains a ‘/’ character.

EENNVVIIRROONNMMEENNTT
     The following environment variables affect the execution of mmaann:

     LC_ALL, LC_CTYPE, LANG
                     Used to find locale specific manual pages.  Valid values
                     can be found by running the locale(1) command.  See
                     _I_M_P_L_E_M_E_N_T_A_T_I_O_N _N_O_T_E_S for details.  Influenced by the --oo
                     option.

     MACHINE_ARCH, MACHINE
                     Used to find platform specific manual pages.  If unset,
                     the output of “sysctl hw.machine_arch” and “sysctl
                     hw.machine” is used respectively.  See _I_M_P_L_E_M_E_N_T_A_T_I_O_N
                     _N_O_T_E_S for details.  Corresponds to the --mm option.

     MANPATH         The standard search path used by man(1) may be changed by
                     specifying a path in the MANPATH environment variable.
                     Invalid paths, or paths without manual databases, are
                     ignored.  Overridden by --MM.  If MANPATH begins with a
                     colon, it is appended to the default list; if it ends
                     with a colon, it is prepended to the default list; or if
                     it contains two adjacent colons, the standard search path
                     is inserted between the colons.  If none of these
                     conditions are met, it overrides the standard search
                     path.

     MANROFFSEQ      Used to determine the preprocessors for the manual source
                     before running nroff(1) or troff(1).  If unset, defaults
                     to tbl(1).  Corresponds to the --pp option.

     MANSECT         Restricts manual sections searched to the specified colon
                     delimited list.  Corresponds to the --SS option.

     MANWIDTH        If set to a numeric value, used as the width manpages
                     should be displayed.  Otherwise, if set to a special
                     value “tty”, and output is to a terminal, the pages may
                     be displayed over the whole width of the screen.

     MANCOLOR        If set, enables color support.

     MANPAGER        Program used to display files.

                     If unset, and color support is enabled, “less -sR” is
                     used.

                     If unset, and color support is disabled, then PAGER is
                     used.  If that has no value either, “less -s” is used.

FFIILLEESS
     _/_e_t_c_/_m_a_n_._c_o_n_f
             System configuration file.
     _/_u_s_r_/_l_o_c_a_l_/_e_t_c_/_m_a_n_._d_/_*_._c_o_n_f
             Local configuration files.

EEXXIITT SSTTAATTUUSS
     The mmaann utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Show the manual page for stat(2):

           $ man 2 stat

     Show all manual pages for ‘stat’.

           $ man -a stat

     List manual pages which match the regular expression either in the title
     or in the body:

           $ man -k '\<copy\>.*archive'

     Show the manual page for ls(1) and use cat(1) as pager:

           $ man -P cat ls

     Show the location of the ls(1) manual page:

           $ man -w ls

SSEEEE AALLSSOO
     apropos(1), intro(1), mandoc(1), manpath(1), whatis(1), intro(2),
     intro(3), intro(3lua), intro(4), intro(5), man.conf(5), intro(6),
     intro(7), mdoc(7), intro(8), intro(9)

macOS 14.6                      January 9, 2021                     macOS 14.6
"
alias,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
export,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
head,"HEAD(1)                     General Commands Manual                    HEAD(1)

NNAAMMEE
     hheeaadd – display first lines of a file

SSYYNNOOPPSSIISS
     hheeaadd [--nn _c_o_u_n_t | --cc _b_y_t_e_s] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     This filter displays the first _c_o_u_n_t lines or _b_y_t_e_s of each of the
     specified files, or of the standard input if no files are specified.  If
     _c_o_u_n_t is omitted it defaults to 10.

     The following options are available:

     --cc _b_y_t_e_s, ----bbyytteess=_b_y_t_e_s
             Print _b_y_t_e_s of each of the specified files.

     --nn _c_o_u_n_t, ----lliinneess=_c_o_u_n_t
             Print _c_o_u_n_t lines of each of the specified files.

     If more than a single file is specified, each file is preceded by a
     header consisting of the string “==> XXX <==” where “XXX” is the name of
     the file.

EEXXIITT SSTTAATTUUSS
     The hheeaadd utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     To display the first 500 lines of the file _f_o_o:

           $ head -n 500 foo

     hheeaadd can be used in conjunction with tail(1) in the following way to, for
     example, display only line 500 from the file _f_o_o:

           $ head -n 500 foo | tail -n 1

SSEEEE AALLSSOO
     tail(1)

HHIISSTTOORRYY
     The hheeaadd command appeared in PWB UNIX.

macOS 14.6                      April 10, 2018                      macOS 14.6
"
tail,"TAIL(1)                     General Commands Manual                    TAIL(1)

NNAAMMEE
     ttaaiill – display the last part of a file

SSYYNNOOPPSSIISS
     ttaaiill [--FF | --ff | --rr] [--qqvv] [--bb _n_u_m_b_e_r | --cc _n_u_m_b_e_r | --nn _n_u_m_b_e_r] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The ttaaiill utility displays the contents of _f_i_l_e or, by default, its
     standard input, to the standard output.

     The display begins at a byte, line or 512-byte block location in the
     input.  Numbers having a leading plus (‘+’) sign are relative to the
     beginning of the input, for example, “-c +2” starts the display at the
     second byte of the input.  Numbers having a leading minus (‘-’) sign or
     no explicit sign are relative to the end of the input, for example, “-n
     2” displays the last two lines of the input.  The default starting
     location is “-n 10”, or the last 10 lines of the input.

     The options are as follows:

     --bb _n_u_m_b_e_r, ----bblloocckkss=_n_u_m_b_e_r
             The location is _n_u_m_b_e_r 512-byte blocks.

     --cc _n_u_m_b_e_r, ----bbyytteess=_n_u_m_b_e_r
             The location is _n_u_m_b_e_r bytes.

     --ff      The --ff option causes ttaaiill to not stop when end of file is
             reached, but rather to wait for additional data to be appended to
             the input.  The --ff option is ignored if the standard input is a
             pipe, but not if it is a FIFO.

     --FF      The --FF option implies the --ff option, but ttaaiill will also check to
             see if the file being followed has been renamed or rotated.  The
             file is closed and reopened when ttaaiill detects that the filename
             being read from has a new inode number.

             If the file being followed does not (yet) exist or if it is
             removed, tail will keep looking and will display the file from
             the beginning if and when it is created.

             The --FF option is the same as the --ff option if reading from
             standard input rather than a file.

     --nn _n_u_m_b_e_r, ----lliinneess=_n_u_m_b_e_r
             The location is _n_u_m_b_e_r lines.

     --qq,, ----qquuiieett,, ----ssiilleenntt
             Suppresses printing of headers when multiple files are being
             examined.

     --rr      The --rr option causes the input to be displayed in reverse order,
             by line.  Additionally, this option changes the meaning of the
             --bb, --cc and --nn options.  When the --rr option is specified, these
             options specify the number of bytes, lines or 512-byte blocks to
             display, instead of the bytes, lines or blocks from the beginning
             or end of the input from which to begin the display.  The default
             for the --rr option is to display all of the input.

     --vv,, ----vveerrbboossee
             Prepend each file with a header.

     If more than a single file is specified, or if the --vv option is used,
     each file is preceded by a header consisting of the string “==> _X_X_X <==”
     where _X_X_X is the name of the file.  The --qq flag disables the printing of
     the header in all cases.

     All _n_u_m_b_e_r arguments may also be specified with size suffixes supported
     by expand_number(3).

EEXXIITT SSTTAATTUUSS
     The ttaaiill utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     To display the last 500 lines of the file _f_o_o:

           $ tail -n 500 foo

     Keep _/_v_a_r_/_l_o_g_/_m_e_s_s_a_g_e_s open, displaying to the standard output anything
     appended to the file:

           $ tail -F /var/log/messages

SSEEEE AALLSSOO
     cat(1), head(1), sed(1), expand_number(3)

SSTTAANNDDAARRDDSS
     The ttaaiill utility is expected to be a superset of the IEEE Std 1003.2-1992
     (“POSIX.2”) specification.  In particular, the --FF, --bb and --rr options are
     extensions to that standard.

     The historic command line syntax of ttaaiill is supported by this
     implementation.  The only difference between this implementation and
     historic versions of ttaaiill, once the command line syntax translation has
     been done, is that the --bb, --cc and --nn options modify the --rr option, i.e.,
     “-r -c 4” displays the last 4 characters of the last line of the input,
     while the historic tail (using the historic syntax “-4cr”) would ignore
     the --cc option and display the last 4 lines of the input.

HHIISSTTOORRYY
     A ttaaiill command appeared in PWB UNIX.

macOS 14.6                       July 12, 2022                      macOS 14.6
"
diff,"DIFF(1)                     General Commands Manual                    DIFF(1)

NNAAMMEE
     ddiiffff – differential file and directory comparator

SSYYNNOOPPSSIISS
     ddiiffff [--aaBBbbddiippTTttww] [--cc | --ee | --ff | --nn | --qq | --uu | --yy]
          [--AA _a_l_g_o | ----aallggoorriitthhmm _a_l_g_o] [----bbrriieeff] [----ccoolloorr=_w_h_e_n]
          [----cchhaannggeedd--ggrroouupp--ffoorrmmaatt _G_F_M_T] [----eedd] [----eexxppaanndd--ttaabbss] [----ffoorrwwaarrdd--eedd]
          [----iiggnnoorree--aallll--ssppaaccee] [----iiggnnoorree--ccaassee] [----iiggnnoorree--ssppaaccee--cchhaannggee]
          [----iinniittiiaall--ttaabb] [----mmiinniimmaall] [----nnoo--iiggnnoorree--ffiillee--nnaammee--ccaassee] [----nnoorrmmaall]
          [----rrccss] [----sshhooww--cc--ffuunnccttiioonn] [----ssttaarrttiinngg--ffiillee] [----ssppeeeedd--llaarrggee--ffiilleess]
          [----ssttrriipp--ttrraaiilliinngg--ccrr] [----ttaabbssiizzee _n_u_m_b_e_r] [----tteexxtt] [----uunniiffiieedd]
          [--II _p_a_t_t_e_r_n | ----iiggnnoorree--mmaattcchhiinngg--lliinneess _p_a_t_t_e_r_n]
          [--FF _p_a_t_t_e_r_n | ----sshhooww--ffuunnccttiioonn--lliinnee _p_a_t_t_e_r_n]
          [--LL _l_a_b_e_l | ----llaabbeell _l_a_b_e_l] _f_i_l_e_1 _f_i_l_e_2
     ddiiffff [--aaBBbbddiillppTTttww] [--AA _a_l_g_o | ----aallggoorriitthhmm _a_l_g_o]
          [--II _p_a_t_t_e_r_n | ----iiggnnoorree--mmaattcchhiinngg--lliinneess _p_a_t_t_e_r_n]
          [--FF _p_a_t_t_e_r_n | ----sshhooww--ffuunnccttiioonn--lliinnee _p_a_t_t_e_r_n]
          [--LL _l_a_b_e_l | ----llaabbeell _l_a_b_e_l] [----bbrriieeff] [----ccoolloorr=_w_h_e_n]
          [----cchhaannggeedd--ggrroouupp--ffoorrmmaatt _G_F_M_T] [----eedd] [----eexxppaanndd--ttaabbss] [----ffoorrwwaarrdd--eedd]
          [----iiggnnoorree--aallll--ssppaaccee] [----iiggnnoorree--ccaassee] [----iiggnnoorree--ssppaaccee--cchhaannggee]
          [----iinniittiiaall--ttaabb] [----mmiinniimmaall] [----nnoo--iiggnnoorree--ffiillee--nnaammee--ccaassee] [----nnoorrmmaall]
          [----ppaaggiinnaattee] [----rrccss] [----sshhooww--cc--ffuunnccttiioonn] [----ssppeeeedd--llaarrggee--ffiilleess]
          [----ssttaarrttiinngg--ffiillee] [----ssttrriipp--ttrraaiilliinngg--ccrr] [----ttaabbssiizzee _n_u_m_b_e_r] [----tteexxtt]
          --CC _n_u_m_b_e_r | _-_c_o_n_t_e_x_t _n_u_m_b_e_r _f_i_l_e_1 _f_i_l_e_2
     ddiiffff [--aaBBbbddiillttww] [--AA _a_l_g_o | ----aallggoorriitthhmm _a_l_g_o]
          [--II _p_a_t_t_e_r_n | ----iiggnnoorree--mmaattcchhiinngg--lliinneess _p_a_t_t_e_r_n] [----bbrriieeff]
          [----ccoolloorr=_w_h_e_n] [----cchhaannggeedd--ggrroouupp--ffoorrmmaatt _G_F_M_T] [----eedd] [----eexxppaanndd--ttaabbss]
          [----ffoorrwwaarrdd--eedd] [----iiggnnoorree--aallll--ssppaaccee] [----iiggnnoorree--ccaassee]
          [----iiggnnoorree--ssppaaccee--cchhaannggee] [----iinniittiiaall--ttaabb] [----mmiinniimmaall]
          [----nnoo--iiggnnoorree--ffiillee--nnaammee--ccaassee] [----nnoorrmmaall] [----ppaaggiinnaattee] [----rrccss]
          [----sshhooww--cc--ffuunnccttiioonn] [----ssppeeeedd--llaarrggee--ffiilleess] [----ssttaarrttiinngg--ffiillee]
          [----ssttrriipp--ttrraaiilliinngg--ccrr] [----ttaabbssiizzee _n_u_m_b_e_r] [----tteexxtt]
          --DD _s_t_r_i_n_g | ----iiffddeeff _s_t_r_i_n_g _f_i_l_e_1 _f_i_l_e_2
     ddiiffff [--aaBBbbddiillppTTttww] [--AA _a_l_g_o | ----aallggoorriitthhmm _a_l_g_o]
          [--II _p_a_t_t_e_r_n | ----iiggnnoorree--mmaattcchhiinngg--lliinneess _p_a_t_t_e_r_n]
          [--FF _p_a_t_t_e_r_n | ----sshhooww--ffuunnccttiioonn--lliinnee _p_a_t_t_e_r_n]
          [--LL _l_a_b_e_l | ----llaabbeell _l_a_b_e_l] [----bbrriieeff] [----ccoolloorr=_w_h_e_n]
          [----cchhaannggeedd--ggrroouupp--ffoorrmmaatt _G_F_M_T] [----eedd] [----eexxppaanndd--ttaabbss] [----ffoorrwwaarrdd--eedd]
          [----iiggnnoorree--aallll--ssppaaccee] [----iiggnnoorree--ccaassee] [----iiggnnoorree--ssppaaccee--cchhaannggee]
          [----iinniittiiaall--ttaabb] [----mmiinniimmaall] [----nnoo--iiggnnoorree--ffiillee--nnaammee--ccaassee] [----nnoorrmmaall]
          [----ppaaggiinnaattee] [----rrccss] [----sshhooww--cc--ffuunnccttiioonn] [----ssppeeeedd--llaarrggee--ffiilleess]
          [----ssttaarrttiinngg--ffiillee] [----ssttrriipp--ttrraaiilliinngg--ccrr] [----ttaabbssiizzee _n_u_m_b_e_r] [----tteexxtt]
          --UU _n_u_m_b_e_r | ----uunniiffiieedd _n_u_m_b_e_r _f_i_l_e_1 _f_i_l_e_2
     ddiiffff [--aaBBbbddiillNNPPpprrssTTttww] [--cc | --ee | --ff | --nn | --qq | --uu]
          [--AA _a_l_g_o | ----aallggoorriitthhmm _a_l_g_o] [----bbrriieeff] [----ccoolloorr=_w_h_e_n]
          [----cchhaannggeedd--ggrroouupp--ffoorrmmaatt _G_F_M_T] [----ccoonntteexxtt] [----eedd] [----eexxppaanndd--ttaabbss]
          [----ffoorrwwaarrdd--eedd] [----iiggnnoorree--aallll--ssppaaccee] [----iiggnnoorree--ccaassee]
          [----iiggnnoorree--ssppaaccee--cchhaannggee] [----iinniittiiaall--ttaabb] [----mmiinniimmaall] [----nneeww--ffiillee]
          [----nnoo--iiggnnoorree--ffiillee--nnaammee--ccaassee] [----nnoorrmmaall] [----ppaaggiinnaattee] [----rrccss]
          [----rreeccuurrssiivvee] [----rreeppoorrtt--iiddeennttiiccaall--ffiilleess] [----sshhooww--cc--ffuunnccttiioonn]
          [----ssppeeeedd--llaarrggee--ffiilleess] [----ssttrriipp--ttrraaiilliinngg--ccrr] [----ttaabbssiizzee _n_u_m_b_e_r]
          [----tteexxtt] [----uunniiddiirreeccttiioonnaall--nneeww--ffiillee] [----uunniiffiieedd]
          [--II _p_a_t_t_e_r_n | ----iiggnnoorree--mmaattcchhiinngg--lliinneess _p_a_t_t_e_r_n]
          [--FF _p_a_t_t_e_r_n | ----sshhooww--ffuunnccttiioonn--lliinnee _p_a_t_t_e_r_n]
          [--LL _l_a_b_e_l | ----llaabbeell _l_a_b_e_l] [--SS _n_a_m_e | ----ssttaarrttiinngg--ffiillee _n_a_m_e]
          [--XX _f_i_l_e | ----eexxcclluuddee--ffrroomm _f_i_l_e] [--xx _p_a_t_t_e_r_n | ----eexxcclluuddee _p_a_t_t_e_r_n]
          _d_i_r_1 _d_i_r_2
     ddiiffff [--aaBBbbddiittwwWW] [----ccoolloorr=_w_h_e_n] [----eexxppaanndd--ttaabbss] [----iiggnnoorree--aallll--bbllaannkkss]
          [----iiggnnoorree--bbllaannkk--lliinneess] [----iiggnnoorree--ccaassee] [----mmiinniimmaall]
          [----nnoo--iiggnnoorree--ffiillee--nnaammee--ccaassee] [----ssttrriipp--ttrraaiilliinngg--ccrr]
          [----ssuupppprreessss--ccoommmmoonn--lliinneess] [----ttaabbssiizzee _n_u_m_b_e_r] [----tteexxtt] [----wwiiddtthh]
          --yy | ----ssiiddee--bbyy--ssiiddee _f_i_l_e_1 _f_i_l_e_2
     ddiiffff [----hheellpp] [----vveerrssiioonn]

DDEESSCCRRIIPPTTIIOONN
     The ddiiffff utility compares the contents of _f_i_l_e_1 and _f_i_l_e_2 and writes to
     the standard output the list of changes necessary to convert one file
     into the other.  No output is produced if the files are identical.

     Output options (mutually exclusive):

     --CC _n_u_m_b_e_r ----ccoonntteexxtt _n_u_m_b_e_r
             Like --cc but produces a diff with _n_u_m_b_e_r lines of context.

     --cc      Produces a diff with 3 lines of context.  With --cc the output
             format is modified slightly: the output begins with
             identification of the files involved and their creation dates and
             then each change is separated by a line with fifteen *'s.  The
             lines removed from _f_i_l_e_1 are marked with ‘- ’; those added to
             _f_i_l_e_2 are marked ‘+ ’.  Lines which are changed from one file to
             the other are marked in both files with ‘! ’.  Changes which lie
             within 3 lines of each other are grouped together on output.

     --DD _s_t_r_i_n_g ----iiffddeeff _s_t_r_i_n_g
             Creates a merged version of _f_i_l_e_1 and _f_i_l_e_2 on the standard
             output, with C preprocessor controls included so that a
             compilation of the result without defining _s_t_r_i_n_g is equivalent
             to compiling _f_i_l_e_1, while defining _s_t_r_i_n_g will yield _f_i_l_e_2.

     --ee ----eedd
             Produces output in a form suitable as input for the editor
             utility, ed(1), which can then be used to convert file1 into
             file2.

             Note that when comparing directories with --ee, the resulting file
             may no longer be interpreted as an ed(1) script.  Output is added
             to indicate which file each set of ed(1) commands applies to.
             These hunks can be manually extracted to produce an ed(1) script,
             which can also be applied with patch(1).

     --ff ----ffoorrwwaarrdd--eedd
             Identical output to that of the --ee flag, but in reverse order.
             It cannot be digested by ed(1).

     ----hheellpp  This option prints a summary to stdout and exits with status 0.

     --nn      Produces a script similar to that of --ee, but in the opposite
             order and with a count of changed lines on each insert or delete
             command.  This is the form used by rcsdiff.

     --qq ----bbrriieeff
             Just print a line when the files differ.  Does not output a list
             of changes.

     --UU _n_u_m_b_e_r ----uunniiffiieedd _n_u_m_b_e_r
             Like --uu but produces a diff with _n_u_m_b_e_r lines of context.

     --uu      Produces a _u_n_i_f_i_e_d diff with 3 lines of context.  A unified diff
             is similar to the context diff produced by the --cc option.
             However, unlike with --cc, all lines to be changed (added and/or
             removed) are present in a single section.

     ----vveerrssiioonn
             This option prints a version string to stdout and exits with
             status 0.

     --yy ----ssiiddee--bbyy--ssiiddee
             Output in two columns with a marker between them.  The marker can
             be one of the following:

                   space   Corresponding lines are identical.
                   '|'     Corresponding lines are different.
                   '<'     Files differ and only the first file contains the
                           line.
                   '>'     Files differ and only the second file contains the
                           line.

     Comparison options:

     --AA _a_l_g_o_, ----aallggoorriitthhmm _a_l_g_o
             Configure the algorithm used when comparing files.  ddiiffff supports
             3 algorithms:

             mmyyeerrss   Myers diff algorithm performs a O(ND) comparison between
                     the two files.  An optimisation is present when worst
                     case files are detected it causes the Myers algorithm to
                     bails out and produces correct, but non-optimal diff
                     output.
             ppaattiieennccee
                     The Patience variant of the Myers algorithm, this variant
                     attempts to create more aesthetically pleasing diff
                     output by logically grouping lines.
             ssttoonnee   The Stone algorithm looks for the longest common
                     subsequence between compared files.  Stone encounters
                     worst case performance when there are long common
                     subsequences.  In large files this can lead to a
                     significant performance impact.  The Stone algorithm is
                     maintained for compatibility.

             The default diff algorithm when this flag is not given is
             “mmyyeerrss”.  ddiiffff will fallback to the “ssttoonnee” algorithm if the
             “mmyyeerrss” algorithm cannot be supported with the given options and
             the algorithm has not been set explicitly.

             The default algorithm is affected by the POSIXLY_CORRECT and
             POSIX_PEDANTIC environment variables.  When either variable is
             set the default algorithm will be “ssttoonnee”.

             If the diff algorithm is selected, but cannot be supported with
             the given options ddiiffff will produce an error.

     --aa ----tteexxtt
             Treat all files as ASCII text.  Normally ddiiffff will simply print
             “Binary files ... differ” if files contain binary characters.
             Use of this option forces ddiiffff to produce a diff.

     --BB ----iiggnnoorree--bbllaannkk--lliinneess
             Causes chunks that include only blank lines to be ignored.

     --bb ----iiggnnoorree--ssppaaccee--cchhaannggee
             Causes trailing blanks (spaces and tabs) to be ignored, and other
             strings of blanks to compare equal.

     ----ccoolloorr==[_w_h_e_n]
             Color the additions green, and removals red, or the value in the
             DIFFCOLORS environment variable.  The possible values of _w_h_e_n are
             “nneevveerr”, “aallwwaayyss” and “aauuttoo”.  aauuttoo will use color if the output
             is a tty and the COLORTERM environment variable is set to a non-
             empty string.

     --dd ----mmiinniimmaall
             Try very hard to produce a diff as small as possible.  This may
             consume a lot of processing power and memory when processing
             large files with many changes.

     --FF _p_a_t_t_e_r_n_, ----sshhooww--ffuunnccttiioonn--lliinnee _p_a_t_t_e_r_n
             Like --pp,, but display the last line that matches provided pattern.

     --II _p_a_t_t_e_r_n ----iiggnnoorree--mmaattcchhiinngg--lliinneess _p_a_t_t_e_r_n
             Ignores changes, insertions, and deletions whose lines match the
             extended regular expression _p_a_t_t_e_r_n.  Multiple --II patterns may be
             specified.  All lines in the change must match some pattern for
             the change to be ignored.  See re_format(7) for more information
             on regular expression patterns.

     --ii ----iiggnnoorree--ccaassee
             Ignores the case of letters.  E.g., “A” will compare equal to
             “a”.

     --ll ----ppaaggiinnaattee
             Pass the output through pr(1) to paginate it.

     --LL _l_a_b_e_l ----llaabbeell _l_a_b_e_l
             Print _l_a_b_e_l instead of the first (and second, if this option is
             specified twice) file name and time in the context or unified
             diff header.

     --pp ----sshhooww--cc--ffuunnccttiioonn
             With unified and context diffs, show with each change the first
             40 characters of the last line before the context beginning with
             a letter, an underscore or a dollar sign.  For C and Objective-C
             source code following standard layout conventions, this will show
             the prototype of the function the change applies to.

     --TT ----iinniittiiaall--ttaabb
             Print a tab rather than a space before the rest of the line for
             the normal, context or unified output formats.  This makes the
             alignment of tabs in the line consistent.

     --tt ----eexxppaanndd--ttaabbss
             Will expand tabs in output lines.  Normal or --cc output adds
             character(s) to the front of each line which may screw up the
             indentation of the original source lines and make the output
             listing difficult to interpret.  This option will preserve the
             original source's indentation.

     --ww ----iiggnnoorree--aallll--bbllaannkkss
             Is similar to --bb ----iiggnnoorree--ssppaaccee--cchhaannggee but causes whitespace
             (blanks and tabs) to be totally ignored.  E.g., “if ( a == b )”
             will compare equal to “if(a==b)”.

     --WW _n_u_m_b_e_r ----wwiiddtthh _n_u_m_b_e_r
             Output at most _n_u_m_b_e_r columns when using side by side format.
             The default value is 130.

     ----cchhaannggeedd--ggrroouupp--ffoorrmmaatt _G_F_M_T
             Format input groups in the provided

             the format is a string with special keywords:

             %<  lines from FILE1

             %<  lines from FILE2

     ----iiggnnoorree--ffiillee--nnaammee--ccaassee
             ignore case when comparing file names

     ----nnoo--iiggnnoorree--ffiillee--nnaammee--ccaassee
             do not ignore case wen comparing file names (default)

     ----nnoorrmmaall
             default diff output

     ----ssppeeeedd--llaarrggee--ffiilleess
             stub option for compatibility with GNU diff

     ----ssttrriipp--ttrraaiilliinngg--ccrr
             strip carriage return on input files

     ----ssuupppprreessss--ccoommmmoonn--lliinneess
             Do not output common lines when using the side by side format

     ----ttaabbssiizzee _n_u_m_b_e_r
             Number of spaces representing a tab (default 8)

     Directory comparison options:

     --NN ----nneeww--ffiillee
             If a file is found in only one directory, act as if it was found
             in the other directory too but was of zero size.

     --PP ----uunniiddiirreeccttiioonnaall--nneeww--ffiillee
             If a file is found only in _d_i_r_2, act as if it was found in _d_i_r_1
             too but was of zero size.

     --rr ----rreeccuurrssiivvee
             Causes application of ddiiffff recursively to common subdirectories
             encountered.

     --SS _n_a_m_e ----ssttaarrttiinngg--ffiillee _n_a_m_e
             Re-starts a directory ddiiffff in the middle, beginning with file
             _n_a_m_e.

     --ss ----rreeppoorrtt--iiddeennttiiccaall--ffiilleess
             Causes ddiiffff to report files which are the same, which are
             otherwise not mentioned.

     --XX _f_i_l_e ----eexxcclluuddee--ffrroomm _f_i_l_e
             Exclude files and subdirectories from comparison whose basenames
             match lines in _f_i_l_e.  Multiple --XX options may be specified.

     --xx _p_a_t_t_e_r_n ----eexxcclluuddee _p_a_t_t_e_r_n
             Exclude files and subdirectories from comparison whose basenames
             match _p_a_t_t_e_r_n.  Patterns are matched using shell-style globbing
             via fnmatch(3).  Multiple --xx options may be specified.

     If both arguments are directories, ddiiffff sorts the contents of the
     directories by name, and then runs the regular file ddiiffff algorithm,
     producing a change list, on text files which are different.  Binary files
     which differ, common subdirectories, and files which appear in only one
     directory are described as such.  In directory mode only regular files
     and directories are compared.  If a non-regular file such as a device
     special file or FIFO is encountered, a diagnostic message is printed.

     If only one of _f_i_l_e_1 and _f_i_l_e_2 is a directory, ddiiffff is applied to the
     non-directory file and the file contained in the directory file with a
     filename that is the same as the last component of the non-directory
     file.

     If either _f_i_l_e_1 or _f_i_l_e_2 is ‘-’, the standard input is used in its place.

   OOuuttppuutt SSttyyllee
     The default (without --ee, --cc, or --nn ----rrccss options) output contains lines
     of these forms, where _X_X, _Y_Y, _Z_Z, _Q_Q are line numbers respective of file
     order.

     XXaaYY        At (the end of) line _X_X of _f_i_l_e_1, append the contents of
                  line _Y_Y of _f_i_l_e_2 to make them equal.
     XXaaYY,ZZ     Same as above, but append the range of lines, _Y_Y through _Z_Z
                  of _f_i_l_e_2 to line _X_X of file1.
     XXddYY        At line _X_X delete the line.  The value _Y_Y tells to which
                  line the change would bring _f_i_l_e_1 in line with _f_i_l_e_2.
     XX,YYddZZ     Delete the range of lines _X_X through _Y_Y in _f_i_l_e_1.
     XXccYY        Change the line _X_X in _f_i_l_e_1 to the line _Y_Y in _f_i_l_e_2.
     XX,YYccZZ     Replace the range of specified lines with the line _Z_Z.
     XX,YYccZZ,QQ  Replace the range _X_X,_Y_Y from _f_i_l_e_1 with the range _Z_Z,_Q_Q from
                  _f_i_l_e_2.

     These lines resemble ed(1) subcommands to convert _f_i_l_e_1 into _f_i_l_e_2.  The
     line numbers before the action letters pertain to _f_i_l_e_1; those after
     pertain to _f_i_l_e_2.  Thus, by exchanging aa for dd and reading the line in
     reverse order, one can also determine how to convert _f_i_l_e_2 into _f_i_l_e_1.
     As in ed(1), identical pairs (where num1 = num2) are abbreviated as a
     single number.

EENNVVIIRROONNMMEENNTT
     DIFFCOLORS  The value of this variable is the form _a_d_d:_r_m, where _a_d_d is
                 the ASCII escape sequence for additions and _r_m is the ASCII
                 escape sequence for deletions.  If this is unset, ddiiffff uses
                 green for additions and red for removals.

FFIILLEESS
     _/_t_m_p_/_d_i_f_f_._X_X_X_X_X_X_X_X  Temporary file used when comparing a device or the
                         standard input.  Note that the temporary file is
                         unlinked as soon as it is created so it will not show
                         up in a directory listing.

EEXXIITT SSTTAATTUUSS
     The ddiiffff utility exits with one of the following values:

           0       No differences were found.
           1       Differences were found.
           >1      An error occurred.

     The ----hheellpp and ----vveerrssiioonn options exit with a status of 0.

EEXXAAMMPPLLEESS
     Compare _o_l_d___d_i_r and _n_e_w___d_i_r recursively generating an unified diff and
     treating files found only in one of those directories as new files:

           $ diff -ruN /path/to/old_dir /path/to/new_dir

     Same as above but excluding files matching the expressions “*.h” and
     “*.c”:

           $ diff -ruN -x '*.h' -x '*.c' /path/to/old_dir /path/to/new_dir

     Show a single line indicating if the files differ:

           $ diff -q /boot/loader.conf /boot/defaults/loader.conf
           Files /boot/loader.conf and /boot/defaults/loader.conf differ

     Assuming a file named _e_x_a_m_p_l_e_._t_x_t with the following contents:

           FreeBSD is an operating system
           Linux is a kernel
           OpenBSD is an operating system

     Compare stdin with _e_x_a_m_p_l_e_._t_x_t excluding from the comparison those lines
     containing either ""Linux"" or ""Open"":

           $ echo ""FreeBSD is an operating system"" | diff -q -I 'Linux|Open' example.txt -

LLEEGGAACCYY DDEESSCCRRIIPPTTIIOONN
     The unified diff format's timestamps are formatted differently in legacy
     mode.  By default, ddiiffff does not include nanoseconds or a timezone in
     unified diff timestamps.  In legacy mode, nanoseconds and a timezone are
     both included.  Note that patch(1) may not be able to process timestamps
     in the legacy format.

     For more information about legacy mode, see compat(5).

SSEEEE AALLSSOO
     cmp(1), comm(1), diff3(1), ed(1), patch(1), pr(1), sdiff(1), compat(5)

     James W. Hunt and M. Douglas McIlroy, “An Algorithm for Differential File
     Comparison”, _C_o_m_p_u_t_i_n_g _S_c_i_e_n_c_e _T_e_c_h_n_i_c_a_l _R_e_p_o_r_t, Bell Laboratories 41,
     June 1976.

SSTTAANNDDAARRDDSS
     The ddiiffff utility is compliant with the IEEE Std 1003.1-2008 (“POSIX.1”)
     specification.

     The flags [--AAaaDDddIIiiLLllNNnnPPppqqSSssTTttwwXXxxyy] are extensions to that specification.

HHIISSTTOORRYY
     A ddiiffff command appeared in Version 6 AT&T UNIX.

     libdiff was imported from the Game of Trees version control system and
     default algorithm was changed to Myers for FreeBSD 14.

macOS 14.6                     September 8, 2022                    macOS 14.6
"
sed,"SED(1)                      General Commands Manual                     SED(1)

NNAAMMEE
     sseedd – stream editor

SSYYNNOOPPSSIISS
     sseedd [--EEaallnnrruu] _c_o_m_m_a_n_d [--II _e_x_t_e_n_s_i_o_n] [--ii _e_x_t_e_n_s_i_o_n] [_f_i_l_e _._._.]
     sseedd [--EEaallnnrruu] [--ee _c_o_m_m_a_n_d] [--ff _c_o_m_m_a_n_d___f_i_l_e] [--II _e_x_t_e_n_s_i_o_n]
         [--ii _e_x_t_e_n_s_i_o_n] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The sseedd utility reads the specified files, or the standard input if no
     files are specified, modifying the input as specified by a list of
     commands.  The input is then written to the standard output.

     A single command may be specified as the first argument to sseedd.  Multiple
     commands may be specified by using the --ee or --ff options.  All commands
     are applied to the input in the order they are specified regardless of
     their origin.

     The following options are available:

     --EE      Interpret regular expressions as extended (modern) regular
             expressions rather than basic regular expressions (BRE's).  The
             re_format(7) manual page fully describes both formats.

     --aa      The files listed as parameters for the “w” functions are created
             (or truncated) before any processing begins, by default.  The --aa
             option causes sseedd to delay opening each file until a command
             containing the related “w” function is applied to a line of
             input.

     --ee _c_o_m_m_a_n_d
             Append the editing commands specified by the _c_o_m_m_a_n_d argument to
             the list of commands.

     --ff _c_o_m_m_a_n_d___f_i_l_e
             Append the editing commands found in the file _c_o_m_m_a_n_d___f_i_l_e to the
             list of commands.  The editing commands should each be listed on
             a separate line.  The commands are read from the standard input
             if _c_o_m_m_a_n_d___f_i_l_e is “-”.

     --II _e_x_t_e_n_s_i_o_n
             Edit files in-place, saving backups with the specified _e_x_t_e_n_s_i_o_n.
             If a zero-length _e_x_t_e_n_s_i_o_n is given, no backup will be saved.  It
             is not recommended to give a zero-length _e_x_t_e_n_s_i_o_n when in-place
             editing files, as you risk corruption or partial content in
             situations where disk space is exhausted, etc.

             Note that in-place editing with --II still takes place in a single
             continuous line address space covering all files, although each
             file preserves its individuality instead of forming one output
             stream.  The line counter is never reset between files, address
             ranges can span file boundaries, and the “$” address matches only
             the last line of the last file.  (See _S_e_d _A_d_d_r_e_s_s_e_s.) That can
             lead to unexpected results in many cases of in-place editing,
             where using --ii is desired.

     --ii _e_x_t_e_n_s_i_o_n
             Edit files in-place similarly to --II, but treat each file
             independently from other files.  In particular, line numbers in
             each file start at 1, the “$” address matches the last line of
             the current file, and address ranges are limited to the current
             file.  (See _S_e_d _A_d_d_r_e_s_s_e_s.) The net result is as though each file
             were edited by a separate sseedd instance.

     --ll      Make output line buffered.

     --nn      By default, each line of input is echoed to the standard output
             after all of the commands have been applied to it.  The --nn option
             suppresses this behavior.

     --rr      Same as --EE for compatibility with GNU sed.

     --uu      Make output unbuffered.

     The form of a sseedd command is as follows:

           [address[,address]]function[arguments]

     Whitespace may be inserted before the first address and the function
     portions of the command.

     Normally, sseedd cyclically copies a line of input, not including its
     terminating newline character, into a _p_a_t_t_e_r_n _s_p_a_c_e, (unless there is
     something left after a “D” function), applies all of the commands with
     addresses that select that pattern space, copies the pattern space to the
     standard output, appending a newline, and deletes the pattern space.

     Some of the functions use a _h_o_l_d _s_p_a_c_e to save all or part of the pattern
     space for subsequent retrieval.

SSeedd AAddddrreesssseess
     An address is not required, but if specified must have one of the
     following formats:

           ••   a number that counts input lines cumulatively across input
               files (or in each file independently if a --ii option is in
               effect);

           ••   a dollar (“$”) character that addresses the last line of input
               (or the last line of the current file if a --ii option was
               specified);

           ••   a context address that consists of a regular expression
               preceded and followed by a delimiter.  The closing delimiter
               can also optionally be followed by the “I” character, to
               indicate that the regular expression is to be matched in a
               case-insensitive way.

     A command line with no addresses selects every pattern space.

     A command line with one address selects all of the pattern spaces that
     match the address.

     A command line with two addresses selects an inclusive range.  This range
     starts with the first pattern space that matches the first address.  The
     end of the range is the next following pattern space that matches the
     second address.  If the second address is a number less than or equal to
     the line number first selected, only that line is selected.  The number
     in the second address may be prefixed with a (“+”) to specify the number
     of lines to match after the first pattern.  In the case when the second
     address is a context address, sseedd does not re-match the second address
     against the pattern space that matched the first address.  Starting at
     the first line following the selected range, sseedd starts looking again for
     the first address.

     Editing commands can be applied to non-selected pattern spaces by use of
     the exclamation character (“!”) function.

SSeedd RReegguullaarr EExxpprreessssiioonnss
     The regular expressions used in sseedd, by default, are basic regular
     expressions (BREs, see re_format(7) for more information), but extended
     (modern) regular expressions can be used instead if the --EE flag is given.
     In addition, sseedd has the following two additions to regular expressions:

     1.   In a context address, any character other than a backslash (“\”) or
          newline character may be used to delimit the regular expression.
          The opening delimiter needs to be preceded by a backslash unless it
          is a slash.  For example, the context address \xabcx is equivalent
          to /abc/.  Also, putting a backslash character before the delimiting
          character within the regular expression causes the character to be
          treated literally.  For example, in the context address \xabc\xdefx,
          the RE delimiter is an “x” and the second “x” stands for itself, so
          that the regular expression is “abcxdef”.

     2.   The escape sequence \n matches a newline character embedded in the
          pattern space.  You cannot, however, use a literal newline character
          in an address or in the substitute command.

     One special feature of sseedd regular expressions is that they can default
     to the last regular expression used.  If a regular expression is empty,
     i.e., just the delimiter characters are specified, the last regular
     expression encountered is used instead.  The last regular expression is
     defined as the last regular expression used as part of an address or
     substitute command, and at run-time, not compile-time.  For example, the
     command “/abc/s//XXX/” will substitute “XXX” for the pattern “abc”.

SSeedd FFuunnccttiioonnss
     In the following list of commands, the maximum number of permissible
     addresses for each command is indicated by [0addr], [1addr], or [2addr],
     representing zero, one, or two addresses.

     The argument _t_e_x_t consists of one or more lines.  To embed a newline in
     the text, precede it with a backslash.  Other backslashes in text are
     deleted and the following character taken literally.

     The “r” and “w” functions take an optional file parameter, which should
     be separated from the function letter by white space.  Each file given as
     an argument to sseedd is created (or its contents truncated) before any
     input processing begins.

     The “b”, “r”, “s”, “t”, “w”, “y”, “!”, and “:” functions all accept
     additional arguments.  The following synopses indicate which arguments
     have to be separated from the function letters by white space characters.

     Two of the functions take a function-list.  This is a list of sseedd
     functions separated by newlines, as follows:

           { function
             function
             ...
             function
           }

     The “{” can be preceded by white space and can be followed by white
     space.  The function can be preceded by white space.  The terminating “}”
     must be preceded by a newline, and may also be preceded by white space.

     [2addr] function-list
             Execute function-list only when the pattern space is selected.

     [1addr]a\
     text    Write _t_e_x_t to standard output immediately before each attempt to
             read a line of input, whether by executing the “N” function or by
             beginning a new cycle.

     [2addr]b[label]
             Branch to the “:” function with the specified label.  If the
             label is not specified, branch to the end of the script.

     [2addr]c\
     text    Delete the pattern space.  With 0 or 1 address or at the end of a
             2-address range, _t_e_x_t is written to the standard output.

     [2addr]d
             Delete the pattern space and start the next cycle.

     [2addr]D
             Delete the initial segment of the pattern space through the first
             newline character and start the next cycle.

     [2addr]g
             Replace the contents of the pattern space with the contents of
             the hold space.

     [2addr]G
             Append a newline character followed by the contents of the hold
             space to the pattern space.

     [2addr]h
             Replace the contents of the hold space with the contents of the
             pattern space.

     [2addr]H
             Append a newline character followed by the contents of the
             pattern space to the hold space.

     [1addr]i\
     text    Write _t_e_x_t to the standard output.

     [2addr]l
             (The letter ell.)  Write the pattern space to the standard output
             in a visually unambiguous form.  This form is as follows:

                   backslash          \\
                   alert              \a
                   form-feed          \f
                   carriage-return    \r
                   tab                \t
                   vertical tab       \v

             Nonprintable characters are written as three-digit octal numbers
             (with a preceding backslash) for each byte in the character (most
             significant byte first).  Long lines are folded, with the point
             of folding indicated by displaying a backslash followed by a
             newline.  The end of each line is marked with a “$”.

     [2addr]n
             Write the pattern space to the standard output if the default
             output has not been suppressed, and replace the pattern space
             with the next line of input.

     [2addr]N
             Append the next line of input to the pattern space, using an
             embedded newline character to separate the appended material from
             the original contents.  Note that the current line number
             changes.

     [2addr]p
             Write the pattern space to standard output.

     [2addr]P
             Write the pattern space, up to the first newline character to the
             standard output.

     [1addr]q
             Branch to the end of the script and quit without starting a new
             cycle.

     [1addr]r file
             Copy the contents of _f_i_l_e to the standard output immediately
             before the next attempt to read a line of input.  If _f_i_l_e cannot
             be read for any reason, it is silently ignored and no error
             condition is set.

     [2addr]s/regular expression/replacement/flags
             Substitute the replacement string for the first instance of the
             regular expression in the pattern space.  Any character other
             than backslash or newline can be used instead of a slash to
             delimit the RE and the replacement.  Within the RE and the
             replacement, the RE delimiter itself can be used as a literal
             character if it is preceded by a backslash.

             An ampersand (“&”) appearing in the replacement is replaced by
             the string matching the RE.  The special meaning of “&” in this
             context can be suppressed by preceding it by a backslash.  The
             string “\#”, where “#” is a digit, is replaced by the text
             matched by the corresponding backreference expression (see
             re_format(7)).

             A line can be split by substituting a newline character into it.
             To specify a newline character in the replacement string, precede
             it with a backslash.

             The value of _f_l_a_g_s in the substitute function is zero or more of
             the following:

                   _N       Make the substitution only for the _N'th occurrence
                           of the regular expression in the pattern space.

                   g       Make the substitution for all non-overlapping
                           matches of the regular expression, not just the
                           first one.

                   p       Write the pattern space to standard output if a
                           replacement was made.  If the replacement string is
                           identical to that which it replaces, it is still
                           considered to have been a replacement.

                   w _f_i_l_e  Append the pattern space to _f_i_l_e if a replacement
                           was made.  If the replacement string is identical
                           to that which it replaces, it is still considered
                           to have been a replacement.

                   i or I  Match the regular expression in a case-insensitive
                           way.

     [2addr]t [label]
             Branch to the “:” function bearing the label if any substitutions
             have been made since the most recent reading of an input line or
             execution of a “t” function.  If no label is specified, branch to
             the end of the script.

     [2addr]w _f_i_l_e
             Append the pattern space to the _f_i_l_e.

     [2addr]x
             Swap the contents of the pattern and hold spaces.

     [2addr]y/string1/string2/
             Replace all occurrences of characters in _s_t_r_i_n_g_1 in the pattern
             space with the corresponding characters from _s_t_r_i_n_g_2.  Any
             character other than a backslash or newline can be used instead
             of a slash to delimit the strings.  Within _s_t_r_i_n_g_1 and _s_t_r_i_n_g_2, a
             backslash followed by any character other than a newline is that
             literal character, and a backslash followed by an ``n'' is
             replaced by a newline character.

     [2addr]!function
     [2addr]!function-list
             Apply the function or function-list only to the lines that are
             _n_o_t selected by the address(es).

     [0addr]:label
             This function does nothing; it bears a label to which the “b” and
             “t” commands may branch.

     [1addr]=
             Write the line number to the standard output followed by a
             newline character.

     [0addr]
             Empty lines are ignored.

     [0addr]#
             The “#” and the remainder of the line are ignored (treated as a
             comment), with the single exception that if the first two
             characters in the file are “#n”, the default output is
             suppressed.  This is the same as specifying the --nn option on the
             command line.

EENNVVIIRROONNMMEENNTT
     The COLUMNS, LANG, LC_ALL, LC_CTYPE and LC_COLLATE environment variables
     affect the execution of sseedd as described in environ(7).

EEXXIITT SSTTAATTUUSS
     The sseedd utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Replace ‘bar’ with ‘baz’ when piped from another command:

           echo ""An alternate word, like bar, is sometimes used in examples."" | sed 's/bar/baz/'

     Using backlashes can sometimes be hard to read and follow:

           echo ""/home/example"" | sed  's/\/home\/example/\/usr\/local\/example/'

     Using a different separator can be handy when working with paths:

           echo ""/home/example"" | sed 's#/home/example#/usr/local/example#'

     Replace all occurances of ‘foo’ with ‘bar’ in the file _t_e_s_t_._t_x_t, without
     creating a backup of the file:

           sed -i '' -e 's/foo/bar/g' test.txt

SSEEEE AALLSSOO
     awk(1), ed(1), grep(1), regex(3), re_format(7)

SSTTAANNDDAARRDDSS
     The sseedd utility is expected to be a superset of the IEEE Std 1003.2
     (“POSIX.2”) specification.

     The --EE, --II, --aa and --ii options, the special meaning of --ff --, the prefixing
     “+” in the second member of an address range, as well as the “I” flag to
     the address regular expression and substitution command are non-standard
     FreeBSD extensions and may not be available on other operating systems.

HHIISSTTOORRYY
     A sseedd command, written by L. E. McMahon, appeared in Version 7 AT&T UNIX.

AAUUTTHHOORRSS
     Diomidis D. Spinellis <_d_d_s_@_F_r_e_e_B_S_D_._o_r_g>

BBUUGGSS
     Multibyte characters containing a byte with value 0x5C (ASCII ‘\’) may be
     incorrectly treated as line continuation characters in arguments to the
     “a”, “c” and “i” commands.  Multibyte characters cannot be used as
     delimiters with the “s” and “y” commands.

macOS 14.6                       June 10, 2020                      macOS 14.6
"
awk,"AWK(1)                      General Commands Manual                     AWK(1)

NNAAMMEE
       awk - pattern-directed scanning and processing language

SSYYNNOOPPSSIISS
       aawwkk [ --FF _f_s ] [ --vv _v_a_r_=_v_a_l_u_e ] [ _'_p_r_o_g_' | --ff _p_r_o_g_f_i_l_e ] [ _f_i_l_e _._._.  ]

DDEESSCCRRIIPPTTIIOONN
       _A_w_k scans each input _f_i_l_e for lines that match any of a set of patterns
       specified literally in _p_r_o_g or in one or more files specified as --ff
       _p_r_o_g_f_i_l_e.  With each pattern there can be an associated action that
       will be performed when a line of a _f_i_l_e matches the pattern.  Each line
       is matched against the pattern portion of every pattern-action
       statement; the associated action is performed for each matched pattern.
       The file name -- means the standard input.  Any _f_i_l_e of the form
       _v_a_r_=_v_a_l_u_e is treated as an assignment, not a filename, and is executed
       at the time it would have been opened if it were a filename.  The
       option --vv followed by _v_a_r_=_v_a_l_u_e is an assignment to be done before _p_r_o_g
       is executed; any number of --vv options may be present.  The --FF _f_s option
       defines the input field separator to be the regular expression _f_s.

       An input line is normally made up of fields separated by white space,
       or by the regular expression FFSS.  The fields are denoted $$11, $$22, ...,
       while $$00 refers to the entire line.  If FFSS is null, the input line is
       split into one field per character.

       A pattern-action statement has the form:

              _p_a_t_t_e_r_n {{ _a_c_t_i_o_n }}

       A missing {{ _a_c_t_i_o_n }} means print the line; a missing pattern always
       matches.  Pattern-action statements are separated by newlines or
       semicolons.

       An action is a sequence of statements.  A statement can be one of the
       following:

              if( _e_x_p_r_e_s_s_i_o_n ) _s_t_a_t_e_m_e_n_t [ else _s_t_a_t_e_m_e_n_t ]
              while( _e_x_p_r_e_s_s_i_o_n ) _s_t_a_t_e_m_e_n_t
              for( _e_x_p_r_e_s_s_i_o_n ; _e_x_p_r_e_s_s_i_o_n ; _e_x_p_r_e_s_s_i_o_n ) _s_t_a_t_e_m_e_n_t
              for( _v_a_r in _a_r_r_a_y ) _s_t_a_t_e_m_e_n_t
              do _s_t_a_t_e_m_e_n_t while( _e_x_p_r_e_s_s_i_o_n )
              break
              continue
              { [ _s_t_a_t_e_m_e_n_t _._._. ] }
              _e_x_p_r_e_s_s_i_o_n              # commonly _v_a_r _= _e_x_p_r_e_s_s_i_o_n
              print [ _e_x_p_r_e_s_s_i_o_n_-_l_i_s_t ] [ > _e_x_p_r_e_s_s_i_o_n ]
              printf _f_o_r_m_a_t [ , _e_x_p_r_e_s_s_i_o_n_-_l_i_s_t ] [ > _e_x_p_r_e_s_s_i_o_n ]
              return [ _e_x_p_r_e_s_s_i_o_n ]
              next                    # skip remaining patterns on this input line
              nextfile                # skip rest of this file, open next, start at top
              delete _a_r_r_a_y[ _e_x_p_r_e_s_s_i_o_n ]# delete an array element
              delete _a_r_r_a_y            # delete all elements of array
              exit [ _e_x_p_r_e_s_s_i_o_n ]     # exit immediately; status is _e_x_p_r_e_s_s_i_o_n

       Statements are terminated by semicolons, newlines or right braces.  An
       empty _e_x_p_r_e_s_s_i_o_n_-_l_i_s_t stands for $$00.  String constants are quoted "" "",
       with the usual C escapes recognized within.  Expressions take on string
       or numeric values as appropriate, and are built using the operators ++ --
       ** // %% ^^ (exponentiation), and concatenation (indicated by white space).
       The operators !! ++++ ---- ++== --== **== //== %%== ^^== >> >>== << <<== ==== !!== ??:: are also
       available in expressions.  Variables may be scalars, array elements
       (denoted _x[[_i]]) or fields.  Variables are initialized to the null
       string.  Array subscripts may be any string, not necessarily numeric;
       this allows for a form of associative memory.  Multiple subscripts such
       as [[ii,,jj,,kk]] are permitted; the constituents are concatenated, separated
       by the value of SSUUBBSSEEPP.

       The pprriinntt statement prints its arguments on the standard output (or on
       a file if >> _f_i_l_e  or >>>> _f_i_l_e  is present or on a pipe if || _c_m_d  is
       present), separated by the current output field separator, and
       terminated by the output record separator.  _f_i_l_e and _c_m_d may be literal
       names or parenthesized expressions; identical string values in
       different statements denote the same open file.  The pprriinnttff statement
       formats its expression list according to the _f_o_r_m_a_t (see _p_r_i_n_t_f(3)).
       The built-in function cclloossee((_e_x_p_r)) closes the file or pipe _e_x_p_r.  The
       built-in function fffflluusshh((_e_x_p_r)) flushes any buffered output for the file
       or pipe _e_x_p_r.

       The mathematical functions aattaann22, ccooss, eexxpp, lloogg, ssiinn, and ssqqrrtt are
       built in.  Other built-in functions:


       lleennggtthh
            the length of its argument taken as a string, number of elements
            in an array for an array argument, or length of $$00 if no argument.
       rraanndd random number on [0,1).
       ssrraanndd
            sets seed for rraanndd and returns the previous seed.
       iinntt  truncates to an integer value.
       ssuubbssttrr((_s,, _m [,, _n]))
            the _n-character substring of _s that begins at position _m counted
            from 1.  If no _n, use the rest of the string.
       iinnddeexx((_s,, _t))
            the position in _s where the string _t occurs, or 0 if it does not.
       mmaattcchh((_s,, _r))
            the position in _s where the regular expression _r occurs, or 0 if
            it does not.  The variables RRSSTTAARRTT and RRLLEENNGGTTHH are set to the
            position and length of the matched string.
       sspplliitt((_s,, _a [,, _f_s]))
            splits the string _s into array elements _a[[11]], _a[[22]], ..., _a[[_n]], and
            returns _n.  The separation is done with the regular expression _f_s
            or with the field separator FFSS if _f_s is not given.  An empty
            string as field separator splits the string into one array element
            per character.
       ssuubb((_r,, _t [, _s]))
            substitutes _t for the first occurrence of the regular expression _r
            in the string _s.  If _s is not given, $$00 is used.
       ggssuubb((_r,, _t [, _s]))
            same as ssuubb except that all occurrences of the regular expression
            are replaced; ssuubb and ggssuubb return the number of replacements.
       sspprriinnttff((_f_m_t,, _e_x_p_r,, _._._.))
            the string resulting from formatting _e_x_p_r _._._.  according to the
            _p_r_i_n_t_f(3) format _f_m_t.
       ssyysstteemm((_c_m_d))
            executes _c_m_d and returns its exit status. This will be -1 upon
            error, _c_m_d's exit status upon a normal exit, 256 + _s_i_g upon death-
            by-signal, where _s_i_g is the number of the murdering signal, or 512
            + _s_i_g if there was a core dump.
       ttoolloowweerr((_s_t_r))
            returns a copy of _s_t_r with all upper-case characters translated to
            their corresponding lower-case equivalents.
       ttoouuppppeerr((_s_t_r))
            returns a copy of _s_t_r with all lower-case characters translated to
            their corresponding upper-case equivalents.

       The ``function'' ggeettlliinnee sets $$00 to the next input record from the
       current input file; ggeettlliinnee << _f_i_l_e  sets $$00 to the next record from
       _f_i_l_e.  ggeettlliinnee _x sets variable _x instead.  Finally, _c_m_d || ggeettlliinnee
       pipes the output of _c_m_d into ggeettlliinnee; each call of ggeettlliinnee returns the
       next line of output from _c_m_d.  In all cases, ggeettlliinnee returns 1 for a
       successful input, 0 for end of file, and -1 for an error.

       Patterns are arbitrary Boolean combinations (with !! |||| &&&&) of regular
       expressions and relational expressions.  Regular expressions are as
       defined in _r_e___f_o_r_m_a_t(7).  Isolated regular expressions in a pattern
       apply to the entire line.  Regular expressions may also occur in
       relational expressions, using the operators ~~ and !!~~.  //_r_e// is a
       constant regular expression; any string (constant or variable) may be
       used as a regular expression, except in the position of an isolated
       regular expression in a pattern.

       A pattern may consist of two patterns separated by a comma; in this
       case, the action is performed for all lines from an occurrence of the
       first pattern though an occurrence of the second.

       A relational expression is one of the following:

              _e_x_p_r_e_s_s_i_o_n _m_a_t_c_h_o_p _r_e_g_u_l_a_r_-_e_x_p_r_e_s_s_i_o_n
              _e_x_p_r_e_s_s_i_o_n _r_e_l_o_p _e_x_p_r_e_s_s_i_o_n
              _e_x_p_r_e_s_s_i_o_n iinn _a_r_r_a_y_-_n_a_m_e
              ((_e_x_p_r,,_e_x_p_r_,_._._.)) iinn _a_r_r_a_y_-_n_a_m_e

       where a _r_e_l_o_p is any of the six relational operators in C, and a
       _m_a_t_c_h_o_p is either ~~ (matches) or !!~~ (does not match).  A conditional is
       an arithmetic expression, a relational expression, or a Boolean
       combination of these.

       The special patterns BBEEGGIINN and EENNDD may be used to capture control
       before the first input line is read and after the last.  BBEEGGIINN and EENNDD
       do not combine with other patterns.  They may appear multiple times in
       a program and execute in the order they are read by _a_w_k.

       Variable names with special meanings:


       AARRGGCC argument count, assignable.
       AARRGGVV argument array, assignable; non-null members are taken as
            filenames.
       CCOONNVVFFMMTT
            conversion format used when converting numbers (default %%..66gg).
       EENNVVIIRROONN
            array of environment variables; subscripts are names.
       FFIILLEENNAAMMEE
            the name of the current input file.
       FFNNRR  ordinal number of the current record in the current file.
       FFSS   regular expression used to separate fields; also settable by
            option --FF_f_s.
       NNFF   number of fields in the current record.
       NNRR   ordinal number of the current record.
       OOFFMMTT output format for numbers (default %%..66gg).
       OOFFSS  output field separator (default space).
       OORRSS  output record separator (default newline).
       RRLLEENNGGTTHH
            the length of a string matched by mmaattcchh.
       RRSS   input record separator (default newline).  If empty, blank lines
            separate records.  If more than one character long, RRSS is treated
            as a regular expression, and records are separated by text
            matching the expression.
       RRSSTTAARRTT
            the start position of a string matched by mmaattcchh.
       SSUUBBSSEEPP
            separates multiple subscripts (default 034).

       Functions may be defined (at the position of a pattern-action
       statement) thus:

              ffuunnccttiioonn ffoooo((aa,, bb,, cc)) {{ ......;; rreettuurrnn xx }}

       Parameters are passed by value if scalar and by reference if array
       name; functions may be called recursively.  Parameters are local to the
       function; all other variables are global.  Thus local variables may be
       created by providing excess parameters in the function definition.

EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS
       If PPOOSSIIXXLLYY__CCOORRRREECCTT is set in the environment, then _a_w_k follows the
       POSIX rules for ssuubb and ggssuubb with respect to consecutive backslashes
       and ampersands.

EEXXAAMMPPLLEESS
       length($0) > 72
       Print lines longer than 72 characters.
       { print $2, $1 }
       Print first two fields in opposite order.

       BEGIN { FS = "",[ \t]*|[ \t]+"" }
             { print $2, $1 }

              Same, with input fields separated by comma and/or spaces and
              tabs.

            { s += $1 }
       END  { print ""sum is"", s, "" average is"", s/NR }

              Add up first column, print sum and average.
              /start/, /stop/
              Print all lines between start/stop pairs.

       BEGIN     {    # Simulate echo(1)
            for (i = 1; i < ARGC; i++) printf ""%s "", ARGV[i]
            printf ""\n""
            exit }

SSEEEE AALLSSOO
       _g_r_e_p(1), _l_e_x(1), _s_e_d(1)
       A. V. Aho, B. W. Kernighan, P. J. Weinberger, _T_h_e _A_W_K _P_r_o_g_r_a_m_m_i_n_g
       _L_a_n_g_u_a_g_e, Addison-Wesley, 1988.  ISBN 0-201-07981-X.

BBUUGGSS
       There are no explicit conversions between numbers and strings.  To
       force an expression to be treated as a number add 0 to it; to force it
       to be treated as a string concatenate """" to it.

       The scope rules for variables in functions are a botch; the syntax is
       worse.

       Only eight-bit characters sets are handled correctly.

                                  2020-11-24                            AWK(1)
"
cut,"CUT(1)                      General Commands Manual                     CUT(1)

NNAAMMEE
     ccuutt – cut out selected portions of each line of a file

SSYYNNOOPPSSIISS
     ccuutt --bb _l_i_s_t [--nn] [_f_i_l_e _._._.]
     ccuutt --cc _l_i_s_t [_f_i_l_e _._._.]
     ccuutt --ff _l_i_s_t [--ww | --dd _d_e_l_i_m] [--ss] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The ccuutt utility cuts out selected portions of each line (as specified by
     _l_i_s_t) from each _f_i_l_e and writes them to the standard output.  If no _f_i_l_e
     arguments are specified, or a file argument is a single dash (‘--’), ccuutt
     reads from the standard input.  The items specified by _l_i_s_t can be in
     terms of column position or in terms of fields delimited by a special
     character.  Column and field numbering start from 1.

     The _l_i_s_t option argument is a comma or whitespace separated set of
     numbers and/or number ranges.  Number ranges consist of a number, a dash
     (‘-’), and a second number and select the columns or fields from the
     first number to the second, inclusive.  Numbers or number ranges may be
     preceded by a dash, which selects all columns or fields from 1 to the
     last number.  Numbers or number ranges may be followed by a dash, which
     selects all columns or fields from the last number to the end of the
     line.  Numbers and number ranges may be repeated, overlapping, and in any
     order.  If a field or column is specified multiple times, it will appear
     only once in the output.  It is not an error to select columns or fields
     not present in the input line.

     The options are as follows:

     --bb _l_i_s_t
             The _l_i_s_t specifies byte positions.

     --cc _l_i_s_t
             The _l_i_s_t specifies character positions.

     --dd _d_e_l_i_m
             Use _d_e_l_i_m as the field delimiter character instead of the tab
             character.

     --ff _l_i_s_t
             The _l_i_s_t specifies fields, separated in the input by the field
             delimiter character (see the --dd option).  Output fields are
             separated by a single occurrence of the field delimiter
             character.

     --nn      Do not split multi-byte characters.  Characters will only be
             output if at least one byte is selected, and, after a prefix of
             zero or more unselected bytes, the rest of the bytes that form
             the character are selected.

     --ss      Suppress lines with no field delimiter characters.  Unless
             specified, lines with no delimiters are passed through
             unmodified.

     --ww      Use whitespace (spaces and tabs) as the delimiter.  Consecutive
             spaces and tabs count as one single field separator.

EENNVVIIRROONNMMEENNTT
     The LANG, LC_ALL and LC_CTYPE environment variables affect the execution
     of ccuutt as described in environ(7).

EEXXIITT SSTTAATTUUSS
     The ccuutt utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Extract users' login names and shells from the system passwd(5) file as
     “name:shell” pairs:

           cut -d : -f 1,7 /etc/passwd

     Show the names and login times of the currently logged in users:

           who | cut -c 1-16,26-38

SSEEEE AALLSSOO
     colrm(1), paste(1)

SSTTAANNDDAARRDDSS
     The ccuutt utility conforms to IEEE Std 1003.2-1992 (“POSIX.2”).

     The --ww flag is an extension to the specification.

HHIISSTTOORRYY
     A ccuutt command appeared in AT&T System III UNIX.

macOS 14.6                      August 3, 2017                      macOS 14.6
"
sort,"SORT(1)                     General Commands Manual                    SORT(1)

NNAAMMEE
     ssoorrtt – sort or merge records (lines) of text and binary files

SSYYNNOOPPSSIISS
     ssoorrtt [--bbccCCddffgghhiiRRMMmmnnrrssuuVVzz] [--kk  _f_i_e_l_d_1[,_f_i_e_l_d_2]] [--SS _m_e_m_s_i_z_e] [--TT _d_i_r] [--tt
          _c_h_a_r] [--oo _o_u_t_p_u_t] [_f_i_l_e _._._.]
     ssoorrtt ----hheellpp
     ssoorrtt ----vveerrssiioonn

DDEESSCCRRIIPPTTIIOONN
     The ssoorrtt utility sorts text and binary files by lines.  A line is a
     record separated from the subsequent record by a newline (default) or NUL
     ´\0´ character (-z option).  A record can contain any printable or
     unprintable characters.  Comparisons are based on one or more sort keys
     extracted from each line of input, and are performed lexicographically,
     according to the current locale's collating rules and the specified
     command-line options that can tune the actual sorting behavior.  By
     default, if keys are not given, ssoorrtt uses entire lines for comparison.

     The command line options are as follows:

     --cc, ----cchheecckk, --CC, ----cchheecckk==ssiilleenntt||qquuiieett
             Check that the single input file is sorted.  If the file is not
             sorted, ssoorrtt produces the appropriate error messages and exits
             with code 1, otherwise returns 0.  If --CC or ----cchheecckk==ssiilleenntt is
             specified, ssoorrtt produces no output.  This is a ""silent"" version
             of --cc.

     --mm, ----mmeerrggee
             Merge only.  The input files are assumed to be pre-sorted.  If
             they are not sorted the output order is undefined.

     --oo _o_u_t_p_u_t, ----oouuttppuutt=_o_u_t_p_u_t
             Print the output to the _o_u_t_p_u_t file instead of the standard
             output.

     --SS _s_i_z_e, ----bbuuffffeerr--ssiizzee=_s_i_z_e
             Use _s_i_z_e for the maximum size of the memory buffer.  Size
             modifiers %,b,K,M,G,T,P,E,Z,Y can be used.  If a memory limit is
             not explicitly specified, ssoorrtt takes up to about 90% of available
             memory.  If the file size is too big to fit into the memory
             buffer, the temporary disk files are used to perform the sorting.

     --TT _d_i_r, ----tteemmppoorraarryy--ddiirreeccttoorryy=_d_i_r
             Store temporary files in the directory _d_i_r.  The default path is
             the value of the environment variable TMPDIR or _/_v_a_r_/_t_m_p if
             TMPDIR is not defined.

     --uu, ----uunniiqquuee
             Unique keys.  Suppress all lines that have a key that is equal to
             an already processed one.  This option, similarly to --ss, implies
             a stable sort.  If used with --cc or --CC, ssoorrtt also checks that
             there are no lines with duplicate keys.

     --ss      Stable sort.  This option maintains the original record order of
             records that have an equal key.  This is a non-standard feature,
             but it is widely accepted and used.

     ----vveerrssiioonn
             Print the version and silently exits.

     ----hheellpp  Print the help text and silently exits.

     The following options override the default ordering rules.  When ordering
     options appear independently of key field specifications, they apply
     globally to all sort keys.  When attached to a specific key (see --kk), the
     ordering options override all global ordering options for the key they
     are attached to.

     --bb, ----iiggnnoorree--lleeaaddiinngg--bbllaannkkss
             Ignore leading blank characters when comparing lines.

     --dd, ----ddiiccttiioonnaarryy--oorrddeerr
             Consider only blank spaces and alphanumeric characters in
             comparisons.

     --ff, ----iiggnnoorree--ccaassee
             Convert all lowercase characters to their uppercase equivalent
             before comparison, that is, perform case-independent sorting.

     --gg, ----ggeenneerraall--nnuummeerriicc--ssoorrtt, ----ssoorrtt==ggeenneerraall--nnuummeerriicc
             Sort by general numerical value.  As opposed to --nn, this option
             handles general floating points.  It has a more permissive format
             than that allowed by --nn but it has a significant performance
             drawback.

     --hh, ----hhuummaann--nnuummeerriicc--ssoorrtt, ----ssoorrtt==hhuummaann--nnuummeerriicc
             Sort by numerical value, but take into account the SI suffix, if
             present.  Sort first by numeric sign (negative, zero, or
             positive); then by SI suffix (either empty, or `k' or `K', or one
             of `MGTPEZY', in that order); and finally by numeric value.  The
             SI suffix must immediately follow the number.  For example,
             '12345K' sorts before '1M', because M is ""larger"" than K.  This
             sort option is useful for sorting the output of a single
             invocation of 'df' command with --hh or --HH options (human-
             readable).

     --ii, ----iiggnnoorree--nnoonnpprriinnttiinngg
             Ignore all non-printable characters.

     --MM, ----mmoonntthh--ssoorrtt, ----ssoorrtt==mmoonntthh
             Sort by month abbreviations.  Unknown strings are considered
             smaller than the month names.

     --nn, ----nnuummeerriicc--ssoorrtt, ----ssoorrtt==nnuummeerriicc
             Sort fields numerically by arithmetic value.  Fields are supposed
             to have optional blanks in the beginning, an optional minus sign,
             zero or more digits (including decimal point and possible
             thousand separators).

     --RR, ----rraannddoomm--ssoorrtt, ----ssoorrtt==rraannddoomm
             Sort by a random order.  This is a random permutation of the
             inputs except that the equal keys sort together.  It is
             implemented by hashing the input keys and sorting the hash
             values.  The hash function is chosen randomly.  The hash function
             is randomized by //ddeevv//rraannddoomm content, or by file content if it is
             specified by ----rraannddoomm--ssoouurrccee.  Even if multiple sort fields are
             specified, the same random hash function is used for all of them.

     --rr, ----rreevveerrssee
             Sort in reverse order.

     --VV, ----vveerrssiioonn--ssoorrtt
             Sort version numbers.  The input lines are treated as file names
             in form PREFIX VERSION SUFFIX, where SUFFIX matches the regular
             expression ""(.([A-Za-z~][A-Za-z0-9~]*)?)*"".  The files are
             compared by their prefixes and versions (leading zeros are
             ignored in version numbers, see example below).  If an input
             string does not match the pattern, then it is compared using the
             byte compare function.  All string comparisons are performed in C
             locale, the locale environment setting is ignored.

             Example:

             $ ls sort* | sort -V

             sort-1.022.tgz

             sort-1.23.tgz

             sort-1.23.1.tgz

             sort-1.024.tgz

             sort-1.024.003.

             sort-1.024.003.tgz

             sort-1.024.07.tgz

             sort-1.024.009.tgz

     The treatment of field separators can be altered using these options:

     --bb, ----iiggnnoorree--lleeaaddiinngg--bbllaannkkss
             Ignore leading blank space when determining the start and end of
             a restricted sort key (see --kk).  If --bb is specified before the
             first --kk option, it applies globally to all key specifications.
             Otherwise, --bb can be attached independently to each _f_i_e_l_d
             argument of the key specifications.  Note that sort keys
             specified with the --kk option may have a variable number of
             leading whitespace characters that will affect the result, as
             described below in the --tt option description.

     --kk _f_i_e_l_d_1[,_f_i_e_l_d_2], ----kkeeyy=_f_i_e_l_d_1[,_f_i_e_l_d_2]
             Define a restricted sort key that has the starting position
             _f_i_e_l_d_1, and optional ending position _f_i_e_l_d_2 of a key field.  The
             --kk option may be specified multiple times, in which case
             subsequent keys are compared when earlier keys compare equal.
             The --kk option replaces the obsolete options ++_p_o_s_1 and --_p_o_s_2, but
             the old notation is also supported.

     --tt _c_h_a_r, ----ffiieelldd--sseeppaarraattoorr=_c_h_a_r
             Use _c_h_a_r as a field separator character.  The initial _c_h_a_r is not
             considered to be part of a field when determining key offsets.
             Each occurrence of _c_h_a_r is significant (for example, “_c_h_a_r_c_h_a_r”
             delimits an empty field).  If --tt is not specified, the default
             field separator is a sequence of blank space characters, and
             consecutive blank spaces do _n_o_t delimit an empty field, however,
             the initial blank space _i_s considered part of a field when
             determining key offsets.  To use NUL as field separator, use --tt
             ´\0´.

     --zz, ----zzeerroo--tteerrmmiinnaatteedd
             Use NUL as record separator.  By default, records in the files
             are supposed to be separated by the newline characters.  With
             this option, NUL (´\0´) is used as a record separator character.

     Other options:

     ----bbaattcchh--ssiizzee=_n_u_m
             Specify maximum number of files that can be opened by ssoorrtt at
             once.  This option affects behavior when having many input files
             or using temporary files.  The default value is 16.

     ----ccoommpprreessss--pprrooggrraamm=_P_R_O_G_R_A_M
             Use PROGRAM to compress temporary files.  PROGRAM must compress
             standard input to standard output, when called without arguments.
             When called with argument --dd it must decompress standard input to
             standard output.  If PROGRAM fails, ssoorrtt must exit with error.
             An example of PROGRAM that can be used here is bzip2.

     ----rraannddoomm--ssoouurrccee=_f_i_l_e_n_a_m_e
             In random sort, the file content is used as the source of the
             'seed' data for the hash function choice.  Two invocations of
             random sort with the same seed data will use the same hash
             function and will produce the same result if the input is also
             identical.  By default, file //ddeevv//rraannddoomm is used.

     ----ddeebbuugg
             Print some extra information about the sorting process to the
             standard output.

     ----ppaarraalllleell
             Set the maximum number of execution threads.  Default number
             equals to the number of CPUs.

     ----ffiilleess00--ffrroomm=_f_i_l_e_n_a_m_e
             Take the input file list from the file _f_i_l_e_n_a_m_e.  The file names
             must be separated by NUL (like the output produced by the command
             ""find ... -print0"").

     ----rraaddiixxssoorrtt
             Try to use radix sort, if the sort specifications allow.  The
             radix sort can only be used for trivial locales (C and POSIX),
             and it cannot be used for numeric or month sort.  Radix sort is
             very fast and stable.

     ----mmeerrggeessoorrtt
             Use mergesort.  This is a universal algorithm that can always be
             used, but it is not always the fastest.

     ----qqssoorrtt
             Try to use quick sort, if the sort specifications allow.  This
             sort algorithm cannot be used with --uu and --ss.

     ----hheeaappssoorrtt
             Try to use heap sort, if the sort specifications allow.  This
             sort algorithm cannot be used with --uu and --ss.

     ----mmmmaapp  Try to use file memory mapping system call.  It may increase
             speed in some cases.

     The following operands are available:

     _f_i_l_e    The pathname of a file to be sorted, merged, or checked.  If no
             _f_i_l_e operands are specified, or if a _f_i_l_e operand is --, the
             standard input is used.

     A field is defined as a maximal sequence of characters other than the
     field separator and record separator (newline by default).  Initial blank
     spaces are included in the field unless --bb has been specified; the first
     blank space of a sequence of blank spaces acts as the field separator and
     is included in the field (unless --tt is specified).  For example, all
     blank spaces at the beginning of a line are considered to be part of the
     first field.

     Fields are specified by the --kk  _f_i_e_l_d_1[,_f_i_e_l_d_2] command-line option.  If
     _f_i_e_l_d_2 is missing, the end of the key defaults to the end of the line.

     The arguments _f_i_e_l_d_1 and _f_i_e_l_d_2 have the form _m_._n _(_m_,_n _> _0_) and can be
     followed by one or more of the modifiers bb, dd, ff, ii, nn, gg, MM and rr, which
     correspond to the options discussed above.  When bb is specified it
     applies only to _f_i_e_l_d_1 or _f_i_e_l_d_2 where it is specified while the rest of
     the modifiers apply to the whole key field regardless if they are
     specified only with _f_i_e_l_d_1 or _f_i_e_l_d_2 or both.  A _f_i_e_l_d_1 position
     specified by _m_._n is interpreted as the _nth character from the beginning
     of the _mth field.  A missing _._n in _f_i_e_l_d_1 means ‘.1’, indicating the
     first character of the _mth field; if the --bb option is in effect, _n is
     counted from the first non-blank character in the _mth field; _m.1b refers
     to the first non-blank character in the _mth field.  1._n refers to the _nth
     character from the beginning of the line; if _n is greater than the length
     of the line, the field is taken to be empty.

     _nth positions are always counted from the field beginning, even if the
     field is shorter than the number of specified positions.  Thus, the key
     can really start from a position in a subsequent field.

     A _f_i_e_l_d_2 position specified by _m_._n is interpreted as the _nth character
     (including separators) from the beginning of the _mth field.  A missing _._n
     indicates the last character of the _mth field; _m = 0 designates the end
     of a line.  Thus the option --kk _v_._x_,_w_._y is synonymous with the obsolete
     option ++_v_-_1_._x_-_1 --_w_-_1_._y; when _y is omitted, --kk _v_._x_,_w is synonymous with
     ++_v_-_1_._x_-_1 --_w_._0.  The obsolete ++_p_o_s_1 --_p_o_s_2 option is still supported,
     except for --_w_._0_b, which has no --kk equivalent.

EENNVVIIRROONNMMEENNTT
     LC_COLLATE  Locale settings to be used to determine the collation for
                 sorting records.

     LC_CTYPE    Locale settings to be used to case conversion and
                 classification of characters, that is, which characters are
                 considered whitespaces, etc.

     LC_MESSAGES
                 Locale settings that determine the language of output
                 messages that ssoorrtt prints out.

     LC_NUMERIC  Locale settings that determine the number format used in
                 numeric sort.

     LC_TIME     Locale settings that determine the month format used in month
                 sort.

     LC_ALL      Locale settings that override all of the above locale
                 settings.  This environment variable can be used to set all
                 these settings to the same value at once.

     LANG        Used as a last resort to determine different kinds of locale-
                 specific behavior if neither the respective environment
                 variable, nor LC_ALL are set.

     TMPDIR      Path to the directory in which temporary files will be
                 stored.  Note that TMPDIR may be overridden by the --TT option.

     GNUSORT_NUMERIC_COMPATIBILITY
                 If defined --tt will not override the locale numeric symbols,
                 that is, thousand separators and decimal separators.  By
                 default, if we specify --tt with the same symbol as the
                 thousand separator or decimal point, the symbol will be
                 treated as the field separator.  Older behavior was less
                 definite; the symbol was treated as both field separator and
                 numeric separator, simultaneously.  This environment variable
                 enables the old behavior.

     GNUSORT_COMPATIBLE_BLANKS
                 Use 'space' symbols as field separators (as modern GNU sort
                 does).

FFIILLEESS
     _/_v_a_r_/_t_m_p_/_._b_s_d_s_o_r_t_._P_I_D_._*           Temporary files.
     _/_d_e_v_/_r_a_n_d_o_m                       Default seed file for the random sort.

EEXXIITT SSTTAATTUUSS
     The ssoorrtt utility shall exit with one of the following values:

     0     Successfully sorted the input files or if used with --cc or --CC, the
           input file already met the sorting criteria.
     1     On disorder (or non-uniqueness) with the --cc or --CC options.
     2     An error occurred.

SSEEEE AALLSSOO
     comm(1), join(1), uniq(1)

SSTTAANNDDAARRDDSS
     The ssoorrtt utility is compliant with the IEEE Std 1003.1-2008 (“POSIX.1”)
     specification.

     The flags [--gghhRRMMSSssTTVVzz] are extensions to the POSIX specification.

     All long options are extensions to the specification, some of them are
     provided for compatibility with GNU versions and some of them are own
     extensions.

     The old key notations ++_p_o_s_1 and --_p_o_s_2 come from older versions of ssoorrtt
     and are still supported but their use is highly discouraged.

HHIISSTTOORRYY
     A ssoorrtt command first appeared in Version 1 AT&T UNIX.

AAUUTTHHOORRSS
     Gabor Kovesdan <_g_a_b_o_r_@_F_r_e_e_B_S_D_._o_r_g>,

     Oleg Moskalenko <_m_o_m_0_4_0_2_6_7_@_g_m_a_i_l_._c_o_m>

NNOOTTEESS
     This implementation of ssoorrtt has no limits on input line length (other
     than imposed by available memory) or any restrictions on bytes allowed
     within lines.

     The performance depends highly on locale settings, efficient choice of
     sort keys and key complexity.  The fastest sort is with locale C, on
     whole lines, with option --ss.  In general, locale C is the fastest, then
     single-byte locales follow and multi-byte locales as the slowest but the
     correct collation order is always respected.  As for the key
     specification, the simpler to process the lines the faster the search
     will be.

     When sorting by arithmetic value, using --nn results in much better
     performance than --gg so its use is encouraged whenever possible.

macOS 14.6                     September 4, 2019                    macOS 14.6
"
uniq,"UNIQ(1)                     General Commands Manual                    UNIQ(1)

NNAAMMEE
     uunniiqq – report or filter out repeated lines in a file

SSYYNNOOPPSSIISS
     uunniiqq [--cc | --dd | --DD | --uu] [--ii] [--ff _n_u_m] [--ss _c_h_a_r_s] [_i_n_p_u_t___f_i_l_e
          [_o_u_t_p_u_t___f_i_l_e]]

DDEESSCCRRIIPPTTIIOONN
     The uunniiqq utility reads the specified _i_n_p_u_t___f_i_l_e comparing adjacent lines,
     and writes a copy of each unique input line to the _o_u_t_p_u_t___f_i_l_e.  If
     _i_n_p_u_t___f_i_l_e is a single dash (‘--’) or absent, the standard input is read.
     If _o_u_t_p_u_t___f_i_l_e is absent, standard output is used for output.  The second
     and succeeding copies of identical adjacent input lines are not written.
     Repeated lines in the input will not be detected if they are not
     adjacent, so it may be necessary to sort the files first.

     The following options are available:

     --cc, ----ccoouunntt
             Precede each output line with the count of the number of times
             the line occurred in the input, followed by a single space.

     --dd, ----rreeppeeaatteedd
             Output a single copy of each line that is repeated in the input.

     --DD, ----aallll--rreeppeeaatteedd [_s_e_p_t_y_p_e]
             Output all lines that are repeated (like --dd, but each copy of the
             repeated line is written).  The optional _s_e_p_t_y_p_e argument
             controls how to separate groups of repeated lines in the output;
             it must be one of the following values:

             none      Do not separate groups of lines (this is the default).
             prepend   Output an empty line before each group of lines.
             separate  Output an empty line after each group of lines.

     --ff _n_u_m, ----sskkiipp--ffiieellddss _n_u_m
             Ignore the first _n_u_m fields in each input line when doing
             comparisons.  A field is a string of non-blank characters
             separated from adjacent fields by blanks.  Field numbers are one
             based, i.e., the first field is field one.

     --ii, ----iiggnnoorree--ccaassee
             Case insensitive comparison of lines.

     --ss _c_h_a_r_s, ----sskkiipp--cchhaarrss _c_h_a_r_s
             Ignore the first _c_h_a_r_s characters in each input line when doing
             comparisons.  If specified in conjunction with the --ff, ----uunniiqquuee
             option, the first _c_h_a_r_s characters after the first _n_u_m fields
             will be ignored.  Character numbers are one based, i.e., the
             first character is character one.

     --uu, ----uunniiqquuee
             Only output lines that are not repeated in the input.

EENNVVIIRROONNMMEENNTT
     The LANG, LC_ALL, LC_COLLATE and LC_CTYPE environment variables affect
     the execution of uunniiqq as described in environ(7).

EEXXIITT SSTTAATTUUSS
     The uunniiqq utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Assuming a file named cities.txt with the following content:

           Madrid
           Lisbon
           Madrid

     The following command reports three different lines since identical
     elements are not adjacent:

           $ uniq -u cities.txt
           Madrid
           Lisbon
           Madrid

     Sort the file and count the number of identical lines:

           $ sort cities.txt | uniq -c
                   1 Lisbon
                   2 Madrid

     Assuming the following content for the file cities.txt:

           madrid
           Madrid
           Lisbon

     Show repeated lines ignoring case sensitiveness:

           $ uniq -d -i cities.txt
           madrid

     Same as above but showing the whole group of repeated lines:

           $ uniq -D -i cities.txt
           madrid
           Madrid

     Report the number of identical lines ignoring the first character of
     every line:

           $ uniq -s 1 -c cities.txt
                   2 madrid
                   1 Lisbon

CCOOMMPPAATTIIBBIILLIITTYY
     The historic ++_n_u_m_b_e_r and --_n_u_m_b_e_r options have been deprecated but are
     still supported in this implementation.

SSEEEE AALLSSOO
     sort(1)

SSTTAANNDDAARRDDSS
     The uunniiqq utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”) as amended
     by Cor. 1-2002.

HHIISSTTOORRYY
     A uunniiqq command appeared in Version 3 AT&T UNIX.

macOS 14.6                       June 7, 2020                       macOS 14.6
"
tr,"TR(1)                       General Commands Manual                      TR(1)

NNAAMMEE
     ttrr – translate characters

SSYYNNOOPPSSIISS
     ttrr [--CCccssuu] _s_t_r_i_n_g_1 _s_t_r_i_n_g_2
     ttrr [--CCccuu] --dd _s_t_r_i_n_g_1
     ttrr [--CCccuu] --ss _s_t_r_i_n_g_1
     ttrr [--CCccuu] --ddss _s_t_r_i_n_g_1 _s_t_r_i_n_g_2

DDEESSCCRRIIPPTTIIOONN
     The ttrr utility copies the standard input to the standard output with
     substitution or deletion of selected characters.

     The following options are available:

     --CC      Complement the set of characters in _s_t_r_i_n_g_1, that is “--CC ab”
             includes every character except for ‘a’ and ‘b’.

     --cc      Same as --CC but complement the set of values in _s_t_r_i_n_g_1.

     --dd      Delete characters in _s_t_r_i_n_g_1 from the input.

     --ss      Squeeze multiple occurrences of the characters listed in the last
             operand (either _s_t_r_i_n_g_1 or _s_t_r_i_n_g_2) in the input into a single
             instance of the character.  This occurs after all deletion and
             translation is completed.

     --uu      Guarantee that any output is unbuffered.

     In the first synopsis form, the characters in _s_t_r_i_n_g_1 are translated into
     the characters in _s_t_r_i_n_g_2 where the first character in _s_t_r_i_n_g_1 is
     translated into the first character in _s_t_r_i_n_g_2 and so on.  If _s_t_r_i_n_g_1 is
     longer than _s_t_r_i_n_g_2, the last character found in _s_t_r_i_n_g_2 is duplicated
     until _s_t_r_i_n_g_1 is exhausted.

     In the second synopsis form, the characters in _s_t_r_i_n_g_1 are deleted from
     the input.

     In the third synopsis form, the characters in _s_t_r_i_n_g_1 are compressed as
     described for the --ss option.

     In the fourth synopsis form, the characters in _s_t_r_i_n_g_1 are deleted from
     the input, and the characters in _s_t_r_i_n_g_2 are compressed as described for
     the --ss option.

     The following conventions can be used in _s_t_r_i_n_g_1 and _s_t_r_i_n_g_2 to specify
     sets of characters:

     character  Any character not described by one of the following
                conventions represents itself.

     \octal     A backslash followed by 1, 2 or 3 octal digits represents a
                character with that encoded value.  To follow an octal
                sequence with a digit as a character, left zero-pad the octal
                sequence to the full 3 octal digits.

     \character
                A backslash followed by certain special characters maps to
                special values.

                \a    <alert character>
                \b    <backspace>
                \f    <form-feed>
                \n    <newline>
                \r    <carriage return>
                \t    <tab>
                \v    <vertical tab>

                A backslash followed by any other character maps to that
                character.

     c-c        For non-octal range endpoints represents the range of
                characters between the range endpoints, inclusive, in
                ascending order, as defined by the collation sequence.  If
                either or both of the range endpoints are octal sequences, it
                represents the range of specific coded values between the
                range endpoints, inclusive.

                _S_e_e _t_h_e _C_O_M_P_A_T_I_B_I_L_I_T_Y _s_e_c_t_i_o_n _b_e_l_o_w _f_o_r _a_n _i_m_p_o_r_t_a_n_t _n_o_t_e
                _r_e_g_a_r_d_i_n_g _d_i_f_f_e_r_e_n_c_e_s _i_n _t_h_e _w_a_y _t_h_e _c_u_r_r_e_n_t _i_m_p_l_e_m_e_n_t_a_t_i_o_n
                _i_n_t_e_r_p_r_e_t_s _r_a_n_g_e _e_x_p_r_e_s_s_i_o_n_s _d_i_f_f_e_r_e_n_t_l_y _f_r_o_m _p_r_e_v_i_o_u_s
                _i_m_p_l_e_m_e_n_t_a_t_i_o_n_s_.

     [:class:]  Represents all characters belonging to the defined character
                class.  Class names are:

                alnum        <alphanumeric characters>
                alpha        <alphabetic characters>
                blank        <whitespace characters>
                cntrl        <control characters>
                digit        <numeric characters>
                graph        <graphic characters>
                ideogram     <ideographic characters>
                lower        <lower-case alphabetic characters>
                phonogram    <phonographic characters>
                print        <printable characters>
                punct        <punctuation characters>
                rune         <valid characters>
                space        <space characters>
                special      <special characters>
                upper        <upper-case characters>
                xdigit       <hexadecimal characters>

                When “[:lower:]” appears in _s_t_r_i_n_g_1 and “[:upper:]” appears in
                the same relative position in _s_t_r_i_n_g_2, it represents the
                characters pairs from the toupper mapping in the LC_CTYPE
                category of the current locale.  When “[:upper:]” appears in
                _s_t_r_i_n_g_1 and “[:lower:]” appears in the same relative position
                in _s_t_r_i_n_g_2, it represents the characters pairs from the
                tolower mapping in the LC_CTYPE category of the current
                locale.

                With the exception of case conversion, characters in the
                classes are in unspecified order.

                For specific information as to which ASCII characters are
                included in these classes, see ctype(3) and related manual
                pages.

     [=equiv=]  Represents all characters belonging to the same equivalence
                class as _e_q_u_i_v, ordered by their encoded values.

     [#*n]      Represents _n repeated occurrences of the character represented
                by _#.  This expression is only valid when it occurs in
                _s_t_r_i_n_g_2.  If _n is omitted or is zero, it is be interpreted as
                large enough to extend _s_t_r_i_n_g_2 sequence to the length of
                _s_t_r_i_n_g_1.  If _n has a leading zero, it is interpreted as an
                octal value, otherwise, it is interpreted as a decimal value.

EENNVVIIRROONNMMEENNTT
     The LANG, LC_ALL, LC_CTYPE and LC_COLLATE environment variables affect
     the execution of ttrr as described in environ(7).

EEXXIITT SSTTAATTUUSS
     The ttrr utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     The following examples are shown as given to the shell:

     Create a list of the words in file1, one per line, where a word is taken
     to be a maximal string of letters.

           tr -cs ""[:alpha:]"" ""\n"" < file1

     Translate the contents of file1 to upper-case.

           tr ""[:lower:]"" ""[:upper:]"" < file1

     (This should be preferred over the traditional UNIX idiom of “tr a-z
     A-Z”, since it works correctly in all locales.)

     Strip out non-printable characters from file1.

           tr -cd ""[:print:]"" < file1

     Remove diacritical marks from all accented variants of the letter ‘e’:

           tr ""[=e=]"" ""e""

CCOOMMPPAATTIIBBIILLIITTYY
     Previous FreeBSD implementations of ttrr did not order characters in range
     expressions according to the current locale's collation order, making it
     possible to convert unaccented Latin characters (esp. as found in English
     text) from upper to lower case using the traditional UNIX idiom of “tr
     A-Z a-z”.  Since ttrr now obeys the locale's collation order, this idiom
     may not produce correct results when there is not a 1:1 mapping between
     lower and upper case, or when the order of characters within the two
     cases differs.  As noted in the _E_X_A_M_P_L_E_S section above, the character
     class expressions “[:lower:]” and “[:upper:]” should be used instead of
     explicit character ranges like “a-z” and “A-Z”.

     “[=equiv=]” expression and collation for ranges are implemented for
     single byte locales only.

     System V has historically implemented character ranges using the syntax
     “[c-c]” instead of the “c-c” used by historic BSD implementations and
     standardized by POSIX.  System V shell scripts should work under this
     implementation as long as the range is intended to map in another range,
     i.e., the command “tr [a-z] [A-Z]” will work as it will map the ‘[’
     character in _s_t_r_i_n_g_1 to the ‘[’ character in _s_t_r_i_n_g_2.  However, if the
     shell script is deleting or squeezing characters as in the command “tr -d
     [a-z]”, the characters ‘[’ and ‘]’ will be included in the deletion or
     compression list which would not have happened under a historic System V
     implementation.  Additionally, any scripts that depended on the sequence
     “a-z” to represent the three characters ‘a’, ‘-’ and ‘z’ will have to be
     rewritten as “a\-z”.

     The ttrr utility has historically not permitted the manipulation of NUL
     bytes in its input and, additionally, stripped NUL's from its input
     stream.  This implementation has removed this behavior as a bug.

     The ttrr utility has historically been extremely forgiving of syntax
     errors, for example, the --cc and --ss options were ignored unless two
     strings were specified.  This implementation will not permit illegal
     syntax.

SSTTAANNDDAARRDDSS
     The ttrr utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).  The
     “ideogram”, “phonogram”, “rune”, and “special” character classes are
     extensions.

     It should be noted that the feature wherein the last character of _s_t_r_i_n_g_2
     is duplicated if _s_t_r_i_n_g_2 has less characters than _s_t_r_i_n_g_1 is permitted by
     POSIX but is not required.  Shell scripts attempting to be portable to
     other POSIX systems should use the “[#*]” convention instead of relying
     on this behavior.  The --uu option is an extension to the IEEE Std
     1003.1-2001 (“POSIX.1”) standard.

macOS 14.6                     October 13, 2006                     macOS 14.6
"
tee,"TEE(1)                      General Commands Manual                     TEE(1)

NNAAMMEE
     tteeee – duplicate standard input

SSYYNNOOPPSSIISS
     tteeee [--aaii] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The tteeee utility copies standard input to standard output, making a copy
     in zero or more files.  The output is unbuffered.

     The following options are available:

     --aa      Append the output to the files rather than overwriting them.

     --ii      Ignore the SIGINT signal.

     The following operands are available:

     _f_i_l_e    A pathname of an output _f_i_l_e.

     The tteeee utility takes the default action for all signals, except in the
     event of the --ii option.

EEXXIITT SSTTAATTUUSS
     The tteeee utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Send the echoed message both to stdout and to the _g_r_e_e_t_i_n_g_s_._t_x_t file:

           $ echo ""Hello"" | tee greetings.txt
           Hello

SSTTAANNDDAARRDDSS
     The tteeee utility is expected to be IEEE Std 1003.2 (“POSIX.2”) compatible.

macOS 14.6                       June 23, 2020                      macOS 14.6
"
xargs,"XARGS(1)                    General Commands Manual                   XARGS(1)

NNAAMMEE
     xxaarrggss – construct argument list(s) and execute utility

SSYYNNOOPPSSIISS
     xxaarrggss [--00oopprrtt] [--EE _e_o_f_s_t_r] [--II _r_e_p_l_s_t_r [--RR _r_e_p_l_a_c_e_m_e_n_t_s] [--SS _r_e_p_l_s_i_z_e]]
           [--JJ _r_e_p_l_s_t_r] [--LL _n_u_m_b_e_r] [--nn _n_u_m_b_e_r [--xx]] [--PP _m_a_x_p_r_o_c_s] [--ss _s_i_z_e]
           [_u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.]]

DDEESSCCRRIIPPTTIIOONN
     The xxaarrggss utility reads space, tab, newline and end-of-file delimited
     strings from the standard input and executes _u_t_i_l_i_t_y with the strings as
     arguments.

     Any arguments specified on the command line are given to _u_t_i_l_i_t_y upon
     each invocation, followed by some number of the arguments read from the
     standard input of xxaarrggss.  This is repeated until standard input is
     exhausted.

     Spaces, tabs and newlines may be embedded in arguments using single
     (`` ' '') or double (``""'') quotes or backslashes (``\'').  Single quotes
     escape all non-single quote characters, excluding newlines, up to the
     matching single quote.  Double quotes escape all non-double quote
     characters, excluding newlines, up to the matching double quote.  Any
     single character, including newlines, may be escaped by a backslash.

     The options are as follows:

     --00, ----nnuullll
             Change xxaarrggss to expect NUL (``\0'') characters as separators,
             instead of spaces and newlines.  This is expected to be used in
             concert with the --pprriinntt00 function in find(1).

     --EE _e_o_f_s_t_r
             Use _e_o_f_s_t_r as a logical EOF marker.

     --II _r_e_p_l_s_t_r
             Execute _u_t_i_l_i_t_y for each input line, replacing one or more
             occurrences of _r_e_p_l_s_t_r in up to _r_e_p_l_a_c_e_m_e_n_t_s (or 5 if no --RR flag
             is specified) arguments to _u_t_i_l_i_t_y with the entire line of input.
             The resulting arguments, after replacement is done, will not be
             allowed to grow beyond _r_e_p_l_s_i_z_e (or 255 if no --SS flag is
             specified) bytes; this is implemented by concatenating as much of
             the argument containing _r_e_p_l_s_t_r as possible, to the constructed
             arguments to _u_t_i_l_i_t_y, up to _r_e_p_l_s_i_z_e bytes.  The size limit does
             not apply to arguments to _u_t_i_l_i_t_y which do not contain _r_e_p_l_s_t_r,
             and furthermore, no replacement will be done on _u_t_i_l_i_t_y itself.
             Implies --xx.

     --JJ _r_e_p_l_s_t_r
             If this option is specified, xxaarrggss will use the data read from
             standard input to replace the first occurrence of _r_e_p_l_s_t_r instead
             of appending that data after all other arguments.  This option
             will not affect how many arguments will be read from input (--nn),
             or the size of the command(s) xxaarrggss will generate (--ss).  The
             option just moves where those arguments will be placed in the
             command(s) that are executed.  The _r_e_p_l_s_t_r must show up as a
             distinct _a_r_g_u_m_e_n_t to xxaarrggss.  It will not be recognized if, for
             instance, it is in the middle of a quoted string.  Furthermore,
             only the first occurrence of the _r_e_p_l_s_t_r will be replaced.  For
             example, the following command will copy the list of files and
             directories which start with an uppercase letter in the current
             directory to _d_e_s_t_d_i_r:

                   /bin/ls -1d [A-Z]* | xargs -J % cp -Rp % destdir

     --LL _n_u_m_b_e_r
             Call _u_t_i_l_i_t_y for every _n_u_m_b_e_r lines read.  If EOF is reached and
             fewer lines have been read than _n_u_m_b_e_r then _u_t_i_l_i_t_y will be
             called with the available lines.

     --nn _n_u_m_b_e_r, ----mmaaxx--aarrggss==_n_u_m_b_e_r
             Set the maximum number of arguments taken from standard input for
             each invocation of _u_t_i_l_i_t_y.  An invocation of _u_t_i_l_i_t_y will use
             less than _n_u_m_b_e_r standard input arguments if the number of bytes
             accumulated (see the --ss option) exceeds the specified _s_i_z_e or
             there are fewer than _n_u_m_b_e_r arguments remaining for the last
             invocation of _u_t_i_l_i_t_y.  The current default value for _n_u_m_b_e_r is
             5000.

     --oo      Reopen stdin as _/_d_e_v_/_t_t_y in the child process before executing
             the command.  This is useful if you want xxaarrggss to run an
             interactive application.

     --PP _m_a_x_p_r_o_c_s, ----mmaaxx--pprrooccss==_m_a_x_p_r_o_c_s
             Parallel mode: run at most _m_a_x_p_r_o_c_s invocations of _u_t_i_l_i_t_y at
             once.  If _m_a_x_p_r_o_c_s is set to 0, xxaarrggss will run as many processes
             as possible.

     --pp, ----iinntteerraaccttiivvee
             Echo each command to be executed and ask the user whether it
             should be executed.  An affirmative response, ‘y’ in the POSIX
             locale, causes the command to be executed, any other response
             causes it to be skipped.  No commands are executed if the process
             is not attached to a terminal.

     --rr, ----nnoo--rruunn--iiff--eemmppttyy
             Compatibility with GNU xxaarrggss.  The GNU version of xxaarrggss runs the
             _u_t_i_l_i_t_y argument at least once, even if xxaarrggss input is empty, and
             it supports a --rr option to inhibit this behavior.  The FreeBSD
             version of xxaarrggss does not run the _u_t_i_l_i_t_y argument on empty
             input, but it supports the --rr option for command-line
             compatibility with GNU xxaarrggss, but the --rr option does nothing in
             the FreeBSD version of xxaarrggss.

     --RR _r_e_p_l_a_c_e_m_e_n_t_s
             Specify the maximum number of arguments that --II will do
             replacement in.  If _r_e_p_l_a_c_e_m_e_n_t_s is negative, the number of
             arguments in which to replace is unbounded.

     --SS _r_e_p_l_s_i_z_e
             Specify the amount of space (in bytes) that --II can use for
             replacements.  The default for _r_e_p_l_s_i_z_e is 255.

     --ss _s_i_z_e, ----mmaaxx--cchhaarrss==_s_i_z_e
             Set the maximum number of bytes for the command line length
             provided to _u_t_i_l_i_t_y.  The sum of the length of the utility name,
             the arguments passed to _u_t_i_l_i_t_y (including NULL terminators) and
             the current environment will be less than or equal to this
             number.  The current default value for _s_i_z_e is ARG_MAX - 4096.

     --tt, ----vveerrbboossee
             Echo the command to be executed to standard error immediately
             before it is executed.

     --xx, ----eexxiitt
             Force xxaarrggss to terminate immediately if a command line containing
             _n_u_m_b_e_r arguments will not fit in the specified (or default)
             command line length.

     If _u_t_i_l_i_t_y is omitted, echo(1) is used.

     Undefined behavior may occur if _u_t_i_l_i_t_y reads from the standard input.

     If a command line cannot be assembled, or cannot be invoked, or if an
     invocation of _u_t_i_l_i_t_y is terminated by a signal, or an invocation of
     _u_t_i_l_i_t_y exits with a value of 255, the xxaarrggss utility stops processing
     input and exits after all invocations of _u_t_i_l_i_t_y finish processing.

LLEEGGAACCYY DDEESSCCRRIIPPTTIIOONN
     In legacy mode, the --LL option treats all newlines as end-of-line,
     regardless of whether the line is empty or ends with a space.  In
     addition, the --LL and --nn options are not mutually-exclusive.

     For more information about legacy mode, see compat(5).

EEXXIITT SSTTAATTUUSS
     The xxaarrggss utility exits with a value of 0 if no error occurs.  If _u_t_i_l_i_t_y
     cannot be found, xxaarrggss exits with a value of 127, otherwise if _u_t_i_l_i_t_y
     cannot be executed, xxaarrggss exits with a value of 126.  If any other error
     occurs, xxaarrggss exits with a value of 1.

EEXXAAMMPPLLEESS
     Create a 3x3 matrix with numbers from 1 to 9.  Every echo(1) instance
     receives three lines as arguments:

           $ seq 1 9 | xargs -L3 echo
           1 2 3
           4 5 6
           7 8 9

     Duplicate every line from standard input:

           $ echo -e ""one\ntwo\nthree"" | xargs -I % echo % %
           one one
           two two
           three three

     Execute at most 2 concurrent instances of find(1) every one of them using
     one of the directories from the standard input:

           ls -d /usr/local /opt | xargs -J % -P2 -n1 find % -name file

SSEEEE AALLSSOO
     echo(1), find(1), execvp(3), compat(5)

SSTTAANNDDAARRDDSS
     The xxaarrggss utility is expected to be IEEE Std 1003.2 (“POSIX.2”)
     compliant.  The --JJ, --oo, --PP, --RR and --SS options are non-standard FreeBSD
     extensions which may not be available on other operating systems.

HHIISSTTOORRYY
     The xxaarrggss utility appeared in PWB UNIX.

BBUUGGSS
     If _u_t_i_l_i_t_y attempts to invoke another command such that the number of
     arguments or the size of the environment is increased, it risks execvp(3)
     failing with E2BIG.

     The xxaarrggss utility does not take multibyte characters into account when
     performing string comparisons for the --II and --JJ options, which may lead
     to incorrect results in some locales.

macOS 14.6                    September 21, 2020                    macOS 14.6
"
bg,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
fg,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
jobs,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
uname,"UNAME(1)                    General Commands Manual                   UNAME(1)

NNAAMMEE
     uunnaammee – display information about the system

SSYYNNOOPPSSIISS
     uunnaammee [--aammnnoopprrssvv]

DDEESSCCRRIIPPTTIIOONN
     The uunnaammee command writes the name of the operating system implementation
     to standard output.  When options are specified, strings representing one
     or more system characteristics are written to standard output.

     The options are as follows:

     --aa      Behave as though the options --mm, --nn, --rr, --ss, and --vv were
             specified.

     --mm      Write the type of the current hardware platform to standard
             output.  (make(1) uses it to set the _M_A_C_H_I_N_E variable.)

     --nn      Write the name of the system to standard output.

     --oo      This is a synonym for the --ss option, for compatibility with other
             systems.

     --pp      Write the type of the machine processor architecture to standard
             output.  (make(1) uses it to set the _M_A_C_H_I_N_E___A_R_C_H variable.)

     --rr      Write the current release level of the operating system to
             standard output.

     --ss      Write the name of the operating system implementation to standard
             output.

     --vv      Write the version level of this release of the operating system
             to standard output.

     If the --aa flag is specified, or multiple flags are specified, all output
     is written on a single line, separated by spaces.

EENNVVIIRROONNMMEENNTT
     An environment variable composed of the string UNAME_ followed by any
     flag to the uunnaammee utility (except for --aa) will allow the corresponding
     data to be set to the contents of the environment variable.

     The --mm, --nn, --rr, --ss, and --vv variables additionally have long aliases that
     have historically been honored on MacOS, “UNAME_MACHINE”,
     “UNAME_NODENAME”, “UNAME_RELEASE”, “UNAME_SYSNAME”, and “UNAME_VERSION”
     respectively.  These names have a higher priority than their shorter
     counterparts described in the previous paragraph.

     See uname(3) for more information.

EEXXIITT SSTTAATTUUSS
     The uunnaammee utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     The hardware platform (--mm) can be different from the machine's processor
     architecture (--pp), e.g., on 64-bit PowerPC, --mm would return _p_o_w_e_r_p_c and
     --pp would return _p_o_w_e_r_p_c_6_4.

SSEEEE AALLSSOO
     hostname(1), machine(1), sw_vers(1), sysctl(3), uname(3), sysctl(8)

SSTTAANNDDAARRDDSS
     The uunnaammee command is expected to conform to the IEEE Std 1003.2
     (“POSIX.2”) specification.

HHIISSTTOORRYY
     The uunnaammee command appeared in PWB UNIX 1.0, however 4.4BSD was the first
     Berkeley release with the uunnaammee command.

     The --KK and --UU extension flags appeared in FreeBSD 10.0.  The --bb extension
     flag appeared in FreeBSD 13.0.

macOS 14.6                     November 13, 2020                    macOS 14.6
"
uptime,"UPTIME(1)                   General Commands Manual                  UPTIME(1)

NNAAMMEE
     uuppttiimmee – show how long system has been running

SSYYNNOOPPSSIISS
     uuppttiimmee

DDEESSCCRRIIPPTTIIOONN
     The uuppttiimmee utility displays the current time, the length of time the
     system has been up, the number of users, and the load average of the
     system over the last 1, 5, and 15 minutes.

EEXXAAMMPPLLEESS
           $ uptime
           11:23AM  up  3:01, 8 users, load averages: 21.09, 15.43, 12.79

SSEEEE AALLSSOO
     w(1)

HHIISSTTOORRYY
     The uuppttiimmee command appeared in 3.0BSD.

macOS 14.6                      August 18, 2020                     macOS 14.6
"
history,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
env,"ENV(1)                      General Commands Manual                     ENV(1)

NNAAMMEE
     eennvv – set environment and execute command, or print environment

SSYYNNOOPPSSIISS
     eennvv [--00iivv] [--uu _n_a_m_e] [_n_a_m_e=_v_a_l_u_e _._._.]
     eennvv [--iivv] [--PP _a_l_t_p_a_t_h] [--SS _s_t_r_i_n_g] [--uu _n_a_m_e] [_n_a_m_e=_v_a_l_u_e _._._.]
         _u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.]

DDEESSCCRRIIPPTTIIOONN
     The eennvv utility executes another _u_t_i_l_i_t_y after modifying the environment
     as specified on the command line.  Each _n_a_m_e=_v_a_l_u_e option specifies the
     setting of an environment variable, _n_a_m_e, with a value of _v_a_l_u_e.  All
     such environment variables are set before the _u_t_i_l_i_t_y is executed.

     The options are as follows:

     --00      End each output line with NUL, not newline.

     --ii      Execute the _u_t_i_l_i_t_y with only those environment variables
             specified by _n_a_m_e=_v_a_l_u_e options.  The environment inherited by
             eennvv is ignored completely.

     --PP _a_l_t_p_a_t_h
             Search the set of directories as specified by _a_l_t_p_a_t_h to locate
             the specified _u_t_i_l_i_t_y program, instead of using the value of the
             PATH environment variable.

     --SS _s_t_r_i_n_g
             Split apart the given _s_t_r_i_n_g into multiple strings, and process
             each of the resulting strings as separate arguments to the eennvv
             utility.  The --SS option recognizes some special character escape
             sequences and also supports environment-variable substitution, as
             described below.

     --uu _n_a_m_e
             If the environment variable _n_a_m_e is in the environment, then
             remove it before processing the remaining options.  This is
             similar to the uunnsseett command in sh(1).  The value for _n_a_m_e must
             not include the ‘=’ character.

     --vv      Print verbose information for each step of processing done by the
             eennvv utility.  Additional information will be printed if --vv is
             specified multiple times.

     The above options are only recognized when they are specified before any
     _n_a_m_e=_v_a_l_u_e options.

     If no _u_t_i_l_i_t_y is specified, eennvv prints out the names and values of the
     variables in the environment.  Each name/value pair is separated by a new
     line unless --00 is specified, in which case name/value pairs are separated
     by NUL.  Both --00 and _u_t_i_l_i_t_y may not be specified together.

   DDeettaaiillss ooff --SS ((sspplliitt--ssttrriinngg)) pprroocceessssiinngg
     The processing of the --SS option will split the given _s_t_r_i_n_g into separate
     arguments based on any space or <tab> characters found in the _s_t_r_i_n_g.
     Each of those new arguments will then be treated as if it had been
     specified as a separate argument on the original eennvv command.

     Spaces and tabs may be embedded in one of those new arguments by using
     single (“'”) or double (‘""’) quotes, or backslashes (‘\’).  Single quotes
     will escape all non-single quote characters, up to the matching single
     quote.  Double quotes will escape all non-double quote characters, up to
     the matching double quote.  It is an error if the end of the _s_t_r_i_n_g is
     reached before the matching quote character.

     If --SS would create a new argument that starts with the ‘#’ character,
     then that argument and the remainder of the _s_t_r_i_n_g will be ignored.  The
     ‘\#’ sequence can be used when you want a new argument to start with a
     ‘#’ character, without causing the remainder of the _s_t_r_i_n_g to be skipped.

     While processing the _s_t_r_i_n_g value, --SS processing will treat certain
     character combinations as escape sequences which represent some action to
     take.  The character escape sequences are in backslash notation.  The
     characters and their meanings are as follows:

           \\cc      Ignore the remaining characters in the _s_t_r_i_n_g.  This must
                   not appear inside a double-quoted string.
           \\ff      Replace with a <form-feed> character.
           \\nn      Replace with a <new-line> character.
           \\rr      Replace with a <carriage return> character.
           \\tt      Replace with a <tab> character.
           \\vv      Replace with a <vertical tab> character.
           \\##      Replace with a ‘#’ character.  This would be useful when
                   you need a ‘#’ as the first character in one of the
                   arguments created by splitting apart the given _s_t_r_i_n_g.
           \\$$      Replace with a ‘$’ character.
           \\__      If this is found inside of a double-quoted string, then
                   replace it with a single blank.  If this is found outside
                   of a quoted string, then treat this as the separator
                   character between new arguments in the original _s_t_r_i_n_g.
           \\""""      Replace with a <double quote> character.
           \\´´      Replace with a <single quote> character.
           \\\\      Replace with a backslash character.

     The sequences for <single-quote> and backslash are the only sequences
     which are recognized inside of a single-quoted string.  The other
     sequences have no special meaning inside a single-quoted string.  All
     escape sequences are recognized inside of a double-quoted string.  It is
     an error if a single ‘\’ character is followed by a character other than
     the ones listed above.

     The processing of --SS also supports substitution of values from
     environment variables.  To do this, the name of the environment variable
     must be inside of ‘${}’, such as: ${SOMEVAR}.  The common shell syntax of
     $SOMEVAR is not supported.  All values substituted will be the values of
     the environment variables as they were when the eennvv utility was
     originally invoked.  Those values will not be checked for any of the
     escape sequences as described above.  And any settings of _n_a_m_e=_v_a_l_u_e will
     not effect the values used for substitution in --SS processing.

     Also, --SS processing cannot reference the value of the special parameters
     which are defined by most shells.  For instance, --SS cannot recognize
     special parameters such as: ‘$*’, ‘$@’, ‘$#’, ‘$?’ or ‘$$’ if they appear
     inside the given _s_t_r_i_n_g.

   UUssee iinn sshheellll--ssccrriippttss
     The eennvv utility is often used as the _i_n_t_e_r_p_r_e_t_e_r on the first line of
     interpreted scripts, as described in execve(2).

     Note that the way the kernel parses the ‘#!’ (first line) of an
     interpreted script has changed as of FreeBSD 6.0.  Prior to that, the
     FreeBSD kernel would split that first line into separate arguments based
     on any whitespace (space or <tab> characters) found in the line.  So, if
     a script named _/_u_s_r_/_l_o_c_a_l_/_b_i_n_/_s_o_m_e_p_o_r_t had a first line of:

           #!/usr/local/bin/php -n -q -dsafe_mode=0

     then the _/_u_s_r_/_l_o_c_a_l_/_b_i_n_/_p_h_p program would have been started with the
     arguments of:

           arg[0] = '/usr/local/bin/php'
           arg[1] = '-n'
           arg[2] = '-q'
           arg[3] = '-dsafe_mode=0'
           arg[4] = '/usr/local/bin/someport'

     plus any arguments the user specified when executing _s_o_m_e_p_o_r_t.  However,
     this processing of multiple options on the ‘#!’ line is not the way any
     other operating system parses the first line of an interpreted script.
     So after a change which was made for FreeBSD 6.0 release, that script
     will result in _/_u_s_r_/_l_o_c_a_l_/_b_i_n_/_p_h_p being started with the arguments of:

           arg[0] = '/usr/local/bin/php'
           arg[1] = '-n -q -dsafe_mode=0'
           arg[2] = '/usr/local/bin/someport'

     plus any arguments the user specified.  This caused a significant change
     in the behavior of a few scripts.  In the case of above script, to have
     it behave the same way under FreeBSD 6.0 as it did under earlier
     releases, the first line should be changed to:

           #!/usr/bin/env -S /usr/local/bin/php -n -q -dsafe_mode=0

     The eennvv utility will be started with the entire line as a single
     argument:

           arg[1] = '-S /usr/local/bin/php -n -q -dsafe_mode=0'

     and then --SS processing will split that line into separate arguments
     before executing _/_u_s_r_/_l_o_c_a_l_/_b_i_n_/_p_h_p.

EENNVVIIRROONNMMEENNTT
     The eennvv utility uses the PATH environment variable to locate the
     requested _u_t_i_l_i_t_y if the name contains no ‘/’ characters, unless the --PP
     option has been specified.

EEXXIITT SSTTAATTUUSS
     The eennvv utility exits 0 on success, and >0 if an error occurs.  An exit
     status of 126 indicates that _u_t_i_l_i_t_y was found, but could not be
     executed.  An exit status of 127 indicates that _u_t_i_l_i_t_y could not be
     found.

EEXXAAMMPPLLEESS
     Since the eennvv utility is often used as part of the first line of an
     interpreted script, the following examples show a number of ways that the
     eennvv utility can be useful in scripts.

     The kernel processing of an interpreted script does not allow a script to
     directly reference some other script as its own interpreter.  As a way
     around this, the main difference between

           #!/usr/local/bin/foo
     and
           #!/usr/bin/env /usr/local/bin/foo

     is that the latter works even if _/_u_s_r_/_l_o_c_a_l_/_b_i_n_/_f_o_o is itself an
     interpreted script.

     Probably the most common use of eennvv is to find the correct interpreter
     for a script, when the interpreter may be in different directories on
     different systems.  The following example will find the ‘perl’
     interpreter by searching through the directories specified by PATH.

           #!/usr/bin/env perl

     One limitation of that example is that it assumes the user's value for
     PATH is set to a value which will find the interpreter you want to
     execute.  The --PP option can be used to make sure a specific list of
     directories is used in the search for _u_t_i_l_i_t_y.  Note that the --SS option
     is also required for this example to work correctly.

           #!/usr/bin/env -S -P/usr/local/bin:/usr/bin perl

     The above finds ‘perl’ only if it is in _/_u_s_r_/_l_o_c_a_l_/_b_i_n or _/_u_s_r_/_b_i_n.  That
     could be combined with the present value of PATH, to provide more
     flexibility.  Note that spaces are not required between the --SS and --PP
     options:

           #!/usr/bin/env -S-P/usr/local/bin:/usr/bin:${PATH} perl

CCOOMMPPAATTIIBBIILLIITTYY
     The eennvv utility accepts the -- option as a synonym for --ii.

SSEEEE AALLSSOO
     printenv(1), sh(1), execvp(3), login.conf(5), environ(7)

SSTTAANNDDAARRDDSS
     The eennvv utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).  The --00,
     --PP, --SS, --uu and --vv options are non-standard extensions supported by
     FreeBSD, but which may not be available on other operating systems.

HHIISSTTOORRYY
     The eennvv command appeared in 4.4BSD.  The --PP, --SS and --vv options were added
     in FreeBSD 6.0.

BBUUGGSS
     The eennvv utility does not handle values of _u_t_i_l_i_t_y which have an equals
     sign (‘=’) in their name, for obvious reasons.

     The eennvv utility does not take multibyte characters into account when
     processing the --SS option, which may lead to incorrect results in some
     locales.

macOS 14.6                       March 3, 2021                      macOS 14.6
"
printenv,"PRINTENV(1)                 General Commands Manual                PRINTENV(1)

NNAAMMEE
     pprriinntteennvv – print out the environment

SSYYNNOOPPSSIISS
     pprriinntteennvv [_n_a_m_e]

DDEESSCCRRIIPPTTIIOONN
     The pprriinntteennvv utility prints out the names and values of the variables in
     the environment, with one name/value pair per line.  If _n_a_m_e is
     specified, only its value is printed.

     Some shells may provide a builtin pprriinntteennvv command which is similar or
     identical to this utility.  Consult the builtin(1) manual page.

EEXXIITT SSTTAATTUUSS
     The pprriinntteennvv utility exits 0 on success, and >0 if an error occurs.

SSEEEE AALLSSOO
     csh(1), env(1), sh(1), environ(7)

SSTTAANNDDAARRDDSS
     The pprriinntteennvv utility is provided for compatibility with earlier BSD and
     FreeBSD releases and is not specified by any standards.  The
     functionality of pprriinntteennvv can be duplicated with the echo(1) and env(1)
     utilities.

HHIISSTTOORRYY
     The pprriinntteennvv command appeared in 3.0BSD.

macOS 14.6                       May 12, 2003                       macOS 14.6
"
source,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
exit,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
su,"SU(1)                       General Commands Manual                      SU(1)

NNAAMMEE
     ssuu – substitute user identity

SSYYNNOOPPSSIISS
     ssuu [--] [--ffllmm] [_l_o_g_i_n [_a_r_g_s]]

DDEESSCCRRIIPPTTIIOONN
     The ssuu utility requests appropriate user credentials via PAM and switches
     to that user ID (the default user is the superuser).  A shell is then
     executed.

     PAM is used to set the policy su(1) will use.  In particular, by default
     only users in the “admin” or “wheel” groups can switch to UID 0 (“root”).
     This group requirement may be changed by modifying the “pam_group”
     section of _/_e_t_c_/_p_a_m_._d_/_s_u.  See pam_group(8) for details on how to modify
     this setting.

     By default, the environment is unmodified with the exception of USER,
     HOME, and SHELL.  HOME and SHELL are set to the target login's default
     values.  USER is set to the target login, unless the target login has a
     user ID of 0, in which case it is unmodified.  The invoked shell is the
     one belonging to the target login.  This is the traditional behavior of
     ssuu.

     The options are as follows:

     --ff      If the invoked shell is csh(1), this option prevents it from
             reading the “_._c_s_h_r_c” file.

     --ll      Simulate a full login.  The environment is discarded except for
             HOME, SHELL, PATH, TERM, and USER.  HOME and SHELL are modified
             as above.  USER is set to the target login.  PATH is set to
             “_/_b_i_n_:_/_u_s_r_/_b_i_n”.  TERM is imported from your current environment.
             The invoked shell is the target login's, and ssuu will change
             directory to the target login's home directory.

     --       (no letter) The same as --ll.

     --mm      Leave the environment unmodified.  The invoked shell is your
             login shell, and no directory changes are made.  As a security
             precaution, if the target user's shell is a non-standard shell
             (as defined by getusershell(3)) and the caller's real uid is non-
             zero, ssuu will fail.

     The --ll (or --) and --mm options are mutually exclusive; the last one
     specified overrides any previous ones.

     If the optional _a_r_g_s are provided on the command line, they are passed to
     the login shell of the target login.  Note that all command line
     arguments before the target login name are processed by ssuu itself,
     everything after the target login name gets passed to the login shell.

     By default (unless the prompt is reset by a startup file) the super-user
     prompt is set to “##” to remind one of its awesome power.

EENNVVIIRROONNMMEENNTT
     Environment variables used by ssuu:

     HOME  Default home directory of real user ID unless modified as specified
           above.

     PATH  Default search path of real user ID unless modified as specified
           above.

     TERM  Provides terminal type which may be retained for the substituted
           user ID.

     USER  The user ID is always the effective ID (the target user ID) after
           an ssuu unless the user ID is 0 (root).

FFIILLEESS
     _/_e_t_c_/_p_a_m_._d_/_s_u  PAM configuration for ssuu.

EEXXAAMMPPLLEESS
     su -m operator -c poweroff
            Starts a shell as user operator, and runs the command poweroff.
            You will be asked for operator's password unless your real UID is
            0.  Note that the --mm option is required since user “operator” does
            not have a valid shell by default.  In this example, --cc is passed
            to the shell of the user “operator”, and is not interpreted as an
            argument to ssuu.
     su -m operator -c 'shutdown -p now'
            Same as above, but the target command consists of more than a
            single word and hence is quoted for use with the --cc option being
            passed to the shell.  (Most shells expect the argument to --cc to be
            a single word).
     su -l foo
            Simulate a login for user foo.
     su - foo
            Same as above.
     su -   Simulate a login for root.

SSEEEE AALLSSOO
     csh(1), sh(1), group(5), passwd(5), environ(7), pam_group(8)

HHIISSTTOORRYY
     A ssuu command appeared in Version 1 AT&T UNIX.

macOS 14.6                      March 26, 2020                      macOS 14.6
"
sudo,"SUDO(8)                     System Manager's Manual                    SUDO(8)

NNAAMMEE
       ssuuddoo, ssuuddooeeddiitt - execute a command as another user

SSYYNNOOPPSSIISS
       ssuuddoo --hh | --KK | --kk | --VV
       ssuuddoo --vv [--AABBkkNNnnSS] [--gg _g_r_o_u_p] [--hh _h_o_s_t] [--pp _p_r_o_m_p_t] [--uu _u_s_e_r]
       ssuuddoo --ll [--AABBkkNNnnSS] [--gg _g_r_o_u_p] [--hh _h_o_s_t] [--pp _p_r_o_m_p_t] [--UU _u_s_e_r] [--uu _u_s_e_r]
            [_c_o_m_m_a_n_d [_a_r_g_ _._._.]]
       ssuuddoo [--AABBbbEEHHnnPPSS] [--CC _n_u_m] [--DD _d_i_r_e_c_t_o_r_y] [--gg _g_r_o_u_p] [--hh _h_o_s_t]
            [--pp _p_r_o_m_p_t] [--RR _d_i_r_e_c_t_o_r_y] [--TT _t_i_m_e_o_u_t] [--uu _u_s_e_r] [_V_A_R=_v_a_l_u_e]
            [--ii | --ss] [_c_o_m_m_a_n_d [_a_r_g_ _._._.]]
       ssuuddooeeddiitt [--AABBkkNNnnSS] [--CC _n_u_m] [--DD _d_i_r_e_c_t_o_r_y] [--gg _g_r_o_u_p] [--hh _h_o_s_t]
                [--pp _p_r_o_m_p_t] [--RR _d_i_r_e_c_t_o_r_y] [--TT _t_i_m_e_o_u_t] [--uu _u_s_e_r] _f_i_l_e_ _._._.

DDEESSCCRRIIPPTTIIOONN
       ssuuddoo allows a permitted user to execute a _c_o_m_m_a_n_d as the superuser or
       another user, as specified by the security policy.  The invoking user's
       real (_n_o_t effective) user-ID is used to determine the user name with
       which to query the security policy.

       ssuuddoo supports a plugin architecture for security policies, auditing,
       and input/output logging.  Third parties can develop and distribute
       their own plugins to work seamlessly with the ssuuddoo front-end.  The
       default security policy is _s_u_d_o_e_r_s, which is configured via the file
       _/_p_r_i_v_a_t_e_/_e_t_c_/_s_u_d_o_e_r_s, or via LDAP.  See the _P_l_u_g_i_n_s section for more
       information.

       The security policy determines what privileges, if any, a user has to
       run ssuuddoo.  The policy may require that users authenticate themselves
       with a password or another authentication mechanism.  If authentication
       is required, ssuuddoo will exit if the user's password is not entered
       within a configurable time limit.  This limit is policy-specific; the
       default password prompt timeout for the _s_u_d_o_e_r_s security policy is 0
       minutes.

       Security policies may support credential caching to allow the user to
       run ssuuddoo again for a period of time without requiring authentication.
       By default, the _s_u_d_o_e_r_s policy caches credentials on a per-terminal
       basis for 5 minutes.  See the _t_i_m_e_s_t_a_m_p___t_y_p_e and _t_i_m_e_s_t_a_m_p___t_i_m_e_o_u_t
       options in sudoers(5) for more information.  By running ssuuddoo with the
       --vv option, a user can update the cached credentials without running a
       _c_o_m_m_a_n_d.

       On systems where ssuuddoo is the primary method of gaining superuser
       privileges, it is imperative to avoid syntax errors in the security
       policy configuration files.  For the default security policy,
       sudoers(5), changes to the configuration files should be made using the
       visudo(8) utility which will ensure that no syntax errors are
       introduced.

       When invoked as ssuuddooeeddiitt, the --ee option (described below), is implied.

       Security policies and audit plugins may log successful and failed
       attempts to run ssuuddoo.  If an I/O plugin is configured, the running
       _c_o_m_m_a_n_d's input and output may be logged as well.

       The options are as follows:

       --AA, ----aasskkppaassss
               Normally, if ssuuddoo requires a password, it will read it from the
               user's terminal.  If the --AA (_a_s_k_p_a_s_s) option is specified, a
               (possibly graphical) helper program is executed to read the
               user's password and output the password to the standard output.
               If the SUDO_ASKPASS environment variable is set, it specifies
               the path to the helper program.  Otherwise, if sudo.conf(5)
               contains a line specifying the askpass program, that value will
               be used.  For example:

                   # Path to askpass helper program
                   Path askpass /usr/X11R6/bin/ssh-askpass

               If no askpass program is available, ssuuddoo will exit with an
               error.

       --aa _t_y_p_e, ----aauutthh--ttyyppee=_t_y_p_e
               Use the specified BSD authentication _t_y_p_e when validating the
               user, if allowed by _/_e_t_c_/_l_o_g_i_n_._c_o_n_f.  The system administrator
               may specify a list of sudo-specific authentication methods by
               adding an “auth-sudo” entry in _/_e_t_c_/_l_o_g_i_n_._c_o_n_f.  This option is
               only available on systems that support BSD authentication.

       --BB, ----bbeellll
               Ring the bell as part of the password prompt when a terminal is
               present.  This option has no effect if an askpass program is
               used.

       --bb, ----bbaacckkggrroouunndd
               Run the given _c_o_m_m_a_n_d in the background.  It is not possible to
               use shell job control to manipulate background processes
               started by ssuuddoo.  Most interactive _c_o_m_m_a_n_ds will fail to work
               properly in background mode.

       --CC _n_u_m, ----cclloossee--ffrroomm=_n_u_m
               Close all file descriptors greater than or equal to _n_u_m before
               executing a _c_o_m_m_a_n_d.  Values less than three are not permitted.
               By default, ssuuddoo will close all open file descriptors other
               than standard input, standard output, and standard error when
               executing a _c_o_m_m_a_n_d.  The security policy may restrict the
               user's ability to use this option.  The _s_u_d_o_e_r_s policy only
               permits use of the --CC option when the administrator has enabled
               the _c_l_o_s_e_f_r_o_m___o_v_e_r_r_i_d_e option.

       --cc _c_l_a_s_s, ----llooggiinn--ccllaassss=_c_l_a_s_s
               Run the _c_o_m_m_a_n_d with resource limits and scheduling priority of
               the specified login _c_l_a_s_s.  The _c_l_a_s_s argument can be either a
               class name as defined in _/_e_t_c_/_l_o_g_i_n_._c_o_n_f, or a single ‘-’
               character.  If _c_l_a_s_s is --, the default login class of the
               target user will be used.  Otherwise, the _c_o_m_m_a_n_d must be run
               as the superuser (user-ID 0), or ssuuddoo must be run from a shell
               that is already running as the superuser.  If the _c_o_m_m_a_n_d is
               being run as a login shell, additional _/_e_t_c_/_l_o_g_i_n_._c_o_n_f
               settings, such as the umask and environment variables, will be
               applied, if present.  This option is only available on systems
               with BSD login classes.

       --DD _d_i_r_e_c_t_o_r_y, ----cchhddiirr=_d_i_r_e_c_t_o_r_y
               Run the _c_o_m_m_a_n_d in the specified _d_i_r_e_c_t_o_r_y instead of the
               current working directory.  The security policy may return an
               error if the user does not have permission to specify the
               working directory.

       --EE, ----pprreesseerrvvee--eennvv
               Indicates to the security policy that the user wishes to
               preserve their existing environment variables.  The security
               policy may return an error if the user does not have permission
               to preserve the environment.

       ----pprreesseerrvvee--eennvv==lliisstt
               Indicates to the security policy that the user wishes to add
               the comma-separated list of environment variables to those
               preserved from the user's environment.  The security policy may
               return an error if the user does not have permission to
               preserve the environment.  This option may be specified
               multiple times.

       --ee, ----eeddiitt
               Edit one or more _f_i_l_es instead of running a _c_o_m_m_a_n_d.  In lieu
               of a path name, the string ""sudoedit"" is used when consulting
               the security policy.  If the user is authorized by the policy,
               the following steps are taken:

                   1.   Temporary copies are made of the files to be edited
                        with the owner set to the invoking user.

                   2.   The editor specified by the policy is run to edit the
                        temporary files.  The _s_u_d_o_e_r_s policy uses the
                        SUDO_EDITOR, VISUAL and EDITOR environment variables
                        (in that order).  If none of SUDO_EDITOR, VISUAL or
                        EDITOR are set, the first program listed in the _e_d_i_t_o_r
                        sudoers(5) option is used.

                   3.   If they have been modified, the temporary files are
                        copied back to their original location and the
                        temporary versions are removed.

               To help prevent the editing of unauthorized files, the
               following restrictions are enforced unless explicitly allowed
               by the security policy:

                        ••  Symbolic links may not be edited (version 1.8.15
                           and higher).

                        ••  Symbolic links along the path to be edited are not
                           followed when the parent directory is writable by
                           the invoking user unless that user is root (version
                           1.8.16 and higher).

                        ••  Files located in a directory that is writable by
                           the invoking user may not be edited unless that
                           user is root (version 1.8.16 and higher).

               Users are never allowed to edit device special files.

               If the specified file does not exist, it will be created.
               Unlike most _c_o_m_m_a_n_ds run by _s_u_d_o, the editor is run with the
               invoking user's environment unmodified.  If the temporary file
               becomes empty after editing, the user will be prompted before
               it is installed.  If, for some reason, ssuuddoo is unable to update
               a file with its edited version, the user will receive a warning
               and the edited copy will remain in a temporary file.

       --gg _g_r_o_u_p, ----ggrroouupp=_g_r_o_u_p
               Run the _c_o_m_m_a_n_d with the primary group set to _g_r_o_u_p instead of
               the primary group specified by the target user's password
               database entry.  The _g_r_o_u_p may be either a group name or a
               numeric group-ID (GID) prefixed with the ‘#’ character (e.g.,
               ‘#0’ for GID 0).  When running a _c_o_m_m_a_n_d as a GID, many shells
               require that the ‘#’ be escaped with a backslash (‘\’).  If no
               --uu option is specified, the _c_o_m_m_a_n_d will be run as the invoking
               user.  In either case, the primary group will be set to _g_r_o_u_p.
               The _s_u_d_o_e_r_s policy permits any of the target user's groups to
               be specified via the --gg option as long as the --PP option is not
               in use.

       --HH, ----sseett--hhoommee
               Request that the security policy set the HOME environment
               variable to the home directory specified by the target user's
               password database entry.  Depending on the policy, this may be
               the default behavior.

       --hh, ----hheellpp
               Display a short help message to the standard output and exit.

       --hh _h_o_s_t, ----hhoosstt=_h_o_s_t
               Run the _c_o_m_m_a_n_d on the specified _h_o_s_t if the security policy
               plugin supports remote _c_o_m_m_a_n_ds.  The _s_u_d_o_e_r_s plugin does not
               currently support running remote _c_o_m_m_a_n_ds.  This may also be
               used in conjunction with the --ll option to list a user's
               privileges for the remote host.

       --ii, ----llooggiinn
               Run the shell specified by the target user's password database
               entry as a login shell.  This means that login-specific
               resource files such as _._p_r_o_f_i_l_e, _._b_a_s_h___p_r_o_f_i_l_e, or _._l_o_g_i_n will
               be read by the shell.  If a _c_o_m_m_a_n_d is specified, it is passed
               to the shell as a simple _c_o_m_m_a_n_d using the --cc option.  The
               _c_o_m_m_a_n_d and any _a_r_gs are concatenated, separated by spaces,
               after escaping each character (including white space) with a
               backslash (‘\’) except for alphanumerics, underscores, hyphens,
               and dollar signs.  If no _c_o_m_m_a_n_d is specified, an interactive
               shell is executed.  ssuuddoo attempts to change to that user's home
               directory before running the shell.  The _c_o_m_m_a_n_d is run with an
               environment similar to the one a user would receive at log in.
               Most shells behave differently when a _c_o_m_m_a_n_d is specified as
               compared to an interactive session; consult the shell's manual
               for details.  The _C_o_m_m_a_n_d _e_n_v_i_r_o_n_m_e_n_t section in the sudoers(5)
               manual documents how the --ii option affects the environment in
               which a _c_o_m_m_a_n_d is run when the _s_u_d_o_e_r_s policy is in use.

       --KK, ----rreemmoovvee--ttiimmeessttaammpp
               Similar to the --kk option, except that it removes every cached
               credential for the user, regardless of the terminal or parent
               process ID.  The next time ssuuddoo is run, a password must be
               entered if the security policy requires authentication.  It is
               not possible to use the --KK option in conjunction with a _c_o_m_m_a_n_d
               or other option.  This option does not require a password.  Not
               all security policies support credential caching.

       --kk, ----rreesseett--ttiimmeessttaammpp
               When used without a _c_o_m_m_a_n_d, invalidates the user's cached
               credentials for the current session.  The next time ssuuddoo is run
               in the session, a password must be entered if the security
               policy requires authentication.  By default, the ssuuddooeerrss policy
               uses a separate record in the credential cache for each
               terminal (or parent process ID if no terminal is present).
               This prevents the --kk option from interfering with ssuuddoo commands
               run in a different terminal session.  See the _t_i_m_e_s_t_a_m_p___t_y_p_e
               option in sudoers(5) for more information.  This option does
               not require a password, and was added to allow a user to revoke
               ssuuddoo permissions from a _._l_o_g_o_u_t file.

               When used in conjunction with a _c_o_m_m_a_n_d or an option that may
               require a password, this option will cause ssuuddoo to ignore the
               user's cached credentials.  As a result, ssuuddoo will prompt for a
               password (if one is required by the security policy) and will
               not update the user's cached credentials.

               Not all security policies support credential caching.

       --ll, ----lliisstt
               If no _c_o_m_m_a_n_d is specified, list the privileges for the
               invoking user (or the _u_s_e_r specified by the --UU option) on the
               current host.  A longer list format is used if this option is
               specified multiple times and the security policy supports a
               verbose output format.

               If a _c_o_m_m_a_n_d is specified and is permitted by the security
               policy, the fully-qualified path to the _c_o_m_m_a_n_d is displayed
               along with any _a_r_gs.  If a _c_o_m_m_a_n_d is specified but not allowed
               by the policy, ssuuddoo will exit with a status value of 1.

       --NN, ----nnoo--uuppddaattee
               Do not update the user's cached credentials, even if the user
               successfully authenticates.  Unlike the --kk flag, existing
               cached credentials are used if they are valid.  To detect when
               the user's cached credentials are valid (or when no
               authentication is required), the following can be used:
                     sudo -Nnv

               Not all security policies support credential caching.

       --nn, ----nnoonn--iinntteerraaccttiivvee
               Avoid prompting the user for input of any kind.  If a password
               is required for the _c_o_m_m_a_n_d to run, ssuuddoo will display an error
               message and exit.

       --PP, ----pprreesseerrvvee--ggrroouuppss
               Preserve the invoking user's group vector unaltered.  By
               default, the _s_u_d_o_e_r_s policy will initialize the group vector to
               the list of groups the target user is a member of.  The real
               and effective group-IDs, however, are still set to match the
               target user.

       --pp _p_r_o_m_p_t, ----pprroommpptt=_p_r_o_m_p_t
               Use a custom password prompt with optional escape sequences.
               The following percent (‘%’) escape sequences are supported by
               the _s_u_d_o_e_r_s policy:

               %H  expanded to the host name including the domain name (only
                   if the machine's host name is fully qualified or the _f_q_d_n
                   option is set in sudoers(5))

               %h  expanded to the local host name without the domain name

               %p  expanded to the name of the user whose password is being
                   requested (respects the _r_o_o_t_p_w, _t_a_r_g_e_t_p_w, and _r_u_n_a_s_p_w flags
                   in sudoers(5))

               %U  expanded to the login name of the user the _c_o_m_m_a_n_d will be
                   run as (defaults to root unless the --uu option is also
                   specified)

               %u  expanded to the invoking user's login name

               %%  two consecutive ‘%’ characters are collapsed into a single
                   ‘%’ character

               The custom prompt will override the default prompt specified by
               either the security policy or the SUDO_PROMPT environment
               variable.  On systems that use PAM, the custom prompt will also
               override the prompt specified by a PAM module unless the
               _p_a_s_s_p_r_o_m_p_t___o_v_e_r_r_i_d_e flag is disabled in _s_u_d_o_e_r_s.

       --RR _d_i_r_e_c_t_o_r_y, ----cchhrroooott=_d_i_r_e_c_t_o_r_y
               Change to the specified root _d_i_r_e_c_t_o_r_y (see chroot(8)) before
               running the _c_o_m_m_a_n_d.  The security policy may return an error
               if the user does not have permission to specify the root
               directory.

       --rr _r_o_l_e, ----rroollee=_r_o_l_e
               Run the _c_o_m_m_a_n_d with an SELinux security context that includes
               the specified _r_o_l_e.

       --SS, ----ssttddiinn
               Write the prompt to the standard error and read the password
               from the standard input instead of using the terminal device.

       --ss, ----sshheellll
               Run the shell specified by the SHELL environment variable if it
               is set or the shell specified by the invoking user's password
               database entry.  If a _c_o_m_m_a_n_d is specified, it is passed to the
               shell as a simple command using the --cc option.  The _c_o_m_m_a_n_d and
               any _a_r_gs are concatenated, separated by spaces, after escaping
               each character (including white space) with a backslash (‘\’)
               except for alphanumerics, underscores, hyphens, and dollar
               signs.  If no _c_o_m_m_a_n_d is specified, an interactive shell is
               executed.  Most shells behave differently when a _c_o_m_m_a_n_d is
               specified as compared to an interactive session; consult the
               shell's manual for details.

       --tt _t_y_p_e, ----ttyyppee=_t_y_p_e
               Run the _c_o_m_m_a_n_d with an SELinux security context that includes
               the specified _t_y_p_e.  If no _t_y_p_e is specified, the default type
               is derived from the role.

       --UU _u_s_e_r, ----ootthheerr--uusseerr=_u_s_e_r
               Used in conjunction with the --ll option to list the privileges
               for _u_s_e_r instead of for the invoking user.  The security policy
               may restrict listing other users' privileges.  When using the
               _s_u_d_o_e_r_s policy, the --UU option is restricted to the root user
               and users with either the “list” priviege for the specified
               _u_s_e_r or the ability to run any _c_o_m_m_a_n_d as root or _u_s_e_r on the
               current host.

       --TT _t_i_m_e_o_u_t, ----ccoommmmaanndd--ttiimmeeoouutt=_t_i_m_e_o_u_t
               Used to set a timeout for the _c_o_m_m_a_n_d.  If the timeout expires
               before the _c_o_m_m_a_n_d has exited, the _c_o_m_m_a_n_d will be terminated.
               The security policy may restrict the user's ability to set
               timeouts.  The _s_u_d_o_e_r_s policy requires that user-specified
               timeouts be explicitly enabled.

       --uu _u_s_e_r, ----uusseerr=_u_s_e_r
               Run the _c_o_m_m_a_n_d as a user other than the default target user
               (usually rroooott).  The _u_s_e_r may be either a user name or a
               numeric user-ID (UID) prefixed with the ‘#’ character (e.g.,
               ‘#0’ for UID 0).  When running _c_o_m_m_a_n_ds as a UID, many shells
               require that the ‘#’ be escaped with a backslash (‘\’).  Some
               security policies may restrict UIDs to those listed in the
               password database.  The _s_u_d_o_e_r_s policy allows UIDs that are not
               in the password database as long as the _t_a_r_g_e_t_p_w option is not
               set.  Other security policies may not support this.

       --VV, ----vveerrssiioonn
               Print the ssuuddoo version string as well as the version string of
               any configured plugins.  If the invoking user is already root,
               the --VV option will display the options passed to configure when
               ssuuddoo was built; plugins may display additional information such
               as default options.

       --vv, ----vvaalliiddaattee
               Update the user's cached credentials, authenticating the user
               if necessary.  For the _s_u_d_o_e_r_s plugin, this extends the ssuuddoo
               timeout for another 5 minutes by default, but does not run a
               _c_o_m_m_a_n_d.  Not all security policies support cached credentials.

       ----      The ---- is used to delimit the end of the ssuuddoo options.
               Subsequent options are passed to the _c_o_m_m_a_n_d.

       Options that take a value may only be specified once unless otherwise
       indicated in the description.  This is to help guard against problems
       caused by poorly written scripts that invoke ssuuddoo with user-controlled
       input.

       Environment variables to be set for the _c_o_m_m_a_n_d may also be passed as
       options to ssuuddoo in the form _V_A_R=_v_a_l_u_e, for example
       LD_LIBRARY_PATH=_/_u_s_r_/_l_o_c_a_l_/_p_k_g_/_l_i_b.  Environment variables may be
       subject to restrictions imposed by the security policy plugin.  The
       _s_u_d_o_e_r_s policy subjects environment variables passed as options to the
       same restrictions as existing environment variables with one important
       difference.  If the _s_e_t_e_n_v option is set in _s_u_d_o_e_r_s, the _c_o_m_m_a_n_d to be
       run has the SETENV tag set or the _c_o_m_m_a_n_d matched is AALLLL, the user may
       set variables that would otherwise be forbidden.  See sudoers(5) for
       more information.

CCOOMMMMAANNDD EEXXEECCUUTTIIOONN
       When ssuuddoo executes a _c_o_m_m_a_n_d, the security policy specifies the
       execution environment for the _c_o_m_m_a_n_d.  Typically, the real and
       effective user and group and IDs are set to match those of the target
       user, as specified in the password database, and the group vector is
       initialized based on the group database (unless the --PP option was
       specified).

       The following parameters may be specified by security policy:

       ••  real and effective user-ID

       ••  real and effective group-ID

       ••  supplementary group-IDs

       ••  the environment list

       ••  current working directory

       ••  file creation mode mask (umask)

       ••  scheduling priority (aka nice value)

   PPrroocceessss mmooddeell
       There are two distinct ways ssuuddoo can run a _c_o_m_m_a_n_d.

       If an I/O logging plugin is configured to log terminal I/O, or if the
       security policy explicitly requests it, a new pseudo-terminal (“pty”)
       is allocated and fork(2) is used to create a second ssuuddoo process,
       referred to as the _m_o_n_i_t_o_r.  The _m_o_n_i_t_o_r creates a new terminal session
       with itself as the leader and the pty as its controlling terminal,
       calls fork(2) again, sets up the execution environment as described
       above, and then uses the execve(2) system call to run the _c_o_m_m_a_n_d in
       the child process.  The _m_o_n_i_t_o_r exists to relay job control signals
       between the user's terminal and the pty the _c_o_m_m_a_n_d is being run in.
       This makes it possible to suspend and resume the _c_o_m_m_a_n_d normally.
       Without the _m_o_n_i_t_o_r, the _c_o_m_m_a_n_d would be in what POSIX terms an
       “orphaned process group” and it would not receive any job control
       signals from the kernel.  When the _c_o_m_m_a_n_d exits or is terminated by a
       signal, the _m_o_n_i_t_o_r passes the _c_o_m_m_a_n_d's exit status to the main ssuuddoo
       process and exits.  After receiving the _c_o_m_m_a_n_d's exit status, the main
       ssuuddoo process passes the _c_o_m_m_a_n_d's exit status to the security policy's
       close function, as well as the close function of any configured audit
       plugin, and exits.

       If no pty is used, ssuuddoo calls fork(2), sets up the execution
       environment as described above, and uses the execve(2) system call to
       run the _c_o_m_m_a_n_d in the child process.  The main ssuuddoo process waits
       until the _c_o_m_m_a_n_d has completed, then passes the _c_o_m_m_a_n_d's exit status
       to the security policy's close function, as well as the close function
       of any configured audit plugins, and exits.  As a special case, if the
       policy plugin does not define a close function, ssuuddoo will execute the
       _c_o_m_m_a_n_d directly instead of calling fork(2) first.  The _s_u_d_o_e_r_s policy
       plugin will only define a close function when I/O logging is enabled, a
       pty is required, an SELinux role is specified, the _c_o_m_m_a_n_d has an
       associated timeout, or the _p_a_m___s_e_s_s_i_o_n or _p_a_m___s_e_t_c_r_e_d options are
       enabled.  Both _p_a_m___s_e_s_s_i_o_n and _p_a_m___s_e_t_c_r_e_d are enabled by default on
       systems using PAM.

       On systems that use PAM, the security policy's close function is
       responsible for closing the PAM session.  It may also log the _c_o_m_m_a_n_d's
       exit status.

   SSiiggnnaall hhaannddlliinngg
       When the _c_o_m_m_a_n_d is run as a child of the ssuuddoo process, ssuuddoo will relay
       signals it receives to the _c_o_m_m_a_n_d.  The SIGINT and SIGQUIT signals are
       only relayed when the _c_o_m_m_a_n_d is being run in a new pty or when the
       signal was sent by a user process, not the kernel.  This prevents the
       _c_o_m_m_a_n_d from receiving SIGINT twice each time the user enters control-
       C.  Some signals, such as SIGSTOP and SIGKILL, cannot be caught and
       thus will not be relayed to the _c_o_m_m_a_n_d.  As a general rule, SIGTSTP
       should be used instead of SIGSTOP when you wish to suspend a _c_o_m_m_a_n_d
       being run by ssuuddoo.

       As a special case, ssuuddoo will not relay signals that were sent by the
       _c_o_m_m_a_n_d it is running.  This prevents the _c_o_m_m_a_n_d from accidentally
       killing itself.  On some systems, the reboot(8) utility sends SIGTERM
       to all non-system processes other than itself before rebooting the
       system.  This prevents ssuuddoo from relaying the SIGTERM signal it
       received back to reboot(8), which might then exit before the system was
       actually rebooted, leaving it in a half-dead state similar to single
       user mode.  Note, however, that this check only applies to the _c_o_m_m_a_n_d
       run by ssuuddoo and not any other processes that the _c_o_m_m_a_n_d may create.
       As a result, running a script that calls reboot(8) or shutdown(8) via
       ssuuddoo may cause the system to end up in this undefined state unless the
       reboot(8) or shutdown(8) are run using the eexxeecc() family of functions
       instead of ssyysstteemm() (which interposes a shell between the _c_o_m_m_a_n_d and
       the calling process).

   PPlluuggiinnss
       Plugins may be specified via _P_l_u_g_i_n directives in the sudo.conf(5)
       file.  They may be loaded as dynamic shared objects (on systems that
       support them), or compiled directly into the ssuuddoo binary.  If no
       sudo.conf(5) file is present, or if it doesn't contain any _P_l_u_g_i_n
       lines, ssuuddoo will use sudoers(5) for the policy, auditing, and I/O
       logging plugins.  See the sudo.conf(5) manual for details of the
       _/_p_r_i_v_a_t_e_/_e_t_c_/_s_u_d_o_._c_o_n_f file and the sudo_plugin(5) manual for more
       information about the ssuuddoo plugin architecture.

EEXXIITT VVAALLUUEE
       Upon successful execution of a _c_o_m_m_a_n_d, the exit status from ssuuddoo will
       be the exit status of the program that was executed.  If the _c_o_m_m_a_n_d
       terminated due to receipt of a signal, ssuuddoo will send itself the same
       signal that terminated the _c_o_m_m_a_n_d.

       If the --ll option was specified without a _c_o_m_m_a_n_d, ssuuddoo will exit with a
       value of 0 if the user is allowed to run ssuuddoo and they authenticated
       successfully (as required by the security policy).  If a _c_o_m_m_a_n_d is
       specified with the --ll option, the exit value will only be 0 if the
       _c_o_m_m_a_n_d is permitted by the security policy, otherwise it will be 1.

       If there is an authentication failure, a configuration/permission
       problem, or if the given _c_o_m_m_a_n_d cannot be executed, ssuuddoo exits with a
       value of 1.  In the latter case, the error string is printed to the
       standard error.  If ssuuddoo cannot stat(2) one or more entries in the
       user's PATH, an error is printed to the standard error.  (If the
       directory does not exist or if it is not really a directory, the entry
       is ignored and no error is printed.)  This should not happen under
       normal circumstances.  The most common reason for stat(2) to return
       “permission denied” is if you are running an automounter and one of the
       directories in your PATH is on a machine that is currently unreachable.

SSEECCUURRIITTYY NNOOTTEESS
       ssuuddoo tries to be safe when executing external _c_o_m_m_a_n_ds.

       To prevent command spoofing, ssuuddoo checks ""."" and """" (both denoting
       current directory) last when searching for a _c_o_m_m_a_n_d in the user's PATH
       (if one or both are in the PATH).  Depending on the security policy,
       the user's PATH environment variable may be modified, replaced, or
       passed unchanged to the program that ssuuddoo executes.

       Users should _n_e_v_e_r be granted ssuuddoo privileges to execute files that are
       writable by the user or that reside in a directory that is writable by
       the user.  If the user can modify or replace the _c_o_m_m_a_n_d there is no
       way to limit what additional _c_o_m_m_a_n_ds they can run.

       By default, ssuuddoo will only log the _c_o_m_m_a_n_d it explicitly runs.  If a
       user runs a _c_o_m_m_a_n_d such as ‘sudo su’ or ‘sudo sh’, subsequent _c_o_m_m_a_n_ds
       run from that shell are not subject to ssuuddoo's security policy.  The
       same is true for _c_o_m_m_a_n_ds that offer shell escapes (including most
       editors).  If I/O logging is enabled, subsequent _c_o_m_m_a_n_ds will have
       their input and/or output logged, but there will not be traditional
       logs for those _c_o_m_m_a_n_ds.  Because of this, care must be taken when
       giving users access to _c_o_m_m_a_n_ds via ssuuddoo to verify that the _c_o_m_m_a_n_d
       does not inadvertently give the user an effective root shell.  For
       information on ways to address this, see the _P_r_e_v_e_n_t_i_n_g _s_h_e_l_l _e_s_c_a_p_e_s
       section in sudoers(5).

       To prevent the disclosure of potentially sensitive information, ssuuddoo
       disables core dumps by default while it is executing (they are re-
       enabled for the _c_o_m_m_a_n_d that is run).  This historical practice dates
       from a time when most operating systems allowed set-user-ID processes
       to dump core by default.  To aid in debugging ssuuddoo crashes, you may
       wish to re-enable core dumps by setting “disable_coredump” to false in
       the sudo.conf(5) file as follows:

           Set disable_coredump false

       See the sudo.conf(5) manual for more information.

EENNVVIIRROONNMMEENNTT
       ssuuddoo utilizes the following environment variables.  The security policy
       has control over the actual content of the _c_o_m_m_a_n_d's environment.

       EDITOR           Default editor to use in --ee (sudoedit) mode if neither
                        SUDO_EDITOR nor VISUAL is set.

       MAIL             Set to the mail spool of the target user when the --ii
                        option is specified, or when _e_n_v___r_e_s_e_t is enabled in
                        _s_u_d_o_e_r_s (unless MAIL is present in the _e_n_v___k_e_e_p list).

       HOME             Set to the home directory of the target user when the
                        --ii or --HH options are specified, when the --ss option is
                        specified and _s_e_t___h_o_m_e is set in _s_u_d_o_e_r_s, when
                        _a_l_w_a_y_s___s_e_t___h_o_m_e is enabled in _s_u_d_o_e_r_s, or when
                        _e_n_v___r_e_s_e_t is enabled in _s_u_d_o_e_r_s and HOME is not
                        present in the _e_n_v___k_e_e_p list.

       LOGNAME          Set to the login name of the target user when the --ii
                        option is specified, when the _s_e_t___l_o_g_n_a_m_e option is
                        enabled in _s_u_d_o_e_r_s, or when the _e_n_v___r_e_s_e_t option is
                        enabled in _s_u_d_o_e_r_s (unless LOGNAME is present in the
                        _e_n_v___k_e_e_p list).

       PATH             May be overridden by the security policy.

       SHELL            Used to determine shell to run with --ss option.

       SUDO_ASKPASS     Specifies the path to a helper program used to read
                        the password if no terminal is available or if the --AA
                        option is specified.

       SUDO_COMMAND     Set to the _c_o_m_m_a_n_d run by sudo, including any _a_r_gs.
                        The _a_r_gs are truncated at 4096 characters to prevent a
                        potential execution error.

       SUDO_EDITOR      Default editor to use in --ee (sudoedit) mode.

       SUDO_GID         Set to the group-ID of the user who invoked sudo.

       SUDO_PROMPT      Used as the default password prompt unless the --pp
                        option was specified.

       SUDO_PS1         If set, PS1 will be set to its value for the program
                        being run.

       SUDO_UID         Set to the user-ID of the user who invoked sudo.

       SUDO_USER        Set to the login name of the user who invoked sudo.

       USER             Set to the same value as LOGNAME, described above.

       VISUAL           Default editor to use in --ee (sudoedit) mode if
                        SUDO_EDITOR is not set.

FFIILLEESS
       _/_p_r_i_v_a_t_e_/_e_t_c_/_s_u_d_o_._c_o_n_f    ssuuddoo front-end configuration

EEXXAAMMPPLLEESS
       The following examples assume a properly configured security policy.

       To get a file listing of an unreadable directory:

           $ sudo ls /usr/local/protected

       To list the home directory of user yaz on a machine where the file
       system holding ~yaz is not exported as root:

           $ sudo -u yaz ls ~yaz

       To edit the _i_n_d_e_x_._h_t_m_l file as user www:

           $ sudoedit -u www ~www/htdocs/index.html

       To view system logs only accessible to root and users in the adm group:

           $ sudo -g adm more /var/log/syslog

       To run an editor as jim with a different primary group:

           $ sudoedit -u jim -g audio ~jim/sound.txt

       To shut down a machine:

           $ sudo shutdown -r +15 ""quick reboot""

       To make a usage listing of the directories in the /home partition.  The
       _c_o_m_m_a_n_d_s are run in a sub-shell to allow the ‘cd’ command and file
       redirection to work.

           $ sudo sh -c ""cd /home ; du -s * | sort -rn > USAGE""

DDIIAAGGNNOOSSTTIICCSS
       Error messages produced by ssuuddoo include:

       editing files in a writable directory is not permitted
             By default, ssuuddooeeddiitt does not permit editing a file when any of
             the parent directories are writable by the invoking user.  This
             avoids a race condition that could allow the user to overwrite an
             arbitrary file.  See the _s_u_d_o_e_d_i_t___c_h_e_c_k_d_i_r option in sudoers(5)
             for more information.

       editing symbolic links is not permitted
             By default, ssuuddooeeddiitt does not follow symbolic links when opening
             files.  See the _s_u_d_o_e_d_i_t___f_o_l_l_o_w option in sudoers(5) for more
             information.

       effective uid is not 0, is sudo installed setuid root?
             ssuuddoo was not run with root privileges.  The ssuuddoo binary must be
             owned by the root user and have the set-user-ID bit set.  Also,
             it must not be located on a file system mounted with the ‘nosuid’
             option or on an NFS file system that maps uid 0 to an
             unprivileged uid.

       effective uid is not 0, is sudo on a file system with the 'nosuid'
       option set or an NFS file system without root privileges?
             ssuuddoo was not run with root privileges.  The ssuuddoo binary has the
             proper owner and permissions but it still did not run with root
             privileges.  The most common reason for this is that the file
             system the ssuuddoo binary is located on is mounted with the ‘nosuid’
             option or it is an NFS file system that maps uid 0 to an
             unprivileged uid.

       fatal error, unable to load plugins
             An error occurred while loading or initializing the plugins
             specified in sudo.conf(5).

       invalid environment variable name
             One or more environment variable names specified via the --EE
             option contained an equal sign (‘=’).  The arguments to the --EE
             option should be environment variable names without an associated
             value.

       no password was provided
             When ssuuddoo tried to read the password, it did not receive any
             characters.  This may happen if no terminal is available (or the
             --SS option is specified) and the standard input has been
             redirected from _/_d_e_v_/_n_u_l_l.

       a terminal is required to read the password
             ssuuddoo needs to read the password but there is no mechanism
             available for it to do so.  A terminal is not present to read the
             password from, ssuuddoo has not been configured to read from the
             standard input, the --SS option was not used, and no askpass helper
             has been specified either via the sudo.conf(5) file or the
             SUDO_ASKPASS environment variable.

       no writable temporary directory found
             ssuuddooeeddiitt was unable to find a usable temporary directory in which
             to store its intermediate files.

       The “no new privileges” flag is set, which prevents sudo from running
       as root.
             ssuuddoo was run by a process that has the Linux “no new privileges”
             flag is set.  This causes the set-user-ID bit to be ignored when
             running an executable, which will prevent ssuuddoo from functioning.
             The most likely cause for this is running ssuuddoo within a container
             that sets this flag.  Check the documentation to see if it is
             possible to configure the container such that the flag is not
             set.

       sudo must be owned by uid 0 and have the setuid bit set
             ssuuddoo was not run with root privileges.  The ssuuddoo binary does not
             have the correct owner or permissions.  It must be owned by the
             root user and have the set-user-ID bit set.

       sudoedit is not supported on this platform
             It is only possible to run ssuuddooeeddiitt on systems that support
             setting the effective user-ID.

       timed out reading password
             The user did not enter a password before the password timeout (5
             minutes by default) expired.

       you do not exist in the passwd database
             Your user-ID does not appear in the system passwd database.

       you may not specify environment variables in edit mode
             It is only possible to specify environment variables when running
             a _c_o_m_m_a_n_d.  When editing a file, the editor is run with the
             user's environment unmodified.

SSEEEE AALLSSOO
       su(1), stat(2), login_cap(3), passwd(5), sudo.conf(5), sudo_plugin(5),
       sudoers(5), sudoers_timestamp(5), sudoreplay(8), visudo(8)

HHIISSTTOORRYY
       See the HISTORY.md file in the ssuuddoo distribution
       (https://www.sudo.ws/about/history/) for a brief history of sudo.

AAUUTTHHOORRSS
       Many people have worked on ssuuddoo over the years; this version consists
       of code written primarily by:

             Todd C. Miller

       See the CONTRIBUTORS.md file in the ssuuddoo distribution
       (https://www.sudo.ws/about/contributors/) for an exhaustive list of
       people who have contributed to ssuuddoo.

CCAAVVEEAATTSS
       There is no easy way to prevent a user from gaining a root shell if
       that user is allowed to run arbitrary _c_o_m_m_a_n_d_s via ssuuddoo.  Also, many
       programs (such as editors) allow the user to run _c_o_m_m_a_n_ds via shell
       escapes, thus avoiding ssuuddoo's checks.  However, on most systems it is
       possible to prevent shell escapes with the sudoers(5) plugin's _n_o_e_x_e_c
       functionality.

       It is not meaningful to run the ‘cd’ _c_o_m_m_a_n_d directly via sudo, e.g.,

           $ sudo cd /usr/local/protected

       since when the _c_o_m_m_a_n_d exits the parent process (your shell) will still
       be the same.  The --DD option can be used to run a _c_o_m_m_a_n_d in a specific
       _d_i_r_e_c_t_o_r_y.

       Running shell scripts via ssuuddoo can expose the same kernel bugs that
       make set-user-ID shell scripts unsafe on some operating systems (if
       your OS has a /dev/fd/ directory, set-user-ID shell scripts are
       generally safe).

BBUUGGSS
       If you believe you have found a bug in ssuuddoo, you can submit a bug
       report at https://bugzilla.sudo.ws/

SSUUPPPPOORRTT
       Limited free support is available via the sudo-users mailing list, see
       https://www.sudo.ws/mailman/listinfo/sudo-users to subscribe or search
       the archives.

DDIISSCCLLAAIIMMEERR
       ssuuddoo is provided “AS IS” and any express or implied warranties,
       including, but not limited to, the implied warranties of
       merchantability and fitness for a particular purpose are disclaimed.
       See the LICENSE.md file distributed with ssuuddoo or
       https://www.sudo.ws/about/license/ for complete details.

Sudo 1.9.13p2                  January 16, 2023                        SUDO(8)
"
passwd,"OPENSSL-CMDS(1ssl)                  OpenSSL                 OPENSSL-CMDS(1ssl)


NNAAMMEE
       asn1parse, ca, ciphers, cmp, cms, crl, crl2pkcs7, dgst, dhparam, dsa,
       dsaparam, ec, ecparam, enc, engine, errstr, gendsa, genpkey, genrsa,
       info, kdf, mac, nseq, ocsp, passwd, pkcs12, pkcs7, pkcs8, pkey,
       pkeyparam, pkeyutl, prime, rand, rehash, req, rsa, rsautl, s_client,
       s_server, s_time, sess_id, smime, speed, spkac, srp, storeutl, ts,
       verify, version, x509 - OpenSSL application commands

SSYYNNOOPPSSIISS
       ooppeennssssll _c_m_d --hheellpp | [_-_o_p_t_i_o_n | _-_o_p_t_i_o_n _a_r_g] ... [_a_r_g] ...

DDEESSCCRRIIPPTTIIOONN
       Every _c_m_d listed above is a (sub-)command of the ooppeennssssll(1)
       application.  It has its own detailed manual page at ooppeennssssll--_cc_mm_dd(1).
       For example, to view the manual page for the ooppeennssssll ddggsstt command, type
       ""man openssl-dgst"".

OOPPTTIIOONNSS
       Among others, every subcommand has a help option.

       --hheellpp
           Print out a usage message for the subcommand.

SSEEEE AALLSSOO
       ooppeennssssll(1), ooppeennssssll--aassnn11ppaarrssee(1), ooppeennssssll--ccaa(1), ooppeennssssll--cciipphheerrss(1),
       ooppeennssssll--ccmmpp(1), ooppeennssssll--ccmmss(1), ooppeennssssll--ccrrll(1), ooppeennssssll--ccrrll22ppkkccss77(1),
       ooppeennssssll--ddggsstt(1), ooppeennssssll--ddhhppaarraamm(1), ooppeennssssll--ddssaa(1),
       ooppeennssssll--ddssaappaarraamm(1), ooppeennssssll--eecc(1), ooppeennssssll--eeccppaarraamm(1), ooppeennssssll--eenncc(1),
       ooppeennssssll--eennggiinnee(1), ooppeennssssll--eerrrrssttrr(1), ooppeennssssll--ggeennddssaa(1),
       ooppeennssssll--ggeennppkkeeyy(1), ooppeennssssll--ggeennrrssaa(1), ooppeennssssll--iinnffoo(1), ooppeennssssll--kkddff(1),
       ooppeennssssll--mmaacc(1), ooppeennssssll--nnsseeqq(1), ooppeennssssll--ooccsspp(1), ooppeennssssll--ppaasssswwdd(1),
       ooppeennssssll--ppkkccss1122(1), ooppeennssssll--ppkkccss77(1), ooppeennssssll--ppkkccss88(1), ooppeennssssll--ppkkeeyy(1),
       ooppeennssssll--ppkkeeyyppaarraamm(1), ooppeennssssll--ppkkeeyyuuttll(1), ooppeennssssll--pprriimmee(1),
       ooppeennssssll--rraanndd(1), ooppeennssssll--rreehhaasshh(1), ooppeennssssll--rreeqq(1), ooppeennssssll--rrssaa(1),
       ooppeennssssll--rrssaauuttll(1), ooppeennssssll--ss__cclliieenntt(1), ooppeennssssll--ss__sseerrvveerr(1),
       ooppeennssssll--ss__ttiimmee(1), ooppeennssssll--sseessss__iidd(1), ooppeennssssll--ssmmiimmee(1),
       ooppeennssssll--ssppeeeedd(1), ooppeennssssll--ssppkkaacc(1), ooppeennssssll--ssrrpp(1),
       ooppeennssssll--ssttoorreeuuttll(1), ooppeennssssll--ttss(1), ooppeennssssll--vveerriiffyy(1),
       ooppeennssssll--vveerrssiioonn(1), ooppeennssssll--xx550099(1),

HHIISSTTOORRYY
       Initially, the manual page entry for the ""openssl _c_m_d"" command used to
       be available at _c_m_d(1). Later, the alias ooppeennssssll--_cc_mm_dd(1) was introduced,
       which made it easier to group the openssl commands using the aapprrooppooss(1)
       command or the shell's tab completion.

       In order to reduce cluttering of the global manual page namespace, the
       manual page entries without the 'openssl-' prefix have been deprecated
       in OpenSSL 3.0 and will be removed in OpenSSL 4.0.

CCOOPPYYRRIIGGHHTT
       Copyright 2019-2020 The OpenSSL Project Authors. All Rights Reserved.

       Licensed under the Apache License 2.0 (the ""License"").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.

3.3.2                             2024-09-03                OPENSSL-CMDS(1ssl)
"
hostname,"HOSTNAME(1)                 General Commands Manual                HOSTNAME(1)

NNAAMMEE
     hhoossttnnaammee – set or print name of current host system

SSYYNNOOPPSSIISS
     hhoossttnnaammee [--ff] [--ss | --dd] [_n_a_m_e_-_o_f_-_h_o_s_t]

DDEESSCCRRIIPPTTIIOONN
     The hhoossttnnaammee utility prints the name of the current host.  The super-user
     can set the hostname by supplying an argument.  To keep the hostname
     between reboots, run ‘scutil --set HostName _n_a_m_e_-_o_f_-_h_o_s_t’.

     Options:

     --ff    Include domain information in the printed name.  This is the
           default behavior.

     --ss    Trim off any domain information from the printed name.

     --dd    Only print domain information.

EEXXAAMMPPLLEESS
     Set the host name of the machine and check the result:

           $ hostname beastie.localdomain.org
           $ hostname
           beastie.localdomain.org

     Do not show domain information:

           $ hostname -s
           beastie

     Show only domain information:

           $ hostname -d
           localdomain.org

SSEEEE AALLSSOO
     gethostname(3), scutil(8)

HHIISSTTOORRYY
     The hhoossttnnaammee command appeared in 4.2BSD.

macOS 14.6                      October 5, 2020                     macOS 14.6
"
traceroute,"TRACEROUTE(8)               System Manager's Manual              TRACEROUTE(8)

NNAAMMEE
     ttrraacceerroouuttee – print the route packets take to network host

SSYYNNOOPPSSIISS
     ttrraacceerroouuttee [--aaddeeEEFFIISSddNNnnrrvvxx] [--AA _a_s___s_e_r_v_e_r] [--ff _f_i_r_s_t___t_t_l] [--gg _g_a_t_e_w_a_y]
                [--ii _i_f_a_c_e] [--MM _f_i_r_s_t___t_t_l] [--mm _m_a_x___t_t_l] [--PP _p_r_o_t_o] [--pp _p_o_r_t]
                [--qq _n_q_u_e_r_i_e_s] [--ss _s_r_c___a_d_d_r] [--tt _t_o_s] [--ww _w_a_i_t_t_i_m_e]
                [--zz _p_a_u_s_e_m_s_e_c_s] _h_o_s_t [_p_a_c_k_e_t_s_i_z_e]

DDEESSCCRRIIPPTTIIOONN
     The Internet is a large and complex aggregation of network hardware,
     connected together by gateways.  Tracking the route one's packets follow
     (or finding the miscreant gateway that's discarding your packets) can be
     difficult.  ttrraacceerroouuttee utilizes the IP protocol `time to live' field and
     attempts to elicit an ICMP TIME_EXCEEDED response from each gateway along
     the path to some host.

     The only mandatory parameter is the destination host name or IP number.
     The default probe datagram length is 40 bytes, but this may be increased
     by specifying a packet size (in bytes) after the destination host name.

     Other options are:

     --aa      Turn on AS# lookups for each hop encountered.

     --AA _a_s___s_e_r_v_e_r
             Turn  on  AS#  lookups  and  use the given server instead of the
             default.

     --dd      Enable socket level debugging.

     --DD      When an ICMP response to our probe datagram is received, print
             the differences between the transmitted packet and the packet
             quoted by the ICMP response.  A key showing the location of
             fields within the transmitted packet is printed, followed by the
             original packet in hex, followed by the quoted packet in hex.
             Bytes that are unchanged in the quoted packet are shown as
             underscores.  Note, the IP checksum and the TTL of the quoted
             packet are not expected to match.  By default, only one probe per
             hop is sent with this option.

     --EE      Detect ECN bleaching.  Set the _I_P_T_O_S___E_C_N___E_C_T_1 bit and report if
             that value has been bleached or mangled.

     --ee      Firewall evasion mode.  Use fixed destination ports for UDP and
             TCP probes.  The destination port does NOT increment with each
             packet sent.

     --ff _f_i_r_s_t___t_t_l
             Set the initial time-to-live used in the first outgoing probe
             packet.

     --FF      Set the ""don't fragment"" bit.

     --gg _g_a_t_e_w_a_y
             Specify a loose source route gateway (8 maximum).

     --ii _i_f_a_c_e
             Specify a network interface to obtain the source IP address for
             outgoing probe packets. This is normally only useful on a multi-
             homed host. (See the --ss flag for another way to do this.)

     --II      Use ICMP ECHO instead of UDP datagrams.  (A synonym for ""-P
             icmp"").

     --MM _f_i_r_s_t___t_t_l
             Set the initial time-to-live value used in outgoing probe
             packets.  The default is 1, i.e., start with the first hop.

     --mm _m_a_x___t_t_l
             Set the max time-to-live (max number of hops) used in outgoing
             probe packets.  The default is _n_e_t_._i_n_e_t_._i_p_._t_t_l hops (the same
             default used for TCP connections).

     --nn      Print hop addresses numerically rather than symbolically and
             numerically (saves a nameserver address-to-name lookup for each
             gateway found on the path).

     --PP _p_r_o_t_o
             Send packets of specified IP protocol. The currently supported
             protocols are: UDP , TCP , GRE and ICMP Other protocols may also
             be specified (either by name or by number), though ttrraacceerroouuttee
             does not implement any special knowledge of their packet formats.
             This option is useful for determining which router along a path
             may be blocking packets based on IP protocol number. But see BUGS
             below.

     --pp _p_o_r_t
             Protocol specific. For UDP and TCP, sets the base _p_o_r_t number
             used in probes (default is 33434).  ttrraacceerroouuttee hopes that nothing
             is listening on UDP ports _b_a_s_e to _b_a_s_e_+_n_h_o_p_s_-_1 at the destination
             host (so an ICMP PORT_UNREACHABLE message will be returned to
             terminate the route tracing).  If something is listening on a
             port in the default range, this option can be used to pick an
             unused port range.

     --qq _n_q_u_e_r_i_e_s
             Set the number of probes per ``ttl'' to _n_q_u_e_r_i_e_s (default is
             three probes).

     --rr      Bypass the normal routing tables and send directly to a host on
             an attached network.  If the host is not on a directly-attached
             network, an error is returned.  This option can be used to ping a
             local host through an interface that has no route through it
             (e.g., after the interface was dropped by routed(8)).

     --ss _s_r_c___a_d_d_r
             Use the following IP address (which must be given as an IP
             number, not a hostname) as the source address in outgoing probe
             packets.  On hosts with more than one IP address, this option can
             be used to force the source address to be something other than
             the IP address of the interface the probe packet is sent on.  If
             the IP address is not one of this machine's interface addresses,
             an error is returned and nothing is sent.  (See the --ii flag for
             another way to do this.)

     --SS      Print a summary of how many probes were not answered for each
             hop.

     --tt _t_o_s  Set the _t_y_p_e_-_o_f_-_s_e_r_v_i_c_e in probe packets to the following value
             (default zero).  The value must be a decimal integer in the range
             0 to 255.  This option can be used to see if different types-of-
             service result in different paths.  (If you are not running a
             4.4BSD or later system, this may be academic since the normal
             network services like telnet and ftp don't let you control the
             TOS).  Not all values of TOS are legal or meaningful - see the IP
             spec for definitions.  Useful values are probably ‘-t 16’ (low
             delay) and ‘-t 8’ (high throughput).

     --vv      Verbose output.  Received ICMP packets other than TIME_EXCEEDED
             and UNREACHABLEs are listed.

     --ww      Set the time (in seconds) to wait for a response to a probe
             (default 5 sec.).

     --xx      Toggle IP checksums. Normally, this prevents ttrraacceerroouuttee from
             calculating IP checksums. In some cases, the operating system can
             overwrite parts of the outgoing packet but not recalculate the
             checksum (so in some cases the default is to not calculate
             checksums and using --xx causes them to be calculated). Note that
             checksums are usually required for the last hop when using ICMP
             ECHO probes ( --II ). So they are always calculated when using
             ICMP.

     --zz _p_a_u_s_e_m_s_e_c_s
             Set the time (in milliseconds) to pause between probes (default
             0).  Some systems such as Solaris and routers such as Ciscos rate
             limit ICMP messages. A good value to use with this is 500 (e.g.
             1/2 second).

     This program attempts to trace the route an IP packet would follow to
     some internet host by launching UDP probe packets with a small ttl (time
     to live) then listening for an ICMP ""time exceeded"" reply from a gateway.
     We start our probes with a ttl of one and increase by one until we get an
     ICMP ""port unreachable"" (which means we got to ""host"") or hit a max
     (which defaults to _n_e_t_._i_n_e_t_._i_p_._t_t_l hops & can be changed with the --mm
     flag).  Three probes (changed with --qq flag) are sent at each ttl setting
     and a line is printed showing the ttl, address of the gateway and round
     trip time of each probe.  If the probe answers come from different
     gateways, the address of each responding system will be printed.  If
     there is no response within a 5 sec. timeout interval (changed with the
     --ww flag), a ""*"" is printed for that probe.

     We don't want the destination host to process the UDP probe packets so
     the destination port is set to an unlikely value (if some clod on the
     destination is using that value, it can be changed with the --pp flag).

     A sample use and output might be:

     [yak 71]% traceroute nis.nsf.net.
     traceroute to nis.nsf.net (35.1.1.48), 64 hops max, 38 byte packet
     1  helios.ee.lbl.gov (128.3.112.1)  19 ms  19 ms  0 ms
     2  lilac-dmc.Berkeley.EDU (128.32.216.1)  39 ms  39 ms  19 ms
     3  lilac-dmc.Berkeley.EDU (128.32.216.1)  39 ms  39 ms  19 ms
     4  ccngw-ner-cc.Berkeley.EDU (128.32.136.23)  39 ms  40 ms  39 ms
     5  ccn-nerif22.Berkeley.EDU (128.32.168.22)  39 ms  39 ms  39 ms
     6  128.32.197.4 (128.32.197.4)  40 ms  59 ms  59 ms
     7  131.119.2.5 (131.119.2.5)  59 ms  59 ms  59 ms
     8  129.140.70.13 (129.140.70.13)  99 ms  99 ms  80 ms
     9  129.140.71.6 (129.140.71.6)  139 ms  239 ms  319 ms
     10  129.140.81.7 (129.140.81.7)  220 ms  199 ms  199 ms
     11  nic.merit.edu (35.1.1.48)  239 ms  239 ms  239 ms

     Note that lines 2 & 3 are the same.  This is due to a buggy kernel on the
     2nd hop system - lbl-csam.arpa - that forwards packets with a zero ttl (a
     bug in the distributed version of 4.3 BSD).  Note that you have to guess
     what path the packets are taking cross-country since the NSFNet (129.140)
     doesn't supply address-to-name translations for its NSSes.

     A more interesting example is:

     [yak 72]% traceroute allspice.lcs.mit.edu.
     traceroute to allspice.lcs.mit.edu (18.26.0.115), 64 hops max
     1  helios.ee.lbl.gov (128.3.112.1)  0 ms  0 ms  0 ms
     2  lilac-dmc.Berkeley.EDU (128.32.216.1)  19 ms  19 ms  19 ms
     3  lilac-dmc.Berkeley.EDU (128.32.216.1)  39 ms  19 ms  19 ms
     4  ccngw-ner-cc.Berkeley.EDU (128.32.136.23)  19 ms  39 ms  39 ms
     5  ccn-nerif22.Berkeley.EDU (128.32.168.22)  20 ms  39 ms  39 ms
     6  128.32.197.4 (128.32.197.4)  59 ms  119 ms  39 ms
     7  131.119.2.5 (131.119.2.5)  59 ms  59 ms  39 ms
     8  129.140.70.13 (129.140.70.13)  80 ms  79 ms  99 ms
     9  129.140.71.6 (129.140.71.6)  139 ms  139 ms  159 ms
     10  129.140.81.7 (129.140.81.7)  199 ms  180 ms  300 ms
     11  129.140.72.17 (129.140.72.17)  300 ms  239 ms  239 ms
     12  * * *
     13  128.121.54.72 (128.121.54.72)  259 ms  499 ms  279 ms
     14  * * *
     15  * * *
     16  * * *
     17  * * *
     18  ALLSPICE.LCS.MIT.EDU (18.26.0.115)  339 ms  279 ms  279 ms

     Note that the gateways 12, 14, 15, 16 & 17 hops away either don't send
     ICMP ""time exceeded"" messages or send them with a ttl too small to reach
     us.  14 - 17 are running the MIT C Gateway code that doesn't send ""time
     exceeded""s.  God only knows what's going on with 12.

     The silent gateway 12 in the above may be the result of a bug in the
     4.[23] BSD network code (and its derivatives):  4.x (x <= 3) sends an
     unreachable message using whatever ttl remains in the original datagram.
     Since, for gateways, the remaining ttl is zero, the ICMP ""time exceeded""
     is guaranteed to not make it back to us.  The behavior of this bug is
     slightly more interesting when it appears on the destination system:

     1  helios.ee.lbl.gov (128.3.112.1)  0 ms  0 ms  0 ms
     2  lilac-dmc.Berkeley.EDU (128.32.216.1)  39 ms  19 ms  39 ms
     3  lilac-dmc.Berkeley.EDU (128.32.216.1)  19 ms  39 ms  19 ms
     4  ccngw-ner-cc.Berkeley.EDU (128.32.136.23)  39 ms  40 ms  19 ms
     5  ccn-nerif35.Berkeley.EDU (128.32.168.35)  39 ms  39 ms  39 ms
     6  csgw.Berkeley.EDU (128.32.133.254)  39 ms  59 ms  39 ms
     7  * * *
     8  * * *
     9  * * *
     10  * * *
     11  * * *
     12  * * *
     13  rip.Berkeley.EDU (128.32.131.22)  59 ms !  39 ms !  39 ms !

     Notice that there are 12 ""gateways"" (13 is the final destination) and
     exactly the last half of them are ""missing"".  What's really happening is
     that rip (a Sun-3 running Sun OS3.5) is using the ttl from our arriving
     datagram as the ttl in its ICMP reply.  So, the reply will time out on
     the return path (with no notice sent to anyone since ICMP's aren't sent
     for ICMP's) until we probe with a ttl that's at least twice the path
     length.  I.e., rip is really only 7 hops away.  A reply that returns with
     a ttl of 1 is a clue this problem exists.  ttrraacceerroouuttee prints a ""!"" after
     the time if the ttl is <= 1.  Since vendors ship a lot of obsolete (DEC´s
     Ultrix, Sun 3.x) or non-standard (HPUX) software, expect to see this
     problem frequently and/or take care picking the target host of your
     probes.

     Other possible annotations after the time are !!HH, !!NN, or !!PP (host,
     network or protocol unreachable), !!SS (source route failed),
     (fragmentation needed - the RFC1191 Path MTU Discovery value is
     displayed), !!UU or !!WW (destination network/host unknown), !!II (source host
     is isolated), !!AA (communication with destination network administratively
     prohibited), !!ZZ (communication with destination host administratively
     prohibited), !!QQ (for this ToS the destination network is unreachable), !!TT
     (for this ToS the destination host is unreachable), !!XX (communication
     administratively prohibited), !!VV (host precedence violation), !!CC
     (precedence cutoff in effect), or !!<<nnuumm>> (ICMP unreachable code <num>).
     These are defined by RFC1812 (which supersedes RFC1716).  If almost all
     the probes result in some kind of unreachable, ttrraacceerroouuttee will give up
     and exit.

     This program is intended for use in network testing, measurement and
     management.  It should be used primarily for manual fault isolation.
     Because of the load it could impose on the network, it is unwise to use
     ttrraacceerroouuttee during normal operations or from automated scripts.

AAUUTTHHOORR
     Implemented by Van Jacobson from a suggestion by Steve Deering.  Debugged
     by a cast of thousands with particularly cogent suggestions or fixes from
     C. Philip Wood, Tim Seaver and Ken Adelman.

SSEEEE AALLSSOO
     netstat(1), ping(8), traceroute6(8)

BBUUGGSS
     When using protocols other than UDP, functionality is reduced.  In
     particular, the last packet will often appear to be lost, because even
     though it reaches the destination host, there's no way to know that
     because no ICMP message is sent back.  In the TCP case, ttrraacceerroouuttee should
     listen for a RST from the destination host (or an intermediate router
     that's filtering packets), but this is not implemented yet.

     The AS number capability reports information that may sometimes be
     inaccurate due to discrepancies between the contents of the routing
     database server and the current state of the Internet.

BSD 4.3                          May 29, 2008                          BSD 4.3
"
netstat,"NETSTAT(1)                  General Commands Manual                 NETSTAT(1)

NNAAMMEE
     nneettssttaatt – show network status

SSYYNNOOPPSSIISS
     nneettssttaatt [--AAaaLLllnnWW] [--ff _a_d_d_r_e_s_s___f_a_m_i_l_y | --pp _p_r_o_t_o_c_o_l]
     nneettssttaatt [--ggiillnnss] [--vv] [--ff _a_d_d_r_e_s_s___f_a_m_i_l_y] [--II _i_n_t_e_r_f_a_c_e]
     nneettssttaatt --ii | --II _i_n_t_e_r_f_a_c_e [--ww _w_a_i_t] [--cc _q_u_e_u_e] [--aabbddggqqRRttSS]
     nneettssttaatt --ss [--ss] [--ff _a_d_d_r_e_s_s___f_a_m_i_l_y | --pp _p_r_o_t_o_c_o_l] [--ww _w_a_i_t]
     nneettssttaatt --ii | --II _i_n_t_e_r_f_a_c_e --ss [--ff _a_d_d_r_e_s_s___f_a_m_i_l_y | --pp _p_r_o_t_o_c_o_l]
     nneettssttaatt --mm [--mm]
     nneettssttaatt --rr [--AAaallnn] [--ff _a_d_d_r_e_s_s___f_a_m_i_l_y]
     nneettssttaatt --rrss [--ss]
     nneettssttaatt --BB [--II _i_n_t_e_r_f_a_c_e]

DDEESSCCRRIIPPTTIIOONN
     The nneettssttaatt command symbolically displays the contents of various
     network-related data structures.  There are a number of output formats,
     depending on the options for the information presented.  The first form
     of the command displays a list of active sockets for each protocol.  The
     second form presents the contents of one of the other network data
     structures according to the option selected. Using the third form, with a
     _w_a_i_t interval specified, nneettssttaatt will continuously display the
     information regarding packet traffic on the configured network
     interfaces.  The fourth form displays statistics for the specified
     protocol or address family. If a _w_a_i_t interval is specified, the protocol
     information over the last interval seconds will be displayed.  The fifth
     form displays per-interface statistics for the specified protocol or
     address family.  The sixth form displays mbuf(9) statistics.  The seventh
     form displays routing table for the specified address family.  The eighth
     form displays routing statistics.

     The options have the following meaning:

     --AA    With the default display, show the address of any protocol control
           blocks associated with sockets and the flow hash; used for
           debugging.

     --aa    With the default display, show the state of all sockets; normally
           sockets used by server processes are not shown. With the routing
           table display (option --rr, as described below), show protocol-cloned
           routes (routes generated by a RTF_PRCLONING parent route); normally
           these routes are not shown.

     --BB    Show statistics about bpf(4) devices.  This includes information
           like how many packets have been matched, dropped and received by
           the bbppff device, also information about current buffer sizes and
           device states. The option --II show information only for the bbppff
           devices bound the specified interface.

     --bb    With the interface display (option --ii, as described below), show
           the number of bytes in and out.

     --cc _q_u_e_u_e
           With the queue statistics (option --qq, as described below), show
           only those for the specified _q_u_e_u_e.

     --dd    With either interface display (option --ii or an interval, as
           described below), show the number of dropped packets.

     --ff _a_d_d_r_e_s_s___f_a_m_i_l_y
           Limit statistics or address control block reports to those of the
           specified _a_d_d_r_e_s_s _f_a_m_i_l_y.  The following address families are
           recognized: _i_n_e_t, for AF_INET, _i_n_e_t_6, for AF_INET6, _u_n_i_x, for
           AF_UNIX and _v_s_o_c_k, for AF_VSOCK.

     --gg    Show information related to multicast (group address) membership.
           If the --ss option is also present, show extended interface group
           management statistics.  If the --vv option is specified, show link-
           layer memberships; they are suppressed by default.  Source lists
           for each group will also be printed.  Specifying --vv twice will
           print the control plane timers for each interface and the source
           list counters for each group.  If the --ii is specified, only that
           interface will be shown.  If the --ff is specified, only information
           for the address family will be displayed.

     --II _i_n_t_e_r_f_a_c_e
           Show information about the specified interface; used with a _w_a_i_t
           interval as described below.  If the --ss option is present, show
           per-interface protocol statistics on the _i_n_t_e_r_f_a_c_e for the
           specified _a_d_d_r_e_s_s___f_a_m_i_l_y or _p_r_o_t_o_c_o_l, or for all protocol families.

     --ii    Show the state of interfaces which have been auto-configured
           (interfaces statically configured into a system, but not located at
           boot time are not shown).  If the --aa options is also present,
           multicast addresses currently in use are shown for each Ethernet
           interface and for each IP interface address.  Multicast addresses
           are shown on separate lines following the interface address with
           which they are associated.  If the --ss option is present, show per-
           interface statistics on all interfaces for the specified
           _a_d_d_r_e_s_s___f_a_m_i_l_y or _p_r_o_t_o_c_o_l, or for all protocol families.

     --LL    Show the size of the various listen queues.  The first count shows
           the number of unaccepted connections.  The second count shows the
           amount of unaccepted incomplete connections.  The third count is
           the maximum number of queued connections.

     --ll    Print full IPv6 address.

     --mm    Show statistics recorded by the memory management routines (the
           network stack manages a private pool of memory buffers). More
           detailed information about the buffers, which includes their cache
           related statistics, can be obtained by using --mmmm or --mm --mm option.

     --nn    Show network addresses as numbers (normally nneettssttaatt interprets
           addresses and attempts to display them symbolically).  This option
           may be used with any of the display formats.

     --pp _p_r_o_t_o_c_o_l
           Show statistics about _p_r_o_t_o_c_o_l, which is either a well-known name
           for a protocol or an alias for it.  Some protocol names and aliases
           are listed in the file _/_e_t_c_/_p_r_o_t_o_c_o_l_s.  The special protocol name
           “bdg” is used to show bridging statistics.  A null response
           typically means that there are no interesting numbers to report.
           The program will complain if _p_r_o_t_o_c_o_l is unknown or if there is no
           statistics routine for it.

     --qq    Show network interface send queue statistics.  By default all
           queues are displayed, unless specified with --cc.  This option
           requires specifying an interface with --II option.  More detailed
           information about the queues, which includes their queueing
           algorithm related statistics, can be obtained by using --qqqq or --qq --qq
           option.

     --rr    Show the routing tables.  Use with --aa to show protocol-cloned
           routes.  When --ss is also present, show routing statistics instead.
           When --ll is also present, nneettssttaatt assumes more columns are there and
           the maximum transmission unit.  More detailed information about the
           route metrics are displayed with --llll for TCP round trip times --llllll
           for all metrics.  Use the --zz flags to display only entries with
           non-zero RTT values.  (“mtu”) are also displayed.

     --RR    Show reachability information.  Use with --ii to show link-layer
           reachability information for a given interface.

     --ss    Show per-protocol statistics.  If this option is repeated, counters
           with a value of zero are suppressed.  For security reasons, root
           privileges are required to read TCP statistics and in the absence
           of such privileges all TCP counters will be reported as zero.

     --SS    Show interface link status and interface state information about
           the specified interface.  This option requires specifying an
           interface with --II option.

     --vv    Increase verbosity level.

     --WW    In certain displays, avoid truncating addresses even if this causes
           some fields to overflow.

     --ww _w_a_i_t
           Show network interface or protocol statistics at intervals of _w_a_i_t
           seconds.

     --xx    Show extended link-layer reachability information in addition to
           that shown by the --RR flag.

OOUUTTPPUUTT
     The default display, for active sockets, shows the local and remote
     addresses, send and receive queue sizes (in bytes), protocol, and the
     internal state of the protocol.  Address formats are of the form
     “host.port” or “network.port” if a socket's address specifies a network
     but no specific host address.  If known, the host and network addresses
     are displayed symbolically according to the databases _/_e_t_c_/_h_o_s_t_s and
     _/_e_t_c_/_n_e_t_w_o_r_k_s, respectively.  If a symbolic name for an address is
     unknown, or if the --nn option is specified, the address is printed
     numerically, according to the address family.  For more information
     regarding the Internet “dot format”, refer to inet(3)).  Unspecified, or
     “wildcard”, addresses and ports appear as “*”.

     Internet domain socket states:

     CLOSED: The socket is not in use.

     LISTEN:  The socket is listening for incoming connections.  Unconnected
     listening sockets like these are only displayed when using the -a option.

     SYN_SENT:  The socket is actively trying to establish a connection to a
     remote peer.

     SYN_RCVD:  The socket has passively received a connection request from a
     remote peer.

     ESTABLISHED:  The socket has an established connection between a local
     application and a remote peer.

     CLOSE_WAIT:  The socket connection has been closed by the remote peer,
     and the system is waiting for the local application to close its half of
     the connection.

     LAST_ACK:  The socket connection has been closed by the remote peer, the
     local application has closed its half of the connection, and the system
     is waiting for the remote peer to acknowledge the close.

     FIN_WAIT_1:  The socket connection has been closed by the local
     application, the remote peer has not yet acknowledged the close, and the
     system is waiting for it to close its half of the connection.

     FIN_WAIT_2:  The socket connection has been closed by the local
     application, the remote peer has acknowledged the close, and the system
     is waiting for it to close its half of the connection.

     CLOSING:  The socket connection has been closed by the local application
     and the remote peer simultaneously, and the remote peer has not yet
     acknowledged the close attempt of the local application.

     TIME_WAIT:  The socket connection has been closed by the local
     application, the remote peer has closed its half of the connection, and
     the system is waiting to be sure that the remote peer received the last
     acknowledgement.

     The interface display provides a table of cumulative statistics regarding
     packets transferred, errors, and collisions.  The network addresses of
     the interface and the maximum transmission unit (“mtu”) are also
     displayed.

     The routing table display indicates the available routes and their
     status.  Each route consists of a destination host or network and a
     gateway to use in forwarding packets.  The flags field shows a collection
     of information about the route stored as binary choices.  The individual
     flags are discussed in more detail in the route(8) and route(4) manual
     pages.  The mapping between letters and flags is:

     1       RTF_PROTO1       Protocol specific routing flag #1
     2       RTF_PROTO2       Protocol specific routing flag #2
     3       RTF_PROTO3       Protocol specific routing flag #3
     B       RTF_BLACKHOLE    Just discard packets (during updates)
     b       RTF_BROADCAST    The route represents a broadcast address
     C       RTF_CLONING      Generate new routes on use
     c       RTF_PRCLONING    Protocol-specified generate new routes on use
     D       RTF_DYNAMIC      Created dynamically (by redirect)
     G       RTF_GATEWAY      Destination requires forwarding by intermediary
     H       RTF_HOST         Host entry (net otherwise)
     I       RTF_IFSCOPE      Route is associated with an interface scope
     i       RTF_IFREF        Route is holding a reference to the interface
     L       RTF_LLINFO       Valid protocol to link address translation
     M       RTF_MODIFIED     Modified dynamically (by redirect)
     m       RTF_MULTICAST    The route represents a multicast address
     R       RTF_REJECT       Host or net unreachable
     r       RTF_ROUTER       Host is a default router
     S       RTF_STATIC       Manually added
     U       RTF_UP           Route usable
     W       RTF_WASCLONED    Route was generated as a result of cloning
     X       RTF_XRESOLVE     External daemon translates proto to link address
     Y       RTF_PROXY        Proxying; cloned routes will not be scoped
     g       RTF_GLOBAL       Route to a destination of the global internet
                              (policy hint)

     Direct routes are created for each interface attached to the local host;
     the gateway field for such entries shows the address of the outgoing
     interface.  The refcnt field gives the current number of active uses of
     the route.  Connection oriented protocols normally hold on to a single
     route for the duration of a connection while connectionless protocols
     obtain a route while sending to the same destination.  The use field
     provides a count of the number of packets sent using that route.  The
     interface entry indicates the network interface utilized for the route.
     A route which is marked with the RTF_IFSCOPE flag is instantiated for the
     corresponding interface.  A cloning route which is marked with the
     RTF_PROXY flag will not generate new routes that are associated with its
     interface scope.

     When nneettssttaatt is invoked with the --ww option and a _w_a_i_t interval argument,
     it displays a running count of statistics related to network interfaces
     or protocols.  An obsolete version of this option used a numeric
     parameter with no option, and is currently supported for backward
     compatibility.  By default, this display summarizes information for all
     interfaces.  Information for a specific interface may be displayed with
     the --II option.

SSEEEE AALLSSOO
     nfsstat(1), ps(1), inet(4), unix(4), hosts(5), networks(5), protocols(5),
     route(8), services(5), iostat(8), bpf(4),

HHIISSTTOORRYY
     The nneettssttaatt command appeared in 4.2BSD.

     IPv6 support was added by WIDE/KAME project.

BBUUGGSS
     The notion of errors is ill-defined.

Darwin                           June 15, 2001                          Darwin
"
ip,"IP(4)                        Device Drivers Manual                       IP(4)

NNAAMMEE
     iipp – Internet Protocol

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyyss//ssoocckkeett..hh>>
     ##iinncclluuddee <<nneettiinneett//iinn..hh>>

     _i_n_t
     ssoocckkeett(_A_F___I_N_E_T, _S_O_C_K___R_A_W, _p_r_o_t_o);

DDEESSCCRRIIPPTTIIOONN
     IP is the transport layer protocol used by the Internet protocol family.
     Options may be set at the IP level when using higher-level protocols that
     are based on IP (such as TCP and UDP).  It may also be accessed through a
     “raw socket” when developing new protocols, or special-purpose
     applications.

     There are several IP-level setsockopt(2) /getsockopt(2) options.
     IP_OPTIONS may be used to provide IP options to be transmitted in the IP
     header of each outgoing packet or to examine the header options on
     incoming packets.  IP options may be used with any socket type in the
     Internet family.  The format of IP options to be sent is that specified
     by the IP protocol specification (RFC-791), with one exception: the list
     of addresses for Source Route options must include the first-hop gateway
     at the beginning of the list of gateways.  The first-hop gateway address
     will be extracted from the option list and the size adjusted accordingly
     before use.  To disable previously specified options, use a zero-length
     buffer:

     setsockopt(s, IPPROTO_IP, IP_OPTIONS, NULL, 0);

     IP_TOS and IP_TTL may be used to set the type-of-service and time-to-live
     fields in the IP header for SOCK_STREAM and SOCK_DGRAM sockets. For
     example,

     int tos = IPTOS_LOWDELAY;       /* see <netinet/in.h> */
     setsockopt(s, IPPROTO_IP, IP_TOS, &tos, sizeof(tos));

     int ttl = 60;                   /* max = 255 */
     setsockopt(s, IPPROTO_IP, IP_TTL, &ttl, sizeof(ttl));

     If the IP_RECVDSTADDR option is enabled on a SOCK_DGRAM socket, the
     recvmsg call will return the destination IP address for a UDP datagram.
     The msg_control field in the msghdr structure points to a buffer that
     contains a cmsghdr structure followed by the IP address.  The cmsghdr
     fields have the following values:

     cmsg_len = CMSG_LEN(sizeof(struct in_addr))
     cmsg_level = IPPROTO_IP
     cmsg_type = IP_RECVDSTADDR

     If the IP_RECVTOS option is enabled on a SOCK_DGRAM or SOCK_RAW socket,
     the recvmsg call will return the TOS (type of service) field of the IP
     header.  The msg_control field in the msghdr structure points to a buffer
     that contains a cmsghdr structure followed by the TOS.  The cmsghdr
     fields have the following values:

     cmsg_len = CMSG_LEN(sizeof(u_char))
     cmsg_level = IPPROTO_IP
     cmsg_type = IP_RECVTOS

   MMuullttiiccaasstt OOppttiioonnss
     IP multicasting is supported only on AF_INET sockets of type SOCK_DGRAM
     and SOCK_RAW, and only on networks where the interface driver supports
     multicasting.

     The IP_MULTICAST_TTL option changes the time-to-live (TTL) for outgoing
     multicast datagrams in order to control the scope of the multicasts:

     u_char ttl;     /* range: 0 to 255, default = 1 */
     setsockopt(s, IPPROTO_IP, IP_MULTICAST_TTL, &ttl, sizeof(ttl));

     Datagrams with a TTL of 1 are not forwarded beyond the local network.
     Multicast datagrams with a TTL of 0 will not be transmitted on any
     network, but may be delivered locally if the sending host belongs to the
     destination group and if multicast loopback has not been disabled on the
     sending socket (see below).  Multicast datagrams with TTL greater than 1
     may be forwarded to other networks if a multicast router is attached to
     the local network.

     For hosts with multiple interfaces, each multicast transmission is sent
     from the primary network interface.  The IP_MULTICAST_IF option overrides
     the default for subsequent transmissions from a given socket:

     struct in_addr addr;
     setsockopt(s, IPPROTO_IP, IP_MULTICAST_IF, &addr, sizeof(addr));

     where ""addr"" is the local IP address of the desired interface or
     INADDR_ANY to specify the default interface.  An interface's local IP
     address and multicast capability can be obtained via the SIOCGIFCONF and
     SIOCGIFFLAGS ioctls.  Normal applications should not need to use this
     option.

     If a multicast datagram is sent to a group to which the sending host
     itself belongs (on the outgoing interface), a copy of the datagram is, by
     default, looped back by the IP layer for local delivery.  The
     IP_MULTICAST_LOOP option gives the sender explicit control over whether
     or not subsequent datagrams are looped back:

     u_char loop;    /* 0 = disable, 1 = enable (default) */
     setsockopt(s, IPPROTO_IP, IP_MULTICAST_LOOP, &loop, sizeof(loop));

     This option improves performance for applications that may have no more
     than one instance on a single host (such as a router demon), by
     eliminating the overhead of receiving their own transmissions.  It should
     generally not be used by applications for which there may be more than
     one instance on a single host (such as a conferencing program) or for
     which the sender does not belong to the destination group (such as a time
     querying program).

     A multicast datagram sent with an initial TTL greater than 1 may be
     delivered to the sending host on a different interface from that on which
     it was sent, if the host belongs to the destination group on that other
     interface.  The loopback control option has no effect on such delivery.

     A host must become a member of a multicast group before it can receive
     datagrams sent to the group.  To join a multicast group, use the
     IP_ADD_MEMBERSHIP option:

     struct ip_mreq mreq;
     setsockopt(s, IPPROTO_IP, IP_ADD_MEMBERSHIP, &mreq, sizeof(mreq));

     where _m_r_e_q is the following structure:

     struct ip_mreq {
         struct in_addr imr_multiaddr; /* multicast group to join */
         struct in_addr imr_interface; /* interface to join on */
     }

     imr_interface should be INADDR_ANY to choose the default multicast
     interface, or the IP address of a particular multicast-capable interface
     if the host is multihomed.  Membership is associated with a single
     interface; programs running on multihomed hosts may need to join the same
     group on more than one interface.  Up to IP_MAX_MEMBERSHIPS (currently
     20) memberships may be added on a single socket.

     To drop a membership, use:

     struct ip_mreq mreq;
     setsockopt(s, IPPROTO_IP, IP_DROP_MEMBERSHIP, &mreq, sizeof(mreq));

     where _m_r_e_q contains the same values as used to add the membership.
     Memberships are dropped when the socket is closed or the process exits.

   RRaaww IIPP SSoocckkeettss
     Raw IP sockets are connectionless, and are normally used with the sendto
     and recvfrom calls, though the connect(2) call may also be used to fix
     the destination for future packets (in which case the read(2) or recv(2)
     and write(2) or send(2) system calls may be used).

     If _p_r_o_t_o is 0, the default protocol IPPROTO_RAW is used for outgoing
     packets, and only incoming packets destined for that protocol are
     received.  If _p_r_o_t_o is non-zero, that protocol number will be used on
     outgoing packets and to filter incoming packets.

     Outgoing packets automatically have an IP header prepended to them (based
     on the destination address and the protocol number the socket is created
     with), unless the IP_HDRINCL option has been set.  Incoming packets are
     received with IP header and options intact.

     IP_HDRINCL indicates the complete IP header is included with the data and
     may be used only with the SOCK_RAW type.

     #include <netinet/ip.h>

     int hincl = 1;                  /* 1 = on, 0 = off */
     setsockopt(s, IPPROTO_IP, IP_HDRINCL, &hincl, sizeof(hincl));

     Unlike previous BSD releases, the program must set all the fields of the
     IP header, including the following:

     ip->ip_v = IPVERSION;
     ip->ip_hl = hlen >> 2;
     ip->ip_id = 0;  /* 0 means kernel set appropriate value */
     ip->ip_off = offset;
     ip->ip_len = len;

     Note that the ip_off and ip_len fields are in host byte order.

     If the header source address is set to INADDR_ANY, the kernel will choose
     an appropriate address.

DDIIAAGGNNOOSSTTIICCSS
     A socket operation may fail with one of the following errors returned:

     [EISCONN]        when trying to establish a connection on a socket which
                      already has one, or when trying to send a datagram with
                      the destination address specified and the socket is
                      already connected;

     [ENOTCONN]       when trying to send a datagram, but no destination
                      address is specified, and the socket hasn't been
                      connected;

     [ENOBUFS]        when the system runs out of memory for an internal data
                      structure;

     [EADDRNOTAVAIL]  when an attempt is made to create a socket with a
                      network address for which no network interface exists.

     [EACESS]         when an attempt is made to create a raw IP socket by a
                      non-privileged process.

     The following errors specific to IP may occur when setting or getting IP
     options:

     [EINVAL]         An unknown socket option name was given.

     [EINVAL]         The IP option field was improperly formed; an option
                      field was shorter than the minimum value or longer than
                      the option buffer provided.

SSEEEE AALLSSOO
     getsockopt(2), recv(2), send(2), icmp(4), inet(4), intro(4)

HHIISSTTOORRYY
     The iipp protocol appeared in 4.2BSD.

BSD 4.2                        November 30, 1993                       BSD 4.2
"
route,"ROUTE(8)                    System Manager's Manual                   ROUTE(8)

NNAAMMEE
     rroouuttee – manually manipulate the routing tables

SSYYNNOOPPSSIISS
     rroouuttee [--ddnnqqttvv] _c_o_m_m_a_n_d [[_m_o_d_i_f_i_e_r_s] _a_r_g_s]

DDEESSCCRRIIPPTTIIOONN
     RRoouuttee is a utility used to manually manipulate the network routing
     tables.  It normally is not needed, as a system routing table management
     daemon such as routed(8), should tend to this task.

     The rroouuttee utility supports a limited number of general options, but a
     rich command language, enabling the user to specify any arbitrary request
     that could be delivered via the programmatic interface discussed in
     route(4).

     The following options are available:

     --dd      Run in debug-only mode, i.e., do not actually modify the routing
             table.

     --nn      Bypass attempts to print host and network names symbolically when
             reporting actions.  (The process of translating between symbolic
             names and numerical equivalents can be quite time consuming, and
             may require correct operation of the network; thus it may be
             expedient to forget this, especially when attempting to repair
             networking operations).

     --tt      Run in test-only mode.  _/_d_e_v_/_n_u_l_l is used instead of a socket.

     --vv      (verbose) Print additional details.

     --qq      Suppress all output.

     The rroouuttee utility provides six commands:

     aadddd         Add a route.
     fflluusshh       Remove all routes.
     ddeelleettee      Delete a specific route.
     cchhaannggee      Change aspects of a route (such as its gateway).
     ggeett         Lookup and display the route for a destination.
     mmoonniittoorr     Continuously report any changes to the routing information
                 base, routing lookup misses, or suspected network
                 partitionings.

     The monitor command has the syntax:

           rroouuttee [--nn] mmoonniittoorr

     The flush command has the syntax:

           rroouuttee [--nn] fflluusshh [_f_a_m_i_l_y]

     If the fflluusshh command is specified, rroouuttee will ``flush'' the routing
     tables of all gateway entries.  When the address family may is specified
     by any of the --oossii, --xxnnss, --aattaallkk, --iinneett66, or --iinneett modifiers, only routes
     having destinations with addresses in the delineated family will be
     deleted.

     The other commands have the following syntax:

           rroouuttee [--nn] _c_o_m_m_a_n_d [--nneett | --hhoosstt] [--iiffssccooppee _b_o_u_n_d_i_f] _d_e_s_t_i_n_a_t_i_o_n
           _g_a_t_e_w_a_y [_n_e_t_m_a_s_k]

     where _d_e_s_t_i_n_a_t_i_o_n is the destination host or network, _g_a_t_e_w_a_y is the
     next-hop intermediary via which packets should be routed.  Routes to a
     particular host may be distinguished from those to a network by
     interpreting the Internet address specified as the _d_e_s_t_i_n_a_t_i_o_n argument.
     The optional modifiers --nneett and --hhoosstt force the destination to be
     interpreted as a network or a host, respectively.  Otherwise, if the
     _d_e_s_t_i_n_a_t_i_o_n has a “local address part” of INADDR_ANY (0.0.0.0), or if the
     _d_e_s_t_i_n_a_t_i_o_n is the symbolic name of a network, then the route is assumed
     to be to a network; otherwise, it is presumed to be a route to a host.
     Optionally, the _d_e_s_t_i_n_a_t_i_o_n could also be specified in the _n_e_t/_b_i_t_s
     format.

     For example, 128.32 is interpreted as --hhoosstt 128.0.0.32; 128.32.130 is
     interpreted as --hhoosstt 128.32.0.130; --nneett 128.32 is interpreted as
     128.32.0.0; --nneett 128.32.130 is interpreted as 128.32.130.0; and
     192.168.64/20 is interpreted as --nneett 192.168.64 --nneettmmaasskk 255.255.240.0.

     A _d_e_s_t_i_n_a_t_i_o_n of _d_e_f_a_u_l_t is a synonym for --nneett 0.0.0.0, which is the
     default route.

     If the destination is directly reachable via an interface requiring no
     intermediary system to act as a gateway, the --iinntteerrffaaccee modifier should
     be specified; the gateway given is the address of this host on the common
     network, indicating the interface to be used for transmission.
     Alternately, if the interface is point to point the name of the interface
     itself may be given, in which case the route remains valid even if the
     local or remote addresses change.

     For AF_INET and AF_INET6, the --iiffssccooppee modifier specifies the additional
     property of the route related to the interface scope derived from
     interface _b_o_u_n_d_i_f.  Such property allows for the presence of multiple
     route entries with the same destination, where each route is associated
     with a unique interface.  This modifier is required in order to
     manipulate route entries marked with the RTF_IFSCOPE flag.

     The optional modifier --lliinnkk specify that all subsequent addresses are
     specified as link-level addresses, and the names must be numeric
     specifications rather than symbolic names.

     The optional --nneettmmaasskk modifier is intended to achieve the effect of an
     OSI ESIS redirect with the netmask option, or to manually add subnet
     routes with netmasks different from that of the implied network interface
     (as would otherwise be communicated using the OSPF or ISIS routing
     protocols).  One specifies an additional ensuing address parameter (to be
     interpreted as a network mask).  The implicit network mask generated in
     the AF_INET case can be overridden by making sure this option follows the
     destination parameter.

     For AF_INET6, the --pprreeffiixxlleenn qualifier is available instead of the --mmaasskk
     qualifier because non-continuous masks are not allowed in IPv6.  For
     example, --pprreeffiixxlleenn 32 specifies network mask of
     ffff:ffff:0000:0000:0000:0000:0000:0000 to be used.  The default value of
     prefixlen is 64 to get along with the aggregatable address.  But 0 is
     assumed if ddeeffaauulltt is specified.  Note that the qualifier works only for
     AF_INET6 address family.

     Routes have associated flags which influence operation of the protocols
     when sending to destinations matched by the routes.  These flags may be
     set (or sometimes cleared) by indicating the following corresponding
     modifiers:

     -cloning   RTF_CLONING    - generates a new route on use
     -xresolve  RTF_XRESOLVE   - emit mesg on use (for external lookup)
     -iface    ~RTF_GATEWAY    - destination is directly reachable
     -static    RTF_STATIC     - manually added route
     -nostatic ~RTF_STATIC     - pretend route added by kernel or daemon
     -reject    RTF_REJECT     - emit an ICMP unreachable when matched
     -blackhole RTF_BLACKHOLE  - silently discard pkts (during updates)
     -proto1    RTF_PROTO1     - set protocol specific routing flag #1
     -proto2    RTF_PROTO2     - set protocol specific routing flag #2
     -llinfo    RTF_LLINFO     - validly translates proto addr to link addr

     The optional modifiers --rrtttt, --rrttttvvaarr, --sseennddppiippee, --rreeccvvppiippee, --mmttuu,
     --hhooppccoouunntt, --eexxppiirree, and --sssstthhrreesshh provide initial values to quantities
     maintained in the routing entry by transport level protocols, such as TCP
     or TP4.  These may be individually locked by preceding each such modifier
     to be locked by the --lloocckk meta-modifier, or one can specify that all
     ensuing metrics may be locked by the --lloocckkrreesstt meta-modifier.

     In a cchhaannggee or aadddd command where the destination and gateway are not
     sufficient to specify the route (as in the ISO case where several
     interfaces may have the same address), the --iiffpp or --iiffaa modifiers may be
     used to determine the interface or interface address.

     The optional --pprrooxxyy modifier specifies that the RTF_LLINFO routing table
     entry is the “published (proxy-only)” ARP entry, as reported by arp(8).

     All symbolic names specified for a _d_e_s_t_i_n_a_t_i_o_n or _g_a_t_e_w_a_y are looked up
     first as a host name using gethostbyname(3).  If this lookup fails,
     getnetbyname(3) is then used to interpret the name as that of a network.

     RRoouuttee uses a routing socket and the new message types RTM_ADD,
     RTM_DELETE, RTM_GET, and RTM_CHANGE.  As such, only the super-user may
     modify the routing tables.

DDIIAAGGNNOOSSTTIICCSS
     aadddd [[hhoosstt || nneettwwoorrkk ]] %%ss:: ggaatteewwaayy %%ss ffllaaggss %%xx  The specified route is
     being added to the tables.  The values printed are from the routing table
     entry supplied in the ioctl(2) call.  If the gateway address used was not
     the primary address of the gateway (the first one returned by
     gethostbyname(3)), the gateway address is printed numerically as well as
     symbolically.

     ddeelleettee [[ hhoosstt || nneettwwoorrkk ]] %%ss:: ggaatteewwaayy %%ss ffllaaggss %%xx  As above, but when
     deleting an entry.

     %%ss %%ss ddoonnee  When the fflluusshh command is specified, each routing table entry
     deleted is indicated with a message of this form.

     NNeettwwoorrkk iiss uunnrreeaacchhaabbllee  An attempt to add a route failed because the
     gateway listed was not on a directly-connected network.  The next-hop
     gateway must be given.

     nnoott iinn ttaabbllee  A delete operation was attempted for an entry which wasn't
     present in the tables.

     rroouuttiinngg ttaabbllee oovveerrffllooww  An add operation was attempted, but the system
     was low on resources and was unable to allocate memory to create the new
     entry.

     ggaatteewwaayy uusseess tthhee ssaammee rroouuttee  A cchhaannggee operation resulted in a route whose
     gateway uses the same route as the one being changed.  The next-hop
     gateway should be reachable through a different route.

     The rroouuttee utility exits 0 on success, and >0 if an error occurs.

SSEEEE AALLSSOO
     netintro(4), route(4), arp(8), routed(8)

HHIISSTTOORRYY
     The rroouuttee command appeared in 4.2BSD.

BBUUGGSS
     The first paragraph may have slightly exaggerated routed(8)'s abilities.

BSD 4.4                          June 8, 2001                          BSD 4.4
"
iptables,No manual entry for iptables
nslookup,"NSLOOKUP(1)                          BIND9                         NSLOOKUP(1)

NNAAMMEE
       nslookup - query Internet name servers interactively

SSYYNNOOPPSSIISS
       nnssllooookkuupp [--ooppttiioonn] [name | -] [server]

DDEESSCCRRIIPPTTIIOONN
       NNssllooookkuupp is a program to query Internet domain name servers.  NNssllooookkuupp
       has two modes: interactive and non-interactive. Interactive mode allows
       the user to query name servers for information about various hosts and
       domains or to print a list of hosts in a domain. Non-interactive mode
       is used to print just the name and requested information for a host or
       domain.

AARRGGUUMMEENNTTSS
       Interactive mode is entered in the following cases:

        1. when no arguments are given (the default name server will be used)

        2. when the first argument is a hyphen (-) and the second argument is
           the host name or Internet address of a name server.

       Non-interactive mode is used when the name or Internet address of the
       host to be looked up is given as the first argument. The optional
       second argument specifies the host name or address of a name server.

       Options can also be specified on the command line if they precede the
       arguments and are prefixed with a hyphen. For example, to change the
       default query type to host information, and the initial timeout to 10
       seconds, type:

           nslookup -query=hinfo  -timeout=10

       The --vveerrssiioonn option causes nnssllooookkuupp to print the version number and
       immediately exits.

IINNTTEERRAACCTTIIVVEE CCOOMMMMAANNDDSS
       hhoosstt [server]
           Look up information for host using the current default server or
           using server, if specified. If host is an Internet address and the
           query type is A or PTR, the name of the host is returned. If host
           is a name and does not have a trailing period, the search list is
           used to qualify the name.

           To look up a host not in the current domain, append a period to the
           name.

       sseerrvveerr _d_o_m_a_i_n

       llsseerrvveerr _d_o_m_a_i_n
           Change the default server to _d_o_m_a_i_n; llsseerrvveerr uses the initial
           server to look up information about _d_o_m_a_i_n, while sseerrvveerr uses the
           current default server. If an authoritative answer can't be found,
           the names of servers that might have the answer are returned.

       rroooott
           not implemented

       ffiinnggeerr
           not implemented

       llss
           not implemented

       vviieeww
           not implemented

       hheellpp
           not implemented

       ??
           not implemented

       eexxiitt
           Exits the program.

       sseett _k_e_y_w_o_r_d_[_=_v_a_l_u_e_]
           This command is used to change state information that affects the
           lookups. Valid keywords are:

           aallll
               Prints the current values of the frequently used options to
               sseett. Information about the current default server and host is
               also printed.

           ccllaassss==_v_a_l_u_e
               Change the query class to one of:

               IINN
                   the Internet class

               CCHH
                   the Chaos class

               HHSS
                   the Hesiod class

               AANNYY
                   wildcard

               The class specifies the protocol group of the information.

               (Default = IN; abbreviation = cl)

            _[_n_o_]ddeebbuugg
               Turn on or off the display of the full response packet and any
               intermediate response packets when searching.

               (Default = nodebug; abbreviation = [no]deb)

            _[_n_o_]dd22
               Turn debugging mode on or off. This displays more about what
               nslookup is doing.

               (Default = nod2)

           ddoommaaiinn==_n_a_m_e
               Sets the search list to _n_a_m_e.

            _[_n_o_]sseeaarrcchh
               If the lookup request contains at least one period but doesn't
               end with a trailing period, append the domain names in the
               domain search list to the request until an answer is received.

               (Default = search)

           ppoorrtt==_v_a_l_u_e
               Change the default TCP/UDP name server port to _v_a_l_u_e.

               (Default = 53; abbreviation = po)

           qquueerryyttyyppee==_v_a_l_u_e

           ttyyppee==_v_a_l_u_e
               Change the type of the information query.

               (Default = A; abbreviations = q, ty)

            _[_n_o_]rreeccuurrssee
               Tell the name server to query other servers if it does not have
               the information.

               (Default = recurse; abbreviation = [no]rec)

           nnddoottss==_n_u_m_b_e_r
               Set the number of dots (label separators) in a domain that will
               disable searching. Absolute names always stop searching.

           rreettrryy==_n_u_m_b_e_r
               Set the number of retries to number.

           ttiimmeeoouutt==_n_u_m_b_e_r
               Change the initial timeout interval for waiting for a reply to
               number seconds.

            _[_n_o_]vvcc
               Always use a virtual circuit when sending requests to the
               server.

               (Default = novc)

            _[_n_o_]ffaaiill
               Try the next nameserver if a nameserver responds with SERVFAIL
               or a referral (nofail) or terminate query (fail) on such a
               response.

               (Default = nofail)


RREETTUURRNN VVAALLUUEESS
       nnssllooookkuupp returns with an exit status of 1 if any query failed, and 0
       otherwise.

mmaaccOOSS NNOOTTIICCEE
       The nnssllooookkuupp command does not use the host name and address resolution
       or the DNS query routing mechanisms used by other processes running on
       macOS.  The results of name or address queries printed by nnssllooookkuupp may
       differ from those found by other processes that use the macOS native
       name and address resolution mechanisms.  The results of DNS queries may
       also differ from queries that use the macOS DNS routing library.

FFIILLEESS
       /etc/resolv.conf

SSEEEE AALLSSOO
       ddiigg(1), hhoosstt(1), nnaammeedd(8).

AAUUTTHHOORR
       IInntteerrnneett SSyysstteemmss CCoonnssoorrttiiuumm,, IInncc..

CCOOPPYYRRIIGGHHTT
       Copyright © 2004-2007, 2010, 2013-2016 Internet Systems Consortium,
       Inc. (""ISC"")

ISC                               2018-05-25                       NSLOOKUP(1)
"
dig,"DIG(1)                               BIND9                              DIG(1)

NNAAMMEE
       dig - DNS lookup utility

SSYYNNOOPPSSIISS
       ddiigg [@server] [--bb  _a_d_d_r_e_s_s] [--cc  _c_l_a_s_s] [--ff  _f_i_l_e_n_a_m_e] [--kk  _f_i_l_e_n_a_m_e] [--mm]
           [--pp  _p_o_r_t_#] [--qq  _n_a_m_e] [--tt  _t_y_p_e] [--vv] [--xx  _a_d_d_r] [--yy  _[_h_m_a_c_:_]_n_a_m_e_:_k_e_y]
           [--44] [--66] [name] [type] [class] [queryopt...]

       ddiigg [--hh]

       ddiigg [global-queryopt...] [query...]

DDEESSCCRRIIPPTTIIOONN
       ddiigg is a flexible tool for interrogating DNS name servers. It performs
       DNS lookups and displays the answers that are returned from the name
       server(s) that were queried. Most DNS administrators use ddiigg to
       troubleshoot DNS problems because of its flexibility, ease of use and
       clarity of output. Other lookup tools tend to have less functionality
       than ddiigg.

       Although ddiigg is normally used with command-line arguments, it also has
       a batch mode of operation for reading lookup requests from a file. A
       brief summary of its command-line arguments and options is printed when
       the --hh option is given. Unlike earlier versions, the BIND 9
       implementation of ddiigg allows multiple lookups to be issued from the
       command line.

       Unless it is told to query a specific name server, ddiigg will try each of
       the servers listed in /etc/resolv.conf. If no usable server addresses
       are found, ddiigg will send the query to the local host.

       When no command line arguments or options are given, ddiigg will perform
       an NS query for ""."" (the root).

       It is possible to set per-user defaults for ddiigg via ${HOME}/.digrc.
       This file is read and any options in it are applied before the command
       line arguments.

       The IN and CH class names overlap with the IN and CH top level domain
       names. Either use the --tt and --cc options to specify the type and class,
       use the --qq the specify the domain name, or use ""IN."" and ""CH."" when
       looking up these top level domains.

SSIIMMPPLLEE UUSSAAGGEE
       A typical invocation of ddiigg looks like:

            dig @server name type

       where:

       sseerrvveerr
           is the name or IP address of the name server to query. This can be
           an IPv4 address in dotted-decimal notation or an IPv6 address in
           colon-delimited notation. When the supplied _s_e_r_v_e_r argument is a
           hostname, ddiigg resolves that name before querying that name server.

           If no _s_e_r_v_e_r argument is provided, ddiigg consults /etc/resolv.conf;
           if an address is found there, it queries the name server at that
           address. If either of the --44 or --66 options are in use, then only
           addresses for the corresponding transport will be tried. If no
           usable addresses are found, ddiigg will send the query to the local
           host. The reply from the name server that responds is displayed.

       nnaammee
           is the name of the resource record that is to be looked up.

       ttyyppee
           indicates what type of query is required — ANY, A, MX, SIG, etc.
           _t_y_p_e can be any valid query type. If no _t_y_p_e argument is supplied,
           ddiigg will perform a lookup for an A record.

OOPPTTIIOONNSS
       -4
           Use IPv4 only.

       -6
           Use IPv6 only.

       -b _a_d_d_r_e_s_s_[_#_p_o_r_t_]
           Set the source IP address of the query. The _a_d_d_r_e_s_s must be a valid
           address on one of the host's network interfaces, or ""0.0.0.0"" or
           ""::"". An optional port may be specified by appending ""#<port>""

       -c _c_l_a_s_s
           Set the query class. The default _c_l_a_s_s is IN; other classes are HS
           for Hesiod records or CH for Chaosnet records.

       -f _f_i_l_e
           Batch mode: ddiigg reads a list of lookup requests to process from the
           given _f_i_l_e. Each line in the file should be organized in the same
           way they would be presented as queries to ddiigg using the
           command-line interface.

       -i
           Do reverse IPv6 lookups using the obsolete RFC1886 IP6.INT domain,
           which is no longer in use. Obsolete bit string label queries
           (RFC2874) are not attempted.

       -k _k_e_y_f_i_l_e
           Sign queries using TSIG using a key read from the given file. Key
           files can be generated using ttssiigg--kkeeyyggeenn(8). When using TSIG
           authentication with ddiigg, the name server that is queried needs to
           know the key and algorithm that is being used. In BIND, this is
           done by providing appropriate kkeeyy and sseerrvveerr statements in
           named.conf.

       -m
           Enable memory usage debugging.

       -p _p_o_r_t
           Send the query to a non-standard port on the server, instead of the
           defaut port 53. This option would be used to test a name server
           that has been configured to listen for queries on a non-standard
           port number.

       -q _n_a_m_e
           The domain name to query. This is useful to distinguish the _n_a_m_e
           from other arguments.

       -t _t_y_p_e
           The resource record type to query. It can be any valid query type
           which is supported in BIND 9. The default query type is ""A"", unless
           the --xx option is supplied to indicate a reverse lookup. A zone
           transfer can be requested by specifying a type of AXFR. When an
           incremental zone transfer (IXFR) is required, set the _t_y_p_e to
           ixfr=N. The incremental zone transfer will contain the changes made
           to the zone since the serial number in the zone's SOA record was _N.

       -v
           Print the version number and exit.

       -x _a_d_d_r
           Simplified reverse lookups, for mapping addresses to names. The
           _a_d_d_r is an IPv4 address in dotted-decimal notation, or a
           colon-delimited IPv6 address. When the --xx is used, there is no need
           to provide the _n_a_m_e, _c_l_a_s_s and _t_y_p_e arguments.  ddiigg automatically
           performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets
           the query type and class to PTR and IN respectively. IPv6 addresses
           are looked up using nibble format under the IP6.ARPA domain (but
           see also the --ii option).

       -y _[_h_m_a_c_:_]_k_e_y_n_a_m_e_:_s_e_c_r_e_t
           Sign queries using TSIG with the given authentication key.  _k_e_y_n_a_m_e
           is the name of the key, and _s_e_c_r_e_t is the base64 encoded shared
           secret.  _h_m_a_c is the name of the key algorithm; valid choices are
           hmac-md5, hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha384, or
           hmac-sha512. If _h_m_a_c is not specified, the default is hmac-md5 or
           if MD5 was disabled hmac-sha256.

           NOTE: You should use the --kk option and avoid the --yy option, because
           with --yy the shared secret is supplied as a command line argument in
           clear text. This may be visible in the output from ppss(1) or in a
           history file maintained by the user's shell.

mmaaccOOSS NNOOTTIICCEE
       The ddiigg command does not use the host name and address resolution or
       the DNS query routing mechanisms used by other processes running on
       macOS.  The results of name or address queries printed by ddiigg may
       differ from those found by other processes that use the macOS native
       name and address resolution mechanisms.  The results of DNS queries may
       also differ from queries that use the macOS DNS routing library.

QQUUEERRYY OOPPTTIIOONNSS
       ddiigg provides a number of query options which affect the way in which
       lookups are made and the results displayed. Some of these set or reset
       flag bits in the query header, some determine which sections of the
       answer get printed, and others determine the timeout and retry
       strategies.

       Each query option is identified by a keyword preceded by a plus sign
       (+). Some keywords set or reset an option. These may be preceded by the
       string no to negate the meaning of that keyword. Other keywords assign
       values to options like the timeout interval. They have the form
       ++kkeeyywwoorrdd==vvaalluuee. Keywords may be abbreviated, provided the abbreviation
       is unambiguous; for example, +cd is equivalent to +cdflag. The query
       options are:

       ++[[nnoo]]aaaaffllaagg
           A synonym for _+_[_n_o_]_a_a_o_n_l_y.

       ++[[nnoo]]aaaaoonnllyy
           Sets the ""aa"" flag in the query.

       ++[[nnoo]]aaddddiittiioonnaall
           Display [do not display] the additional section of a reply. The
           default is to display it.

       ++[[nnoo]]aaddffllaagg
           Set [do not set] the AD (authentic data) bit in the query. This
           requests the server to return whether all of the answer and
           authority sections have all been validated as secure according to
           the security policy of the server. AD=1 indicates that all records
           have been validated as secure and the answer is not from a OPT-OUT
           range. AD=0 indicate that some part of the answer was insecure or
           not validated. This bit is set by default.

       ++[[nnoo]]aallll
           Set or clear all display flags.

       ++[[nnoo]]aannsswweerr
           Display [do not display] the answer section of a reply. The default
           is to display it.

       ++[[nnoo]]aauutthhoorriittyy
           Display [do not display] the authority section of a reply. The
           default is to display it.

       ++[[nnoo]]bbeesstteeffffoorrtt
           Attempt to display the contents of messages which are malformed.
           The default is to not display malformed answers.

       ++bbuuffssiizzee==BB
           Set the UDP message buffer size advertised using EDNS0 to _B bytes.
           The maximum and minimum sizes of this buffer are 65535 and 0
           respectively. Values outside this range are rounded up or down
           appropriately. Values other than zero will cause a EDNS query to be
           sent.

       ++[[nnoo]]ccddffllaagg
           Set [do not set] the CD (checking disabled) bit in the query. This
           requests the server to not perform DNSSEC validation of responses.

       ++[[nnoo]]ccllaassss
           Display [do not display] the CLASS when printing the record.

       ++[[nnoo]]ccmmdd
           Toggles the printing of the initial comment in the output
           identifying the version of ddiigg and the query options that have been
           applied. This comment is printed by default.

       ++[[nnoo]]ccoommmmeennttss
           Toggle the display of comment lines in the output. The default is
           to print comments.

       ++[[nnoo]]ccooookkiiee[[==########]]
           Send an COOKIE EDNS option, containing an optional _v_a_l_u_e. Replaying
           a COOKIE from a previous response will allow the server to identify
           a previous client. The default is ++nnooccooookkiiee.

           ++ccooookkiiee is automatically set when +trace is in use, to better
           emulate the default queries from a nameserver.

           This option was formerly called ++[[nnoo]]ssiitt (Server Identity Token).
           In BIND 9.10.0 through BIND 9.10.2, it sent the experimental option
           code 65001. This was changed to option code 10 in BIND 9.10.3 when
           the DNS COOKIE option was allocated.

           The ++[[nnoo]]ssiitt is now deprecated, but has been retained as a synonym
           for ++[[nnoo]]ccooookkiiee for backward compatibility within the BIND 9.10
           branch.

       ++[[nnoo]]ccrryyppttoo
           Toggle the display of cryptographic fields in DNSSEC records. The
           contents of these field are unnecessary to debug most DNSSEC
           validation failures and removing them makes it easier to see the
           common failures. The default is to display the fields. When omitted
           they are replaced by the string ""[omitted]"" or in the DNSKEY case
           the key id is displayed as the replacement, e.g. ""[ key id = value
           ]"".

       ++[[nnoo]]ddeeffnnaammee
           Deprecated, treated as a synonym for _+_[_n_o_]_s_e_a_r_c_h

       ++[[nnoo]]ddnnsssseecc
           Requests DNSSEC records be sent by setting the DNSSEC OK bit (DO)
           in the OPT record in the additional section of the query.

       ++ddoommaaiinn==ssoommeennaammee
           Set the search list to contain the single domain _s_o_m_e_n_a_m_e, as if
           specified in a ddoommaaiinn directive in /etc/resolv.conf, and enable
           search list processing as if the _+_s_e_a_r_c_h option were given.

       ++[[nnoo]]eeddnnss[[==##]]
           Specify the EDNS version to query with. Valid values are 0 to 255.
           Setting the EDNS version will cause a EDNS query to be sent.
           ++nnooeeddnnss clears the remembered EDNS version. EDNS is set to 0 by
           default.

       ++[[nnoo]]eeddnnssffllaaggss[[==##]]
           Set the must-be-zero EDNS flags bits (Z bits) to the specified
           value. Decimal, hex and octal encodings are accepted. Setting a
           named flag (e.g. DO) will silently be ignored. By default, no Z
           bits are set.

       ++[[nnoo]]eeddnnssnneeggoottiiaattiioonn
           Enable / disable EDNS version negotiation. By default EDNS version
           negotiation is enabled.

       ++[[nnoo]]eeddnnssoopptt[[==ccooddee[[::vvaalluuee]]]]
           Specify EDNS option with code point ccooddee and optionally payload of
           vvaalluuee as a hexadecimal string.  ccooddee can be either an EDNS option
           name (for example, NSID or ECS), or an arbitrary numeric value.
           ++nnooeeddnnssoopptt clears the EDNS options to be sent.

       ++[[nnoo]]eexxppiirree
           Send an EDNS Expire option.

       ++[[nnoo]]ffaaiill
           Do not try the next server if you receive a SERVFAIL. The default
           is to not try the next server which is the reverse of normal stub
           resolver behavior.

       ++[[nnoo]]iiddeennttiiffyy
           Show [or do not show] the IP address and port number that supplied
           the answer when the _+_s_h_o_r_t option is enabled. If short form answers
           are requested, the default is not to show the source address and
           port number of the server that provided the answer.

       ++[[nnoo]]iiddnnoouutt
           Convert [do not convert] puny code on output. This requires IDN
           SUPPORT to have been enabled at compile time. The default is to
           convert output.

       ++[[nnoo]]iiggnnoorree
           Ignore truncation in UDP responses instead of retrying with TCP. By
           default, TCP retries are performed.

       ++[[nnoo]]kkeeeeppooppeenn
           Keep the TCP socket open between queries and reuse it rather than
           creating a new TCP socket for each lookup. The default is
           ++nnookkeeeeppooppeenn.

       ++[[nnoo]]mmuullttiilliinnee
           Print records like the SOA records in a verbose multi-line format
           with human-readable comments. The default is to print each record
           on a single line, to facilitate machine parsing of the ddiigg output.

       ++nnddoottss==DD
           Set the number of dots that have to appear in _n_a_m_e to _D for it to
           be considered absolute. The default value is that defined using the
           ndots statement in /etc/resolv.conf, or 1 if no ndots statement is
           present. Names with fewer dots are interpreted as relative names
           and will be searched for in the domains listed in the sseeaarrcchh or
           ddoommaaiinn directive in /etc/resolv.conf if ++sseeaarrcchh is set.

       ++[[nnoo]]nnssiidd
           Include an EDNS name server ID request when sending a query.

       ++[[nnoo]]nnsssseeaarrcchh
           When this option is set, ddiigg attempts to find the authoritative
           name servers for the zone containing the name being looked up and
           display the SOA record that each name server has for the zone.

       ++[[nnoo]]oonneessooaa
           Print only one (starting) SOA record when performing an AXFR. The
           default is to print both the starting and ending SOA records.

       ++[[nnoo]]ooppccooddee==vvaalluuee
           Set [restore] the DNS message opcode to the specified value. The
           default value is QUERY (0).

       ++[[nnoo]]qqrr
           Print [do not print] the query as it is sent. By default, the query
           is not printed.

       ++[[nnoo]]qquueessttiioonn
           Print [do not print] the question section of a query when an answer
           is returned. The default is to print the question section as a
           comment.

       ++[[nnoo]]rrddffllaagg
           A synonym for _+_[_n_o_]_r_e_c_u_r_s_e.

       ++[[nnoo]]rreeccuurrssee
           Toggle the setting of the RD (recursion desired) bit in the query.
           This bit is set by default, which means ddiigg normally sends
           recursive queries. Recursion is automatically disabled when the
           _+_n_s_s_e_a_r_c_h or _+_t_r_a_c_e query options are used.

       ++rreettrryy==TT
           Sets the number of times to retry UDP queries to server to _T
           instead of the default, 2. Unlike _+_t_r_i_e_s, this does not include the
           initial query.

       ++[[nnoo]]rrrrccoommmmeennttss
           Toggle the display of per-record comments in the output (for
           example, human-readable key information about DNSKEY records). The
           default is not to print record comments unless multiline mode is
           active.

       ++[[nnoo]]sseeaarrcchh
           Use [do not use] the search list defined by the searchlist or
           domain directive in resolv.conf (if any). The search list is not
           used by default.

           'ndots' from resolv.conf (default 1) which may be overridden by
           _+_n_d_o_t_s determines if the name will be treated as relative or not
           and hence whether a search is eventually performed or not.

       ++[[nnoo]]sshhoorrtt
           Provide a terse answer. The default is to print the answer in a
           verbose form.

       ++[[nnoo]]sshhoowwsseeaarrcchh
           Perform [do not perform] a search showing intermediate results.

       ++[[nnoo]]ssiiggcchhaassee
           Chase DNSSEC signature chains. Requires dig be compiled with
           -DDIG_SIGCHASE. This feature is deprecated. Use ddeellvv instead.

       ++[[nnoo]]ssiitt[[==########]]
           This option is a synonym for ++[[nnoo]]ccooookkiiee.

           The ++[[nnoo]]ssiitt is deprecated.

       ++sspplliitt==WW
           Split long hex- or base64-formatted fields in resource records into
           chunks of _W characters (where _W is rounded up to the nearest
           multiple of 4).  _+_n_o_s_p_l_i_t or _+_s_p_l_i_t_=_0 causes fields not to be split
           at all. The default is 56 characters, or 44 characters when
           multiline mode is active.

       ++[[nnoo]]ssttaattss
           This query option toggles the printing of statistics: when the
           query was made, the size of the reply and so on. The default
           behavior is to print the query statistics.

       ++[[nnoo]]ssuubbnneett==aaddddrr[[//pprreeffiixx--lleennggtthh]]
           Send (don't send) an EDNS Client Subnet option with the specified
           IP address or network prefix.

           ddiigg ++ssuubbnneett==00..00..00..00//00, or simply ddiigg ++ssuubbnneett==00 for short, sends an
           EDNS CLIENT-SUBNET option with an empty address and a source
           prefix-length of zero, which signals a resolver that the client's
           address information must _n_o_t be used when resolving this query.

       ++[[nnoo]]ttccpp
           Use [do not use] TCP when querying name servers. The default
           behavior is to use UDP unless an ixfr=N query is requested, in
           which case the default is TCP. AXFR queries always use TCP.

       ++ttiimmee==TT
           Sets the timeout for a query to _T seconds. The default timeout is 5
           seconds. An attempt to set _T to less than 1 will result in a query
           timeout of 1 second being applied.

       ++[[nnoo]]ttooppddoowwnn
           When chasing DNSSEC signature chains perform a top-down validation.
           Requires dig be compiled with -DDIG_SIGCHASE. This feature is
           deprecated. Use ddeellvv instead.

       ++[[nnoo]]ttrraaccee
           Toggle tracing of the delegation path from the root name servers
           for the name being looked up. Tracing is disabled by default. When
           tracing is enabled, ddiigg makes iterative queries to resolve the name
           being looked up. It will follow referrals from the root servers,
           showing the answer from each server that was used to resolve the
           lookup.

           If @server is also specified, it affects only the initial query for
           the root zone name servers.

           ++ddnnsssseecc is also set when +trace is set to better emulate the
           default queries from a nameserver.

       ++ttrriieess==TT
           Sets the number of times to try UDP queries to server to _T instead
           of the default, 3. If _T is less than or equal to zero, the number
           of tries is silently rounded up to 1.

       ++ttrruusstteedd--kkeeyy==########
           Specifies a file containing trusted keys to be used with ++ssiiggcchhaassee.
           Each DNSKEY record must be on its own line.

           If not specified, ddiigg will look for /etc/trusted-key.key then
           trusted-key.key in the current directory.

           Requires dig be compiled with -DDIG_SIGCHASE. This feature is
           deprecated. Use ddeellvv instead.

       ++[[nnoo]]ttttlliidd
           Display [do not display] the TTL when printing the record.

       ++[[nnoo]]vvcc
           Use [do not use] TCP when querying name servers. This alternate
           syntax to _+_[_n_o_]_t_c_p is provided for backwards compatibility. The
           ""vc"" stands for ""virtual circuit"".

MMUULLTTIIPPLLEE QQUUEERRIIEESS
       The BIND 9 implementation of ddiigg  supports specifying multiple queries
       on the command line (in addition to supporting the --ff batch file
       option). Each of those queries can be supplied with its own set of
       flags, options and query options.

       In this case, each _q_u_e_r_y argument represent an individual query in the
       command-line syntax described above. Each consists of any of the
       standard options and flags, the name to be looked up, an optional query
       type and class and any query options that should be applied to that
       query.

       A global set of query options, which should be applied to all queries,
       can also be supplied. These global query options must precede the first
       tuple of name, class, type, options, flags, and query options supplied
       on the command line. Any global query options (except the ++[[nnoo]]ccmmdd
       option) can be overridden by a query-specific set of query options. For
       example:

           dig +qr www.isc.org any -x 127.0.0.1 isc.org ns +noqr

       shows how ddiigg could be used from the command line to make three
       lookups: an ANY query for www.isc.org, a reverse lookup of 127.0.0.1
       and a query for the NS records of isc.org. A global query option of _+_q_r
       is applied, so that ddiigg shows the initial query it made for each
       lookup. The final query has a local query option of _+_n_o_q_r which means
       that ddiigg will not print the initial query when it looks up the NS
       records for isc.org.

IIDDNN SSUUPPPPOORRTT
       If ddiigg has been built with IDN (internationalized domain name) support,
       it can accept and display non-ASCII domain names.  ddiigg appropriately
       converts character encoding of domain name before sending a request to
       DNS server or displaying a reply from the server. If you'd like to turn
       off the IDN support for some reason, defines the IIDDNN__DDIISSAABBLLEE
       environment variable. The IDN support is disabled if the variable is
       set when ddiigg runs.

FFIILLEESS
       /etc/resolv.conf

       ${HOME}/.digrc

SSEEEE AALLSSOO
       ddeellvv(1), hhoosstt(1), nnaammeedd(8), ddnnsssseecc--kkeeyyggeenn(8), RFC1035.

BBUUGGSS
       There are probably too many query options.

AAUUTTHHOORR
       IInntteerrnneett SSyysstteemmss CCoonnssoorrttiiuumm,, IInncc..

CCOOPPYYRRIIGGHHTT
       Copyright © 2004-2011, 2013-2017 Internet Systems Consortium, Inc.
       (""ISC"")
       Copyright © 2000-2003 Internet Software Consortium.

ISC                               2018-05-25                            DIG(1)
"
nmap,No manual entry for nmap
fdisk,"FDISK(8)                    System Manager's Manual                   FDISK(8)

NNAAMMEE
     ffddiisskk – DOS partition maintenance program

SSYYNNOOPPSSIISS
     ffddiisskk [--iieeuu] [--ff _m_b_r_n_a_m_e] [--cc _c_y_l_i_n_d_e_r_s] [--hh _h_e_a_d_s] [--ss _s_e_c_t_o_r_s]
           [--SS _s_i_z_e] [--bb _s_i_z_e] _d_e_v_i_c_e

DDEESSCCRRIIPPTTIIOONN
     In order for the BIOS to boot the kernel, certain conventions must be
     adhered to.  Sector 0 of a bootable hard disk must contain boot code, an
     MBR partition table, and a magic number (0xAA55).  These MBR partitions
     (also known as BIOS partitions) can be used to break the disk up into
     several pieces.

     The BIOS loads sector 0 of the boot disk into memory, verifies the magic
     number, and begins executing the code at the first byte.  The normal DOS
     MBR boot code searches the MBR partition table for an “active” partition
     (indicated by a ‘*’ in the first column), and if one is found, the boot
     block from that partition is loaded and executed in place of the original
     (MBR) boot block.

     The options are as follows:

     --ii      Initialize the MBR sector.

     --aa _s_t_y_l_e
             Specify an automatic partitioning style.

     --ee      Edit existing MBR sectors.

     --ff _m_b_r_n_a_m_e
             Specifies an alternate MBR template file.

     --uu      Update MBR code, preserving existing partition table.

     --yy      Do not ask for confirmation before writing.

     --dd      Dump partition table in a format readable by the -r option.

     --rr      Read a partition table from the standard input.

     --tt      Test if the disk is partitioned.

     --cc _c_y_l_i_n_d_e_r_s, --hh _h_e_a_d_s, --ss _s_e_c_t_o_r_s
             Specifies an alternate BIOS geometry for ffddiisskk to use.

     --SS _s_i_z_e
             Specify the disk size in blocks.

     --bb _s_i_z_e
             Specify the number of bytes per disk block.

     The DOS ffddiisskk program can be used to divide space on the disk into
     partitions and set one active.  This ffddiisskk program serves a similar
     purpose to the DOS program.  When called with no special flags, it prints
     the MBR partition table of the specified device, i.e.,

         # fdisk fd0
         Disk: fd0       geometry: 80/2/18 [2880 sectors]
         Offset: 0       Signature: 0xAA55
                  Starting        Ending
          #: id  cyl  hd sec -  cyl  hd sec [     start -       size]
         ----------------------------------------------------------------------
         *1: A6    0   0   1 -   79   1  18 [         0 -       2880] OpenBSD
          2: 00    0   0   0 -    0   0   0 [         0 -          0] unused
          3: A7    0   0   2 -   79   1  18 [         1 -       2879] NEXTSTEP
          4: 00    0   0   0 -    0   0   0 [         0 -          0] unused

     The geometry displayed is a synthetic geometry unless another geometry
     has been selected using the --cc, --hh, --ss, --SS, and --bb options.  In the
     future, ffddiisskk will read the BIOS geometry from the IOKit registry.

     In this example, the disk is divided into two partitions that happen to
     fill the disk.  The first partition overlaps the third partition.  (Used
     for debugging purposes.)

     _#           Number of partition table entry.  A “*” denotes the bootable
                 partition.

     _i_d          System identifier.  OpenBSD reserves the magic number 166
                 decimal (A6 in hex).  If no 166 partition is found, it will
                 use an older FreeBSD partition (with a magic number of 165 or
                 A5 in hex).

     _c_y_l_/_h_d_/_s_e_c  These fields provide the starting and ending address of the
                 partition in BIOS geometry

     _s_t_a_r_t_/_s_i_z_e  These fields provide the starting sector and size in sectors
                 of the partition in linear block addresses.

     _N_O_T_E: The sectors field is “1 based”, and the start field is “0 based”.
     The CHS values may need to be in the BIOS's geometry for older systems to
     be able to boot and use the drive correctly; most modern systems prefer
     the starting sector and size in preference to the CHS values.

     The --ii flag is used to indicate that the partition data is to be
     initialized.  In this mode, ffddiisskk will completely overwrite the primary
     MBR and partition table, either using the default MBR template, or the
     one specified by the --ff flag.

     In the default template, partition number 1 will be configured as a
     Darwin boot partition spanning from cylinder 0, head 1, sector 1, and
     extending for 8 megabytes.  Partition number 2 will be configured as a
     Darwin HFS partition spanning the rest of the disk.  This mode is
     designed to initialize an MBR the very first time, or when it has been
     corrupted beyond repair.

     You can specify other default partition styles with the --aa flag.  The
     available styles are:

     _b_o_o_t_h_f_s     Creates an 8Mb boot partition (type AB hex) and makes the
                 rest of the disk a Darwin HFS partition (type AF hex).

     _h_f_s         Makes the entire disk one HFS+ partition (type AF hex).

     _d_o_s         Makes the entire disk one DOS partition (type 0C hex).

     _r_a_i_d        Makes the entire disk one type AC hex partition.

     The --uu flag is used to update the MBR code on a given drive.  The MBR
     code extends from offset 0x000 to the start of the partition table at
     offset 0x1BE.  It is similar to the --ii flag, except the existing
     partition table is preserved. This is useful for writing new MBR code
     onto an existing drive, and is equivalent to the DOS command “FDISK
     /MBR”.  Note that this option will overwrite the NT disk signature, if
     present.  The --uu and --ii flags may not be specified together.

     The flag --ee is used to modify a partition table using a interactive edit
     mode of the ffddiisskk program.  This mode is designed to allow you to change
     any partition on the drive you choose, including extended partitions.  It
     is a very powerful mode, but is safe as long as you do not execute the
     _w_r_i_t_e command, or answer in the negative (the default) when ffddiisskk asks
     you about writing out changes.

CCOOMMMMAANNDD MMOODDEE
     When you first enter this mode, you are presented with a prompt, that
     looks like so: _f_d_i_s_k_: _0_>.  This prompt has two important pieces of
     information for you.  It will tell you if the in-memory copy of the boot
     block has been modified or not.  If it has been modified, the prompt will
     change to look like: _f_d_i_s_k_:_*_0_>.  The second piece of information pertains
     to the number given in the prompt.  This number specifies the disk offset
     of the currently selected boot block you are editing.  This number could
     be something different that zero when you are editing extended
     partitions.  The list of commands and their explanations are given below.

     _h_e_l_p    Display a list of commands that ffddiisskk understands in the
             interactive edit mode.

     _m_a_n_u_a_l  Display this manual page.

     _r_e_i_n_i_t  Initialize the currently selected, in-memory copy of the boot
             block.

     _a_u_t_o    Partition the disk with one of the automatic partition styles.

     _d_i_s_k    Display the current drive geometry that ffddiisskk has probed.  You
             are given a chance to edit it if you wish.

     _e_d_i_t    Edit a given table entry in the memory copy of the current boot
             block.  You may edit either in BIOS geometry mode, or in sector
             offsets and sizes.

     _s_e_t_p_i_d  Change the partition identifier of the given partition table
             entry.  This command is particularly useful for reassigning an
             existing partition to OpenBSD.

     _f_l_a_g    Make the given partition table entry bootable.  Only one entry
             can be marked bootable.  If you wish to boot from an extended
             partition, you will need to mark the partition table entry for
             the extended partition as bootable.

     _u_p_d_a_t_e  Update the machine code in the memory copy of the currently
             selected boot block.  Note that this option will overwrite the NT
             disk signature, if present.

     _s_e_l_e_c_t  Select and load into memory the boot block pointed to by the
             extended partition table entry in the current boot block.

     _p_r_i_n_t   Print the currently selected in-memory copy of the boot block and
             its MBR table to the terminal.

     _w_r_i_t_e   Write the in-memory copy of the boot block to disk.  You will be
             asked to confirm this operation.

     _e_x_i_t    Exit the current level of ffddiisskk, either returning to the
             previously selected in-memory copy of a boot block, or exiting
             the program if there is none.

     _q_u_i_t    Exit the current level of ffddiisskk, either returning to the
             previously selected in-memory copy of a boot block, or exiting
             the program if there is none.  Unlike _e_x_i_t it does write the
             modified block out.

     _a_b_o_r_t   Quit program without saving current changes.

NNOOTTEESS
     The automatic calculation of starting cylinder etc. uses a set of figures
     that represent what the BIOS thinks is the geometry of the drive.  These
     figures are by default taken from the in-core disklabel, or values that
     _/_b_o_o_t has passed to the kernel, but ffddiisskk gives you an opportunity to
     change them if there is a need to.  This allows the user to create a
     bootblock that can work with drives that use geometry translation under a
     potentially different BIOS.

     If you hand craft your disk layout, please make sure that the OpenBSD
     partition starts on a cylinder boundary.  (This restriction may be
     changed in the future.)

     Editing an existing partition is risky, and may cause you to lose all the
     data in that partition.

     You should run this program interactively once or twice to see how it
     works.  This is completely safe as long as you answer the “write”
     questions in the negative.

FFIILLEESS
     _/_u_s_r_/_m_d_e_c_/_m_b_r  default MBR template

SSEEEE AALLSSOO
     gpt(8), pdisk(8)

BBUUGGSS
     There are subtleties ffddiisskk detects that are not explained in this manual
     page.  As well, chances are that some of the subtleties it should detect
     are being steamrolled.  Caveat Emptor.

macOS 14.6                      January 3, 2002                     macOS 14.6
"
mkfs,No manual entry for mkfs
mount,"MOUNT(8)                    System Manager's Manual                   MOUNT(8)

NNAAMMEE
     mmoouunntt – mount file systems

SSYYNNOOPPSSIISS
     mmoouunntt [--aaddffrrkkuuvvww] [--tt _l_f_s | _e_x_t_e_r_n_a_l___t_y_p_e]
     mmoouunntt [--ddffrrkkuuvvww] _s_p_e_c_i_a_l | _m_o_u_n_t___p_o_i_n_t
     mmoouunntt [--ddffrrkkuuvvww] [--oo _o_p_t_i_o_n_s] [--tt _l_f_s | _e_x_t_e_r_n_a_l___t_y_p_e]
           _s_p_e_c_i_a_l _m_o_u_n_t___p_o_i_n_t

DDEESSCCRRIIPPTTIIOONN
     The mmoouunntt command calls the mount(2) system call to prepare and graft a
     _s_p_e_c_i_a_l _d_e_v_i_c_e or the remote node (rhost:path) on to the file system tree
     at the point _m_o_u_n_t___p_o_i_n_t, which must be a directory.  If either _s_p_e_c_i_a_l
     or _m_o_u_n_t___p_o_i_n_t are not provided, the appropriate information is obtained
     via the getfsent(3) library routines.

     The system maintains a list of currently mounted file systems.  If no
     arguments are given to mmoouunntt,, this list is printed.

     The options are as follows:

     --aa      All the filesystems listed via getfsent(3) are mounted.
             Exceptions are those marked as ``noauto;'' excluded by the --tt
             flag (see below); entries that are neither ``ro,'' ``rw,'' or
             ``rq;'' ``nfs'' entries that also have ``net'' as an option; and
             already-mounted ``nfs'' entries.

     --dd      Causes everything to be done except for the actual system call.
             This option is useful in conjunction with the --vv flag to
             determine what the mmoouunntt command is trying to do.

     --ff      Forces the revocation of write access when trying to downgrade a
             filesystem mount status from read-write to read-only.

     --kk      In the course of the mount system call, the kernel should not
             follow any symlinks that may be present in the provided mount-on
             directory.


     --oo      Options are specified with a --oo flag followed by a comma
             separated string of options.  The following options are
             available:

             async   All I/O to the file system should be done asynchronously.
                     This can be somewhat dangerous with respect to losing
                     data when faced with system crashes and power outages.
                     This is also the default.  It can be avoided with the
                     _n_o_a_s_y_n_c option.

             force   The same as --ff; forces the revocation of write access
                     when trying to downgrade a filesystem mount status from
                     read-write to read-only.

             noasync
                     This filesystem should not force all I/O to be written
                     asynchronously.

             noauto  This filesystem should be skipped when mount is run with
                     the --aa flag.

             nodev   Do not interpret character or block special devices on
                     the file system.  This option is useful for a server that
                     has file systems containing special devices for
                     architectures other than its own.

             noexec  Do not allow execution of any binaries on the mounted
                     file system.  This option is useful for a server that has
                     file systems containing binaries for architectures other
                     than its own.

             noowners
                     Ignore the ownership field for the entire volume.  This
                     causes all objects to appear as owned by user ID 99 and
                     group ID 99.  User ID 99 is interpreted as the current
                     effective user ID, while group ID 99 is used directly and
                     translates to ``unknown''.

             nosuid  Do not allow set-user-identifier or set-group-identifier
                     bits to take effect.

             rdonly  The same as --rr; mount the file system read-only (even the
                     super-user may not write it).

             sync    All I/O to the file system should be done synchronously.

             update  The same as --uu; indicate that the status of an already
                     mounted file system should be changed.

             union   Causes the namespace to appear as the union of
                     directories of the mounted filesystem with corresponding
                     directories in the underlying filesystem.  Lookups will
                     be done in the mounted filesystem first.  If those
                     operations fail due to a non-existent file the underlying
                     directory is then accessed.

             noatime
                     Do not update the file access time when reading from a
                     file.  This option is useful on file systems where there
                     are large numbers of files and performance is more
                     critical than updating the file access time (which is
                     rarely ever important).

             strictatime
                     Always update the file access time when reading from a
                     file. Without this option the filesystem may default to a
                     less strict update mode, where some access time updates
                     are skipped for performance reasons. This option could be
                     ignored if it is not supported by the filesystem.

             nobrowse
                     This option indicates that the mount point should not be
                     visible via the GUI (i.e., appear on the Desktop as a
                     separate volume).

             nofollow
                     This option indicates that in the course of the mount
                     system call, the kernel should not follow any symlinks
                     that may be present in the provided mount-on directory.
                     This is the same as the --kk option.

             Any additional options specific to a filesystem type that is not
             one of the internally known types (see the --tt option) may be
             passed as a comma separated list; these options are distinguished
             by a leading “-” (dash).  Options that take a value are specified
             using the syntax -option=value.  For example, the mount command:

                   mount -t hfs -o nosuid,-w,-m=755 /dev/disk2s9 /tmp

             causes mmoouunntt to execute the equivalent of:

                   /sbin/mount_hfs -o nosuid -w -m 755 /dev/disk2s9 /tmp

     --rr      Mount the file system read-only (even the super-user may not
             write it).  The same as the “rdonly” argument to the --oo option.

     --tt _l_f_s | _e_x_t_e_r_n_a_l _t_y_p_e
             The argument following the --tt is used to indicate the file system
             type.  There is no default local file system for use with mount.
             A type must be specified in order to mount a non-NFS filesystem.
             The _-_t option can be used to indicate that the actions should
             only be taken on filesystems of the specified type.  More than
             one type may be specified in a comma separated list.  The list of
             filesystem types can be prefixed with “no” to specify the
             filesystem types for which action should _n_o_t be taken.  For
             example, the mmoouunntt command:

                   mount -a -t nonfs,hfs

             mounts all filesystems except those of type NFS and HFS.

             If the type is not one of the internally known types, mount will
             attempt to execute a program in _/_s_b_i_n_/_m_o_u_n_t___X_X_X where _X_X_X is
             replaced by the type name.  For example, nfs filesystems are
             mounted by the program _/_s_b_i_n_/_m_o_u_n_t___n_f_s.

     --uu      The --uu flag indicates that the status of an already mounted file
             system should be changed.  Any of the options discussed above
             (the --oo option) may be changed; also a file system can be changed
             from read-only to read-write or vice versa.  An attempt to change
             from read-write to read-only will fail if any files on the
             filesystem are currently open for writing unless the --ff flag is
             also specified.  The set of options is determined by first
             extracting the options for the file system from the filesystem
             table (see getfsent(3)) then applying any options specified by
             the --oo argument, and finally applying the --rr or --ww option.

     --vv      Verbose mode.

     --ww      Mount the file system read-write.

             The options specific to NFS filesystems are described in the
             mount_nfs(8) manual page.

SSEEEE AALLSSOO
     mount(2), getfsent(3), mount_afp(8), mount_cd9660(8), mount_cddafs(8),
     mount_fdesc(8), mount_hfs(8), mount_apfs(8), mount_msdos(8),
     mount_nfs(8), mount_smbfs(8), mount_udf(8), mount_webdav(8), umount(8)

BBUUGGSS
     It is possible for a corrupted file system to cause a crash.

HHIISSTTOORRYY
     A mmoouunntt command appeared in Version 6 AT&T UNIX.

BSD 4                            June 16, 1994                           BSD 4
"
umount,"UMOUNT(8)                   System Manager's Manual                  UMOUNT(8)

NNAAMMEE
     uummoouunntt – unmount filesystems

SSYYNNOOPPSSIISS
     uummoouunntt [--ffvv] _s_p_e_c_i_a_l | _n_o_d_e
     uummoouunntt --aa | --AA [--ffvv] [--hh _h_o_s_t] [--tt _t_y_p_e]

DDEESSCCRRIIPPTTIIOONN
     The uummoouunntt command unmounts a mounted filesystem (volume), removing it
     from the filesystem namespace.  It calls the unmount(2) system call to
     remove a _s_p_e_c_i_a_l _d_e_v_i_c_e or the remote node (rhost:path) from the
     filesystem tree at the point _n_o_d_e.  If either _s_p_e_c_i_a_l or _n_o_d_e are not
     provided, the appropriate information is taken from the list of
     filesystems provided by getfsent(3).

     The options are as follows:

     --aa      All the filesystems described via getfsent(3) are unmounted.

     --AA      All the currently mounted filesystems except the root are
             unmounted.

     --ff      The filesystem is forcibly unmounted.  Active special devices
             continue to work, but all other files return errors if further
             accesses are attempted.  The root filesystem cannot be forcibly
             unmounted.

     --hh _h_o_s_t
             Only filesystems mounted from the specified host will be
             unmounted.  This option implies the --AA option and, unless
             otherwise specified with the --tt option, will only unmount NFS
             filesystems.

     --tt _t_y_p_e
             Is used to indicate the actions should only be taken on
             filesystems of the specified type.  More than one type may be
             specified in a comma separated list.  The list of filesystem
             types can be prefixed with “no” to specify the filesystem types
             for which action should _n_o_t be taken.  For example, the uummoouunntt
             command:

                   umount -A -t nfs,hfs

             umounts all currently-mounted filesystems of the type NFS and
             HFS.  (The --aa option only unmounts entries in the _/_e_t_c_/_f_s_t_a_b
             list.)

     --vv      Verbose, additional information is printed out as each filesystem
             is unmounted.

NNOOTTEESS
     Due to the complex and interwoven nature of Mac OS X, uummoouunntt may fail
     often.  It is recommended that diskutil(1) (as in, ``diskutil unmount
     /mnt'') be used instead.

SSEEEE AALLSSOO
     unmount(2), getfsent(3), mount(8), diskutil(1)

HHIISSTTOORRYY
     A uummoouunntt command appeared in Version 6 AT&T UNIX.

BSD 4                             May 8, 1995                            BSD 4
"
lsof,"LSOF(8)                     System Manager's Manual                    LSOF(8)




NNAAMMEE
       lsof - list open files

SSYYNNOOPPSSIISS
       llssooff [ --??aabbCChhllnnNNOOPPRRttUUvvVVXX ] [ --AA _A ] [ --cc _c ] [ ++cc _c ] [ ++||--dd _d ] [ ++||--DD
       _D ] [ ++||--ee _s ] [ ++||--EE ] [ ++||--ff [[ccffggGGnn]] ] [ --FF _[_f_] ] [ --gg _[_s_] ] [ --ii _[_i_]
       ] [ --kk _k ] [ --KK _k ] [ ++||--LL _[_l_] ] [ ++||--mm _m ] [ ++||--MM ] [ --oo _[_o_] ] [ --pp _s
       ] [ ++||--rr _[_t_[_m_<_f_m_t_>_]_] ] [ --ss _[_p_:_s_] ] [ --SS _[_t_] ] [ --TT _[_t_] ] [ --uu _s ] [
       ++||--ww ] [ --xx _[_f_l_] ] [ ++||--XX ] [ --zz _[_z_] ] [ --ZZ _[_Z_] ] [ ---- ] [_n_a_m_e_s]

DDEESSCCRRIIPPTTIIOONN
       _L_s_o_f revision 4.91 lists on its standard output file information about
       files opened by processes for the following UNIX dialects:

            Apple Darwin 9 and Mac OS X 10.[567]
            FreeBSD 8.[234], 9.0 and 1[012].0 for AMD64-based systems
            Linux 2.1.72 and above for x86-based systems
            Solaris 9, 10 and 11

       (See the DDIISSTTRRIIBBUUTTIIOONN section of this manual page for information on
       how to obtain the latest _l_s_o_f revision.)

       An open file may be a regular file, a directory, a block special file,
       a character special file, an executing text reference, a library, a
       stream or a network file (Internet socket, NFS file or UNIX domain
       socket.)  A specific file or all the files in a file system may be
       selected by path.

       Instead of a formatted display, _l_s_o_f will produce output that can be
       parsed by other programs.  See the --FF, option description, and the
       OOUUTTPPUUTT FFOORR OOTTHHEERR PPRROOGGRRAAMMSS section for more information.

       In addition to producing a single output list, _l_s_o_f will run in repeat
       mode.  In repeat mode it will produce output, delay, then repeat the
       output operation until stopped with an interrupt or quit signal.  See
       the ++||--rr _[_t_[_m_<_f_m_t_>_]_] option description for more information.

OOPPTTIIOONNSS
       In the absence of any options, _l_s_o_f lists all open files belonging to
       all active processes.

       If any list request option is specified, other list requests must be
       specifically requested - e.g., if --UU is specified for the listing of
       UNIX socket files, NFS files won't be listed unless --NN is also
       specified; or if a user list is specified with the --uu option, UNIX
       domain socket files, belonging to users not in the list, won't be
       listed unless the --UU option is also specified.

       Normally list options that are specifically stated are ORed - i.e.,
       specifying the --ii option without an address and the --uufoo option
       produces a listing of all network files OR files belonging to processes
       owned by user ``foo''.  The exceptions are:

       1) the `^' (negated) login name or user ID (UID), specified with the --uu
          option;

       2) the `^' (negated) process ID (PID), specified with the --pp option;

       3) the `^' (negated) process group ID (PGID), specified with the --gg
          option;

       4) the `^' (negated) command, specified with the --cc option;

       5) the (`^') negated TCP or UDP protocol state names, specified with
          the --ss _[_p_:_s_] option.

       Since they represent exclusions, they are applied without ORing or
       ANDing and take effect before any other selection criteria are applied.

       The --aa option may be used to AND the selections.  For example,
       specifying --aa, --UU, and --uufoo produces a listing of only UNIX socket
       files that belong to processes owned by user ``foo''.

       Caution: the --aa option causes all list selection options to be ANDed;
       it can't be used to cause ANDing of selected pairs of selection options
       by placing it between them, even though its placement there is
       acceptable.  Wherever --aa is placed, it causes the ANDing of all
       selection options.

       Items of the same selection set - command names, file descriptors,
       network addresses, process identifiers, user identifiers, zone names,
       security contexts - are joined in a single ORed set and applied before
       the result participates in ANDing.  Thus, for example, specifying
       --ii@aaa.bbb, --ii@ccc.ddd, --aa, and --uufff,ggg will select the listing of
       files that belong to either login ``fff'' OR ``ggg'' AND have network
       connections to either host aaa.bbb OR ccc.ddd.

       Options may be grouped together following a single prefix -- e.g., the
       option set ``--aa --bb --CC'' may be stated as --aabbCC.  However, since values
       are optional following ++||--ff, --FF, --gg, --ii, ++||--LL, --oo, ++||--rr, --ss, --SS, --TT, --xx
       and --zz.  when you have no values for them be careful that the following
       character isn't ambiguous.  For example, --FFnn might represent the --FF and
       --nn options, or it might represent the nn field identifier character
       following the --FF option.  When ambiguity is possible, start a new
       option with a `-' character - e.g., ``--FF --nn''.  If the next option is a
       file name, follow the possibly ambiguous option with ``--'' - e.g.,
       ``--FF ---- _n_a_m_e''.

       Either the `+' or the `-' prefix may be applied to a group of options.
       Options that don't take on separate meanings for each prefix - e.g., --ii
       - may be grouped under either prefix.  Thus, for example, ``+M -i'' may
       be stated as ``+Mi'' and the group means the same as the separate
       options.  Be careful of prefix grouping when one or more options in the
       group does take on separate meanings under different prefixes - e.g.,
       ++||--MM; ``-iM'' is not the same request as ``-i +M''.  When in doubt, use
       separate options with appropriate prefixes.

       --?? --hh
            These two equivalent options select a usage (help) output list.
            _L_s_o_f displays a shortened form of this output when it detects an
            error in the options supplied to it, after it has displayed
            messages explaining each error.  (Escape the `?' character as your
            shell requires.)

       --aa   causes list selection options to be ANDed, as described above.

       --AA _A is available on systems configured for AFS whose AFS kernel code
            is implemented via dynamic modules.  It allows the _l_s_o_f user to
            specify _A as an alternate name list file where the kernel
            addresses of the dynamic modules might be found.  See the _l_s_o_f FAQ
            (The FFAAQQ section gives its location.)  for more information about
            dynamic modules, their symbols, and how they affect _l_s_o_f.

       --bb   causes _l_s_o_f to avoid kernel functions that might block - _l_s_t_a_t(2),
            _r_e_a_d_l_i_n_k(2), and _s_t_a_t(2).

            See the BBLLOOCCKKSS AANNDD TTIIMMEEOOUUTTSS and AAVVOOIIDDIINNGG KKEERRNNEELL BBLLOOCCKKSS sections
            for information on using this option.

       --cc _c selects the listing of files for processes executing the command
            that begins with the characters of _c.  Multiple commands may be
            specified, using multiple --cc options.  They are joined in a single
            ORed set before participating in AND option selection.

            If _c begins with a `^', then the following characters specify a
            command name whose processes are to be ignored (excluded.)

            If _c begins and ends with a slash ('/'), the characters between
            the slashes are interpreted as a regular expression.  Shell
            meta-characters in the regular expression must be quoted to
            prevent their interpretation by the shell.  The closing slash may
            be followed by these modifiers:

                 b    the regular expression is a basic one.
                 i    ignore the case of letters.
                 x    the regular expression is an extended one
                      (default).

            See the _l_s_o_f FAQ (The FFAAQQ section gives its location.)  for more
            information on basic and extended regular expressions.

            The simple command specification is tested first.  If that test
            fails, the command regular expression is applied.  If the simple
            command test succeeds, the command regular expression test isn't
            made.  This may result in ``no command found for regex:'' messages
            when lsof's --VV option is specified.

       ++cc _w defines the maximum number of initial characters of the name,
            supplied by the UNIX dialect, of the UNIX command associated with
            a process to be printed in the COMMAND column.  (The _l_s_o_f default
            is nine.)

            Note that many UNIX dialects do not supply all command name
            characters to _l_s_o_f in the files and structures from which _l_s_o_f
            obtains command name.  Often dialects limit the number of
            characters supplied in those sources.  For example, Linux 2.4.27
            and Solaris 9 both limit command name length to 16 characters.

            If _w is zero ('0'), all command characters supplied to _l_s_o_f by the
            UNIX dialect will be printed.

            If _w is less than the length of the column title, ``COMMAND'', it
            will be raised to that length.

       --CC   disables the reporting of any path name components from the
            kernel's name cache.  See the KKEERRNNEELL NNAAMMEE CCAACCHHEE section for more
            information.

       ++dd _s causes _l_s_o_f to search for all open instances of directory _s and
            the files and directories it contains at its top level.  ++dd does
            NOT descend the directory tree, rooted at _s.  The ++DD _D option may
            be used to request a full-descent directory tree search, rooted at
            directory _D.

            Processing of the ++dd option does not follow symbolic links within
            _s unless the --xx or --xx  ll option is also specified.  Nor does it
            search for open files on file system mount points on
            subdirectories of _s unless the --xx or --xx  ff option is also
            specified.

            Note: the authority of the user of this option limits it to
            searching for files that the user has permission to examine with
            the system _s_t_a_t(2) function.

       --dd _s specifies a list of file descriptors (FDs) to exclude from or
            include in the output listing.  The file descriptors are specified
            in the comma-separated set _s - e.g., ``cwd,1,3'', ``^6,^2''.
            (There should be no spaces in the set.)

            The list is an exclusion list if all entries of the set begin with
            `^'.  It is an inclusion list if no entry begins with `^'.  Mixed
            lists are not permitted.

            A file descriptor number range may be in the set as long as
            neither member is empty, both members are numbers, and the ending
            member is larger than the starting one - e.g., ``0-7'' or
            ``3-10''.  Ranges may be specified for exclusion if they have the
            `^' prefix - e.g., ``^0-7'' excludes all file descriptors 0
            through 7.

            Multiple file descriptor numbers are joined in a single ORed set
            before participating in AND option selection.

            When there are exclusion and inclusion members in the set, _l_s_o_f
            reports them as errors and exits with a non-zero return code.

            See the description of File Descriptor (FD) output values in the
            OOUUTTPPUUTT section for more information on file descriptor names.

       ++DD _D causes _l_s_o_f to search for all open instances of directory _D and
            all the files and directories it contains to its complete depth.

            Processing of the ++DD option does not follow symbolic links within
            _D unless the --xx or --xx  ll option is also specified.  Nor does it
            search for open files on file system mount points on
            subdirectories of _D unless the --xx or --xx  ff option is also
            specified.

            Note: the authority of the user of this option limits it to
            searching for files that the user has permission to examine with
            the system _s_t_a_t(2) function.

            Further note: _l_s_o_f may process this option slowly and require a
            large amount of dynamic memory to do it.  This is because it must
            descend the entire directory tree, rooted at _D, calling _s_t_a_t(2)
            for each file and directory, building a list of all the files it
            finds, and searching that list for a match with every open file.
            When directory _D is large, these steps can take a long time, so
            use this option prudently.

       --DD _D directs _l_s_o_f_'_s use of the device cache file.  The use of this
            option is sometimes restricted.  See the DDEEVVIICCEE CCAACCHHEE FFIILLEE section
            and the sections that follow it for more information on this
            option.

            --DD must be followed by a function letter; the function letter may
            optionally be followed by a path name.  _L_s_o_f recognizes these
            function letters:

                 ?? - report device cache file paths
                 bb - build the device cache file
                 ii - ignore the device cache file
                 rr - read the device cache file
                 uu - read and update the device cache file

            The bb, rr, and uu functions, accompanied by a path name, are
            sometimes restricted.  When these functions are restricted, they
            will not appear in the description of the --DD option that
            accompanies --hh or --??  option output.  See the DDEEVVIICCEE CCAACCHHEE FFIILLEE
            section and the sections that follow it for more information on
            these functions and when they're restricted.

            The ??  function reports the read-only and write paths that lsof
            can use for the device cache file, the names of any environment
            variables whose values _l_s_o_f will examine when forming the device
            cache file path, and the format for the personal device cache file
            path.  (Escape the `?' character as your shell requires.)

            When available, the bb, rr, and uu functions may be followed by the
            device cache file's path.  The standard default is _._l_s_o_f___h_o_s_t_n_a_m_e
            in the home directory of the real user ID that executes _l_s_o_f, but
            this could have been changed when _l_s_o_f was configured and
            compiled.  (The output of the --hh and --??  options show the current
            default prefix - e.g., ``.lsof''.)  The suffix, _h_o_s_t_n_a_m_e, is the
            first component of the host's name returned by _g_e_t_h_o_s_t_n_a_m_e(2).

            When available, the bb function directs _l_s_o_f to build a new device
            cache file at the default or specified path.

            The ii function directs _l_s_o_f to ignore the default device cache
            file and obtain its information about devices via direct calls to
            the kernel.

            The rr function directs _l_s_o_f to read the device cache at the
            default or specified path, but prevents it from creating a new
            device cache file when none exists or the existing one is
            improperly structured.  The rr function, when specified without a
            path name, prevents _l_s_o_f from updating an incorrect or outdated
            device cache file, or creating a new one in its place.  The rr
            function is always available when it is specified without a path
            name argument; it may be restricted by the permissions of the _l_s_o_f
            process.

            When available, the uu function directs _l_s_o_f to read the device
            cache file at the default or specified path, if possible, and to
            rebuild it, if necessary.  This is the default device cache file
            function when no --DD option has been specified.

       ++||--ee _s
            exempts the file system whose path name is _s from being subjected
            to kernel function calls that might block.  The ++ee option exempts
            _s_t_a_t(2), _l_s_t_a_t(2) and most _r_e_a_d_l_i_n_k(2) kernel function calls.  The
            --ee option exempts only _s_t_a_t_(_2_) and _l_s_t_a_t(2) kernel function calls.
            Multiple file systems may be specified with separate ++||--ee
            specifications and each may have _r_e_a_d_l_i_n_k(2) calls exempted or
            not.

            This option is currently implemented only for Linux.

            CCAAUUTTIIOONN:: this option can easily be mis-applied to other than the
            file system of interest, because it uses path name rather than the
            more reliable device and inode numbers.  (Device and inode numbers
            are acquired via the potentially blocking _s_t_a_t(2) kernel call and
            are thus not available, but see the ++||--mm _m option as a possible
            alternative way to supply device numbers.)  UUssee tthhiiss ooppttiioonn wwiitthh
            ggrreeaatt ccaarree aanndd ffuullllyy ssppeecciiffyy tthhee ppaatthh nnaammee ooff tthhee ffiillee ssyysstteemm ttoo
            bbee eexxeemmpptteedd..

            When open files on exempted file systems are reported, it may not
            be possible to obtain all their information.  Therefore, some
            information columns will be blank, the characters ``UNKN'' preface
            the values in the TYPE column, and the applicable exemption option
            is added in parentheses to the end of the NAME column.  (Some
            device number information might be made available via the ++||--mm _m
            option.)

       ++||--EE ++EE specifies that Linux pipe, Linux UNIX socket and Linux
            pseudoterminal files should be displayed with endpoint information
            and the files of the endpoints should also be displayed.  Note:
            UNIX socket file endpoint information is only available when the
            compile flags line of --vv output contains HASUXSOCKEPT, and
            psudoterminal endpoint information is only available when the
            compile flags line contains HASPTYEPT.

            Pipe endpoint information is displayed in the NAME column in the
            form ``_P_I_D_,_c_m_d_,_F_D_m_o_d_e'', where _P_I_D is the endpoint process ID; _c_m_d
            is the endpoint process command; _F_D is the endpoint file's
            descriptor; and _m_o_d_e is the endpoint file's access mode.

            Pseudoterminal endpoint information is displayed in the NAME
            column as ``->/dev/pts_m_i_n _P_I_D_,_c_m_d_,_F_D_m_o_d_e'' or ``_P_I_D_,_c_m_d_,_F_D_m_o_d_e''.
            The first form is for a primary device; the second, for a replica
            device.  _m_i_n is a replica device's minor device number; and _P_I_D_,
            _c_m_d_, _F_D and _m_o_d_e are the same as with pipe endpoint information.
            Note: psudoterminal endpoint information is only available when
            the compile flags line of --VV output contains HASPTYEPT.

            UNIX socket file endpoint information is displayed in the NAME
            column in the form
            ``type=_T_Y_P_E ->INO=_I_N_O_D_E _P_I_D_,_c_m_d_,_F_D_m_o_d_e'', where _T_Y_P_E is the socket
            type; _I_N_O_D_E is the i-node number of the connected socket; and _P_I_D_,
            _c_m_d_, _F_D and _m_o_d_e are the same as with pipe endpoint information.
            Note: UNIX socket file endpoint information is available only when
            the compile flags line of --vv output contains HASUXSOCKEPT.

            Multiple occurrences of this information can appear in a file's
            NAME column.

            --EE specfies that Linux pipe and Linux UNIX socket files should be
            displayed with endpoint information, but not the files of the
            endpoints.

       ++||--ff [[ccffggGGnn]]
            ff by itself clarifies how path name arguments are to be
            interpreted.  When followed by cc, ff, gg, GG, or nn in any combination
            it specifies that the listing of kernel file structure information
            is to be enabled (`+') or inhibited (`-').

            Normally a path name argument is taken to be a file system name if
            it matches a mounted-on directory name reported by _m_o_u_n_t(8), or if
            it represents a block device, named in the _m_o_u_n_t output and
            associated with a mounted directory name.  When ++ff is specified,
            all path name arguments will be taken to be file system names, and
            _l_s_o_f will complain if any are not.  This can be useful, for
            example, when the file system name (mounted-on device) isn't a
            block device.  This happens for some CD-ROM file systems.

            When --ff is specified by itself, all path name arguments will be
            taken to be simple files.  Thus, for example, the ``--ff -- /''
            arguments direct lsof to search for open files with a `/' path
            name, not all open files in the `/' (root) file system.

            Be careful to make sure ++ff and --ff are properly terminated and
            aren't followed by a character (e.g., of the file or file system
            name) that might be taken as a parameter.  For example, use ``--''
            after ++ff and --ff as in these examples.

                 $ lsof +f -- /file/system/name
                 $ lsof -f -- /file/name

            The listing of information from kernel file structures, requested
            with the ++ff [[ccffggGGnn]] option form, is normally inhibited, and is not
            available in whole or part for some dialects - e.g., /proc-based
            Linux kernels below 2.6.22.  When the prefix to ff is a plus sign
            (`+'), these characters request file structure information:

                 cc    file structure use count (not Linux)
                 ff    file structure address (not Linux)
                 gg    file flag abbreviations (Linux 2.6.22 and up)
                 GG    file flags in hexadecimal (Linux 2.6.22 and up)
                 nn    file structure node address (not Linux)

            When the prefix is minus (`-') the same characters disable the
            listing of the indicated values.

            File structure addresses, use counts, flags, and node addresses
            may be used to detect more readily identical files inherited by
            child processes and identical files in use by different processes.
            _L_s_o_f column output can be sorted by output columns holding the
            values and listed to identify identical file use, or _l_s_o_f field
            output can be parsed by an AWK or Perl post-filter script, or by a
            C program.

       --FF _f specifies a character list, _f, that selects the fields to be
            output for processing by another program, and the character that
            terminates each output field.  Each field to be output is
            specified with a single character in _f.  The field terminator
            defaults to NL, but may be changed to NUL (000).  See the OOUUTTPPUUTT
            FFOORR OOTTHHEERR PPRROOGGRRAAMMSS section for a description of the field
            identification characters and the field output process.

            When the field selection character list is empty, all standard
            fields are selected (except the raw device field, security context
            and zone field for compatibility reasons) and the NL field
            terminator is used.

            When the field selection character list contains only a zero
            (`0'), all fields are selected (except the raw device field for
            compatibility reasons) and the NUL terminator character is used.

            Other combinations of fields and their associated field terminator
            character must be set with explicit entries in _f, as described in
            the OOUUTTPPUUTT FFOORR OOTTHHEERR PPRROOGGRRAAMMSS section.

            When a field selection character identifies an item _l_s_o_f does not
            normally list - e.g., PPID, selected with --RR - specification of
            the field character - e.g., ``--FFRR'' - also selects the listing of
            the item.

            When the field selection character list contains the single
            character `?', _l_s_o_f will display a help list of the field
            identification characters.  (Escape the `?' character as your
            shell requires.)

       --gg _[_s_]
            excludes or selects the listing of files for the processes whose
            optional process group IDentification (PGID) numbers are in the
            comma-separated set _s - e.g., ``123'' or ``123,^456''.  (There
            should be no spaces in the set.)

            PGID numbers that begin with `^' (negation) represent exclusions.

            Multiple PGID numbers are joined in a single ORed set before
            participating in AND option selection.  However, PGID exclusions
            are applied without ORing or ANDing and take effect before other
            selection criteria are applied.

            The --gg option also enables the output display of PGID numbers.
            When specified without a PGID set that's all it does.

       --ii _[_i_]
            selects the listing of files any of whose Internet address matches
            the address specified in _i.  If no address is specified, this
            option selects the listing of all Internet and x.25 (HP-UX)
            network files.

            If --ii_4 or --ii_6 is specified with no following address, only files
            of the indicated IP version, IPv4 or IPv6, are displayed.  (An
            IPv6 specification may be used only if the dialects supports IPv6,
            as indicated by ``[46]'' and ``IPv[46]'' in _l_s_o_f_'_s --hh or --??
            output.)  Sequentially specifying --ii4, followed by --ii6 is the same
            as specifying --ii, and vice-versa.  Specifying --ii4, or --ii6 after --ii
            is the same as specifying --ii4 or --ii6 by itself.

            Multiple addresses (up to a limit of 100) may be specified with
            multiple --ii options.  (A port number or service name range is
            counted as one address.)  They are joined in a single ORed set
            before participating in AND option selection.

            An Internet address is specified in the form (Items in square
            brackets are optional.):


            [_4_6][_p_r_o_t_o_c_o_l][@_h_o_s_t_n_a_m_e|_h_o_s_t_a_d_d_r][:_s_e_r_v_i_c_e|_p_o_r_t]

            where:
                 _4_6 specifies the IP version, IPv4 or IPv6
                      that applies to the following address.
                      '6' may be be specified only if the UNIX
                      dialect supports IPv6.  If neither '4' nor
                      '6' is specified, the following address
                      applies to all IP versions.
                 _p_r_o_t_o_c_o_l is a protocol name - TTCCPP, UUDDPP
                 _h_o_s_t_n_a_m_e is an Internet host name.  Unless a
                      specific IP version is specified, open
                      network files associated with host names
                      of all versions will be selected.
                 _h_o_s_t_a_d_d_r is a numeric Internet IPv4 address in
                      dot form; or an IPv6 numeric address in
                      colon form, enclosed in brackets, if the
                      UNIX dialect supports IPv6.  When an IP
                      version is selected, only its numeric
                      addresses may be specified.
                 _s_e_r_v_i_c_e is an _/_e_t_c_/_s_e_r_v_i_c_e_s name - e.g., ssmmttpp -
                      or a list of them.
                 _p_o_r_t is a port number, or a list of them.

            IPv6 options may be used only if the UNIX dialect supports IPv6.
            To see if the dialect supports IPv6, run _l_s_o_f and specify the --hh
            or --??  (help) option.  If the displayed description of the --ii
            option contains ``[46]'' and ``IPv[46]'', IPv6 is supported.

            IPv4 host names and addresses may not be specified if network file
            selection is limited to IPv6 with --ii 6.  IPv6 host names and
            addresses may not be specified if network file selection is
            limited to IPv4 with --ii 4.  When an open IPv4 network file's
            address is mapped in an IPv6 address, the open file's type will be
            IPv6, not IPv4, and its display will be selected by '6', not '4'.

            At least one address component - 44,, 66,, _p_r_o_t_o_c_o_l, _h_o_s_t_n_a_m_e,
            _h_o_s_t_a_d_d_r, or _s_e_r_v_i_c_e - must be supplied.  The `@' character,
            leading the host specification, is always required; as is the `:',
            leading the port specification.  Specify either _h_o_s_t_n_a_m_e or
            _h_o_s_t_a_d_d_r.  Specify either _s_e_r_v_i_c_e name list or _p_o_r_t number list.
            If a _s_e_r_v_i_c_e name list is specified, the _p_r_o_t_o_c_o_l may also need to
            be specified if the TCP, UDP and UDPLITE port numbers for the
            service name are different.  Use any case - lower or upper - for
            _p_r_o_t_o_c_o_l.

            _S_e_r_v_i_c_e names and _p_o_r_t numbers may be combined in a list whose
            entries are separated by commas and whose numeric range entries
            are separated by minus signs.  There may be no embedded spaces,
            and all service names must belong to the specified _p_r_o_t_o_c_o_l.
            Since service names may contain embedded minus signs, the starting
            entry of a range can't be a service name; it can be a port number,
            however.

            Here are some sample addresses:

                 -i6 - IPv6 only
                 TCP:25 - TCP and port 25
                 @1.2.3.4 - Internet IPv4 host address 1.2.3.4
                 @[3ffe:1ebc::1]:1234 - Internet IPv6 host address
                      3ffe:1ebc::1, port 1234
                 UDP:who - UDP who service port
                 TCP@lsof.itap:513 - TCP, port 513 and host name lsof.itap
                 tcp@foo:1-10,smtp,99 - TCP, ports 1 through 10,
                      service name _s_m_t_p, port 99, host name foo
                 tcp@bar:1-smtp - TCP, ports 1 through _s_m_t_p, host bar
                 :time - either TCP, UDP or UDPLITE time service port

       --KK _k selects the listing of tasks (threads) of processes, on dialects
            where task (thread) reporting is supported.  (If help output -
            i.e., the output of the --hh or --??  options - shows this option,
            then task (thread) reporting is supported by the dialect.)

            If --KK is followed by a value, _k, it must be ``i''.  That causes
            _l_s_o_f to ignore tasks, particularly in the default, list-everything
            case when no other options are specified.

            When --KK and --aa are both specified on Linux, and the tasks of a
            main process are selected by other options, the main process will
            also be listed as though it were a task, but without a task ID.
            (See the description of the TID column in the OOUUTTPPUUTT section.)

            Where the FreeBSD version supports threads, all threads will be
            listed with their IDs.

            In general threads and tasks inherit the files of the caller, but
            may close some and open others, so _l_s_o_f always reports all the
            open files of threads and tasks.

       --kk _k specifies a kernel name list file, _k, in place of /vmunix, /mach,
            etc.  --kk is not available under AIX on the IBM RISC/System 6000.

       --ll   inhibits the conversion of user ID numbers to login names.  It is
            also useful when login name lookup is working improperly or
            slowly.

       ++||--LL _[_l_]
            enables (`+') or disables (`-') the listing of file link counts,
            where they are available - e.g., they aren't available for
            sockets, or most FIFOs and pipes.

            When ++LL is specified without a following number, all link counts
            will be listed.  When --LL is specified (the default), no link
            counts will be listed.

            When ++LL is followed by a number, only files having a link count
            less than that number will be listed.  (No number may follow --LL.)
            A specification of the form ``++LL11'' will select open files that
            have been unlinked.  A specification of the form
            ``++aaLL11  _<_f_i_l_e___s_y_s_t_e_m_>'' will select unlinked open files on the
            specified file system.

            For other link count comparisons, use field output (--FF) and a
            post-processing script or program.

       ++||--mm _m
            specifies an alternate kernel memory file or activates mount table
            supplement processing.

            The option form --mm _m specifies a kernel memory file, _m, in place
            of _/_d_e_v_/_k_m_e_m or _/_d_e_v_/_m_e_m - e.g., a crash dump file.

            The option form ++mm requests that a mount supplement file be
            written to the standard output file.  All other options are
            silently ignored.

            There will be a line in the mount supplement file for each mounted
            file system, containing the mounted file system directory,
            followed by a single space, followed by the device number in
            hexadecimal ""0x"" format - e.g.,

                 / 0x801

            _L_s_o_f can use the mount supplement file to get device numbers for
            file systems when it can't get them via _s_t_a_t(2) or _l_s_t_a_t(2).

            The option form ++mm _m identifies _m as a mount supplement file.

            Note: the ++mm and ++mm _m options are not available for all supported
            dialects.  Check the output of _l_s_o_f_'_s --hh or --??  options to see if
            the ++mm and ++mm _m options are available.

       ++||--MM Enables (++) or disables (--) the reporting of portmapper
            registrations for local TCP, UDP and UDPLITE ports, where port
            mapping is supported.  (See the last paragraph of this option
            description for information about where portmapper registration
            reporting is supported.)

            The default reporting mode is set by the _l_s_o_f builder with the
            HASPMAPENABLED #define in the dialect's machine.h header file;
            _l_s_o_f is distributed with the HASPMAPENABLED #define deactivated,
            so portmapper reporting is disabled by default and must be
            requested with ++MM.  Specifying _l_s_o_f_'_s --hh or --??  option will report
            the default mode.  Disabling portmapper registration when it is
            already disabled or enabling it when already enabled is
            acceptable.  When portmapper registration reporting is enabled,
            _l_s_o_f displays the portmapper registration (if any) for local TCP,
            UDP or UDPLITE ports in square brackets immediately following the
            port numbers or service names - e.g., ``:1234[name]'' or
            ``:name[100083]''.  The registration information may be a name or
            number, depending on what the registering program supplied to the
            portmapper when it registered the port.

            When portmapper registration reporting is enabled, _l_s_o_f may run a
            little more slowly or even become blocked when access to the
            portmapper becomes congested or stopped.  Reverse the reporting
            mode to determine if portmapper registration reporting is slowing
            or blocking _l_s_o_f.

            For purposes of portmapper registration reporting _l_s_o_f considers a
            TCP, UDP or UDPLITE port local if: it is found in the local part
            of its containing kernel structure; or if it is located in the
            foreign part of its containing kernel structure and the local and
            foreign Internet addresses are the same; or if it is located in
            the foreign part of its containing kernel structure and the
            foreign Internet address is INADDR_LOOPBACK (127.0.0.1).  This
            rule may make _l_s_o_f ignore some foreign ports on machines with
            multiple interfaces when the foreign Internet address is on a
            different interface from the local one.

            See the _l_s_o_f FAQ (The FFAAQQ section gives its location.)  for
            further discussion of portmapper registration reporting issues.

            Portmapper registration reporting is supported only on dialects
            that have RPC header files.  (Some Linux distributions with GlibC
            2.14 do not have them.)  When portmapper registration reporting is
            supported, the --hh or --??  help output will show the ++||--MM option.

       --nn   inhibits the conversion of network numbers to host names for
            network files.  Inhibiting conversion may make _l_s_o_f run faster.
            It is also useful when host name lookup is not working properly.

       --NN   selects the listing of NFS files.

       --oo   directs _l_s_o_f to display file offset at all times.  It causes the
            SIZE/OFF output column title to be changed to OFFSET.  Note: on
            some UNIX dialects _l_s_o_f can't obtain accurate or consistent file
            offset information from its kernel data sources, sometimes just
            for particular kinds of files (e.g., socket files.)  Consult the
            _l_s_o_f FAQ (The FFAAQQ section gives its location.)  for more
            information.

            The --oo and --ss options are mutually exclusive; they can't both be
            specified.  When neither is specified, _l_s_o_f displays whatever
            value - size or offset - is appropriate and available for the type
            of the file.

       --oo _o defines the number of decimal digits (_o) to be printed after the
            ``0t'' for a file offset before the form is switched to ``0x...''.
            An _o value of zero (unlimited) directs _l_s_o_f to use the ``0t'' form
            for all offset output.

            This option does NOT direct _l_s_o_f to display offset at all times;
            specify --oo (without a trailing number) to do that.  --oo _o only
            specifies the number of digits after ``0t'' in either mixed size
            and offset or offset-only output.  Thus, for example, to direct
            _l_s_o_f to display offset at all times with a decimal digit count of
            10, use:

                 -o -o 10
            or
                 -oo10

            The default number of digits allowed after ``0t'' is normally 8,
            but may have been changed by the lsof builder.  Consult the
            description of the --oo _o option in the output of the --hh or --??
            option to determine the default that is in effect.

       --OO   directs _l_s_o_f to bypass the strategy it uses to avoid being blocked
            by some kernel operations - i.e., doing them in forked child
            processes.  See the BBLLOOCCKKSS AANNDD TTIIMMEEOOUUTTSS and AAVVOOIIDDIINNGG KKEERRNNEELL BBLLOOCCKKSS
            sections for more information on kernel operations that may block
            _l_s_o_f.

            While use of this option will reduce _l_s_o_f startup overhead, it may
            also cause _l_s_o_f to hang when the kernel doesn't respond to a
            function.  Use this option cautiously.

       --pp _s excludes or selects the listing of files for the processes whose
            optional process IDentification (PID) numbers are in the
            comma-separated set _s - e.g., ``123'' or ``123,^456''.  (There
            should be no spaces in the set.)

            PID numbers that begin with `^' (negation) represent exclusions.

            Multiple process ID numbers are joined in a single ORed set before
            participating in AND option selection.  However, PID exclusions
            are applied without ORing or ANDing and take effect before other
            selection criteria are applied.

       --PP   inhibits the conversion of port numbers to port names for network
            files.  Inhibiting the conversion may make _l_s_o_f run a little
            faster.  It is also useful when port name lookup is not working
            properly.

       ++||--rr _[_t_[_m_<_f_m_t_>_]_]
            puts _l_s_o_f in repeat mode.  There _l_s_o_f lists open files as selected
            by other options, delays _t seconds (default fifteen), then repeats
            the listing, delaying and listing repetitively until stopped by a
            condition defined by the prefix to the option.

            If the prefix is a `-', repeat mode is endless.  _L_s_o_f must be
            terminated with an interrupt or quit signal.

            If the prefix is `+', repeat mode will end the first cycle no open
            files are listed - and of course when _l_s_o_f is stopped with an
            interrupt or quit signal.  When repeat mode ends because no files
            are listed, the process exit code will be zero if any open files
            were ever listed; one, if none were ever listed.

            _L_s_o_f marks the end of each listing: if field output is in progress
            (the --FF, option has been specified), the default marker is `m';
            otherwise the default marker is ``========''.  The marker is
            followed by a NL character.

            The optional ""m<fmt>"" argument specifies a format for the marker
            line.  The <fmt> characters following `m' are interpreted as a
            format specification to the _s_t_r_f_t_i_m_e(3) function, when both it and
            the _l_o_c_a_l_t_i_m_e(3) function are available in the dialect's C
            library.  Consult the _s_t_r_f_t_i_m_e(3) documentation for what may
            appear in its format specification.  Note that when field output
            is requested with the --FF option, <fmt> cannot contain the NL
            format, ``%n''.  Note also that when <fmt> contains spaces or
            other characters that affect the shell's interpretation of
            arguments, <fmt> must be quoted appropriately.

            Repeat mode reduces _l_s_o_f startup overhead, so it is more efficient
            to use this mode than to call _l_s_o_f repetitively from a shell
            script, for example.

            To use repeat mode most efficiently, accompany ++||--rr with
            specification of other _l_s_o_f selection options, so the amount of
            kernel memory access _l_s_o_f does will be kept to a minimum.  Options
            that filter at the process level - e.g., --cc, --gg, --pp, --uu - are the
            most efficient selectors.

            Repeat mode is useful when coupled with field output (see the --FF,
            option description) and a supervising _a_w_k or _P_e_r_l script, or a C
            program.

       --RR   directs lsof to list the Parent Process IDentification number in
            the PPID column.

       --ss _[_p_:_s_]
            ss alone directs _l_s_o_f to display file size at all times.  It causes
            the SIZE/OFF output column title to be changed to SIZE.  If the
            file does not have a size, nothing is displayed.

            The optional --ss _p_:_s form is available only for selected dialects,
            and only when the --hh or --??  help output lists it.

            When the optional form is available, the ss may be followed by a
            protocol name (_p), either TCP or UDP, a colon (`:') and a
            comma-separated protocol state name list, the option causes open
            TCP and UDP files to be excluded if their state name(s) are in the
            list (_s) preceded by a `^'; or included if their name(s) are not
            preceded by a `^'.

            Dialects that support this option may support only one protocol.
            When an unsupported protocol is specified, a message will be
            displayed indicating state names for the protocol are unavailable.

            When an inclusion list is defined, only network files with state
            names in the list will be present in the _l_s_o_f output.  Thus,
            specifying one state name means that only network files with that
            lone state name will be listed.

            Case is unimportant in the protocol or state names, but there may
            be no spaces and the colon (`:') separating the protocol name (_p)
            and the state name list (_s) is required.

            If only TCP and UDP files are to be listed, as controlled by the
            specified exclusions and inclusions, the --ii option must be
            specified, too.  If only a single protocol's files are to be
            listed, add its name as an argument to the --ii option.

            For example, to list only network files with TCP state LISTEN,
            use:

                 -iTCP -sTCP:LISTEN

            Or, for example, to list network files with all UDP states except
            Idle, use:

                 -iUDP -sUDP:Idle

            State names vary with UNIX dialects, so it's not possible to
            provide a complete list.  Some common TCP state names are: CLOSED,
            IDLE, BOUND, LISTEN, ESTABLISHED, SYN_SENT, SYN_RCDV, ESTABLISHED,
            CLOSE_WAIT, FIN_WAIT1, CLOSING, LAST_ACK, FIN_WAIT_2, and
            TIME_WAIT.  Two common UDP state names are Unbound and Idle.

            See the _l_s_o_f FAQ (The FFAAQQ section gives its location.)  for more
            information on how to use protocol state exclusion and inclusion,
            including examples.

            The --oo (without a following decimal digit count) and --ss option
            (without a following protocol and state name list) are mutually
            exclusive; they can't both be specified.  When neither is
            specified, _l_s_o_f displays whatever value - size or offset - is
            appropriate and available for the type of file.

            Since some types of files don't have true sizes - sockets, FIFOs,
            pipes, etc. - lsof displays for their sizes the content amounts in
            their associated kernel buffers, if possible.

       --SS _[_t_]
            specifies an optional time-out seconds value for kernel functions
            - _l_s_t_a_t(2), _r_e_a_d_l_i_n_k(2), and _s_t_a_t(2) - that might otherwise
            deadlock.  The minimum for _t is two; the default, fifteen; when no
            value is specified, the default is used.

            See the BBLLOOCCKKSS AANNDD TTIIMMEEOOUUTTSS section for more information.

       --TT _[_t_]
            controls the reporting of some TCP/TPI information, also reported
            by _n_e_t_s_t_a_t(1), following the network addresses.  In normal output
            the information appears in parentheses, each item except TCP or
            TPI state name identified by a keyword, followed by `=', separated
            from others by a single space:

                 <TCP or TPI state name>
                 QR=<read queue length>
                 QS=<send queue length>
                 SO=<socket options and values>
                 SS=<socket states>
                 TF=<TCP flags and values>
                 WR=<window read length>
                 WW=<window write length>

            Not all values are reported for all UNIX dialects.  Items values
            (when available) are reported after the item name and '='.

            When the field output mode is in effect (See OOUUTTPPUUTT FFOORR OOTTHHEERR
            PPRROOGGRRAAMMSS.) each item appears as a field with a `T' leading
            character.

            --TT with no following key characters disables TCP/TPI information
            reporting.

            --TT with following characters selects the reporting of specific
            TCP/TPI information:

                 ff    selects reporting of socket options,
                      states and values, and TCP flags and
                      values.
                 qq    selects queue length reporting.
                 ss    selects connection state reporting.
                 ww    selects window size reporting.

            Not all selections are enabled for some UNIX dialects.  State may
            be selected for all dialects and is reported by default.  The --hh
            or --??  help output for the --TT option will show what selections may
            be used with the UNIX dialect.

            When --TT is used to select information - i.e., it is followed by
            one or more selection characters - the displaying of state is
            disabled by default, and it must be explicitly selected again in
            the characters following --TT.  (In effect, then, the default is
            equivalent to --TTss.) For example, if queue lengths and state are
            desired, use --TTqqss.

            Socket options, socket states, some socket values, TCP flags and
            one TCP value may be reported (when available in the UNIX dialect)
            in the form of the names that commonly appear after SO_, so_, SS_,
            TCP_  and TF_ in the dialect's header files - most often
            <sys/socket.h>, <sys/socketvar.h> and <netinet/tcp_var.h>.
            Consult those header files for the meaning of the flags, options,
            states and values.

            ``SO='' precedes socket options and values; ``SS='', socket
            states; and ``TF='', TCP flags and values.

            If a flag or option has a value, the value will follow an '=' and
            the name -- e.g., ``SO=LINGER=5'', ``SO=QLIM=5'', ``TF=MSS=512''.
            The following seven values may be reported:

                 Name
                 Reported  Description (Common Symbol)

                 KEEPALIVE keep alive time (SO_KEEPALIVE)
                 LINGER    linger time (SO_LINGER)
                 MSS       maximum segment size (TCP_MAXSEG)
                 PQLEN          partial listen queue connections
                 QLEN      established listen queue connections
                 QLIM      established listen queue limit
                 RCVBUF    receive buffer length (SO_RCVBUF)
                 SNDBUF    send buffer length (SO_SNDBUF)

            Details on what socket options and values, socket states, and TCP
            flags and values may be displayed for particular UNIX dialects may
            be found in the answer to the ``Why doesn't lsof report socket
            options, socket states, and TCP flags and values for my dialect?''
            and ``Why doesn't lsof report the partial listen queue connection
            count for my dialect?''  questions in the _l_s_o_f FAQ (The FFAAQQ
            section gives its location.)

       --tt   specifies that _l_s_o_f should produce terse output with process
            identifiers only and no header - e.g., so that the output may be
            piped to _k_i_l_l(1).  --tt selects the --ww option.

       --uu _s selects the listing of files for the user whose login names or
            user ID numbers are in the comma-separated set _s - e.g., ``abe'',
            or ``548,root''.  (There should be no spaces in the set.)

            Multiple login names or user ID numbers are joined in a single
            ORed set before participating in AND option selection.

            If a login name or user ID is preceded by a `^', it becomes a
            negation - i.e., files of processes owned by the login name or
            user ID will never be listed.  A negated login name or user ID
            selection is neither ANDed nor ORed with other selections; it is
            applied before all other selections and absolutely excludes the
            listing of the files of the process.  For example, to direct _l_s_o_f
            to exclude the listing of files belonging to root processes,
            specify ``-u^root'' or ``-u^0''.

       --UU   selects the listing of UNIX domain socket files.

       --vv   selects the listing of _l_s_o_f version information, including:
            revision number; when the _l_s_o_f binary was constructed; who
            constructed the binary and where; the name of the compiler used to
            construct the _l_s_o_f _b_i_n_a_r_y_; the version number of the compiler when
            readily available; the compiler and loader flags used to construct
            the _l_s_o_f binary; and system information, typically the output of
            _u_n_a_m_e's --aa option.

       --VV   directs _l_s_o_f to indicate the items it was asked to list and failed
            to find - command names, file names, Internet addresses or files,
            login names, NFS files, PIDs, PGIDs, and UIDs.

            When other options are ANDed to search options, or compile-time
            options restrict the listing of some files, _l_s_o_f may not report
            that it failed to find a search item when an ANDed option or
            compile-time option prevents the listing of the open file
            containing the located search item.

            For example, ``lsof -V -iTCP@foobar -a -d 999'' may not report a
            failure to locate open files at ``TCP@foobar'' and may not list
            any, if none have a file descriptor number of 999.  A similar
            situation arises when HASSECURITY and HASNOSOCKSECURITY are
            defined at compile time and they prevent the listing of open
            files.

       ++||--ww Enables (++) or disables (--) the suppression of warning messages.

            The _l_s_o_f builder may choose to have warning messages disabled or
            enabled by default.  The default warning message state is
            indicated in the output of the --hh or --??  option.  Disabling
            warning messages when they are already disabled or enabling them
            when already enabled is acceptable.

            The --tt option selects the --ww option.

       --xx _[_f_l_]
            may accompany the ++dd and ++DD options to direct their processing to
            cross over symbolic links and|or file system mount points
            encountered when scanning the directory (++dd) or directory tree
            (++DD).

            If --xx is specified by itself without a following parameter,
            cross-over processing of both symbolic links and file system mount
            points is enabled.  Note that when --xx is specified without a
            parameter, the next argument must begin with '-' or '+'.

            The optional 'f' parameter enables file system mount point
            cross-over processing; 'l', symbolic link cross-over processing.

            The --xx option may not be supplied without also supplying a ++dd or
            ++DD option.

       --XX   This is a dialect-specific option.

           AIX:
            This IBM AIX RISC/System 6000 option requests the reporting of
            executed text file and shared library references.

            WWAARRNNIINNGG:: because this option uses the kernel readx() function, its
            use on a busy AIX system might cause an application process to
            hang so completely that it can neither be killed nor stopped.  I
            have never seen this happen or had a report of its happening, but
            I think there is a remote possibility it could happen.

            By default use of readx() is disabled.  On AIX 5L and above _l_s_o_f
            may need setuid-root permission to perform the actions this option
            requests.

            The _l_s_o_f builder may specify that the --XX option be restricted to
            processes whose real UID is root.  If that has been done, the --XX
            option will not appear in the --hh or --??  help output unless the
            real UID of the _l_s_o_f process is root.  The default _l_s_o_f
            distribution allows any UID to specify --XX,, so by default it will
            appear in the help output.

            When AIX readx() use is disabled, _l_s_o_f may not be able to report
            information for all text and loader file references, but it may
            also avoid exacerbating an AIX kernel directory search kernel
            error, known as the Stale Segment ID bug.

            The readx() function, used by _l_s_o_f or any other program to access
            some sections of kernel virtual memory, can trigger the Stale
            Segment ID bug.  It can cause the kernel's dir_search() function
            to believe erroneously that part of an in-memory copy of a file
            system directory has been zeroed.  Another application process,
            distinct from _l_s_o_f, asking the kernel to search the directory -
            e.g., by using _o_p_e_n(2) - can cause dir_search() to loop forever,
            thus hanging the application process.

            Consult the _l_s_o_f FAQ (The FFAAQQ section gives its location.)  and
            the _0_0_R_E_A_D_M_E file of the _l_s_o_f distribution for a more complete
            description of the Stale Segment ID bug, its APAR, and methods for
            defining readx() use when compiling _l_s_o_f.

           Darwin:
            This Darwin option requests that _l_s_o_f reports exclusively
            information about files from the process file descriptor table and
            process file ports.

           Linux:
            This Linux option requests that _l_s_o_f skip the reporting of
            information on all open TCP, UDP and UDPLITE IPv4 and IPv6 files.

            This Linux option is most useful when the system has an extremely
            large number of open TCP, UDP and UDPLITE files, the processing of
            whose information in the _/_p_r_o_c_/_n_e_t_/_t_c_p_* and _/_p_r_o_c_/_n_e_t_/_u_d_p_* files
            would take _l_s_o_f a long time, and whose reporting is not of
            interest.

            Use this option with care and only when you are sure that the
            information you want _l_s_o_f to display isn't associated with open
            TCP, UDP or UDPLITE socket files.

           Solaris 10 and above:
            This Solaris 10 and above option requests the reporting of cached
            paths for files that have been deleted - i.e., removed with _r_m(1)
            or _u_n_l_i_n_k(2).

            The cached path is followed by the string `` (deleted)'' to
            indicate that the path by which the file was opened has been
            deleted.

            Because intervening changes made to the path - i.e., renames with
            _m_v(1) or _r_e_n_a_m_e(2) - are not recorded in the cached path, what
            _l_s_o_f reports is only the path by which the file was opened, not
            its possibly different final path.

       --zz _[_z_]
            specifies how Solaris 10 and higher zone information is to be
            handled.

            Without a following argument - e.g., NO _z - the option specifies
            that zone names are to be listed in the ZONE output column.

            The --zz option may be followed by a zone name, zz_.  That causes lsof
            to list only open files for processes in that zone.  Multiple --zz _z
            option and argument pairs may be specified to form a list of named
            zones.  Any open file of any process in any of the zones will be
            listed, subject to other conditions specified by other options and
            arguments.

       --ZZ _[_Z_]
            specifies how SELinux security contexts are to be handled.  It and
            'Z' field output character support are inhibited when SELinux is
            disabled in the running Linux kernel.  See OOUUTTPPUUTT FFOORR OOTTHHEERR
            PPRROOGGRRAAMMSS for more information on the 'Z' field output character.

            Without a following argument - e.g., NO _Z - the option specifies
            that security contexts are to be listed in the SECURITY-CONTEXT
            output column.

            The --ZZ option may be followed by a wildcard security context name,
            ZZ_.  That causes lsof to list only open files for processes in that
            security context.  Multiple --ZZ _Z option and argument pairs may be
            specified to form a list of security contexts.  Any open file of
            any process in any of the security contexts will be listed,
            subject to other conditions specified by other options and
            arguments.  Note that _Z can be A:B:C or *:B:C or A:B:* or *:*:C to
            match against the A:B:C context.

       ----   The double minus sign option is a marker that signals the end of
            the keyed options.  It may be used, for example, when the first
            file name begins with a minus sign.  It may also be used when the
            absence of a value for the last keyed option must be signified by
            the presence of a minus sign in the following option and before
            the start of the file names.

       _n_a_m_e_s
            These are path names of specific files to list.  Symbolic links
            are resolved before use.  The first name may be separated from the
            preceding options with the ``--'' option.

            If a _n_a_m_e is the mounted-on directory of a file system or the
            device of the file system, _l_s_o_f will list all the files open on
            the file system.  To be considered a file system, the _n_a_m_e must
            match a mounted-on directory name in _m_o_u_n_t(8) output, or match the
            name of a block device associated with a mounted-on directory
            name.  The ++||--ff option may be used to force _l_s_o_f to consider a
            _n_a_m_e a file system identifier (++ff) or a simple file (--ff).

            If _n_a_m_e is a path to a directory that is not the mounted-on
            directory name of a file system, it is treated just as a regular
            file is treated - i.e., its listing is restricted to processes
            that have it open as a file or as a process-specific directory,
            such as the root or current working directory.  To request that
            _l_s_o_f look for open files inside a directory name, use the ++dd _s and
            ++DD _D options.

            If a _n_a_m_e is the base name of a family of multiplexed files - e.g,
            AIX's _/_d_e_v_/_p_t_[_c_s_] - _l_s_o_f will list all the associated multiplexed
            files on the device that are open - e.g., _/_d_e_v_/_p_t_[_c_s_]_/_1,
            _/_d_e_v_/_p_t_[_c_s_]_/_2, etc.

            If a _n_a_m_e is a UNIX domain socket name, _l_s_o_f will usually search
            for it by the characters of the name alone - exactly as it is
            specified and is recorded in the kernel socket structure.  (See
            the next paragraph for an exception to that rule for Linux.)
            Specifying a relative path - e.g., _._/_f_i_l_e - in place of the file's
            absolute path - e.g., _/_t_m_p_/_f_i_l_e - won't work because _l_s_o_f must
            match the characters you specify with what it finds in the kernel
            UNIX domain socket structures.

            If a _n_a_m_e is a Linux UNIX domain socket name, in one case _l_s_o_f is
            able to search for it by its device and inode number, allowing
            _n_a_m_e to be a relative path.  The case requires that the absolute
            path -- i.e., one beginning with a slash ('/') be used by the
            process that created the socket, and hence be stored in the
            _/_p_r_o_c_/_n_e_t_/_u_n_i_x file; and it requires that _l_s_o_f be able to obtain
            the device and node numbers of both the absolute path in
            _/_p_r_o_c_/_n_e_t_/_u_n_i_x and _n_a_m_e via successful _s_t_a_t(2) system calls.  When
            those conditions are met, _l_s_o_f will be able to search for the UNIX
            domain socket when some path to it is is specified in _n_a_m_e.  Thus,
            for example, if the path is _/_d_e_v_/_l_o_g, and an _l_s_o_f search is
            initiated when the working directory is _/_d_e_v, then _n_a_m_e could be
            _._/_l_o_g.

            If a _n_a_m_e is none of the above, _l_s_o_f will list any open files
            whose device and inode match that of the specified path _n_a_m_e.

            If you have also specified the --bb option, the only _n_a_m_e_s you may
            safely specify are file systems for which your mount table
            supplies alternate device numbers.  See the AAVVOOIIDDIINNGG KKEERRNNEELL BBLLOOCCKKSS
            and AALLTTEERRNNAATTEE DDEEVVIICCEE NNUUMMBBEERRSS sections for more information.

            Multiple file names are joined in a single ORed set before
            participating in AND option selection.

AAFFSS
       _L_s_o_f supports the recognition of AFS files for these dialects (and AFS
       versions):

            AIX 4.1.4 (AFS 3.4a)
            HP-UX 9.0.5 (AFS 3.4a)
            Linux 1.2.13 (AFS 3.3)
            Solaris 2.[56] (AFS 3.4a)

       It may recognize AFS files on other versions of these dialects, but has
       not been tested there.  Depending on how AFS is implemented, _l_s_o_f may
       recognize AFS files in other dialects, or may have difficulties
       recognizing AFS files in the supported dialects.

       _L_s_o_f may have trouble identifying all aspects of AFS files in supported
       dialects when AFS kernel support is implemented via dynamic modules
       whose addresses do not appear in the kernel's variable name list.  In
       that case, _l_s_o_f may have to guess at the identity of AFS files, and
       might not be able to obtain volume information from the kernel that is
       needed for calculating AFS volume node numbers.  When _l_s_o_f can't
       compute volume node numbers, it reports blank in the NODE column.

       The --AA _A option is available in some dialect implementations of _l_s_o_f
       for specifying the name list file where dynamic module kernel addresses
       may be found.  When this option is available, it will be listed in the
       _l_s_o_f help output, presented in response to the --hh or --??

       See the _l_s_o_f FAQ (The FFAAQQ section gives its location.)  for more
       information about dynamic modules, their symbols, and how they affect
       _l_s_o_f options.

       Because AFS path lookups don't seem to participate in the kernel's name
       cache operations, _l_s_o_f can't identify path name components for AFS
       files.

SSEECCUURRIITTYY
       _L_s_o_f has three features that may cause security concerns.  First, its
       default compilation mode allows anyone to list all open files with it.
       Second, by default it creates a user-readable and user-writable device
       cache file in the home directory of the real user ID that executes
       _l_s_o_f.  (The list-all-open-files and device cache features may be
       disabled when _l_s_o_f is compiled.)  Third, its --kk and --mm options name
       alternate kernel name list or memory files.

       Restricting the listing of all open files is controlled by the
       compile-time HASSECURITY and HASNOSOCKSECURITY options.  When
       HASSECURITY is defined, _l_s_o_f will allow only the root user to list all
       open files.  The non-root user may list only open files of processes
       with the same user IDentification number as the real user ID number of
       the _l_s_o_f process (the one that its user logged on with).

       However, if HASSECURITY and HASNOSOCKSECURITY are both defined, anyone
       may list open socket files, provided they are selected with the --ii
       option.

       When HASSECURITY is not defined, anyone may list all open files.

       Help output, presented in response to the --hh or --??  option, gives the
       status of the HASSECURITY and HASNOSOCKSECURITY definitions.

       See the SSeeccuurriittyy section of the _0_0_R_E_A_D_M_E file of the _l_s_o_f distribution
       for information on building _l_s_o_f with the HASSECURITY and
       HASNOSOCKSECURITY options enabled.

       Creation and use of a user-readable and user-writable device cache file
       is controlled by the compile-time HASDCACHE option.  See the DDEEVVIICCEE
       CCAACCHHEE FFIILLEE section and the sections that follow it for details on how
       its path is formed.  For security considerations it is important to
       note that in the default _l_s_o_f distribution, if the real user ID under
       which _l_s_o_f is executed is root, the device cache file will be written
       in root's home directory - e.g., _/ or _/_r_o_o_t.  When HASDCACHE is not
       defined, _l_s_o_f does not write or attempt to read a device cache file.

       When HASDCACHE is defined, the _l_s_o_f help output, presented in response
       to the --hh, --DD??, or --??  options, will provide device cache file handling
       information.  When HASDCACHE is not defined, the --hh or --??  output will
       have no --DD option description.

       Before you decide to disable the device cache file feature - enabling
       it improves the performance of _l_s_o_f by reducing the startup overhead of
       examining all the nodes in _/_d_e_v (or _/_d_e_v_i_c_e_s) - read the discussion of
       it in the _0_0_D_C_A_C_H_E file of the _l_s_o_f distribution and the _l_s_o_f FAQ (The
       FFAAQQ section gives its location.)

       WHEN IN DOUBT, YOU CAN TEMPORARILY DISABLE THE USE OF THE DEVICE CACHE
       FILE WITH THE --DDii OPTION.

       When _l_s_o_f user declares alternate kernel name list or memory files with
       the --kk and --mm options, _l_s_o_f checks the user's authority to read them
       with _a_c_c_e_s_s(2).  This is intended to prevent whatever special power
       _l_s_o_f_'_s modes might confer on it from letting it read files not normally
       accessible via the authority of the real user ID.

OOUUTTPPUUTT
       This section describes the information _l_s_o_f lists for each open file.
       See the OOUUTTPPUUTT FFOORR OOTTHHEERR PPRROOGGRRAAMMSS section for additional information on
       output that can be processed by another program.

       _L_s_o_f only outputs printable (declared so by _i_s_p_r_i_n_t(3)) 8 bit
       characters.  Non-printable characters are printed in one of three
       forms: the C ``\[bfrnt]'' form; the control character `^' form (e.g.,
       ``^@''); or hexadecimal leading ``\x'' form (e.g., ``\xab'').  Space is
       non-printable in the COMMAND column (``\x20'') and printable elsewhere.

       For some dialects - if HASSETLOCALE is defined in the dialect's
       machine.h header file - _l_s_o_f will print the extended 8 bit characters
       of a language locale.  The _l_s_o_f process must be supplied a language
       locale environment variable (e.g., LANG) whose value represents a known
       language locale in which the extended characters are considered
       printable by _i_s_p_r_i_n_t(3).  Otherwise _l_s_o_f considers the extended
       characters non-printable and prints them according to its rules for
       non-printable characters, stated above.  Consult your dialect's
       _s_e_t_l_o_c_a_l_e(3) man page for the names of other environment variables that
       may be used in place of LANG - e.g., LC_ALL, LC_CTYPE, etc.

       _L_s_o_f_'_s language locale support for a dialect also covers wide
       characters - e.g., UTF-8 - when HASSETLOCALE and HASWIDECHAR are
       defined in the dialect's machine.h header file, and when a suitable
       language locale has been defined in the appropriate environment
       variable for the _l_s_o_f process.  Wide characters are printable under
       those conditions if _i_s_w_p_r_i_n_t(3) reports them to be.  If HASSETLOCALE,
       HASWIDECHAR and a suitable language locale aren't defined, or if
       _i_s_w_p_r_i_n_t(3) reports wide characters that aren't printable, _l_s_o_f
       considers the wide characters non-printable and prints each of their 8
       bits according to its rules for non-printable characters, stated above.

       Consult the answers to the ""Language locale support"" questions in the
       lsof FAQ (The FFAAQQ section gives its location.) for more information.

       _L_s_o_f dynamically sizes the output columns each time it runs,
       guaranteeing that each column is a minimum size.  It also guarantees
       that each column is separated from its predecessor by at least one
       space.

       COMMAND
              contains the first nine characters of the name of the UNIX
              command associated with the process.  If a non-zero _w value is
              specified to the ++cc _w option, the column contains the first _w
              characters of the name of the UNIX command associated with the
              process up to the limit of characters supplied to _l_s_o_f by the
              UNIX dialect.  (See the description of the ++cc _w command or the
              _l_s_o_f FAQ for more information.  The FFAAQQ section gives its
              location.)

              If _w is less than the length of the column title, ``COMMAND'',
              it will be raised to that length.

              If a zero _w value is specified to the ++cc _w option, the column
              contains all the characters of the name of the UNIX command
              associated with the process.

              All command name characters maintained by the kernel in its
              structures are displayed in field output when the command name
              descriptor (`c') is specified.  See the OOUUTTPPUUTT FFOORR OOTTHHEERR
              CCOOMMMMAANNDDSS section for information on selecting field output and
              the associated command name descriptor.

       PID    is the Process IDentification number of the process.

       TID    is the task (thread) IDentification number, if task (thread)
              reporting is supported by the dialect and a task (thread) is
              being listed.  (If help output - i.e., the output of the --hh or
              --??  options - shows this option, then task (thread) reporting is
              supported by the dialect.)

              A blank TID column in Linux indicates a process - i.e., a
              non-task.

       TASKCMD
              is the task command name.  Generally this will be the same as
              the process named in the COMMAND column, but some task
              implementations (e.g., Linux) permit a task to change its
              command name.

              The TASKCMD column width is subject to the same size limitation
              as the COMMAND column.

       ZONE   is the Solaris 10 and higher zone name.  This column must be
              selected with the --zz option.

       SECURITY-CONTEXT
              is the SELinux security context.  This column must be selected
              with the --ZZ option.  Note that the --ZZ option is inhibited when
              SELinux is disabled in the running Linux kernel.

       PPID   is the Parent Process IDentification number of the process.  It
              is only displayed when the --RR option has been specified.

       PGID   is the process group IDentification number associated with the
              process.  It is only displayed when the --gg option has been
              specified.

       USER   is the user ID number or login name of the user to whom the
              process belongs, usually the same as reported by _p_s(1).
              However, on Linux USER is the user ID number or login that owns
              the directory in /proc where _l_s_o_f finds information about the
              process.  Usually that is the same value reported by _p_s(1), but
              may differ when the process has changed its effective user ID.
              (See the --ll option description for information on when a user ID
              number or login name is displayed.)

       FD     is the File Descriptor number of the file or:

                   ccwwdd  current working directory;
                   LL_n_n  library references (AIX);
                   eerrrr  FD information error (see NAME column);
                   jjlldd  jail directory (FreeBSD);
                   llttxx  shared library text (code and data);
                   MMxxxx  hex memory-mapped type number xx.
                   mm8866  DOS Merge mapped file;
                   mmeemm  memory-mapped file;
                   mmmmaapp memory-mapped device;
                   ppdd   parent directory;
                   rrttdd  root directory;
                   ttrr   kernel trace file (OpenBSD);
                   ttxxtt  program text (code and data);
                   vv8866  VP/ix mapped file;

              FD is followed by one of these characters, describing the mode
              under which the file is open:

                   rr for read access;
                   ww for write access;
                   uu for read and write access;
                   space if mode unknown and no lock
                        character follows;
                   `-' if mode unknown and lock
                        character follows.

              The mode character is followed by one of these lock characters,
              describing the type of lock applied to the file:

                   NN for a Solaris NFS lock of unknown type;
                   rr for read lock on part of the file;
                   RR for a read lock on the entire file;
                   ww for a write lock on part of the file;
                   WW for a write lock on the entire file;
                   uu for a read and write lock of any length;
                   UU for a lock of unknown type;
                   xx for an SCO OpenServer Xenix lock on part   of the file;
                   XX for an SCO OpenServer Xenix lock on the entire file;
                   space if there is no lock.

              See the LLOOCCKKSS section for more information on the lock
              information character.

              The FD column contents constitutes a single field for parsing in
              post-processing scripts.

       TYPE   is the type of the node associated with the file - e.g., GDIR,
              GREG, VDIR, VREG, etc.

              or ``IPv4'' for an IPv4 socket;

              or ``IPv6'' for an open IPv6 network file - even if its address
              is IPv4, mapped in an IPv6 address;

              or ``ax25'' for a Linux AX.25 socket;

              or ``inet'' for an Internet domain socket;

              or ``lla'' for a HP-UX link level access file;

              or ``rte'' for an AF_ROUTE socket;

              or ``sock'' for a socket of unknown domain;

              or ``unix'' for a UNIX domain socket;

              or ``x.25'' for an HP-UX x.25 socket;

              or ``BLK'' for a block special file;

              or ``CHR'' for a character special file;

              or ``DEL'' for a Linux map file that has been deleted;

              or ``DIR'' for a directory;

              or ``DOOR'' for a VDOOR file;

              or ``FIFO'' for a FIFO special file;

              or ``KQUEUE'' for a BSD style kernel event queue file;

              or ``LINK'' for a symbolic link file;

              or ``MPB'' for a multiplexed block file;

              or ``MPC'' for a multiplexed character file;

              or ``NOFD'' for a Linux /proc/<PID>/fd directory that can't be
              opened -- the directory path appears in the NAME column,
              followed by an error message;

              or ``PAS'' for a _/_p_r_o_c_/_a_s file;

              or ``PAXV'' for a _/_p_r_o_c_/_a_u_x_v file;

              or ``PCRE'' for a _/_p_r_o_c_/_c_r_e_d file;

              or ``PCTL'' for a _/_p_r_o_c control file;

              or ``PCUR'' for the current _/_p_r_o_c process;

              or ``PCWD'' for a _/_p_r_o_c current working directory;

              or ``PDIR'' for a _/_p_r_o_c directory;

              or ``PETY'' for a _/_p_r_o_c executable type (_e_t_y_p_e);

              or ``PFD'' for a _/_p_r_o_c file descriptor;

              or ``PFDR'' for a _/_p_r_o_c file descriptor directory;

              or ``PFIL'' for an executable _/_p_r_o_c file;

              or ``PFPR'' for a _/_p_r_o_c FP register set;

              or ``PGD'' for a _/_p_r_o_c_/_p_a_g_e_d_a_t_a file;

              or ``PGID'' for a _/_p_r_o_c group notifier file;

              or ``PIPE'' for pipes;

              or ``PLC'' for a _/_p_r_o_c_/_l_w_p_c_t_l file;

              or ``PLDR'' for a _/_p_r_o_c_/_l_p_w directory;

              or ``PLDT'' for a _/_p_r_o_c_/_l_d_t file;

              or ``PLPI'' for a _/_p_r_o_c_/_l_p_s_i_n_f_o file;

              or ``PLST'' for a _/_p_r_o_c_/_l_s_t_a_t_u_s file;

              or ``PLU'' for a _/_p_r_o_c_/_l_u_s_a_g_e file;

              or ``PLWG'' for a _/_p_r_o_c_/_g_w_i_n_d_o_w_s file;

              or ``PLWI'' for a _/_p_r_o_c_/_l_w_p_s_i_n_f_o file;

              or ``PLWS'' for a _/_p_r_o_c_/_l_w_p_s_t_a_t_u_s file;

              or ``PLWU'' for a _/_p_r_o_c_/_l_w_p_u_s_a_g_e file;

              or ``PLWX'' for a _/_p_r_o_c_/_x_r_e_g_s file;

              or ``PMAP'' for a _/_p_r_o_c map file (_m_a_p);

              or ``PMEM'' for a _/_p_r_o_c memory image file;

              or ``PNTF'' for a _/_p_r_o_c process notifier file;

              or ``POBJ'' for a _/_p_r_o_c_/_o_b_j_e_c_t file;

              or ``PODR'' for a _/_p_r_o_c_/_o_b_j_e_c_t directory;

              or ``POLP'' for an old format _/_p_r_o_c light weight process file;

              or ``POPF'' for an old format _/_p_r_o_c PID file;

              or ``POPG'' for an old format _/_p_r_o_c page data file;

              or ``PORT'' for a SYSV named pipe;

              or ``PREG'' for a _/_p_r_o_c register file;

              or ``PRMP'' for a _/_p_r_o_c_/_r_m_a_p file;

              or ``PRTD'' for a _/_p_r_o_c root directory;

              or ``PSGA'' for a _/_p_r_o_c_/_s_i_g_a_c_t file;

              or ``PSIN'' for a _/_p_r_o_c_/_p_s_i_n_f_o file;

              or ``PSTA'' for a _/_p_r_o_c status file;

              or ``PSXSEM'' for a POSIX semaphore file;

              or ``PSXSHM'' for a POSIX shared memory file;

              or ``PTS'' for a _/_d_e_v_/_p_t_s file;

              or ``PUSG'' for a _/_p_r_o_c_/_u_s_a_g_e file;

              or ``PW'' for a _/_p_r_o_c_/_w_a_t_c_h file;

              or ``PXMP'' for a _/_p_r_o_c_/_x_m_a_p file;

              or ``REG'' for a regular file;

              or ``SMT'' for a shared memory transport file;

              or ``STSO'' for a stream socket;

              or ``UNNM'' for an unnamed type file;

              or ``XNAM'' for an OpenServer Xenix special file of unknown
              type;

              or ``XSEM'' for an OpenServer Xenix semaphore file;

              or ``XSD'' for an OpenServer Xenix shared data file;

              or the four type number octets if the corresponding name isn't
              known.

       FILE-ADDR
              contains the kernel file structure address when ff has been
              specified to ++ff;

       FCT    contains the file reference count from the kernel file structure
              when cc has been specified to ++ff;

       FILE-FLAG
              when gg or GG has been specified to ++ff, this field contains the
              contents of the f_flag[s] member of the kernel file structure
              and the kernel's per-process open file flags (if available); `G'
              causes them to be displayed in hexadecimal; `g', as short-hand
              names; two lists may be displayed with entries separated by
              commas, the lists separated by a semicolon (`;'); the first list
              may contain short-hand names for f_flag[s] values from the
              following table:

                   AIO       asynchronous I/O (e.g., FAIO)
                   AP        append
                   ASYN      asynchronous I/O (e.g., FASYNC)
                   BAS       block, test, and set in use
                   BKIU      block if in use
                   BL        use block offsets
                   BSK       block seek
                   CA        copy avoid
                   CIO       concurrent I/O
                   CLON      clone
                   CLRD      CL read
                   CR        create
                   DF        defer
                   DFI       defer IND
                   DFLU      data flush
                   DIR       direct
                   DLY       delay
                   DOCL      do clone
                   DSYN      data-only integrity
                   DTY       must be a directory
                   EVO       event only
                   EX        open for exec
                   EXCL      exclusive open
                   FSYN      synchronous writes
                   GCDF      defer during unp_gc() (AIX)
                   GCMK      mark during unp_gc() (AIX)
                   GTTY      accessed via /dev/tty
                   HUP       HUP in progress
                   KERN      kernel
                   KIOC      kernel-issued ioctl
                   LCK       has lock
                   LG        large file
                   MBLK      stream message block
                   MK        mark
                   MNT       mount
                   MSYN      multiplex synchronization
                   NATM      don't update atime
                   NB        non-blocking I/O
                   NBDR      no BDRM check
                   NBIO      SYSV non-blocking I/O
                   NBF       n-buffering in effect
                   NC        no cache
                   ND        no delay
                   NDSY      no data synchronization
                   NET       network
                   NFLK      don't follow links
                   NMFS      NM file system
                   NOTO      disable background stop
                   NSH       no share
                   NTTY      no controlling TTY
                   OLRM      OLR mirror
                   PAIO      POSIX asynchronous I/O
                   PP        POSIX pipe
                   R         read
                   RC        file and record locking cache
                   REV       revoked
                   RSH       shared read
                   RSYN      read synchronization
                   RW        read and write access
                   SL        shared lock
                   SNAP      cooked snapshot
                   SOCK      socket
                   SQSH      Sequent shared set on open
                   SQSV      Sequent SVM set on open
                   SQR       Sequent set repair on open
                   SQS1      Sequent full shared open
                   SQS2      Sequent partial shared open
                   STPI      stop I/O
                   SWR       synchronous read
                   SYN       file integrity while writing
                   TCPM      avoid TCP collision
                   TR        truncate
                   W         write
                   WKUP      parallel I/O synchronization
                   WTG       parallel I/O synchronization
                   VH        vhangup pending
                   VTXT      virtual text
                   XL        exclusive lock

              this list of names was derived from F* #define's in dialect
              header files <fcntl.h>, <linux</fs.h>, <sys/fcntl.c>,
              <sys/fcntlcom.h>, and <sys/file.h>; see the lsof.h header file
              for a list showing the correspondence between the above
              short-hand names and the header file definitions;

              the second list (after the semicolon) may contain short-hand
              names for kernel per-process open file flags from this table:

                   ALLC      allocated
                   BR        the file has been read
                   BHUP      activity stopped by SIGHUP
                   BW        the file has been written
                   CLSG      closing
                   CX        close-on-exec (see fcntl(F_SETFD))
                   LCK       lock was applied
                   MP        memory-mapped
                   OPIP      open pending - in progress
                   RSVW      reserved wait
                   SHMT      UF_FSHMAT set (AIX)
                   USE       in use (multi-threaded)

       NODE-ID
              (or INODE-ADDR for some dialects) contains a unique identifier
              for the file node (usually the kernel vnode or inode address,
              but also occasionally a concatenation of device and node number)
              when nn has been specified to ++ff;

       DEVICE contains the device numbers, separated by commas, for a
              character special, block special, regular, directory or NFS
              file;

              or ``memory'' for a memory file system node under Tru64 UNIX;

              or the address of the private data area of a Solaris socket
              stream;

              or a kernel reference address that identifies the file (The
              kernel reference address may be used for FIFO's, for example.);

              or the base address or device name of a Linux AX.25 socket
              device.

              Usually only the lower thirty two bits of Tru64 UNIX kernel
              addresses are displayed.

       SIZE, SIZE/OFF, or OFFSET
              is the size of the file or the file offset in bytes.  A value is
              displayed in this column only if it is available.  _L_s_o_f displays
              whatever value - size or offset - is appropriate for the type of
              the file and the version of _l_s_o_f.

              On some UNIX dialects _l_s_o_f can't obtain accurate or consistent
              file offset information from its kernel data sources, sometimes
              just for particular kinds of files (e.g., socket files.)  In
              other cases, files don't have true sizes - e.g., sockets, FIFOs,
              pipes - so _l_s_o_f displays for their sizes the content amounts it
              finds in their kernel buffer descriptors (e.g., socket buffer
              size counts or TCP/IP window sizes.)  Consult the _l_s_o_f FAQ (The
              FFAAQQ section gives its location.)  for more information.

              The file size is displayed in decimal; the offset is normally
              displayed in decimal with a leading ``0t'' if it contains 8
              digits or less; in hexadecimal with a leading ``0x'' if it is
              longer than 8 digits.  (Consult the --oo _o option description for
              information on when 8 might default to some other value.)

              Thus the leading ``0t'' and ``0x'' identify an offset when the
              column may contain both a size and an offset (i.e., its title is
              SIZE/OFF).

              If the --oo option is specified, _l_s_o_f always displays the file
              offset (or nothing if no offset is available) and labels the
              column OFFSET.  The offset always begins with ``0t'' or ``0x''
              as described above.

              The _l_s_o_f user can control the switch from ``0t'' to ``0x'' with
              the --oo _o option.  Consult its description for more information.

              If the --ss option is specified, _l_s_o_f always displays the file
              size (or nothing if no size is available) and labels the column
              SIZE.  The --oo and --ss options are mutually exclusive; they can't
              both be specified.

              For files that don't have a fixed size - e.g., don't reside on a
              disk device - _l_s_o_f will display appropriate information about
              the current size or position of the file if it is available in
              the kernel structures that define the file.

       NLINK  contains the file link count when ++LL has been specified;

       NODE   is the node number of a local file;

              or the inode number of an NFS file in the server host;

              or the Internet protocol type - e.g, ``TCP'';

              or ``STR'' for a stream;

              or ``CCITT'' for an HP-UX x.25 socket;

              or the IRQ or inode number of a Linux AX.25 socket device.

       NAME   is the name of the mount point and file system on which the file
              resides;

              or the name of a file specified in the _n_a_m_e_s option (after any
              symbolic links have been resolved);

              or the name of a character special or block special device;

              or the local and remote Internet addresses of a network file;
              the local host name or IP number is followed by a colon (':'),
              the port, ``->'', and the two-part remote address; IP addresses
              may be reported as numbers or names, depending on the ++||--MM, --nn,
              and --PP options; colon-separated IPv6 numbers are enclosed in
              square brackets; IPv4 INADDR_ANY and IPv6
              IN6_IS_ADDR_UNSPECIFIED addresses, and zero port numbers are
              represented by an asterisk ('*'); a UDP destination address may
              be followed by the amount of time elapsed since the last packet
              was sent to the destination; TCP, UDP and UDPLITE remote
              addresses may be followed by TCP/TPI information in parentheses
              - state (e.g., ``(ESTABLISHED)'', ``(Unbound)''), queue sizes,
              and window sizes (not all dialects) - in a fashion similar to
              what _n_e_t_s_t_a_t(1) reports; see the --TT option description or the
              description of the TCP/TPI field in OOUUTTPPUUTT FFOORR OOTTHHEERR PPRROOGGRRAAMMSS
              for more information on state, queue size, and window size;

              or the address or name of a UNIX domain socket, possibly
              including a stream clone device name, a file system object's
              path name, local and foreign kernel addresses, socket pair
              information, and a bound vnode address;

              or the local and remote mount point names of an NFS file;

              or ``STR'', followed by the stream name;

              or a stream character device name, followed by ``->'' and the
              stream name or a list of stream module names, separated by
              ``->'';

              or ``STR:'' followed by the SCO OpenServer stream device and
              module names, separated by ``->'';

              or system directory name, `` -- '', and as many components of
              the path name as _l_s_o_f can find in the kernel's name cache for
              selected dialects (See the KKEERRNNEELL NNAAMMEE CCAACCHHEE section for more
              information.);

              or ``PIPE->'', followed by a Solaris kernel pipe destination
              address;

              or ``COMMON:'', followed by the vnode device information
              structure's device name, for a Solaris common vnode;

              or the address family, followed by a slash (`/'), followed by
              fourteen comma-separated bytes of a non-Internet raw socket
              address;

              or the HP-UX x.25 local address, followed by the virtual
              connection number (if any), followed by the remote address (if
              any);

              or ``(dead)'' for disassociated Tru64 UNIX files - typically
              terminal files that have been flagged with the TIOCNOTTY ioctl
              and closed by daemons;

              or ``rd=<offset>'' and ``wr=<offset>'' for the values of the
              read and write offsets of a FIFO;

              or ``clone _n:/dev/event'' for SCO OpenServer file clones of the
              _/_d_e_v_/_e_v_e_n_t device, where _n is the minor device number of the
              file;

              or ``(socketpair: n)'' for a Solaris 2.6, 8, 9  or 10 UNIX
              domain socket, created by the _s_o_c_k_e_t_p_a_i_r(3N) network function;

              or ``no PCB'' for socket files that do not have a protocol block
              associated with them, optionally followed by ``, CANTSENDMORE''
              if sending on the socket has been disabled, or ``, CANTRCVMORE''
              if receiving on the socket has been disabled (e.g., by the
              _s_h_u_t_d_o_w_n(2) function);

              or the local and remote addresses of a Linux IPX socket file in
              the form <net>:[<node>:]<port>, followed in parentheses by the
              transmit and receive queue sizes, and the connection state;

              or ``dgram'' or ``stream'' for the type UnixWare 7.1.1 and above
              in-kernel UNIX domain sockets, followed by a colon (':') and the
              local path name when available, followed by ``->'' and the
              remote path name or kernel socket address in hexadecimal when
              available;

              or the association value, association index, endpoint value,
              local address, local port, remote address and remote port for
              Linux SCTP sockets;

              or ``protocol: '' followed by the Linux socket's protocol
              attribute.

       For dialects that support a ``namefs'' file system, allowing one file
       to be attached to another with _f_a_t_t_a_c_h(3C), _l_s_o_f will add
       ``(FA:<address1><direction><address2>)'' to the NAME column.
       <address1> and <address2> are hexadecimal vnode addresses.  <direction>
       will be ``<-'' if <address2> has been fattach'ed to this vnode whose
       address is <address1>; and ``->'' if <address1>, the vnode address of
       this vnode, has been fattach'ed to <address2>.  <address1> may be
       omitted if it already appears in the DEVICE column.

       _L_s_o_f may add two parenthetical notes to the NAME column for open
       Solaris 10 files: ``(?)'' if _l_s_o_f considers the path name of
       questionable accuracy; and ``(deleted)'' if the --XX option has been
       specified and _l_s_o_f detects the open file's path name has been deleted.
       Consult the _l_s_o_f FAQ (The FFAAQQ section gives its location.)  for more
       information on these NAME column additions.

LLOOCCKKSS
       _L_s_o_f can't adequately report the wide variety of UNIX dialect file
       locks in a single character.  What it reports in a single character is
       a compromise between the information it finds in the kernel and the
       limitations of the reporting format.

       Moreover, when a process holds several byte level locks on a file, _l_s_o_f
       only reports the status of the first lock it encounters.  If it is a
       byte level lock, then the lock character will be reported in lower case
       - i.e., `r', `w', or `x' - rather than the upper case equivalent
       reported for a full file lock.

       Generally _l_s_o_f can only report on locks held by local processes on
       local files.  When a local process sets a lock on a remotely mounted
       (e.g., NFS) file, the remote server host usually records the lock
       state.  One exception is Solaris - at some patch levels of 2.3, and in
       all versions above 2.4, the Solaris kernel records information on
       remote locks in local structures.

       _L_s_o_f has trouble reporting locks for some UNIX dialects.  Consult the
       BBUUGGSS section of this manual page or the _l_s_o_f FAQ (The FFAAQQ section gives
       its location.)  for more information.

OOUUTTPPUUTT FFOORR OOTTHHEERR PPRROOGGRRAAMMSS
       When the --FF option is specified, _l_s_o_f produces output that is suitable
       for processing by another program - e.g, an _a_w_k or _P_e_r_l script, or a C
       program.

       Each unit of information is output in a field that is identified with a
       leading character and terminated by a NL (012) (or a NUL (000) if the 0
       (zero) field identifier character is specified.)  The data of the field
       follows immediately after the field identification character and
       extends to the field terminator.

       It is possible to think of field output as process and file sets.  A
       process set begins with a field whose identifier is `p' (for process
       IDentifier (PID)).  It extends to the beginning of the next PID field
       or the beginning of the first file set of the process, whichever comes
       first.  Included in the process set are fields that identify the
       command, the process group IDentification (PGID) number, the task
       (thread) ID (TID), and the user ID (UID) number or login name.

       A file set begins with a field whose identifier is `f' (for file
       descriptor).  It is followed by lines that describe the file's access
       mode, lock state, type, device, size, offset, inode, protocol, name and
       stream module names.  It extends to the beginning of the next file or
       process set, whichever comes first.

       When the NUL (000) field terminator has been selected with the 0 (zero)
       field identifier character, _l_s_o_f ends each process and file set with a
       NL (012) character.

       _L_s_o_f always produces one field, the PID (`p') field.  All other fields
       may be declared optionally in the field identifier character list that
       follows the --FF option.  When a field selection character identifies an
       item _l_s_o_f does not normally list - e.g., PPID, selected with --RR -
       specification of the field character - e.g., ``--FFRR'' - also selects the
       listing of the item.

       It is entirely possible to select a set of fields that cannot easily be
       parsed - e.g., if the field descriptor field is not selected, it may be
       difficult to identify file sets.  To help you avoid this difficulty,
       _l_s_o_f supports the --FF option; it selects the output of all fields with
       NL terminators (the --FF00 option pair selects the output of all fields
       with NUL terminators).  For compatibility reasons neither --FF nor --FF00
       select the raw device field.

       These are the fields that _l_s_o_f will produce.  The single character
       listed first is the field identifier.

            a    file access mode
            c    process command name (all characters from proc or
                 user structure)
            C    file structure share count
            d    file's device character code
            D    file's major/minor device number (0x<hexadecimal>)
            f    file descriptor (always selected)
            F    file structure address (0x<hexadecimal>)
            G    file flaGs (0x<hexadecimal>; names if ++ffgg follows)
            g    process group ID
            i    file's inode number
            K    tasK ID
            k    link count
            l    file's lock status
            L    process login name
            m    marker between repeated output
            M    the task comMand name
            n    file name, comment, Internet address
            N    node identifier (ox<hexadecimal>
            o    file's offset (decimal)
            p    process ID (always selected)
            P    protocol name
            r    raw device number (0x<hexadecimal>)
            R    parent process ID
            s    file's size (decimal)
            S    file's stream identification
            t    file's type
            T    TCP/TPI information, identified by prefixes (the
                 `=' is part of the prefix):
                     QR=<read queue size>
                     QS=<send queue size>
                     SO=<socket options and values> (not all dialects)
                     SS=<socket states> (not all dialects)
                     ST=<connection state>
                     TF=<TCP flags and values> (not all dialects)
                     WR=<window read size>  (not all dialects)
                     WW=<window write size>  (not all dialects)
                 (TCP/TPI information isn't reported for all supported
                   UNIX dialects. The --hh or --?? help output for the
                   --TT option will show what TCP/TPI reporting can be
                   requested.)
            u    process user ID
            z    Solaris 10 and higher zone name
            Z    SELinux security context (inhibited when SELinux is disabled)
            0    use NUL field terminator character in place of NL
            1-9  dialect-specific field identifiers (The output
                 of --FF?? identifies the information to be found
                 in dialect-specific fields.)

       You can get on-line help information on these characters and their
       descriptions by specifying the --FF??  option pair.  (Escape the `?'
       character as your shell requires.)  Additional information on field
       content can be found in the OOUUTTPPUUTT section.

       As an example, ``--FF ppccffnn'' will select the process ID (`p'), command
       name (`c'), file descriptor (`f') and file name (`n') fields with an NL
       field terminator character; ``--FF ppccffnn00'' selects the same output with a
       NUL (000) field terminator character.

       _L_s_o_f doesn't produce all fields for every process or file set, only
       those that are available.  Some fields are mutually exclusive: file
       device characters and file major/minor device numbers; file inode
       number and protocol name; file name and stream identification; file
       size and offset.  One or the other member of these mutually exclusive
       sets will appear in field output, but not both.

       Normally _l_s_o_f ends each field with a NL (012) character.  The 0 (zero)
       field identifier character may be specified to change the field
       terminator character to a NUL (000).  A NUL terminator may be easier to
       process with _x_a_r_g_s _(_1_)_, for example, or with programs whose quoting
       mechanisms may not easily cope with the range of characters in the
       field output.  When the NUL field terminator is in use, _l_s_o_f ends each
       process and file set with a NL (012).

       Three aids to producing programs that can process _l_s_o_f field output are
       included in the _l_s_o_f distribution.  The first is a C header file,
       _l_s_o_f___f_i_e_l_d_s_._h, that contains symbols for the field identification
       characters, indexes for storing them in a table, and explanation
       strings that may be compiled into programs.  _L_s_o_f uses this header
       file.

       The second aid is a set of sample scripts that process field output,
       written in _a_w_k, _P_e_r_l 4, and _P_e_r_l 5.  They're located in the _s_c_r_i_p_t_s
       subdirectory of the _l_s_o_f distribution.

       The third aid is the C library used for the _l_s_o_f test suite.  The test
       suite is written in C and uses field output to validate the correct
       operation of _l_s_o_f.  The library can be found in the _t_e_s_t_s_/_L_T_l_i_b_._c file
       of the _l_s_o_f distribution.  The library uses the first aid, the
       _l_s_o_f___f_i_e_l_d_s_._h header file.

BBLLOOCCKKSS AANNDD TTIIMMEEOOUUTTSS
       _L_s_o_f can be blocked by some kernel functions that it uses - _l_s_t_a_t(2),
       _r_e_a_d_l_i_n_k(2), and _s_t_a_t(2).  These functions are stalled in the kernel,
       for example, when the hosts where mounted NFS file systems reside
       become inaccessible.

       _L_s_o_f attempts to break these blocks with timers and child processes,
       but the techniques are not wholly reliable.  When _l_s_o_f does manage to
       break a block, it will report the break with an error message.  The
       messages may be suppressed with the --tt and --ww options.

       The default timeout value may be displayed with the --hh or --??  option,
       and it may be changed with the --SS _[_t_] option.  The minimum for _t is two
       seconds, but you should avoid small values, since slow system
       responsiveness can cause short timeouts to expire unexpectedly and
       perhaps stop _l_s_o_f before it can produce any output.

       When _l_s_o_f has to break a block during its access of mounted file system
       information, it normally continues, although with less information
       available to display about open files.

       _L_s_o_f can also be directed to avoid the protection of timers and child
       processes when using the kernel functions that might block by
       specifying the --OO option.  While this will allow _l_s_o_f to start up with
       less overhead, it exposes _l_s_o_f completely to the kernel situations that
       might block it.  Use this option cautiously.

AAVVOOIIDDIINNGG KKEERRNNEELL BBLLOOCCKKSS
       You can use the --bb option to tell _l_s_o_f to avoid using kernel functions
       that would block.  Some cautions apply.

       First, using this option usually requires that your system supply
       alternate device numbers in place of the device numbers that _l_s_o_f would
       normally obtain with the _l_s_t_a_t(2) and _s_t_a_t(2) kernel functions.  See
       the AALLTTEERRNNAATTEE DDEEVVIICCEE NNUUMMBBEERRSS section for more information on alternate
       device numbers.

       Second, you can't specify _n_a_m_e_s for _l_s_o_f to locate unless they're file
       system names.  This is because _l_s_o_f needs to know the device and inode
       numbers of files listed with _n_a_m_e_s in the _l_s_o_f options, and the --bb
       option prevents _l_s_o_f from obtaining them.  Moreover, since _l_s_o_f only
       has device numbers for the file systems that have alternates, its
       ability to locate files on file systems depends completely on the
       availability and accuracy of the alternates.  If no alternates are
       available, or if they're incorrect, _l_s_o_f won't be able to locate files
       on the named file systems.

       Third, if the names of your file system directories that _l_s_o_f obtains
       from your system's mount table are symbolic links, _l_s_o_f won't be able
       to resolve the links.  This is because the --bb option causes _l_s_o_f to
       avoid the kernel _r_e_a_d_l_i_n_k(2) function it uses to resolve symbolic
       links.

       Finally, using the --bb option causes _l_s_o_f to issue warning messages when
       it needs to use the kernel functions that the --bb option directs it to
       avoid.  You can suppress these messages by specifying the --ww option,
       but if you do, you won't see the alternate device numbers reported in
       the warning messages.

AALLTTEERRNNAATTEE DDEEVVIICCEE NNUUMMBBEERRSS
       On some dialects, when _l_s_o_f has to break a block because it can't get
       information about a mounted file system via the _l_s_t_a_t(2) and _s_t_a_t(2)
       kernel functions, or because you specified the --bb option, _l_s_o_f can
       obtain some of the information it needs - the device number and
       possibly the file system type - from the system mount table.  When that
       is possible, _l_s_o_f will report the device number it obtained.  (You can
       suppress the report by specifying the --ww option.)

       You can assist this process if your mount table is supported with an
       _/_e_t_c_/_m_t_a_b or _/_e_t_c_/_m_n_t_t_a_b file that contains an options field by adding
       a ``dev=xxxx'' field for mount points that do not have one in their
       options strings.  Note: you must be able to edit the file - i.e., some
       mount tables like recent Solaris /etc/mnttab or Linux /proc/mounts are
       read-only and can't be modified.

       You may also be able to supply device numbers using the ++mm and ++mm _m
       options, provided they are supported by your dialect.  Check the output
       of _l_s_o_f_'_s --hh or --??  options to see if the ++mm and ++mm _m options are
       available.

       The ``xxxx'' portion of the field is the hexadecimal value of the file
       system's device number.  (Consult the _s_t___d_e_v field of the output of the
       _l_s_t_a_t(2) and _s_t_a_t(2) functions for the appropriate values for your file
       systems.)  Here's an example from a Sun Solaris 2.6 _/_e_t_c_/_m_n_t_t_a_b for a
       file system remotely mounted via NFS:

            nfs  ignore,noquota,dev=2a40001

       There's an advantage to having ``dev=xxxx'' entries in your mount table
       file, especially for file systems that are mounted from remote NFS
       servers.  When a remote server crashes and you want to identify its
       users by running _l_s_o_f on one of its clients, _l_s_o_f probably won't be
       able to get output from the _l_s_t_a_t(2) and _s_t_a_t(2) functions for the file
       system.  If it can obtain the file system's device number from the
       mount table, it will be able to display the files open on the crashed
       NFS server.

       Some dialects that do not use an ASCII _/_e_t_c_/_m_t_a_b or _/_e_t_c_/_m_n_t_t_a_b file
       for the mount table may still provide an alternative device number in
       their internal mount tables.  This includes AIX, Apple Darwin, FreeBSD,
       NetBSD, OpenBSD, and Tru64 UNIX.  _L_s_o_f knows how to obtain the
       alternative device number for these dialects and uses it when its
       attempt to _l_s_t_a_t(2) or _s_t_a_t(2) the file system is blocked.

       If you're not sure your dialect supplies alternate device numbers for
       file systems from its mount table, use this _l_s_o_f incantation to see if
       it reports any alternate device numbers:

              lsof -b

       Look for standard error file warning messages that begin ``assuming
       ""dev=xxxx"" from ...''.

KKEERRNNEELL NNAAMMEE CCAACCHHEE
       _L_s_o_f is able to examine the kernel's name cache or use other kernel
       facilities (e.g., the ADVFS 4.x tag_to_path() function under Tru64
       UNIX) on some dialects for most file system types, excluding AFS, and
       extract recently used path name components from it.  (AFS file system
       path lookups don't use the kernel's name cache; some Solaris VxFS file
       system operations apparently don't use it, either.)

       _L_s_o_f reports the complete paths it finds in the NAME column.  If _l_s_o_f
       can't report all components in a path, it reports in the NAME column
       the file system name, followed by a space, two `-' characters, another
       space, and the name components it has located, separated by the `/'
       character.

       When _l_s_o_f is run in repeat mode - i.e., with the --rr option specified -
       the extent to which it can report path name components for the same
       file may vary from cycle to cycle.  That's because other running
       processes can cause the kernel to remove entries from its name cache
       and replace them with others.

       _L_s_o_f_'_s use of the kernel name cache to identify the paths of files can
       lead it to report incorrect components under some circumstances.  This
       can happen when the kernel name cache uses device and node number as a
       key (e.g., SCO OpenServer) and a key on a rapidly changing file system
       is reused.  If the UNIX dialect's kernel doesn't purge the name cache
       entry for a file when it is unlinked, _l_s_o_f may find a reference to the
       wrong entry in the cache.  The _l_s_o_f FAQ (The FFAAQQ section gives its
       location.)  has more information on this situation.

       _L_s_o_f can report path name components for these dialects:

            FreeBSD
            HP-UX
            Linux
            NetBSD
            NEXTSTEP
            OpenBSD
            OPENSTEP
            SCO OpenServer
            SCO|Caldera UnixWare
            Solaris
            Tru64 UNIX

       _L_s_o_f can't report path name components for these dialects:

            AIX

       If you want to know why _l_s_o_f can't report path name components for some
       dialects, see the _l_s_o_f FAQ (The FFAAQQ section gives its location.)

DDEEVVIICCEE CCAACCHHEE FFIILLEE
       Examining all members of the _/_d_e_v (or _/_d_e_v_i_c_e_s) node tree with _s_t_a_t(2)
       functions can be time consuming.  What's more, the information that
       _l_s_o_f needs - device number, inode number, and path - rarely changes.

       Consequently, _l_s_o_f normally maintains an ASCII text file of cached _/_d_e_v
       (or _/_d_e_v_i_c_e_s) information (exception: the /proc-based Linux _l_s_o_f where
       it's not needed.)  The local system administrator who builds _l_s_o_f can
       control the way the device cache file path is formed, selecting from
       these options:

            Path from the --DD option;
            Path from an environment variable;
            System-wide path;
            Personal path (the default);
            Personal path, modified by an environment variable.

       Consult the output of the --hh, --DD?? ,, or --??  help options for the current
       state of device cache support.  The help output lists the default
       read-mode device cache file path that is in effect for the current
       invocation of _l_s_o_f.  The --DD??  option output lists the read-only and
       write device cache file paths, the names of any applicable environment
       variables, and the personal device cache path format.

       _L_s_o_f can detect that the current device cache file has been
       accidentally or maliciously modified by integrity checks, including the
       computation and verification of a sixteen bit Cyclic Redundancy Check
       (CRC) sum on the file's contents.  When _l_s_o_f senses something wrong
       with the file, it issues a warning and attempts to remove the current
       cache file and create a new copy, but only to a path that the process
       can legitimately write.

       The path from which a _l_s_o_f process may attempt to read a device cache
       file may not be the same as the path to which it can legitimately
       write.  Thus when _l_s_o_f senses that it needs to update the device cache
       file, it may choose a different path for writing it from the path from
       which it read an incorrect or outdated version.

       If available, the --DDrr option will inhibit the writing of a new device
       cache file.  (It's always available when specified without a path name
       argument.)

       When a new device is added to the system, the device cache file may
       need to be recreated.  Since _l_s_o_f compares the mtime of the device
       cache file with the mtime and ctime of the _/_d_e_v (or _/_d_e_v_i_c_e_s)
       directory, it usually detects that a new device has been added; in that
       case _l_s_o_f issues a warning message and attempts to rebuild the device
       cache file.

       Whenever _l_s_o_f writes a device cache file, it sets its ownership to the
       real UID of the executing process, and its permission modes to 0600,
       this restricting its reading and writing to the file's owner.

LLSSOOFF PPEERRMMIISSSSIIOONNSS TTHHAATT AAFFFFEECCTT DDEEVVIICCEE CCAACCHHEE FFIILLEE AACCCCEESSSS
       Two permissions of the _l_s_o_f executable affect its ability to access
       device cache files.  The permissions are set by the local system
       administrator when _l_s_o_f is installed.

       The first and rarer permission is setuid-root.  It comes into effect
       when _l_s_o_f is executed; its effective UID is then root, while its real
       (i.e., that of the logged-on user) UID is not.  The _l_s_o_f distribution
       recommends that versions for these dialects run setuid-root.

            HP-UX 11.11 and 11.23
            Linux

       The second and more common permission is setgid.  It comes into effect
       when the effective group IDentification number (GID) of the _l_s_o_f
       process is set to one that can access kernel memory devices - e.g.,
       ``kmem'', ``sys'', or ``system''.

       An _l_s_o_f process that has setgid permission usually surrenders the
       permission after it has accessed the kernel memory devices.  When it
       does that, _l_s_o_f can allow more liberal device cache path formations.
       The _l_s_o_f distribution recommends that versions for these dialects run
       setgid and be allowed to surrender setgid permission.

            AIX 5.[12] and 5.3-ML1
            Apple Darwin 7.x Power Macintosh systems
            FreeBSD 4.x, 4.1x, 5.x and [6789].x for x86-based systems
            FreeBSD 5.x, [6789].x and 1[012].8for Alpha, AMD64 and Sparc64
                based systems
            HP-UX 11.00
            NetBSD 1.[456], 2.x and 3.x for Alpha, x86, and SPARC-based
                systems
            NEXTSTEP 3.[13] for NEXTSTEP architectures
            OpenBSD 2.[89] and 3.[0-9] for x86-based systems
            OPENSTEP 4.x
            SCO OpenServer Release 5.0.6 for x86-based systems
            SCO|Caldera UnixWare 7.1.4 for x86-based systems
            Solaris 2.6, 8, 9 and 10
            Tru64 UNIX 5.1

       (Note: _l_s_o_f for AIX 5L and above needs setuid-root permission if its --XX
       option is used.)

       _L_s_o_f for these dialects does not support a device cache, so the
       permissions given to the executable don't apply to the device cache
       file.

            Linux

DDEEVVIICCEE CCAACCHHEE FFIILLEE PPAATTHH FFRROOMM TTHHEE --DD OOPPTTIIOONN
       The --DD option provides limited means for specifying the device cache
       file path.  Its ??  function will report the read-only and write device
       cache file paths that _l_s_o_f will use.

       When the --DD bb, rr, and uu functions are available, you can use them to
       request that the cache file be built in a specific location (bb[_p_a_t_h]);
       read but not rebuilt (rr[_p_a_t_h]); or read and rebuilt (uu[_p_a_t_h]).  The bb,
       rr, and uu functions are restricted under some conditions.  They are
       restricted when the _l_s_o_f process is setuid-root.  The path specified
       with the rr function is always read-only, even when it is available.

       The bb, rr, and uu functions are also restricted when the _l_s_o_f process
       runs setgid and _l_s_o_f doesn't surrender the setgid permission.  (See the
       LLSSOOFF PPEERRMMIISSSSIIOONNSS TTHHAATT AAFFFFEECCTT DDEEVVIICCEE CCAACCHHEE FFIILLEE AACCCCEESSSS section for a
       list of implementations that normally don't surrender their setgid
       permission.)

       A further --DD function, ii (for ignore), is always available.

       When available, the bb function tells _l_s_o_f to read device information
       from the kernel with the _s_t_a_t(2) function and build a device cache file
       at the indicated path.

       When available, the rr function tells _l_s_o_f to read the device cache
       file, but not update it.  When a path argument accompanies --DDrr, it
       names the device cache file path.  The rr function is always available
       when it is specified without a path name argument.  If _l_s_o_f is not
       running setuid-root and surrenders its setgid permission, a path name
       argument may accompany the rr function.

       When available, the uu function tells _l_s_o_f to attempt to read and use
       the device cache file.  If it can't read the file, or if it finds the
       contents of the file incorrect or outdated, it will read information
       from the kernel, and attempt to write an updated version of the device
       cache file, but only to a path it considers legitimate for the _l_s_o_f
       process effective and real UIDs.

DDEEVVIICCEE CCAACCHHEE PPAATTHH FFRROOMM AANN EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEE
       _L_s_o_f_'_s second choice for the device cache file is the contents of the
       LSOFDEVCACHE environment variable.  It avoids this choice if the _l_s_o_f
       process is setuid-root, or the real UID of the process is root.

       A further restriction applies to a device cache file path taken from
       the LSOFDEVCACHE environment variable: _l_s_o_f will not write a device
       cache file to the path if the _l_s_o_f process doesn't surrender its setgid
       permission.  (See the LLSSOOFF PPEERRMMIISSSSIIOONNSS TTHHAATT AAFFFFEECCTT DDEEVVIICCEE CCAACCHHEE FFIILLEE
       AACCCCEESSSS section for information on implementations that don't surrender
       their setgid permission.)

       The local system administrator can disable the use of the LSOFDEVCACHE
       environment variable or change its name when building _l_s_o_f.  Consult
       the output of --DD??  for the environment variable's name.

SSYYSSTTEEMM--WWIIDDEE DDEEVVIICCEE CCAACCHHEE PPAATTHH
       The local system administrator may choose to have a system-wide device
       cache file when building _l_s_o_f.  That file will generally be constructed
       by a special system administration procedure when the system is booted
       or when the contents of _/_d_e_v or _/_d_e_v_i_c_e_s) changes.  If defined, it is
       _l_s_o_f_'_s third device cache file path choice.

       You can tell that a system-wide device cache file is in effect for your
       local installation by examining the _l_s_o_f help option output - i.e., the
       output from the --hh or --??  option.

       _L_s_o_f will never write to the system-wide device cache file path by
       default.  It must be explicitly named with a --DD function in a
       root-owned procedure.  Once the file has been written, the procedure
       must change its permission modes to 0644 (owner-read and owner-write,
       group-read, and other-read).

PPEERRSSOONNAALL DDEEVVIICCEE CCAACCHHEE PPAATTHH ((DDEEFFAAUULLTT))
       The default device cache file path of the _l_s_o_f distribution is one
       recorded in the home directory of the real UID that executes _l_s_o_f.
       Added to the home directory is a second path component of the form
       _._l_s_o_f___h_o_s_t_n_a_m_e.

       This is _l_s_o_f_'_s fourth device cache file path choice, and is usually the
       default.  If a system-wide device cache file path was defined when _l_s_o_f
       was built, this fourth choice will be applied when _l_s_o_f can't find the
       system-wide device cache file.  This is the oonnllyy time _l_s_o_f uses two
       paths when reading the device cache file.

       The _h_o_s_t_n_a_m_e part of the second component is the base name of the
       executing host, as returned by _g_e_t_h_o_s_t_n_a_m_e(2).  The base name is
       defined to be the characters preceding the first `.' in the
       _g_e_t_h_o_s_t_n_a_m_e(2) output, or all the _g_e_t_h_o_s_t_n_a_m_e(2) output if it contains
       no `.'.

       The device cache file belongs to the user ID and is readable and
       writable by the user ID alone - i.e., its modes are 0600.  Each
       distinct real user ID on a given host that executes _l_s_o_f has a distinct
       device cache file.  The _h_o_s_t_n_a_m_e part of the path distinguishes device
       cache files in an NFS-mounted home directory into which device cache
       files are written from several different hosts.

       The personal device cache file path formed by this method represents a
       device cache file that _l_s_o_f will attempt to read, and will attempt to
       write should it not exist or should its contents be incorrect or
       outdated.

       The --DDrr option without a path name argument will inhibit the writing of
       a new device cache file.

       The --DD??  option will list the format specification for constructing the
       personal device cache file.  The conversions used in the format
       specification are described in the _0_0_D_C_A_C_H_E file of the _l_s_o_f
       distribution.

MMOODDIIFFIIEEDD PPEERRSSOONNAALL DDEEVVIICCEE CCAACCHHEE PPAATTHH
       If this option is defined by the local system administrator when _l_s_o_f
       is built, the LSOFPERSDCPATH environment variable contents may be used
       to add a component of the personal device cache file path.

       The LSOFPERSDCPATH variable contents are inserted in the path at the
       place marked by the local system administrator with the ``%p''
       conversion in the HASPERSDC format specification of the dialect's
       _m_a_c_h_i_n_e_._h header file.  (It's placed right after the home directory in
       the default _l_s_o_f distribution.)

       Thus, for example, if LSOFPERSDCPATH contains ``LSOF'', the home
       directory is ``/Homes/abe'', the host name is ``lsof.itap.purdue.edu'',
       and the HASPERSDC format is the default (``%h/%p.lsof_%L''), the
       modified personal device cache file path is:

            /Homes/abe/LSOF/.lsof_vic

       The LSOFPERSDCPATH environment variable is ignored when the _l_s_o_f
       process is setuid-root or when the real UID of the process is root.

       _L_s_o_f will not write to a modified personal device cache file path if
       the _l_s_o_f process doesn't surrender setgid permission.  (See the LLSSOOFF
       PPEERRMMIISSSSIIOONNSS TTHHAATT AAFFFFEECCTT DDEEVVIICCEE CCAACCHHEE FFIILLEE AACCCCEESSSS section for a list of
       implementations that normally don't surrender their setgid permission.)

       If, for example, you want to create a sub-directory of personal device
       cache file paths by using the LSOFPERSDCPATH environment variable to
       name it, and _l_s_o_f doesn't surrender its setgid permission, you will
       have to allow _l_s_o_f to create device cache files at the standard
       personal path and move them to your subdirectory with shell commands.

       The local system administrator may: disable this option when _l_s_o_f is
       built; change the name of the environment variable from LSOFPERSDCPATH
       to something else; change the HASPERSDC format to include the personal
       path component in another place; or exclude the personal path component
       entirely.  Consult the output of the --DD??  option for the environment
       variable's name and the HASPERSDC format specification.

DDIIAAGGNNOOSSTTIICCSS
       Errors are identified with messages on the standard error file.

       _L_s_o_f returns a one (1) if any error was detected, including the failure
       to locate command names, file names, Internet addresses or files, login
       names, NFS files, PIDs, PGIDs, or UIDs it was asked to list.  If the --VV
       option is specified, _l_s_o_f will indicate the search items it failed to
       list.

       It returns a zero (0) if no errors were detected and if it was able to
       list some information about all the specified search arguments.

       When _l_s_o_f cannot open access to _/_d_e_v (or _/_d_e_v_i_c_e_s) or one of its
       subdirectories, or get information on a file in them with _s_t_a_t(2), it
       issues a warning message and continues.  That _l_s_o_f will issue warning
       messages about inaccessible files in _/_d_e_v (or _/_d_e_v_i_c_e_s) is indicated in
       its help output - requested with the --hh or >B -?  options -  with the
       message:

            Inaccessible /dev warnings are enabled.

       The warning message may be suppressed with the --ww option.  It may also
       have been suppressed by the system administrator when _l_s_o_f was compiled
       by the setting of the WARNDEVACCESS definition.  In this case, the
       output from the help options will include the message:

            Inaccessible /dev warnings are disabled.

       Inaccessible device warning messages usually disappear after _l_s_o_f has
       created a working device cache file.

EEXXAAMMPPLLEESS
       For a more extensive set of examples, documented more fully, see the
       _0_0_Q_U_I_C_K_S_T_A_R_T file of the _l_s_o_f distribution.

       To list all open files, use:

              lsof

       To list all open Internet, x.25 (HP-UX), and UNIX domain files, use:

              lsof -i -U

       To list all open IPv4 network files in use by the process whose PID is
       1234, use:

              lsof -i 4 -a -p 1234

       Presuming the UNIX dialect supports IPv6, to list only open IPv6
       network files, use:

              lsof -i 6

       To list all files using any protocol on ports 513, 514, or 515 of host
       wonderland.cc.purdue.edu, use:

              lsof -i @wonderland.cc.purdue.edu:513-515

       To list all files using any protocol on any port of mace.cc.purdue.edu
       (cc.purdue.edu is the default domain), use:

              lsof -i @mace

       To list all open files for login name ``abe'', or user ID 1234, or
       process 456, or process 123, or process 789, use:

              lsof -p 456,123,789 -u 1234,abe

       To list all open files on device /dev/hd4, use:

              lsof /dev/hd4

       To find the process that has /u/abe/foo open, use:

              lsof /u/abe/foo

       To send a SIGHUP to the processes that have /u/abe/bar open, use:

              kill -HUP `lsof -t /u/abe/bar`

       To find any open file, including an open UNIX domain socket file, with
       the name _/_d_e_v_/_l_o_g, use:

              lsof /dev/log

       To find processes with open files on the NFS file system named
       _/_n_f_s_/_m_o_u_n_t_/_p_o_i_n_t whose server is inaccessible, and presuming your mount
       table supplies the device number for _/_n_f_s_/_m_o_u_n_t_/_p_o_i_n_t, use:

              lsof -b /nfs/mount/point

       To do the preceding search with warning messages suppressed, use:

              lsof -bw /nfs/mount/point

       To ignore the device cache file, use:

              lsof -Di

       To obtain PID and command name field output for each process, file
       descriptor, file device number, and file inode number for each file of
       each process, use:

              lsof -FpcfDi

       To list the files at descriptors 1 and 3 of every process running the
       _l_s_o_f command for login ID ``abe'' every 10 seconds, use:

              lsof -c lsof -a -d 1 -d 3 -u abe -r10

       To list the current working directory of processes running a command
       that is exactly four characters long and has an 'o' or 'O' in character
       three, use this regular expression form of the --cc _c option:

              lsof -c /^..o.$/i -a -d cwd

       To find an IP version 4 socket file by its associated numeric dot-form
       address, use:

              lsof -i@128.210.15.17

       To find an IP version 6 socket file (when the UNIX dialect supports
       IPv6) by its associated numeric colon-form address, use:

              lsof -i@[0:1:2:3:4:5:6:7]

       To find an IP version 6 socket file (when the UNIX dialect supports
       IPv6) by an associated numeric colon-form address that has a run of
       zeroes in it - e.g., the loop-back address - use:

              lsof -i@[::1]

       To obtain a repeat mode marker line that contains the current time,
       use:

              lsof -rm====%T====

       To add spaces to the previous marker line, use:

              lsof -r ""m==== %T ====""

BBUUGGSS
       Since _l_s_o_f reads kernel memory in its search for open files, rapid
       changes in kernel memory may produce unpredictable results.

       When a file has multiple record locks, the lock status character
       (following the file descriptor) is derived from a test of the first
       lock structure, not from any combination of the individual record locks
       that might be described by multiple lock structures.

       _L_s_o_f can't search for files with restrictive access permissions by _n_a_m_e
       unless it is installed with root set-UID permission.  Otherwise it is
       limited to searching for files to which its user or its set-GID group
       (if any) has access permission.

       The display of the destination address of a raw socket (e.g., for _p_i_n_g)
       depends on the UNIX operating system.  Some dialects store the
       destination address in the raw socket's protocol control block, some do
       not.

       _L_s_o_f can't always represent Solaris device numbers in the same way that
       _l_s(1) does.  For example, the major and minor device numbers that the
       _l_s_t_a_t(2) and _s_t_a_t(2) functions report for the directory on which CD-ROM
       files are mounted (typically _/_c_d_r_o_m) are not the same as the ones that
       it reports for the device on which CD-ROM files are mounted (typically
       _/_d_e_v_/_s_r_0).  (_L_s_o_f reports the directory numbers.)

       The support for _/_p_r_o_c file systems is available only for BSD and Tru64
       UNIX dialects, Linux, and dialects derived from SYSV R4 - e.g.,
       FreeBSD, NetBSD, OpenBSD, Solaris, UnixWare.

       Some _/_p_r_o_c file items - device number, inode number, and file size -
       are unavailable in some dialects.  Searching for files in a _/_p_r_o_c file
       system may require that the full path name be specified.

       No text (ttxxtt) file descriptors are displayed for Linux processes.  All
       entries for files other than the current working directory, the root
       directory, and numerical file descriptors are labeled mmeemm descriptors.

       _L_s_o_f can't search for Tru64 UNIX named pipes by name, because their
       kernel implementation of lstat(2) returns an improper device number for
       a named pipe.

       _L_s_o_f can't report fully or correctly on HP-UX 9.01, 10.20, and 11.00
       locks because of insufficient access to kernel data or errors in the
       kernel data.  See the _l_s_o_f FAQ (The FFAAQQ section gives its location.)
       for details.

       The AIX SMT file type is a fabrication.  It's made up for file
       structures whose type (15) isn't defined in the AIX
       _/_u_s_r_/_i_n_c_l_u_d_e_/_s_y_s_/_f_i_l_e_._h header file.  One way to create such file
       structures is to run X clients with the DISPLAY variable set to
       ``:0.0''.

       The ++||--ff_[_c_f_g_G_n_] option is not supported under /proc-based Linux _l_s_o_f,
       because it doesn't read kernel structures from kernel memory.

EENNVVIIRROONNMMEENNTT
       _L_s_o_f may access these environment variables.

       LANG          defines a language locale.  See _s_e_t_l_o_c_a_l_e(3) for the
                     names of other variables that can be used in place of
                     LANG - e.g., LC_ALL, LC_TYPE, etc.

       LSOFDEVCACHE  defines the path to a device cache file.  See the DDEEVVIICCEE
                     CCAACCHHEE PPAATTHH FFRROOMM AANN EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEE section for more
                     information.

       LSOFPERSDCPATH
                     defines the middle component of a modified personal
                     device cache file path.  See the MMOODDIIFFIIEEDD PPEERRSSOONNAALL DDEEVVIICCEE
                     CCAACCHHEE PPAATTHH section for more information.

FFAAQQ
       Frequently-asked questions and their answers (an FAQ) are available in
       the _0_0_F_A_Q file of the _l_s_o_f distribution.

       That file is also available via anonymous ftp from _l_s_o_f_._i_t_a_p_._p_u_r_d_u_e_._e_d_u
       at _p_u_b_/_t_o_o_l_s_/_u_n_i_x_/_l_s_o_fFAQ_.  The URL is:

              ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/FAQ

FFIILLEESS
       _/_d_e_v_/_k_m_e_m     kernel virtual memory device

       _/_d_e_v_/_m_e_m      physical memory device

       _/_d_e_v_/_s_w_a_p     system paging device

       _._l_s_o_f___h_o_s_t_n_a_m_e
                     _l_s_o_f_'_s device cache file (The suffix, _h_o_s_t_n_a_m_e, is the
                     first component of the host's name returned by
                     _g_e_t_h_o_s_t_n_a_m_e(2).)

AAUUTTHHOORRSS
       _L_s_o_f was written by Victor A.Abell <abe@purdue.edu> of Purdue
       University.  Many others have contributed to _l_s_o_f.  They're listed in
       the _0_0_C_R_E_D_I_T_S file of the _l_s_o_f distribution.

DDIISSTTRRIIBBUUTTIIOONN
       The latest distribution of _l_s_o_f is available via anonymous ftp from the
       host _l_s_o_f_._i_t_a_p_._p_u_r_d_u_e_._e_d_u.  You'll find the _l_s_o_f distribution in the
       _p_u_b_/_t_o_o_l_s_/_u_n_i_x_/_l_s_o_f directory.

       You can also use this URL:

              ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof

       _L_s_o_f is also mirrored elsewhere.  When you access _l_s_o_f_._i_t_a_p_._p_u_r_d_u_e_._e_d_u
       and change to its _p_u_b_/_t_o_o_l_s_/_u_n_i_x_/_l_s_o_f directory, you'll be given a list
       of some mirror sites.  The _p_u_b_/_t_o_o_l_s_/_u_n_i_x_/_l_s_o_f directory also contains
       a more complete list in its _m_i_r_r_o_r_s file.  Use mirrors with caution -
       not all mirrors always have the latest _l_s_o_f revision.

       Some pre-compiled _L_s_o_f executables are available on
       _l_s_o_f_._i_t_a_p_._p_u_r_d_u_e_._e_d_u, but their use is discouraged - it's better that
       you build your own from the sources.  If you feel you must use a
       pre-compiled executable, please read the cautions that appear in the
       README files of the _p_u_b_/_t_o_o_l_s_/_u_n_i_x_/_l_s_o_f_/_b_i_n_a_r_i_e_s subdirectories and in
       the 00* files of the distribution.

       More information on the _l_s_o_f distribution can be found in its
       _R_E_A_D_M_E_._l_s_o_f___<_v_e_r_s_i_o_n_> file.  If you intend to get the _l_s_o_f distribution
       and build it, please read _R_E_A_D_M_E_._l_s_o_f___<_v_e_r_s_i_o_n_> and the other 00* files
       of the distribution before sending questions to the author.

SSEEEE AALLSSOO
       Not all the following manual pages may exist in every UNIX dialect to
       which _l_s_o_f has been ported.

       access(2), awk(1), crash(1), fattach(3C), ff(1), fstat(8), fuser(1),
       gethostname(2), isprint(3), kill(1), localtime(3), lstat(2),
       modload(8), mount(8), netstat(1), ofiles(8L), perl(1), ps(1),
       readlink(2), setlocale(3), stat(2), strftime(3), time(2), uname(1).

                                 Revision-4.91                         LSOF(8)
"
stat,"STAT(1)                     General Commands Manual                    STAT(1)

NNAAMMEE
     ssttaatt, rreeaaddlliinnkk – display file status

SSYYNNOOPPSSIISS
     ssttaatt [--FFLLnnqq] [--ff _f_o_r_m_a_t | --ll | --rr | --ss | --xx] [--tt _t_i_m_e_f_m_t] [_f_i_l_e _._._.]
     rreeaaddlliinnkk [--ffnn] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The ssttaatt utility displays information about the file pointed to by _f_i_l_e.
     Read, write, or execute permissions of the named file are not required,
     but all directories listed in the pathname leading to the file must be
     searchable.  If no argument is given, ssttaatt displays information about the
     file descriptor for standard input.

     When invoked as rreeaaddlliinnkk, only the target of the symbolic link is
     printed.  If the given argument is not a symbolic link and the --ff option
     is not specified, rreeaaddlliinnkk will print nothing and exit with an error.  If
     the --ff option is specified, the output is canonicalized by following
     every symlink in every component of the given path recursively.  rreeaaddlliinnkk
     will resolve both absolute and relative paths, and return the absolute
     pathname corresponding to _f_i_l_e.  In this case, the argument does not need
     to be a symbolic link.

     The information displayed is obtained by calling lstat(2) with the given
     argument and evaluating the returned structure.  The default format
     displays the _s_t___d_e_v, _s_t___i_n_o, _s_t___m_o_d_e, _s_t___n_l_i_n_k, _s_t___u_i_d, _s_t___g_i_d, _s_t___r_d_e_v,
     _s_t___s_i_z_e, _s_t___a_t_i_m_e, _s_t___m_t_i_m_e, _s_t___c_t_i_m_e, _s_t___b_i_r_t_h_t_i_m_e, _s_t___b_l_k_s_i_z_e,
     _s_t___b_l_o_c_k_s, and _s_t___f_l_a_g_s fields, in that order.

     The options are as follows:

     --FF      As in ls(1), display a slash (‘/’) immediately after each
             pathname that is a directory, an asterisk (‘*’) after each that
             is executable, an at sign (‘@’) after each symbolic link, a
             percent sign (‘%’) after each whiteout, an equal sign (‘=’) after
             each socket, and a vertical bar (‘|’) after each that is a FIFO.
             The use of --FF implies --ll.

     --LL      Use stat(2) instead of lstat(2).  The information reported by
             ssttaatt will refer to the target of _f_i_l_e, if file is a symbolic
             link, and not to _f_i_l_e itself.  If the link is broken or the
             target does not exist, fall back on lstat(2) and report
             information about the link.

     --ff _f_o_r_m_a_t
             Display information using the specified format.  See the _F_o_r_m_a_t_s
             section for a description of valid formats.

     --ll      Display output in llss --llTT format.

     --nn      Do not force a newline to appear at the end of each piece of
             output.

     --qq      Suppress failure messages if calls to stat(2) or lstat(2) fail.
             When run as rreeaaddlliinnkk, error messages are automatically
             suppressed.

     --rr      Display raw information.  That is, for all the fields in the _s_t_a_t
             structure, display the raw, numerical value (for example, times
             in seconds since the epoch, etc.).

     --ss      Display information in “shell output” format, suitable for
             initializing variables.

     --tt _t_i_m_e_f_m_t
             Display timestamps using the specified format.  This format is
             passed directly to strftime(3).

     --xx      Display information in a more verbose way as known from some
             Linux distributions.

   FFoorrmmaattss
     Format strings are similar to printf(3) formats in that they start with
     %%, are then followed by a sequence of formatting characters, and end in a
     character that selects the field of the _s_t_r_u_c_t _s_t_a_t which is to be
     formatted.  If the %% is immediately followed by one of nn, tt, %%, or @@,
     then a newline character, a tab character, a percent character, or the
     current file number is printed, otherwise the string is examined for the
     following:

     Any of the following optional flags:

     ##       Selects an alternate output form for octal and hexadecimal
             output.  Non-zero octal output will have a leading zero, and non-
             zero hexadecimal output will have “0x” prepended to it.

     ++       Asserts that a sign indicating whether a number is positive or
             negative should always be printed.  Non-negative numbers are not
             usually printed with a sign.

     --       Aligns string output to the left of the field, instead of to the
             right.

     00       Sets the fill character for left padding to the ‘0’ character,
             instead of a space.

     space   Reserves a space at the front of non-negative signed output
             fields.  A ‘++’ overrides a space if both are used.

     Then the following fields:

     _s_i_z_e    An optional decimal digit string specifying the minimum field
             width.

     _p_r_e_c    An optional precision composed of a decimal point ‘..’ and a
             decimal digit string that indicates the maximum string length,
             the number of digits to appear after the decimal point in
             floating point output, or the minimum number of digits to appear
             in numeric output.

     _f_m_t     An optional output format specifier which is one of DD, OO, UU, XX,
             FF, or SS.  These represent signed decimal output, octal output,
             unsigned decimal output, hexadecimal output, floating point
             output, and string output, respectively.  Some output formats do
             not apply to all fields.  Floating point output only applies to
             _t_i_m_e_s_p_e_c fields (the aa, mm, and cc fields).

             The special output specifier SS may be used to indicate that the
             output, if applicable, should be in string format.  May be used
             in combination with:

             aammcc     Display date in strftime(3) format.

             ddrr      Display actual device name.

             ff       Display the flags of _f_i_l_e as in llss --llTTddoo.

             gguu      Display group or user name.

             pp       Display the mode of _f_i_l_e as in llss --llTTdd.

             NN       Displays the name of _f_i_l_e.

             TT       Displays the type of _f_i_l_e.

             YY       Insert a “ -> ” into the output.  Note that the default
                     output format for YY is a string, but if specified
                     explicitly, these four characters are prepended.

     _s_u_b     An optional sub field specifier (high, middle, low).  Only
             applies to the pp, dd, rr, and TT output formats.  It can be one of
             the following:

             HH       “High” — specifies the major number for devices from rr or
                     dd, the “user” bits for permissions from the string form
                     of pp, the file “type” bits from the numeric forms of pp,
                     and the long output form of TT.

             LL       “Low” — specifies the minor number for devices from rr or
                     dd, the “other” bits for permissions from the string form
                     of pp, the “user”, “group”, and “other” bits from the
                     numeric forms of pp, and the llss --FF style output character
                     for file type when used with TT (the use of LL for this is
                     optional).

             MM       “Middle” — specifies the “group” bits for permissions
                     from the string output form of pp, or the “suid”, “sgid”,
                     and “sticky” bits for the numeric forms of pp.

     _d_a_t_u_m   A required field specifier, being one of the following:

             dd       Device upon which _f_i_l_e resides (_s_t___d_e_v).

             ii       _f_i_l_e's inode number (_s_t___i_n_o).

             pp       File type and permissions (_s_t___m_o_d_e).

             ll       Number of hard links to _f_i_l_e (_s_t___n_l_i_n_k).

             uu, gg    User ID and group ID of _f_i_l_e's owner (_s_t___u_i_d, _s_t___g_i_d).

             rr       Device number for character and block device special
                     files (_s_t___r_d_e_v).

             aa, mm, cc, BB
                     The time _f_i_l_e was last accessed or modified, or when the
                     inode was last changed, or the birth time of the inode
                     (_s_t___a_t_i_m_e, _s_t___m_t_i_m_e, _s_t___c_t_i_m_e, _s_t___b_i_r_t_h_t_i_m_e).

             zz       The size of _f_i_l_e in bytes (_s_t___s_i_z_e).

             bb       Number of blocks allocated for _f_i_l_e (_s_t___b_l_o_c_k_s).

             kk       Optimal file system I/O operation block size
                     (_s_t___b_l_k_s_i_z_e).

             ff       User defined flags for _f_i_l_e.

             vv       Inode generation number (_s_t___g_e_n).

             The following five field specifiers are not drawn directly from
             the data in _s_t_r_u_c_t _s_t_a_t, but are:

             NN       The name of the file.

             RR       The absolute pathname corresponding to the file.

             TT       The file type, either as in llss --FF or in a more
                     descriptive form if the _s_u_b field specifier HH is given.

             YY       The target of a symbolic link.

             ZZ       Expands to “major,minor” from the _r_d_e_v field for
                     character or block special devices and gives size output
                     for all others.

     Only the %% and the field specifier are required.  Most field specifiers
     default to UU as an output form, with the exception of pp which defaults to
     OO; aa, mm, and cc which default to DD; and YY, TT, and NN which default to SS.

EEXXIITT SSTTAATTUUSS
     The ssttaatt and rreeaaddlliinnkk utilities exit 0 on success, and >0 if an error
     occurs.

EEXXAAMMPPLLEESS
     If no options are specified, the default format is ""%d %i %Sp %l %Su %Sg
     %r %z \""%Sa\"" \""%Sm\"" \""%Sc\"" \""%SB\"" %k %b %#Xf %N"".

           > stat /tmp/bar
           0 78852 -rw-r--r-- 1 root wheel 0 0 ""Jul  8 10:26:03 2004"" ""Jul  8 10:26:03 2004"" ""Jul  8 10:28:13 2004"" ""Jan  1 09:00:00 1970"" 16384 0 0 /tmp/bar

     Given a symbolic link “foo” that points from _/_t_m_p_/_f_o_o to _/, you would use
     ssttaatt as follows:

           > stat -F /tmp/foo
           lrwxrwxrwx 1 jschauma cs 1 Apr 24 16:37:28 2002 /tmp/foo@ -> /

           > stat -LF /tmp/foo
           drwxr-xr-x 16 root wheel 512 Apr 19 10:57:54 2002 /tmp/foo/

     To initialize some shell variables, you could use the --ss flag as follows:

           > csh
           % eval set `stat -s .cshrc`
           % echo $st_size $st_mtimespec
           1148 1015432481

           > sh
           $ eval $(stat -s .profile)
           $ echo $st_size $st_mtimespec
           1148 1015432481

     In order to get a list of file types including files pointed to if the
     file is a symbolic link, you could use the following format:

           $ stat -f ""%N: %HT%SY"" /tmp/*
           /tmp/bar: Symbolic Link -> /tmp/foo
           /tmp/output25568: Regular File
           /tmp/blah: Directory
           /tmp/foo: Symbolic Link -> /

     In order to get a list of the devices, their types and the major and
     minor device numbers, formatted with tabs and linebreaks, you could use
     the following format:

           stat -f ""Name: %N%n%tType: %HT%n%tMajor: %Hr%n%tMinor: %Lr%n%n"" /dev/*
           [...]
           Name: /dev/wt8
                   Type: Block Device
                   Major: 3
                   Minor: 8

           Name: /dev/zero
                   Type: Character Device
                   Major: 2
                   Minor: 12

     In order to determine the permissions set on a file separately, you could
     use the following format:

           > stat -f ""%Sp -> owner=%SHp group=%SMp other=%SLp"" .
           drwxr-xr-x -> owner=rwx group=r-x other=r-x

     In order to determine the three files that have been modified most
     recently, you could use the following format:

           > stat -f ""%m%t%Sm %N"" /tmp/* | sort -rn | head -3 | cut -f2-
           Apr 25 11:47:00 2002 /tmp/blah
           Apr 25 10:36:34 2002 /tmp/bar
           Apr 24 16:47:35 2002 /tmp/foo

     To display a file's modification time:

           > stat -f %m /tmp/foo
           1177697733

     To display the same modification time in a readable format:

           > stat -f %Sm /tmp/foo
           Apr 27 11:15:33 2007

     To display the same modification time in a readable and sortable format:

           > stat -f %Sm -t %Y%m%d%H%M%S /tmp/foo
           20070427111533

     To display the same in UTC:

           > sh
           $ TZ= stat -f %Sm -t %Y%m%d%H%M%S /tmp/foo
           20070427181533

SSEEEE AALLSSOO
     file(1), ls(1), lstat(2), readlink(2), stat(2), printf(3), strftime(3)

HHIISSTTOORRYY
     The ssttaatt utility appeared in NetBSD 1.6 and FreeBSD 4.10.

AAUUTTHHOORRSS
     The ssttaatt utility was written by Andrew Brown <_a_t_a_t_a_t_@_N_e_t_B_S_D_._o_r_g>.  This
     man page was written by Jan Schaumann <_j_s_c_h_a_u_m_a_@_N_e_t_B_S_D_._o_r_g>.

macOS 14.6                       June 22, 2017                      macOS 14.6
"
dmesg,"DMESG(8)                    System Manager's Manual                   DMESG(8)

NNAAMMEE
     ddmmeessgg – display the system message buffer

SSYYNNOOPPSSIISS
     ddmmeessgg [--MM _c_o_r_e] [--NN _s_y_s_t_e_m]

DDEESSCCRRIIPPTTIIOONN
     DDmmeessgg displays the contents of the system message buffer.  This command
     needs to be run as root.

SSEEEE AALLSSOO
     syslogd(8)

HHIISSTTOORRYY
     The ddmmeessgg command appeared in 4.0BSD.

BSD 4                            June 5, 1993                            BSD 4
"
logrotate,No manual entry for logrotate
journalctl,No manual entry for journalctl
groupadd,No manual entry for groupadd
useradd,No manual entry for useradd
usermod,No manual entry for usermod
userdel,No manual entry for userdel
crontab,"CRONTAB(1)                  General Commands Manual                 CRONTAB(1)

NNAAMMEE
     ccrroonnttaabb – maintain crontab files for individual users (V3)

SSYYNNOOPPSSIISS
     ccrroonnttaabb [--uu _u_s_e_r] _f_i_l_e
     ccrroonnttaabb [--uu _u_s_e_r] { --ll | --rr | --ee }

DDEESSCCRRIIPPTTIIOONN
     The ccrroonnttaabb utility is the program used to install, deinstall or list the
     tables used to drive the cron(8) daemon in Vixie Cron.  Each user can
     have their own crontab, and they are not intended to be edited directly.

     (Darwin note: Although cron(8) and crontab(5) are officially supported
     under Darwin, their functionality has been absorbed into launchd(8),
     which provides a more flexible way of automatically executing commands.
     See launchctl(1) for more information.)

     If the _/_u_s_r_/_l_i_b_/_c_r_o_n_/_c_r_o_n_._a_l_l_o_w file exists, then you must be listed
     therein in order to be allowed to use this command.  If the
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_c_r_o_n_._a_l_l_o_w file does not exist but the
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_c_r_o_n_._d_e_n_y file does exist, then you must _n_o_t be listed in
     the _/_u_s_r_/_l_i_b_/_c_r_o_n_/_c_r_o_n_._d_e_n_y file in order to use this command.  If
     neither of these files exists, then depending on site-dependent
     configuration parameters, only the super user will be allowed to use this
     command, or all users will be able to use this command.  The format of
     these files is one username per line, with no leading or trailing
     whitespace.  Lines of other formats will be ignored, and so can be used
     for comments.

     The first form of this command is used to install a new crontab from some
     named file or standard input if the pseudo-filename ‘--’ is given.

     The following options are available:

     --uu      Specify the name of the user whose crontab is to be tweaked.  If
             this option is not given, ccrroonnttaabb examines “your” crontab, i.e.,
             the crontab of the person executing the command.  Note that su(1)
             can confuse ccrroonnttaabb and that if you are running inside of su(1)
             you should always use the --uu option for safety's sake.

     --ll      Display the current crontab on standard output.

     --rr      Remove the current crontab.

     --ee      Edit the current crontab using the editor specified by the VISUAL
             or EDITOR environment variables.  The specified editor _m_u_s_t edit
             the file in place; any editor that unlinks the file and recreates
             it cannot be used.  After you exit from the editor, the modified
             crontab will be installed automatically.

FFIILLEESS
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_c_r_o_n_._a_l_l_o_w
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_c_r_o_n_._d_e_n_y

DDIIAAGGNNOOSSTTIICCSS
     A fairly informative usage message appears if you run it with a bad
     command line.

SSEEEE AALLSSOO
     crontab(5), compat(5), cron(8), launchctl(1)

SSTTAANNDDAARRDDSS
     The ccrroonnttaabb command conforms to IEEE Std 1003.2 (“POSIX.2”).  The new
     command syntax differs from previous versions of Vixie Cron, as well as
     from the classic SVR3 syntax.

AAUUTTHHOORRSS
     Paul Vixie ⟨paul@vix.com⟩

macOS 14.6                     December 29, 1993                    macOS 14.6
"
watch,No manual entry for watch
sleep,"SLEEP(1)                    General Commands Manual                   SLEEP(1)

NNAAMMEE
     sslleeeepp – suspend execution for an interval of time

SSYYNNOOPPSSIISS
     sslleeeepp _s_e_c_o_n_d_s

DDEESSCCRRIIPPTTIIOONN
     The sslleeeepp command suspends execution for a minimum of _s_e_c_o_n_d_s.

     If the sslleeeepp command receives a signal, it takes the standard action.
     When the SIGINFO signal is received, the estimate of the amount of
     seconds left to sleep is printed on the standard output.

IIMMPPLLEEMMEENNTTAATTIIOONN NNOOTTEESS
     The SIGALRM signal is not handled specially by this implementation.

     The sslleeeepp command allows and honors a non-integer number of seconds to
     sleep in any form acceptable by strtod(3).  This is a non-portable
     extension, but is also implemented in GNU sh-utils since version 2.0a
     (released in 2002).

EEXXIITT SSTTAATTUUSS
     The sslleeeepp utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     To schedule the execution of a command for _x number seconds later (with
     csh(1)):

           (sleep 1800; sh command_file >& errors)&

     This incantation would wait a half hour before running the script
     command_file.  (See the at(1) utility.)

     To reiteratively run a command (with the csh(1)):

           while (1)
                   if (! -r zzz.rawdata) then
                           sleep 300
                   else
                           foreach i (`ls *.rawdata`)
                                   sleep 70
                                   awk -f collapse_data $i >> results
                           end
                           break
                   endif
           end

     The scenario for a script such as this might be: a program currently
     running is taking longer than expected to process a series of files, and
     it would be nice to have another program start processing the files
     created by the first program as soon as it is finished (when zzz.rawdata
     is created).  The script checks every five minutes for the file
     zzz.rawdata, when the file is found, then another portion processing is
     done courteously by sleeping for 70 seconds in between each awk job.

SSEEEE AALLSSOO
     nanosleep(2), sleep(3)

SSTTAANNDDAARRDDSS
     The sslleeeepp command is expected to be IEEE Std 1003.2 (“POSIX.2”)
     compatible.

HHIISSTTOORRYY
     A sslleeeepp command appeared in Version 4 AT&T UNIX.

macOS 14.6                     December 31, 2020                    macOS 14.6
"
time,"TIME(1)                     General Commands Manual                    TIME(1)

NNAAMMEE
     ttiimmee – time command execution

SSYYNNOOPPSSIISS
     ttiimmee [--aall] [--hh | --pp] [--oo _f_i_l_e] _u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.]

DDEESSCCRRIIPPTTIIOONN
     The ttiimmee utility executes and times the specified _u_t_i_l_i_t_y.  After the
     _u_t_i_l_i_t_y finishes, ttiimmee writes to the standard error stream, (in seconds):
     the total time elapsed, the time used to execute the _u_t_i_l_i_t_y process and
     the time consumed by system overhead.

     The following options are available:

     --aa      If the --oo flag is used, append to the specified file rather than
             overwriting it.  Otherwise, this option has no effect.

     --hh      Print times in a human friendly format.  Times are printed in
             minutes, hours, etc. as appropriate.

     --ll      The contents of the _r_u_s_a_g_e structure are printed as well.

     --oo _f_i_l_e
             Write the output to _f_i_l_e instead of stderr.  If _f_i_l_e exists and
             the --aa flag is not specified, the file will be overwritten.

     --pp      Makes ttiimmee output POSIX.2 compliant (each time is printed on its
             own line).

     Some shells may provide a builtin ttiimmee command which is similar or
     identical to this utility.  Consult the builtin(1) manual page.

     If ttiimmee receives a SIGINFO (see the status argument for stty(1)) signal,
     the current time the given command is running will be written to the
     standard output.

EENNVVIIRROONNMMEENNTT
     The PATH environment variable is used to locate the requested _u_t_i_l_i_t_y if
     the name contains no ‘/’ characters.

EEXXIITT SSTTAATTUUSS
     If _u_t_i_l_i_t_y could be timed successfully, its exit status is returned.  If
     _u_t_i_l_i_t_y terminated abnormally, a warning message is output to stderr.  If
     the _u_t_i_l_i_t_y was found but could not be run, the exit status is 126.  If
     no _u_t_i_l_i_t_y could be found at all, the exit status is 127.  If ttiimmee
     encounters any other error, the exit status is between 1 and 125
     included.

EEXXAAMMPPLLEESS
     Time the execution of ls(1) on an empty directory:

           $ /usr/bin/time ls
                   0.00 real         0.00 user         0.00 sys

     Time the execution of the cp(1) command and store the result in the
     _t_i_m_e_s_._t_x_t file.  Then execute the command again to make a new copy and
     add the result to the same file:

           $ /usr/bin/time -o times.txt cp FreeBSD-12.1-RELEASE-amd64-bootonly.iso copy1.iso
           $ /usr/bin/time -a -o times.txt cp FreeBSD-12.1-RELEASE-amd64-bootonly.iso copy2.iso

     The _t_i_m_e_s_._t_x_t file will contain the times of both commands:

           $ cat times.txt
                   0.68 real         0.00 user         0.22 sys
                   0.67 real         0.00 user         0.21 sys

     Time the sleep(1) command and show the results in a human friendly
     format.  Show the contents of the _r_u_s_a_g_e structure too:

           $ /usr/bin/time -l -h -p sleep 5
           real 5.01
           user 0.00
           sys 0.00
                    0  maximum resident set size
                    0  average shared memory size
                    0  average unshared data size
                    0  average unshared stack size
                   80  page reclaims
                    0  page faults
                    0  swaps
                    1  block input operations
                    0  block output operations
                    0  messages sent
                    0  messages received
                    0  signals received
                    3  voluntary context switches
                    0  involuntary context switches
              2054316  instructions retired
              2445544  cycles elapsed
               241664  peak memory footprint

SSEEEE AALLSSOO
     builtin(1), csh(1), getrusage(2), wait(2)

SSTTAANNDDAARRDDSS
     The ttiimmee utility is expected to conform to ISO/IEC 9945-2:1993
     (``POSIX'').

HHIISSTTOORRYY
     A ttiimmee utility appeared in Version 3 AT&T UNIX.

macOS 14.6                     January 15, 2021                     macOS 14.6
"
date,"DATE(1)                     General Commands Manual                    DATE(1)

NNAAMMEE
     ddaattee – display or set date and time

SSYYNNOOPPSSIISS
     ddaattee [--nnRRuu] [--II[_F_M_T]] [--rr _f_i_l_e_n_a_m_e] [--rr _s_e_c_o_n_d_s]
          [--vv[++|--]_v_a_l[yy|mm|ww|dd|HH|MM|SS]] [++_o_u_t_p_u_t___f_m_t]
     ddaattee [--jjnnRRuu] [--II[_F_M_T]] [--vv[++|--]_v_a_l[yy|mm|ww|dd|HH|MM|SS]]
          [[[_m_m]_d_d]_H_H]_M_M[[_c_c]_y_y][.._S_S] [++_o_u_t_p_u_t___f_m_t]
     ddaattee [--jjnnRRuu] [--II[_F_M_T]] [--vv[++|--]_v_a_l[yy|mm|ww|dd|HH|MM|SS]] --ff _i_n_p_u_t___f_m_t _n_e_w___d_a_t_e
          [++_o_u_t_p_u_t___f_m_t]

DDEESSCCRRIIPPTTIIOONN
     When invoked without arguments, the ddaattee utility displays the current
     date and time.  Otherwise, depending on the options specified, ddaattee will
     set the date and time or print it in a user-defined way.

     The ddaattee utility displays the date and time read from the kernel clock.
     When used to set the date and time, both the kernel clock and the
     hardware clock are updated.

     Only the superuser may set the date, and if the system securelevel (see
     securelevel(7)) is greater than 1, the time may not be changed by more
     than 1 second.

     The options are as follows:

     --ff _i_n_p_u_t___f_m_t
             Use _i_n_p_u_t___f_m_t as the format string to parse the _n_e_w___d_a_t_e provided
             rather than using the default [[[_m_m]_d_d]_H_H]_M_M[[_c_c]_y_y][_._S_S] format.
             Parsing is done using strptime(3).

     --II[_F_M_T]
             Use ISO 8601 output format.  _F_M_T may be omitted, in which case
             the default is ddaattee.  Valid _F_M_T values are ddaattee, hhoouurrss, mmiinnuutteess,
             and sseeccoonnddss.  The date and time is formatted to the specified
             precision.  When _F_M_T is hhoouurrss (or the more precise mmiinnuutteess or
             sseeccoonnddss), the ISO 8601 format includes the timezone.

     --jj      Do not try to set the date.  This allows you to use the --ff flag
             in addition to the ++ option to convert one date format to
             another.  Note that any date or time components unspecified by
             the --ff format string take their values from the current time.

     --nn      Obsolete flag, accepted and ignored for compatibility.

     --RR      Use RFC 2822 date and time output format.  This is equivalent to
             using “%a, %d %b %Y %T %z” as _o_u_t_p_u_t___f_m_t while LC_TIME is set to
             the “C” locale .

     --rr _s_e_c_o_n_d_s
             Print the date and time represented by _s_e_c_o_n_d_s, where _s_e_c_o_n_d_s is
             the number of seconds since the Epoch (00:00:00 UTC, January 1,
             1970; see time(3)), and can be specified in decimal, octal, or
             hex.

     --rr _f_i_l_e_n_a_m_e
             Print the date and time of the last modification of _f_i_l_e_n_a_m_e.

     --uu      Display or set the date in UTC (Coordinated Universal) time.  By
             default ddaattee displays the time in the time zone described by
             _/_e_t_c_/_l_o_c_a_l_t_i_m_e or the TZ environment variable.

     --vv [++|--]_v_a_l[yy|mm|ww|dd|HH|MM|SS]
             Adjust (i.e., take the current date and display the result of the
             adjustment; not actually set the date) the second, minute, hour,
             month day, week day, month or year according to _v_a_l.  If _v_a_l is
             preceded with a plus or minus sign, the date is adjusted forwards
             or backwards according to the remaining string, otherwise the
             relevant part of the date is set.  The date can be adjusted as
             many times as required using these flags.  Flags are processed in
             the order given.

             When setting values (rather than adjusting them), seconds are in
             the range 0-59, minutes are in the range 0-59, hours are in the
             range 0-23, month days are in the range 1-31, week days are in
             the range 0-6 (Sun-Sat), months are in the range 1-12 (Jan-Dec)
             and years are in a limited range depending on the platform.

             On i386, years are in the range 69-38 representing 1969-2038.  On
             every other platform, years 0-68 are accepted and represent
             2000-2068, and 69-99 are accepted and represent 1969-1999.  In
             both cases, years between 100 and 1900 (both included) are
             accepted and interpreted as relative to 1900 of the Gregorian
             calendar with a limit of 138 on i386 and a much higher limit on
             every other platform.  Years starting at 1901 are also accepted,
             and are interpreted as absolute years.

             If _v_a_l is numeric, one of either yy, mm, ww, dd, HH, MM or SS must be
             used to specify which part of the date is to be adjusted.

             The week day or month may be specified using a name rather than a
             number.  If a name is used with the plus (or minus) sign, the
             date will be put forwards (or backwards) to the next (previous)
             date that matches the given week day or month.  This will not
             adjust the date, if the given week day or month is the same as
             the current one.

             When a date is adjusted to a specific value or in units greater
             than hours, daylight savings time considerations are ignored.
             Adjustments in units of hours or less honor daylight saving time.
             So, assuming the current date is March 26, 0:30 and that the DST
             adjustment means that the clock goes forward at 01:00 to 02:00,
             using --vv +1H will adjust the date to March 26, 2:30.  Likewise,
             if the date is October 29, 0:30 and the DST adjustment means that
             the clock goes back at 02:00 to 01:00, using --vv +3H will be
             necessary to reach October 29, 2:30.

             When the date is adjusted to a specific value that does not
             actually exist (for example March 26, 1:30 BST 2000 in the
             Europe/London timezone), the date will be silently adjusted
             forwards in units of one hour until it reaches a valid time.
             When the date is adjusted to a specific value that occurs twice
             (for example October 29, 1:30 2000), the resulting timezone will
             be set so that the date matches the earlier of the two times.

             It is not possible to adjust a date to an invalid absolute day,
             so using the switches --vv 31d --vv 12m will simply fail five months
             of the year.  It is therefore usual to set the month before
             setting the day; using --vv 12m --vv 31d always works.

             Adjusting the date by months is inherently ambiguous because a
             month is a unit of variable length depending on the current date.
             This kind of date adjustment is applied in the most intuitive
             way.  First of all, ddaattee tries to preserve the day of the month.
             If it is impossible because the target month is shorter than the
             present one, the last day of the target month will be the result.
             For example, using --vv +1m on May 31 will adjust the date to June
             30, while using the same option on January 30 will result in the
             date adjusted to the last day of February.  This approach is also
             believed to make the most sense for shell scripting.
             Nevertheless, be aware that going forth and back by the same
             number of months may take you to a different date.

             Refer to the examples below for further details.

     An operand with a leading plus (‘+’) sign signals a user-defined format
     string which specifies the format in which to display the date and time.
     The format string may contain any of the conversion specifications
     described in the strftime(3) manual page, as well as any arbitrary text.
     A newline (‘\n’) character is always output after the characters
     specified by the format string.  The format string for the default
     display is “+%+”.

     If an operand does not have a leading plus sign, it is interpreted as a
     value for setting the system's notion of the current date and time.  The
     canonical representation for setting the date and time is:

           _c_c      Century (either 19 or 20) prepended to the abbreviated
                   year.
           _y_y      Year in abbreviated form (e.g., 89 for 1989, 06 for 2006).
           _m_m      Numeric month, a number from 1 to 12.
           _d_d      Day, a number from 1 to 31.
           _H_H      Hour, a number from 0 to 23.
           _M_M      Minutes, a number from 0 to 59.
           _S_S      Seconds, a number from 0 to 60 (59 plus a potential leap
                   second).

     Everything but the minutes is optional.

     ddaattee understands the time zone definitions from the IANA Time Zone
     Database, ttzzddaattaa, located in _/_u_s_r_/_s_h_a_r_e_/_z_o_n_e_i_n_f_o.  Time changes for
     Daylight Saving Time, standard time, leap seconds and leap years are
     handled automatically.

     There are two ways to specify the time zone:

     If the file or symlink _/_e_t_c_/_l_o_c_a_l_t_i_m_e exists, it is interpreted as a time
     zone definition file, usually in the directory hierarchy
     _/_u_s_r_/_s_h_a_r_e_/_z_o_n_e_i_n_f_o, which contains the time zone definitions from
     ttzzddaattaa.

     If the environment variable TZ is set, its value is interpreted as the
     name of a time zone definition file, either an absolute path or a
     relative path to a time zone definition in _/_u_s_r_/_s_h_a_r_e_/_z_o_n_e_i_n_f_o.  The TZ
     variable overrides _/_e_t_c_/_l_o_c_a_l_t_i_m_e.

     If the time zone definition file is invalid, ddaattee silently reverts to
     UTC.

     Previous versions of ddaattee included the --dd (set daylight saving time flag)
     and --tt (set negative time zone offset) options, but these details are now
     handled automatically by ttzzddaattaa.  Modern offsets are positive for time
     zones ahead of UTC and negative for time zones behind UTC, but like the
     obsolete --tt option, the ttzzddaattaa files in the subdirectory
     _/_u_s_r_/_s_h_a_r_e_/_z_o_n_e_i_n_f_o_/_E_t_c still use an older convention where times ahead
     of UTC are considered negative.

EENNVVIIRROONNMMEENNTT
     The following environment variable affects the execution of ddaattee:

     TZ      The timezone to use when displaying dates.  The normal format is
             a pathname relative to _/_u_s_r_/_s_h_a_r_e_/_z_o_n_e_i_n_f_o.  For example, the
             command “TZ=America/Los_Angeles date” displays the current time
             in California.  The variable can also specify an absolute path.
             See environ(7) for more information.

FFIILLEESS
     _/_e_t_c_/_l_o_c_a_l_t_i_m_e     Time zone information file for default system time
                        zone.  May be omitted, in which case the default time
                        zone is UTC.
     _/_u_s_r_/_s_h_a_r_e_/_z_o_n_e_i_n_f_o
                        Directory containing time zone information files.
     _/_v_a_r_/_l_o_g_/_m_e_s_s_a_g_e_s  Record of the user setting the time.

EEXXIITT SSTTAATTUUSS
     The ddaattee utility exits 0 on success, 1 if unable to set the date, and 2
     if able to set the local date, but unable to set it globally.

EEXXAAMMPPLLEESS
     The command:

           date ""+DATE: %Y-%m-%d%nTIME: %H:%M:%S""

     will display:

           DATE: 1987-11-21
           TIME: 13:36:16

     In the Europe/London timezone, the command:

           date -v1m -v+1y

     will display:

           Sun Jan  4 04:15:24 GMT 1998

     where it is currently Mon Aug  4 04:15:24 BST 1997.

     The command:

           date -v1d -v3m -v0y -v-1d

     will display the last day of February in the year 2000:

           Tue Feb 29 03:18:00 GMT 2000

     So will the command:

           date -v3m -v30d -v0y -v-1m

     because there is no such date as the 30th of February.

     The command:

           date -v1d -v+1m -v-1d -v-fri

     will display the last Friday of the month:

           Fri Aug 29 04:31:11 BST 1997

     where it is currently Mon Aug  4 04:31:11 BST 1997.

     The command:

           date 0613162785

     sets the date to “June 13, 1985, 4:27 PM”.

           date ""+%m%d%H%M%Y.%S""

     may be used on one machine to print out the date suitable for setting on
     another.

     The command:

           date 1432

     sets the time to 2:32 PM, without modifying the date.

     The command

           TZ=America/Los_Angeles date -Iseconds -r 1533415339

     will display

           2018-08-04T13:42:19-07:00

     Finally the command:

           date -j -f ""%a %b %d %T %Z %Y"" ""`LC_ALL=C date`"" ""+%s""

     can be used to parse the output from ddaattee and express it in Epoch time.

DDIIAAGGNNOOSSTTIICCSS
     It is invalid to combine the --II flag with either --RR or an output format
     (“+...”) operand.  If this occurs, ddaattee prints: ‘multiple output formats
     specified’ and exits with status 1.

LLEEGGAACCYY SSYYNNOOPPSSIISS
     As above, except for the second line, which is:

     ddaattee [--jjnnuu] [[[[[_c_c]_y_y]_m_m]_d_d]_H_H]_M_M[_._S_S]

     For more information about legacy mode, see compat(5).

SSEEEE AALLSSOO
     locale(1), gettimeofday(2), getutxent(3), strftime(3), strptime(3),
     tzset(3)

     R. Gusella and S. Zatti, _T_S_P_: _T_h_e _T_i_m_e _S_y_n_c_h_r_o_n_i_z_a_t_i_o_n _P_r_o_t_o_c_o_l _f_o_r _U_N_I_X
     _4_._3_B_S_D.

     _T_i_m_e _Z_o_n_e _D_a_t_a_b_a_s_e, https://iana.org/time-zones.

SSTTAANNDDAARRDDSS
     The ddaattee utility is expected to be compatible with IEEE Std 1003.2
     (“POSIX.2”).  With the exception of the --uu option, all options are
     extensions to the standard.

     The format selected by the --II flag is compatible with ISO 8601.

HHIISSTTOORRYY
     A ddaattee command appeared in Version 1 AT&T UNIX.

     A number of options were added and then removed again, including the --dd
     (set DST flag) and --tt (set negative time zone offset).  Time zones are
     now handled by code bundled with ttzzddaattaa.

     The --II flag was added in FreeBSD 12.0.

macOS 14.6                       July 28, 2022                      macOS 14.6
"
cal,"CAL(1)                      General Commands Manual                     CAL(1)

NNAAMMEE
     ccaall, nnccaall – displays a calendar and the date of Easter

SSYYNNOOPPSSIISS
     ccaall [--33hhjjyy] [--AA _n_u_m_b_e_r] [--BB _n_u_m_b_e_r] [[_m_o_n_t_h] _y_e_a_r]
     ccaall [--33hhjj] [--AA _n_u_m_b_e_r] [--BB _n_u_m_b_e_r] --mm _m_o_n_t_h [_y_e_a_r]
     nnccaall [--33hhjjJJppwwyy] [--AA _n_u_m_b_e_r] [--BB _n_u_m_b_e_r] [--ss _c_o_u_n_t_r_y___c_o_d_e] [[_m_o_n_t_h] _y_e_a_r]
     nnccaall [--33hhJJeeoo] [--AA _n_u_m_b_e_r] [--BB _n_u_m_b_e_r] [_y_e_a_r]
     nnccaall [--CCNN] [--HH _y_y_y_y_-_m_m_-_d_d] [--dd _y_y_y_y_-_m_m]

DDEESSCCRRIIPPTTIIOONN
     The ccaall utility displays a simple calendar in traditional format and nnccaall
     offers an alternative layout, more options and the date of Easter.  The
     new format is a little cramped but it makes a year fit on a 25x80
     terminal.  If arguments are not specified, the current month is
     displayed.

     The options are as follows:

     --hh      Turns off highlighting of today.

     --JJ      Display Julian Calendar, if combined with the --ee option, display
             date of Easter according to the Julian Calendar.

     --ee      Display date of Easter (for western churches).

     --jj      Display Julian days (days one-based, numbered from January 1).

     --mm _m_o_n_t_h
             Display the specified _m_o_n_t_h.  If _m_o_n_t_h is specified as a decimal
             number, it may be followed by the letter ‘f’ or ‘p’ to indicate
             the following or preceding month of that number, respectively.

     --oo      Display date of Orthodox Easter (Greek and Russian Orthodox
             Churches).

     --pp      Print the country codes and switching days from Julian to
             Gregorian Calendar as they are assumed by nnccaall.  The country code
             as determined from the local environment is marked with an
             asterisk.

     --ss _c_o_u_n_t_r_y___c_o_d_e
             Assume the switch from Julian to Gregorian Calendar at the date
             associated with the _c_o_u_n_t_r_y___c_o_d_e.  If not specified, nnccaall tries
             to guess the switch date from the local environment or falls back
             to September 2, 1752.  This was when Great Britain and her
             colonies switched to the Gregorian Calendar.

     --ww      Print the number of the week below each week column.

     --yy      Display a calendar for the specified year.

     --33      Display the previous, current and next month surrounding today.

     --AA _n_u_m_b_e_r
             Display the _n_u_m_b_e_r of months after the current month.

     --BB _n_u_m_b_e_r
             Display the _n_u_m_b_e_r of months before the current month.

     --CC      Switch to ccaall mode.

     --NN      Switch to nnccaall mode.

     --dd _y_y_y_y_-_m_m
             Use _y_y_y_y_-_m_m as the current date (for debugging of date
             selection).

     --HH _y_y_y_y_-_m_m_-_d_d
             Use _y_y_y_y_-_m_m_-_d_d as the current date (for debugging of
             highlighting).

     A single parameter specifies the year (1–9999) to be displayed; note the
     year must be fully specified: “cal 89” will _n_o_t display a calendar for
     1989.  Two parameters denote the month and year; the month is either a
     number between 1 and 12, or a full or abbreviated name as specified by
     the current locale.  Month and year default to those of the current
     system clock and time zone (so “cal -m 8” will display a calendar for the
     month of August in the current year).

     Not all options can be used together.  For example “-3 -A 2 -B 3 -y -m 7”
     would mean: show me the three months around the seventh month, three
     before that, two after that and the whole year.  nnccaall will warn about
     these combinations.

     A year starts on January 1.

     Highlighting of dates is disabled if stdout is not a tty.

SSEEEE AALLSSOO
     calendar(3), strftime(3)

SSTTAANNDDAARRDDSS
     The ccaall utility is compliant with the X/Open System Interfaces option of
     the IEEE Std 1003.1-2008 (“POSIX.1”) specification.

     The flags [--33hhyyJJeeooppww], as well as the ability to specify a month name as
     a single argument, are extensions to that specification.

     The week number computed by --ww is compliant with the ISO 8601
     specification.

HHIISSTTOORRYY
     A ccaall command appeared in Version 1 AT&T UNIX.  The nnccaall command appeared
     in FreeBSD 2.2.6.

AAUUTTHHOORRSS
     The nnccaall command and manual were written by Wolfgang Helbig
     <_h_e_l_b_i_g_@_F_r_e_e_B_S_D_._o_r_g>.

BBUUGGSS
     The assignment of Julian–Gregorian switching dates to country codes is
     historically naive for many countries.

     Not all options are compatible and using them in different orders will
     give varying results.

     It is not possible to display Monday as the first day of the week with
     ccaall.

macOS 14.6                       March 7, 2019                      macOS 14.6
"
clear,"clear(1)                    General Commands Manual                   clear(1)

NNAAMMEE
       cclleeaarr - clear the terminal screen

SSYYNNOOPPSSIISS
       cclleeaarr

DDEESSCCRRIIPPTTIIOONN
       cclleeaarr clears your screen if this is possible, including its scrollback
       buffer (if the extended ""E3"" capability is defined).  cclleeaarr looks in
       the environment for the terminal type and then in the tteerrmmiinnffoo database
       to determine how to clear the screen.

       cclleeaarr ignores any command-line parameters that may be present.

SSEEEE AALLSSOO
       ttppuutt(1), tteerrmmiinnffoo(5)

       This describes nnccuurrsseess version 5.7 (patch 20081102).

                                                                      clear(1)
"
bc,"BC(1)                       General Commands Manual                      BC(1)

NNAAMMEE
       bc - arbitrary-precision decimal arithmetic language and calculator

SSYYNNOOPPSSIISS
       bbcc [--ccCCgghhiillPPqqRRssvvVVww] [----ddiiggiitt--ccllaammpp] [----nnoo--ddiiggiitt--ccllaammpp] [----gglloobbaall--
       ssttaacckkss] [----hheellpp] [----iinntteerraaccttiivvee] [----mmaatthhlliibb] [----nnoo--pprroommpptt] [----nnoo--rreeaadd--
       pprroommpptt] [----qquuiieett] [----ssttaannddaarrdd] [----wwaarrnn] [----vveerrssiioonn] [--ee _e_x_p_r]
       [----eexxpprreessssiioonn=_e_x_p_r...] [--ff _f_i_l_e...] [----ffiillee=_f_i_l_e...] [_f_i_l_e...] [--II
       _i_b_a_s_e] [----iibbaassee=_i_b_a_s_e] [--OO _o_b_a_s_e] [----oobbaassee=_o_b_a_s_e] [--SS _s_c_a_l_e]
       [----ssccaallee=_s_c_a_l_e] [--EE _s_e_e_d] [----sseeeedd=_s_e_e_d]

DDEESSCCRRIIPPTTIIOONN
       bc(1) is an interactive processor for a language first standardized in
       1991 by POSIX.  (See the SSTTAANNDDAARRDDSS section.)  The language provides
       unlimited precision decimal arithmetic and is somewhat C-like, but
       there are differences.  Such differences will be noted in this
       document.

       After parsing and handling options, this bc(1) reads any files given on
       the command line and executes them before reading from ssttddiinn.

       This bc(1) is a drop-in replacement for _a_n_y bc(1), including (and
       especially) the GNU bc(1).  It also has many extensions and extra
       features beyond other implementations.

       NNoottee: If running this bc(1) on _a_n_y script meant for another bc(1) gives
       a parse error, it is probably because a word this bc(1) reserves as a
       keyword is used as the name of a function, variable, or array.  To fix
       that, use the command-line option --rr _k_e_y_w_o_r_d, where _k_e_y_w_o_r_d is the
       keyword that is used as a name in the script.  For more information,
       see the OOPPTTIIOONNSS section.

       If parsing scripts meant for other bc(1) implementations still does not
       work, that is a bug and should be reported.  See the BBUUGGSS section.

OOPPTTIIOONNSS
       The following are the options that bc(1) accepts.

       --CC, ----nnoo--ddiiggiitt--ccllaammpp
              Disables clamping of digits greater than or equal to the current
              iibbaassee when parsing numbers.

              This means that the value added to a number from a digit is
              always that digit’s value multiplied by the value of ibase
              raised to the power of the digit’s position, which starts from 0
              at the least significant digit.

              If this and/or the --cc or ----ddiiggiitt--ccllaammpp options are given
              multiple times, the last one given is used.

              This option overrides the BBCC__DDIIGGIITT__CCLLAAMMPP environment variable
              (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section) and the default, which
              can be queried with the --hh or ----hheellpp options.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --cc, ----ddiiggiitt--ccllaammpp
              Enables clamping of digits greater than or equal to the current
              iibbaassee when parsing numbers.

              This means that digits that the value added to a number from a
              digit that is greater than or equal to the ibase is the value of
              ibase minus 1 all multiplied by the value of ibase raised to the
              power of the digit’s position, which starts from 0 at the least
              significant digit.

              If this and/or the --CC or ----nnoo--ddiiggiitt--ccllaammpp options are given
              multiple times, the last one given is used.

              This option overrides the BBCC__DDIIGGIITT__CCLLAAMMPP environment variable
              (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section) and the default, which
              can be queried with the --hh or ----hheellpp options.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --EE _s_e_e_d, ----sseeeedd=_s_e_e_d
              Sets the builtin variable sseeeedd to the value _s_e_e_d assuming that
              _s_e_e_d is in base 10.  It is a fatal error if _s_e_e_d is not a valid
              number.

              If multiple instances of this option are given, the last is
              used.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --ee _e_x_p_r, ----eexxpprreessssiioonn=_e_x_p_r
              Evaluates _e_x_p_r.  If multiple expressions are given, they are
              evaluated in order.  If files are given as well (see the --ff and
              ----ffiillee options), the expressions and files are evaluated in the
              order given.  This means that if a file is given before an
              expression, the file is read in and evaluated first.

              If this option is given on the command-line (i.e., not in
              BBCC__EENNVV__AARRGGSS, see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section), then after
              processing all expressions and files, bc(1) will exit, unless --
              (ssttddiinn) was given as an argument at least once to --ff or ----ffiillee,
              whether on the command-line or in BBCC__EENNVV__AARRGGSS.  However, if any
              other --ee, ----eexxpprreessssiioonn, --ff, or ----ffiillee arguments are given after
              --ff-- or equivalent is given, bc(1) will give a fatal error and
              exit.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --ff _f_i_l_e, ----ffiillee=_f_i_l_e
              Reads in _f_i_l_e and evaluates it, line by line, as though it were
              read through ssttddiinn.  If expressions are also given (see the --ee
              and ----eexxpprreessssiioonn options), the expressions are evaluated in the
              order given.

              If this option is given on the command-line (i.e., not in
              BBCC__EENNVV__AARRGGSS, see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section), then after
              processing all expressions and files, bc(1) will exit, unless --
              (ssttddiinn) was given as an argument at least once to --ff or ----ffiillee.
              However, if any other --ee, ----eexxpprreessssiioonn, --ff, or ----ffiillee arguments
              are given after --ff-- or equivalent is given, bc(1) will give a
              fatal error and exit.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --gg, ----gglloobbaall--ssttaacckkss
              Turns the globals iibbaassee, oobbaassee, ssccaallee, and sseeeedd into stacks.

              This has the effect that a copy of the current value of all four
              are pushed onto a stack for every function call, as well as
              popped when every function returns.  This means that functions
              can assign to any and all of those globals without worrying that
              the change will affect other functions.  Thus, a hypothetical
              function named oouuttppuutt((xx,,bb)) that simply printed xx in base bb could
              be written like this:


                     define void output(x, b) {
                         obase=b
                         x
                     }


              instead of like this:


                     define void output(x, b) {
                         auto c
                         c=obase
                         obase=b
                         x
                         obase=c
                     }


              This makes writing functions much easier.

              (NNoottee: the function oouuttppuutt((xx,,bb)) exists in the extended math
              library.  See the LLIIBBRRAARRYY section.)

              However, since using this flag means that functions cannot set
              iibbaassee, oobbaassee, ssccaallee, or sseeeedd globally, functions that are made
              to do so cannot work anymore.  There are two possible use cases
              for that, and each has a solution.

              First, if a function is called on startup to turn bc(1) into a
              number converter, it is possible to replace that capability with
              various shell aliases.  Examples:


                     alias d2o=""bc -e ibase=A -e obase=8""
                     alias h2b=""bc -e ibase=G -e obase=2""


              Second, if the purpose of a function is to set iibbaassee, oobbaassee,
              ssccaallee, or sseeeedd globally for any other purpose, it could be split
              into one to four functions (based on how many globals it sets)
              and each of those functions could return the desired value for a
              global.

              For functions that set sseeeedd, the value assigned to sseeeedd is not
              propagated to parent functions.  This means that the sequence of
              pseudo-random numbers that they see will not be the same
              sequence of pseudo-random numbers that any parent sees.  This is
              only the case once sseeeedd has been set.

              If a function desires to not affect the sequence of pseudo-
              random numbers of its parents, but wants to use the same sseeeedd,
              it can use the following line:


                     seed = seed


              If the behavior of this option is desired for every run of
              bc(1), then users could make sure to define BBCC__EENNVV__AARRGGSS and
              include this option (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section for
              more details).

              If --ss, --ww, or any equivalents are used, this option is ignored.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --hh, ----hheellpp
              Prints a usage message and exits.

       --II _i_b_a_s_e, ----iibbaassee=_i_b_a_s_e
              Sets the builtin variable iibbaassee to the value _i_b_a_s_e assuming that
              _i_b_a_s_e is in base 10.  It is a fatal error if _i_b_a_s_e is not a
              valid number.

              If multiple instances of this option are given, the last is
              used.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --ii, ----iinntteerraaccttiivvee
              Forces interactive mode.  (See the IINNTTEERRAACCTTIIVVEE MMOODDEE section.)

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --LL, ----nnoo--lliinnee--lleennggtthh
              Disables line length checking and prints numbers without
              backslashes and newlines.  In other words, this option sets
              BBCC__LLIINNEE__LLEENNGGTTHH to 00 (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section).

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --ll, ----mmaatthhlliibb
              Sets ssccaallee (see the SSYYNNTTAAXX section) to 2200 and loads the included
              math library and the extended math library before running any
              code, including any expressions or files specified on the
              command line.

              To learn what is in the libraries, see the LLIIBBRRAARRYY section.

       --OO _o_b_a_s_e, ----oobbaassee=_o_b_a_s_e
              Sets the builtin variable oobbaassee to the value _o_b_a_s_e assuming that
              _o_b_a_s_e is in base 10.  It is a fatal error if _o_b_a_s_e is not a
              valid number.

              If multiple instances of this option are given, the last is
              used.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --PP, ----nnoo--pprroommpptt
              Disables the prompt in TTY mode.  (The prompt is only enabled in
              TTY mode.  See the TTTTYY MMOODDEE section.)  This is mostly for those
              users that do not want a prompt or are not used to having them
              in bc(1).  Most of those users would want to put this option in
              BBCC__EENNVV__AARRGGSS (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section).

              These options override the BBCC__PPRROOMMPPTT and BBCC__TTTTYY__MMOODDEE environment
              variables (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section).

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --qq, ----qquuiieett
              This option is for compatibility with the GNU bc(1)
              (https://www.gnu.org/software/bc/); it is a no-op.  Without this
              option, GNU bc(1) prints a copyright header.  This bc(1) only
              prints the copyright header if one or more of the --vv, --VV, or
              ----vveerrssiioonn options are given unless the BBCC__BBAANNNNEERR environment
              variable is set and contains a non-zero integer or if this bc(1)
              was built with the header displayed by default.  If _a_n_y of that
              is the case, then this option _d_o_e_s prevent bc(1) from printing
              the header.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --RR, ----nnoo--rreeaadd--pprroommpptt
              Disables the read prompt in TTY mode.  (The read prompt is only
              enabled in TTY mode.  See the TTTTYY MMOODDEE section.)  This is mostly
              for those users that do not want a read prompt or are not used
              to having them in bc(1).  Most of those users would want to put
              this option in BBCC__EENNVV__AARRGGSS (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS
              section).  This option is also useful in hash bang lines of
              bc(1) scripts that prompt for user input.

              This option does not disable the regular prompt because the read
              prompt is only used when the rreeaadd(()) built-in function is called.

              These options _d_o override the BBCC__PPRROOMMPPTT and BBCC__TTTTYY__MMOODDEE
              environment variables (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section),
              but only for the read prompt.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --rr _k_e_y_w_o_r_d, ----rreeddeeffiinnee=_k_e_y_w_o_r_d
              Redefines _k_e_y_w_o_r_d in order to allow it to be used as a function,
              variable, or array name.  This is useful when this bc(1) gives
              parse errors when parsing scripts meant for other bc(1)
              implementations.

              The keywords this bc(1) allows to be redefined are:

              • aabbss

              • aasscciiiiffyy

              • ccoonnttiinnuuee

              • ddiivvmmoodd

              • eellssee

              • hhaalltt

              • iirraanndd

              • llaasstt

              • lliimmiittss

              • mmaaxxiibbaassee

              • mmaaxxoobbaassee

              • mmaaxxrraanndd

              • mmaaxxssccaallee

              • mmooddeexxpp

              • pprriinntt

              • rraanndd

              • rreeaadd

              • sseeeedd

              • ssttrreeaamm

              If any of those keywords are used as a function, variable, or
              array name in a script, use this option with the keyword as the
              argument.  If multiple are used, use this option for all of
              them; it can be used multiple times.

              Keywords are _n_o_t redefined when parsing the builtin math library
              (see the LLIIBBRRAARRYY section).

              It is a fatal error to redefine keywords mandated by the POSIX
              standard (see the SSTTAANNDDAARRDDSS section).  It is a fatal error to
              attempt to redefine words that this bc(1) does not reserve as
              keywords.

       --SS _s_c_a_l_e, ----ssccaallee=_s_c_a_l_e
              Sets the builtin variable ssccaallee to the value _s_c_a_l_e assuming that
              _s_c_a_l_e is in base 10.  It is a fatal error if _s_c_a_l_e is not a
              valid number.

              If multiple instances of this option are given, the last is
              used.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --ss, ----ssttaannddaarrdd
              Process exactly the language defined by the standard (see the
              SSTTAANNDDAARRDDSS section) and error if any extensions are used.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --vv, --VV, ----vveerrssiioonn
              Print the version information (copyright header) and exits.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --ww, ----wwaarrnn
              Like --ss and ----ssttaannddaarrdd, except that warnings (and not errors)
              are printed for non-standard extensions and execution continues
              normally.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       --zz, ----lleeaaddiinngg--zzeerrooeess
              Makes bc(1) print all numbers greater than --11 and less than 11,
              and not equal to 00, with a leading zero.

              This can be set for individual numbers with the ppllzz((xx)),
              ppllzznnll((xx)), ppnnllzz((xx)), and ppnnllzznnll((xx)) functions in the extended math
              library (see the LLIIBBRRAARRYY section).

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       All long options are nnoonn--ppoorrttaabbllee eexxtteennssiioonnss.

SSTTDDIINN
       If no files or expressions are given by the --ff, ----ffiillee, --ee, or
       ----eexxpprreessssiioonn options, then bc(1) reads from ssttddiinn.

       However, there are a few caveats to this.

       First, ssttddiinn is evaluated a line at a time.  The only exception to this
       is if the parse cannot complete.  That means that starting a string
       without ending it or starting a function, iiff statement, or loop without
       ending it will also cause bc(1) to not execute.

       Second, after an iiff statement, bc(1) doesn’t know if an eellssee statement
       will follow, so it will not execute until it knows there will not be an
       eellssee statement.

SSTTDDOOUUTT
       Any non-error output is written to ssttddoouutt.  In addition, if history
       (see the HHIISSTTOORRYY section) and the prompt (see the TTTTYY MMOODDEE section) are
       enabled, both are output to ssttddoouutt.

       NNoottee: Unlike other bc(1) implementations, this bc(1) will issue a fatal
       error (see the EEXXIITT SSTTAATTUUSS section) if it cannot write to ssttddoouutt, so if
       ssttddoouutt is closed, as in bbcc >>&&--, it will quit with an error.  This is
       done so that bc(1) can report problems when ssttddoouutt is redirected to a
       file.

       If there are scripts that depend on the behavior of other bc(1)
       implementations, it is recommended that those scripts be changed to
       redirect ssttddoouutt to //ddeevv//nnuullll.

SSTTDDEERRRR
       Any error output is written to ssttddeerrrr.

       NNoottee: Unlike other bc(1) implementations, this bc(1) will issue a fatal
       error (see the EEXXIITT SSTTAATTUUSS section) if it cannot write to ssttddeerrrr, so if
       ssttddeerrrr is closed, as in bbcc 22>>&&--, it will quit with an error.  This is
       done so that bc(1) can exit with an error code when ssttddeerrrr is
       redirected to a file.

       If there are scripts that depend on the behavior of other bc(1)
       implementations, it is recommended that those scripts be changed to
       redirect ssttddeerrrr to //ddeevv//nnuullll.

SSYYNNTTAAXX
       The syntax for bc(1) programs is mostly C-like, with some differences.
       This bc(1) follows the POSIX standard (see the SSTTAANNDDAARRDDSS section),
       which is a much more thorough resource for the language this bc(1)
       accepts.  This section is meant to be a summary and a listing of all
       the extensions to the standard.

       In the sections below, EE means expression, SS means statement, and II
       means identifier.

       Identifiers (II) start with a lowercase letter and can be followed by
       any number (up to BBCC__NNAAMMEE__MMAAXX--11) of lowercase letters (aa--zz), digits
       (00--99), and underscores (__).  The regex is [[aa--zz]][[aa--zz00--99__]]**.  Identifiers
       with more than one character (letter) are a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       iibbaassee is a global variable determining how to interpret constant
       numbers.  It is the “input” base, or the number base used for
       interpreting input numbers.  iibbaassee is initially 1100.  If the --ss
       (----ssttaannddaarrdd) and --ww (----wwaarrnn) flags were not given on the command line,
       the max allowable value for iibbaassee is 3366.  Otherwise, it is 1166.  The min
       allowable value for iibbaassee is 22.  The max allowable value for iibbaassee can
       be queried in bc(1) programs with the mmaaxxiibbaassee(()) built-in function.

       oobbaassee is a global variable determining how to output results.  It is
       the “output” base, or the number base used for outputting numbers.
       oobbaassee is initially 1100.  The max allowable value for oobbaassee is
       BBCC__BBAASSEE__MMAAXX and can be queried in bc(1) programs with the mmaaxxoobbaassee(())
       built-in function.  The min allowable value for oobbaassee is 00.  If oobbaassee
       is 00, values are output in scientific notation, and if oobbaassee is 11,
       values are output in engineering notation.  Otherwise, values are
       output in the specified base.

       Outputting in scientific and engineering notations are nnoonn--ppoorrttaabbllee
       eexxtteennssiioonnss.

       The _s_c_a_l_e of an expression is the number of digits in the result of the
       expression right of the decimal point, and ssccaallee is a global variable
       that sets the precision of any operations, with exceptions.  ssccaallee is
       initially 00.  ssccaallee cannot be negative.  The max allowable value for
       ssccaallee is BBCC__SSCCAALLEE__MMAAXX and can be queried in bc(1) programs with the
       mmaaxxssccaallee(()) built-in function.

       bc(1) has both _g_l_o_b_a_l variables and _l_o_c_a_l variables.  All _l_o_c_a_l
       variables are local to the function; they are parameters or are
       introduced in the aauuttoo list of a function (see the FFUUNNCCTTIIOONNSS section).
       If a variable is accessed which is not a parameter or in the aauuttoo list,
       it is assumed to be _g_l_o_b_a_l.  If a parent function has a _l_o_c_a_l variable
       version of a variable that a child function considers _g_l_o_b_a_l, the value
       of that _g_l_o_b_a_l variable in the child function is the value of the
       variable in the parent function, not the value of the actual _g_l_o_b_a_l
       variable.

       All of the above applies to arrays as well.

       The value of a statement that is an expression (i.e., any of the named
       expressions or operands) is printed unless the lowest precedence
       operator is an assignment operator _a_n_d the expression is notsurrounded
       by parentheses.

       The value that is printed is also assigned to the special variable
       llaasstt.  A single dot (..) may also be used as a synonym for llaasstt.  These
       are nnoonn--ppoorrttaabbllee eexxtteennssiioonnss.

       Either semicolons or newlines may separate statements.

   CCoommmmeennttss
       There are two kinds of comments:

       1. Block comments are enclosed in //** and **//.

       2. Line comments go from ## until, and not including, the next newline.
          This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

   NNaammeedd EExxpprreessssiioonnss
       The following are named expressions in bc(1):

       1. Variables: II

       2. Array Elements: II[[EE]]

       3. iibbaassee

       4. oobbaassee

       5. ssccaallee

       6. sseeeedd

       7. llaasstt or a single dot (..)

       Numbers 6 and 7 are nnoonn--ppoorrttaabbllee eexxtteennssiioonnss.

       The meaning of sseeeedd is dependent on the current pseudo-random number
       generator but is guaranteed to not change except for new major
       versions.

       The _s_c_a_l_e and sign of the value may be significant.

       If a previously used sseeeedd value is assigned to sseeeedd and used again, the
       pseudo-random number generator is guaranteed to produce the same
       sequence of pseudo-random numbers as it did when the sseeeedd value was
       previously used.

       The exact value assigned to sseeeedd is not guaranteed to be returned if
       sseeeedd is queried again immediately.  However, if sseeeedd _d_o_e_s return a
       different value, both values, when assigned to sseeeedd, are guaranteed to
       produce the same sequence of pseudo-random numbers.  This means that
       certain values assigned to sseeeedd will _n_o_t produce unique sequences of
       pseudo-random numbers.  The value of sseeeedd will change after any use of
       the rraanndd(()) and iirraanndd((EE)) operands (see the _O_p_e_r_a_n_d_s subsection below),
       except if the parameter passed to iirraanndd((EE)) is 00, 11, or negative.

       There is no limit to the length (number of significant decimal digits)
       or _s_c_a_l_e of the value that can be assigned to sseeeedd.

       Variables and arrays do not interfere; users can have arrays named the
       same as variables.  This also applies to functions (see the FFUUNNCCTTIIOONNSS
       section), so a user can have a variable, array, and function that all
       have the same name, and they will not shadow each other, whether inside
       of functions or not.

       Named expressions are required as the operand of iinnccrreemmeenntt/ddeeccrreemmeenntt
       operators and as the left side of aassssiiggnnmmeenntt operators (see the
       _O_p_e_r_a_t_o_r_s subsection).

   OOppeerraannddss
       The following are valid operands in bc(1):

        1. Numbers (see the _N_u_m_b_e_r_s subsection below).

        2. Array indices (II[[EE]]).

        3. ((EE)): The value of EE (used to change precedence).

        4. ssqqrrtt((EE)): The square root of EE.  EE must be non-negative.

        5. lleennggtthh((EE)): The number of significant decimal digits in EE.  Returns
           11 for 00 with no decimal places.  If given a string, the length of
           the string is returned.  Passing a string to lleennggtthh((EE)) is a nnoonn--
           ppoorrttaabbllee eexxtteennssiioonn.

        6. lleennggtthh((II[[]])): The number of elements in the array II.  This is a nnoonn--
           ppoorrttaabbllee eexxtteennssiioonn.

        7. ssccaallee((EE)): The _s_c_a_l_e of EE.

        8. aabbss((EE)): The absolute value of EE.  This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

        9. iiss__nnuummbbeerr((EE)): 11 if the given argument is a number, 00 if it is a
           string.  This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       10. iiss__ssttrriinngg((EE)): 11 if the given argument is a string, 00 if it is a
           number.  This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       11. mmooddeexxpp((EE,, EE,, EE)): Modular exponentiation, where the first expression
           is the base, the second is the exponent, and the third is the
           modulus.  All three values must be integers.  The second argument
           must be non-negative.  The third argument must be non-zero.  This
           is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       12. ddiivvmmoodd((EE,, EE,, II[[]])): Division and modulus in one operation.  This is
           for optimization.  The first expression is the dividend, and the
           second is the divisor, which must be non-zero.  The return value is
           the quotient, and the modulus is stored in index 00 of the provided
           array (the last argument).  This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       13. aasscciiiiffyy((EE)): If EE is a string, returns a string that is the first
           letter of its argument.  If it is a number, calculates the number
           mod 225566 and returns that number as a one-character string.  This is
           a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       14. aasscciiiiffyy((II[[]])): A string that is made up of the characters that would
           result from running aasscciiiiffyy((EE)) on each element of the array
           identified by the argument.  This allows creating multi-character
           strings and storing them.  This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       15. II(()), II((EE)), II((EE,, EE)), and so on, where II is an identifier for a
           non-vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of the
           FFUUNNCCTTIIOONNSS section).  The EE argument(s) may also be arrays of the
           form II[[]], which will automatically be turned into array references
           (see the _A_r_r_a_y _R_e_f_e_r_e_n_c_e_s subsection of the FFUUNNCCTTIIOONNSS section) if
           the corresponding parameter in the function definition is an array
           reference.

       16. rreeaadd(()): Reads a line from ssttddiinn and uses that as an expression.
           The result of that expression is the result of the rreeaadd(()) operand.
           This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       17. mmaaxxiibbaassee(()): The max allowable iibbaassee.  This is a nnoonn--ppoorrttaabbllee
           eexxtteennssiioonn.

       18. mmaaxxoobbaassee(()): The max allowable oobbaassee.  This is a nnoonn--ppoorrttaabbllee
           eexxtteennssiioonn.

       19. mmaaxxssccaallee(()): The max allowable ssccaallee.  This is a nnoonn--ppoorrttaabbllee
           eexxtteennssiioonn.

       20. lliinnee__lleennggtthh(()): The line length set with BBCC__LLIINNEE__LLEENNGGTTHH (see the
           EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section).  This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       21. gglloobbaall__ssttaacckkss(()): 00 if global stacks are not enabled with the --gg or
           ----gglloobbaall--ssttaacckkss options, non-zero otherwise.  See the OOPPTTIIOONNSS
           section.  This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       22. lleeaaddiinngg__zzeerroo(()): 00 if leading zeroes are not enabled with the --zz or
           ––lleeaaddiinngg--zzeerrooeess options, non-zero otherwise.  See the OOPPTTIIOONNSS
           section.  This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       23. rraanndd(()): A pseudo-random integer between 00 (inclusive) and
           BBCC__RRAANNDD__MMAAXX (inclusive).  Using this operand will change the value
           of sseeeedd.  This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       24. iirraanndd((EE)): A pseudo-random integer between 00 (inclusive) and the
           value of EE (exclusive).  If EE is negative or is a non-integer (EE’s
           _s_c_a_l_e is not 00), an error is raised, and bc(1) resets (see the
           RREESSEETT section) while sseeeedd remains unchanged.  If EE is larger than
           BBCC__RRAANNDD__MMAAXX, the higher bound is honored by generating several
           pseudo-random integers, multiplying them by appropriate powers of
           BBCC__RRAANNDD__MMAAXX++11, and adding them together.  Thus, the size of integer
           that can be generated with this operand is unbounded.  Using this
           operand will change the value of sseeeedd, unless the value of EE is 00
           or 11.  In that case, 00 is returned, and sseeeedd is _n_o_t changed.  This
           is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       25. mmaaxxrraanndd(()): The max integer returned by rraanndd(()).  This is a nnoonn--
           ppoorrttaabbllee eexxtteennssiioonn.

       The integers generated by rraanndd(()) and iirraanndd((EE)) are guaranteed to be as
       unbiased as possible, subject to the limitations of the pseudo-random
       number generator.

       NNoottee: The values returned by the pseudo-random number generator with
       rraanndd(()) and iirraanndd((EE)) are guaranteed to _N_O_T be cryptographically secure.
       This is a consequence of using a seeded pseudo-random number generator.
       However, they _a_r_e guaranteed to be reproducible with identical sseeeedd
       values.  This means that the pseudo-random values from bc(1) should
       only be used where a reproducible stream of pseudo-random numbers is
       _E_S_S_E_N_T_I_A_L.  In any other case, use a non-seeded pseudo-random number
       generator.

   NNuummbbeerrss
       Numbers are strings made up of digits, uppercase letters, and at most 11
       period for a radix.  Numbers can have up to BBCC__NNUUMM__MMAAXX digits.
       Uppercase letters are equal to 99 plus their position in the alphabet,
       starting from 11 (i.e., AA equals 1100, or 99++11).

       If a digit or letter makes no sense with the current value of iibbaassee
       (i.e., they are greater than or equal to the current value of iibbaassee),
       then the behavior depends on the existence of the --cc/----ddiiggiitt--ccllaammpp or
       --CC/----nnoo--ddiiggiitt--ccllaammpp options (see the OOPPTTIIOONNSS section), the existence
       and setting of the BBCC__DDIIGGIITT__CCLLAAMMPP environment variable (see the
       EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section), or the default, which can be queried
       with the --hh/----hheellpp option.

       If clamping is off, then digits or letters that are greater than or
       equal to the current value of iibbaassee are not changed.  Instead, their
       given value is multiplied by the appropriate power of iibbaassee and added
       into the number.  This means that, with an iibbaassee of 33, the number AABB is
       equal to 33^^11**AA++33^^00**BB, which is 33 times 1100 plus 1111, or 4411.

       If clamping is on, then digits or letters that are greater than or
       equal to the current value of iibbaassee are set to the value of the highest
       valid digit in iibbaassee before being multiplied by the appropriate power
       of iibbaassee and added into the number.  This means that, with an iibbaassee of
       33, the number AABB is equal to 33^^11**22++33^^00**22, which is 33 times 22 plus 22, or
       88.

       There is one exception to clamping: single-character numbers (i.e., AA
       alone).  Such numbers are never clamped and always take the value they
       would have in the highest possible iibbaassee.  This means that AA alone
       always equals decimal 1100 and ZZ alone always equals decimal 3355.  This
       behavior is mandated by the standard (see the STANDARDS section) and is
       meant to provide an easy way to set the current iibbaassee (with the ii
       command) regardless of the current value of iibbaassee.

       If clamping is on, and the clamped value of a character is needed, use
       a leading zero, i.e., for AA, use 00AA.

       In addition, bc(1) accepts numbers in scientific notation.  These have
       the form <<nnuummbbeerr>>ee<<iinntteeggeerr>>.  The exponent (the portion after the ee)
       must be an integer.  An example is 11..8899223377ee99, which is equal to
       11889922337700000000.  Negative exponents are also allowed, so 44..22889900ee--33 is equal
       to 00..00004422889900.

       Using scientific notation is an error or warning if the --ss or --ww,
       respectively, command-line options (or equivalents) are given.

       WWAARRNNIINNGG: Both the number and the exponent in scientific notation are
       interpreted according to the current iibbaassee, but the number is still
       multiplied by 1100^^eexxppoonneenntt regardless of the current iibbaassee.  For
       example, if iibbaassee is 1166 and bc(1) is given the number string FFFFeeAA, the
       resulting decimal number will be 22555500000000000000000000, and if bc(1) is given
       the number string 1100ee--44, the resulting decimal number will be 00..00001166.

       Accepting input as scientific notation is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

   OOppeerraattoorrss
       The following arithmetic and logical operators can be used.  They are
       listed in order of decreasing precedence.  Operators in the same group
       have the same precedence.

       ++++ ----  Type: Prefix and Postfix

              Associativity: None

              Description: iinnccrreemmeenntt, ddeeccrreemmeenntt

       -- !!    Type: Prefix

              Associativity: None

              Description: nneeggaattiioonn, bboooolleeaann nnoott

       $$      Type: Postfix

              Associativity: None

              Description: ttrruunnccaattiioonn

       @@      Type: Binary

              Associativity: Right

              Description: sseett pprreecciissiioonn

       ^^      Type: Binary

              Associativity: Right

              Description: ppoowweerr

       ** // %%  Type: Binary

              Associativity: Left

              Description: mmuullttiippllyy, ddiivviiddee, mmoodduulluuss

       ++ --    Type: Binary

              Associativity: Left

              Description: aadddd, ssuubbttrraacctt

       <<<< >>>>  Type: Binary

              Associativity: Left

              Description: sshhiifftt lleefftt, sshhiifftt rriigghhtt

       == <<<<== >>>>== ++== --== **== //== %%== ^^== @@==
              Type: Binary

              Associativity: Right

              Description: aassssiiggnnmmeenntt

       ==== <<== >>== !!== << >>
              Type: Binary

              Associativity: Left

              Description: rreellaattiioonnaall

       &&&&     Type: Binary

              Associativity: Left

              Description: bboooolleeaann aanndd

       ||||     Type: Binary

              Associativity: Left

              Description: bboooolleeaann oorr

       The operators will be described in more detail below.

       ++++ ----  The prefix and postfix iinnccrreemmeenntt and ddeeccrreemmeenntt operators behave
              exactly like they would in C.  They require a named expression
              (see the _N_a_m_e_d _E_x_p_r_e_s_s_i_o_n_s subsection) as an operand.

              The prefix versions of these operators are more efficient; use
              them where possible.

       --      The nneeggaattiioonn operator returns 00 if a user attempts to negate any
              expression with the value 00.  Otherwise, a copy of the
              expression with its sign flipped is returned.

       !!      The bboooolleeaann nnoott operator returns 11 if the expression is 00, or 00
              otherwise.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       $$      The ttrruunnccaattiioonn operator returns a copy of the given expression
              with all of its _s_c_a_l_e removed.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       @@      The sseett pprreecciissiioonn operator takes two expressions and returns a
              copy of the first with its _s_c_a_l_e equal to the value of the
              second expression.  That could either mean that the number is
              returned without change (if the _s_c_a_l_e of the first expression
              matches the value of the second expression), extended (if it is
              less), or truncated (if it is more).

              The second expression must be an integer (no _s_c_a_l_e) and non-
              negative.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       ^^      The ppoowweerr operator (not the eexxcclluussiivvee oorr operator, as it would
              be in C) takes two expressions and raises the first to the power
              of the value of the second.  The _s_c_a_l_e of the result is equal to
              ssccaallee.

              The second expression must be an integer (no _s_c_a_l_e), and if it
              is negative, the first value must be non-zero.

       **      The mmuullttiippllyy operator takes two expressions, multiplies them,
              and returns the product.  If aa is the _s_c_a_l_e of the first
              expression and bb is the _s_c_a_l_e of the second expression, the
              _s_c_a_l_e of the result is equal to mmiinn((aa++bb,,mmaaxx((ssccaallee,,aa,,bb)))) where
              mmiinn(()) and mmaaxx(()) return the obvious values.

       //      The ddiivviiddee operator takes two expressions, divides them, and
              returns the quotient.  The _s_c_a_l_e of the result shall be the
              value of ssccaallee.

              The second expression must be non-zero.

       %%      The mmoodduulluuss operator takes two expressions, aa and bb, and
              evaluates them by 1) Computing aa//bb to current ssccaallee and 2) Using
              the result of step 1 to calculate aa--((aa//bb))**bb to _s_c_a_l_e
              mmaaxx((ssccaallee++ssccaallee((bb)),,ssccaallee((aa)))).

              The second expression must be non-zero.

       ++      The aadddd operator takes two expressions, aa and bb, and returns the
              sum, with a _s_c_a_l_e equal to the max of the _s_c_a_l_es of aa and bb.

       --      The ssuubbttrraacctt operator takes two expressions, aa and bb, and
              returns the difference, with a _s_c_a_l_e equal to the max of the
              _s_c_a_l_es of aa and bb.

       <<<<     The lleefftt sshhiifftt operator takes two expressions, aa and bb, and
              returns a copy of the value of aa with its decimal point moved bb
              places to the right.

              The second expression must be an integer (no _s_c_a_l_e) and non-
              negative.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       >>>>     The rriigghhtt sshhiifftt operator takes two expressions, aa and bb, and
              returns a copy of the value of aa with its decimal point moved bb
              places to the left.

              The second expression must be an integer (no _s_c_a_l_e) and non-
              negative.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       == <<<<== >>>>== ++== --== **== //== %%== ^^== @@==
              The aassssiiggnnmmeenntt operators take two expressions, aa and bb where aa
              is a named expression (see the _N_a_m_e_d _E_x_p_r_e_s_s_i_o_n_s subsection).

              For ==, bb is copied and the result is assigned to aa.  For all
              others, aa and bb are applied as operands to the corresponding
              arithmetic operator and the result is assigned to aa.

              The aassssiiggnnmmeenntt operators that correspond to operators that are
              extensions are themselves nnoonn--ppoorrttaabbllee eexxtteennssiioonnss.

       ==== <<== >>== !!== << >>
              The rreellaattiioonnaall operators compare two expressions, aa and bb, and
              if the relation holds, according to C language semantics, the
              result is 11.  Otherwise, it is 00.

              Note that unlike in C, these operators have a lower precedence
              than the aassssiiggnnmmeenntt operators, which means that aa==bb>>cc is
              interpreted as ((aa==bb))>>cc.

              Also, unlike the standard (see the SSTTAANNDDAARRDDSS section) requires,
              these operators can appear anywhere any other expressions can be
              used.  This allowance is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       &&&&     The bboooolleeaann aanndd operator takes two expressions and returns 11 if
              both expressions are non-zero, 00 otherwise.

              This is _n_o_t a short-circuit operator.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       ||||     The bboooolleeaann oorr operator takes two expressions and returns 11 if
              one of the expressions is non-zero, 00 otherwise.

              This is _n_o_t a short-circuit operator.

              This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

   SSttaatteemmeennttss
       The following items are statements:

        1. EE

        2. {{ SS ;; ...  ;; SS }}

        3. iiff (( EE )) SS

        4. iiff (( EE )) SS eellssee SS

        5. wwhhiillee (( EE )) SS

        6. ffoorr (( EE ;; EE ;; EE )) SS

        7. An empty statement

        8. bbrreeaakk

        9. ccoonnttiinnuuee

       10. qquuiitt

       11. hhaalltt

       12. lliimmiittss

       13. A string of characters, enclosed in double quotes

       14. pprriinntt EE ,, ...  ,, EE

       15. ssttrreeaamm EE ,, ...  ,, EE

       16. II(()), II((EE)), II((EE,, EE)), and so on, where II is an identifier for a vvooiidd
           function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of the FFUUNNCCTTIIOONNSS
           section).  The EE argument(s) may also be arrays of the form II[[]],
           which will automatically be turned into array references (see the
           _A_r_r_a_y _R_e_f_e_r_e_n_c_e_s subsection of the FFUUNNCCTTIIOONNSS section) if the
           corresponding parameter in the function definition is an array
           reference.

       Numbers 4, 9, 11, 12, 14, 15, and 16 are nnoonn--ppoorrttaabbllee eexxtteennssiioonnss.

       Also, as a nnoonn--ppoorrttaabbllee eexxtteennssiioonn, any or all of the expressions in the
       header of a for loop may be omitted.  If the condition (second
       expression) is omitted, it is assumed to be a constant 11.

       The bbrreeaakk statement causes a loop to stop iterating and resume
       execution immediately following a loop.  This is only allowed in loops.

       The ccoonnttiinnuuee statement causes a loop iteration to stop early and
       returns to the start of the loop, including testing the loop condition.
       This is only allowed in loops.

       The iiff eellssee statement does the same thing as in C.

       The qquuiitt statement causes bc(1) to quit, even if it is on a branch that
       will not be executed (it is a compile-time command).

       WWaarrnniinngg: The behavior of this bc(1) on qquuiitt is slightly different from
       other bc(1) implementations.  Other bc(1) implementations will exit as
       soon as they finish parsing the line that a qquuiitt command is on.  This
       bc(1) will execute any completed and executable statements that occur
       before the qquuiitt statement before exiting.

       In other words, for the bc(1) code below:


              for (i = 0; i < 3; ++i) i; quit


       Other bc(1) implementations will print nothing, and this bc(1) will
       print 00, 11, and 22 on successive lines before exiting.

       The hhaalltt statement causes bc(1) to quit, if it is executed.  (Unlike
       qquuiitt if it is on a branch of an iiff statement that is not executed,
       bc(1) does not quit.)

       The lliimmiittss statement prints the limits that this bc(1) is subject to.
       This is like the qquuiitt statement in that it is a compile-time command.

       An expression by itself is evaluated and printed, followed by a
       newline.

       Both scientific notation and engineering notation are available for
       printing the results of expressions.  Scientific notation is activated
       by assigning 00 to oobbaassee, and engineering notation is activated by
       assigning 11 to oobbaassee.  To deactivate them, just assign a different
       value to oobbaassee.

       Scientific notation and engineering notation are disabled if bc(1) is
       run with either the --ss or --ww command-line options (or equivalents).

       Printing numbers in scientific notation and/or engineering notation is
       a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

   SSttrriinnggss
       If strings appear as a statement by themselves, they are printed
       without a trailing newline.

       In addition to appearing as a lone statement by themselves, strings can
       be assigned to variables and array elements.  They can also be passed
       to functions in variable parameters.

       If any statement that expects a string is given a variable that had a
       string assigned to it, the statement acts as though it had received a
       string.

       If any math operation is attempted on a string or a variable or array
       element that has been assigned a string, an error is raised, and bc(1)
       resets (see the RREESSEETT section).

       Assigning strings to variables and array elements and passing them to
       functions are nnoonn--ppoorrttaabbllee eexxtteennssiioonnss.

   PPrriinntt SSttaatteemmeenntt
       The “expressions” in a pprriinntt statement may also be strings.  If they
       are, there are backslash escape sequences that are interpreted
       specially.  What those sequences are, and what they cause to be
       printed, are shown below:

       \\aa: \\aa

       \\bb: \\bb

       \\\\: \\

       \\ee: \\

       \\ff: \\ff

       \\nn: \\nn

       \\qq: ““

       \\rr: \\rr

       \\tt: \\tt

       Any other character following a backslash causes the backslash and
       character to be printed as-is.

       Any non-string expression in a print statement shall be assigned to
       llaasstt, like any other expression that is printed.

   SSttrreeaamm SSttaatteemmeenntt
       The “expressions in a ssttrreeaamm statement may also be strings.

       If a ssttrreeaamm statement is given a string, it prints the string as though
       the string had appeared as its own statement.  In other words, the
       ssttrreeaamm statement prints strings normally, without a newline.

       If a ssttrreeaamm statement is given a number, a copy of it is truncated and
       its absolute value is calculated.  The result is then printed as though
       oobbaassee is 225566 and each digit is interpreted as an 8-bit ASCII character,
       making it a byte stream.

   OOrrddeerr ooff EEvvaalluuaattiioonn
       All expressions in a statment are evaluated left to right, except as
       necessary to maintain order of operations.  This means, for example,
       assuming that ii is equal to 00, in the expression


              a[i++] = i++


       the first (or 0th) element of aa is set to 11, and ii is equal to 22 at the
       end of the expression.

       This includes function arguments.  Thus, assuming ii is equal to 00, this
       means that in the expression


              x(i++, i++)


       the first argument passed to xx(()) is 00, and the second argument is 11,
       while ii is equal to 22 before the function starts executing.

FFUUNNCCTTIIOONNSS
       Function definitions are as follows:


              define I(I,...,I){
                  auto I,...,I
                  S;...;S
                  return(E)
              }


       Any II in the parameter list or aauuttoo list may be replaced with II[[]] to
       make a parameter or aauuttoo var an array, and any II in the parameter list
       may be replaced with **II[[]] to make a parameter an array reference.
       Callers of functions that take array references should not put an
       asterisk in the call; they must be called with just II[[]] like normal
       array parameters and will be automatically converted into references.

       As a nnoonn--ppoorrttaabbllee eexxtteennssiioonn, the opening brace of a ddeeffiinnee statement
       may appear on the next line.

       As a nnoonn--ppoorrttaabbllee eexxtteennssiioonn, the return statement may also be in one of
       the following forms:

       1. rreettuurrnn

       2. rreettuurrnn (( ))

       3. rreettuurrnn EE

       The first two, or not specifying a rreettuurrnn statement, is equivalent to
       rreettuurrnn ((00)), unless the function is a vvooiidd function (see the _V_o_i_d
       _F_u_n_c_t_i_o_n_s subsection below).

   VVooiidd FFuunnccttiioonnss
       Functions can also be vvooiidd functions, defined as follows:


              define void I(I,...,I){
                  auto I,...,I
                  S;...;S
                  return
              }


       They can only be used as standalone expressions, where such an
       expression would be printed alone, except in a print statement.

       Void functions can only use the first two rreettuurrnn statements listed
       above.  They can also omit the return statement entirely.

       The word “void” is not treated as a keyword; it is still possible to
       have variables, arrays, and functions named vvooiidd.  The word “void” is
       only treated specially right after the ddeeffiinnee keyword.

       This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

   AArrrraayy RReeffeerreenncceess
       For any array in the parameter list, if the array is declared in the
       form


              *I[]


       it is a rreeffeerreennccee.  Any changes to the array in the function are
       reflected, when the function returns, to the array that was passed in.

       Other than this, all function arguments are passed by value.

       This is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

LLIIBBRRAARRYY
       All of the functions below, including the functions in the extended
       math library (see the _E_x_t_e_n_d_e_d _L_i_b_r_a_r_y subsection below), are available
       when the --ll or ----mmaatthhlliibb command-line flags are given, except that the
       extended math library is not available when the --ss option, the --ww
       option, or equivalents are given.

   SSttaannddaarrdd LLiibbrraarryy
       The standard (see the SSTTAANNDDAARRDDSS section) defines the following
       functions for the math library:

       ss((xx))   Returns the sine of xx, which is assumed to be in radians.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       cc((xx))   Returns the cosine of xx, which is assumed to be in radians.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       aa((xx))   Returns the arctangent of xx, in radians.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       ll((xx))   Returns the natural logarithm of xx.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       ee((xx))   Returns the mathematical constant ee raised to the power of xx.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       jj((xx,, nn))
              Returns the bessel integer order nn (truncated) of xx.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

   EExxtteennddeedd LLiibbrraarryy
       The extended library is _n_o_t loaded when the --ss/----ssttaannddaarrdd or --ww/----wwaarrnn
       options are given since they are not part of the library defined by the
       standard (see the SSTTAANNDDAARRDDSS section).

       The extended library is a nnoonn--ppoorrttaabbllee eexxtteennssiioonn.

       pp((xx,, yy))
              Calculates xx to the power of yy, even if yy is not an integer, and
              returns the result to the current ssccaallee.

              It is an error if yy is negative and xx is 00.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       rr((xx,, pp))
              Returns xx rounded to pp decimal places according to the rounding
              mode round half away from 00
              (https://en.wikipedia.org/wiki/Rounding#Round_half_away_from_zero).

       cceeiill((xx,, pp))
              Returns xx rounded to pp decimal places according to the rounding
              mode round away from 00
              (https://en.wikipedia.org/wiki/Rounding#Rounding_away_from_zero).

       ff((xx))   Returns the factorial of the truncated absolute value of xx.

       ppeerrmm((nn,, kk))
              Returns the permutation of the truncated absolute value of nn of
              the truncated absolute value of kk, if kk <<== nn.  If not, it
              returns 00.

       ccoommbb((nn,, kk))
              Returns the combination of the truncated absolute value of nn of
              the truncated absolute value of kk, if kk <<== nn.  If not, it
              returns 00.

       ll22((xx))  Returns the logarithm base 22 of xx.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       ll1100((xx)) Returns the logarithm base 1100 of xx.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       lloogg((xx,, bb))
              Returns the logarithm base bb of xx.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       ccbbrrtt((xx))
              Returns the cube root of xx.

       rroooott((xx,, nn))
              Calculates the truncated value of nn, rr, and returns the rrth root
              of xx to the current ssccaallee.

              If rr is 00 or negative, this raises an error and causes bc(1) to
              reset (see the RREESSEETT section).  It also raises an error and
              causes bc(1) to reset if rr is even and xx is negative.

       ggccdd((aa,, bb))
              Returns the greatest common divisor (factor) of the truncated
              absolute value of aa and the truncated absolute value of bb.

       llccmm((aa,, bb))
              Returns the least common multiple of the truncated absolute
              value of aa and the truncated absolute value of bb.

       ppii((pp))  Returns ppii to pp decimal places.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       tt((xx))   Returns the tangent of xx, which is assumed to be in radians.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       aa22((yy,, xx))
              Returns the arctangent of yy//xx, in radians.  If both yy and xx are
              equal to 00, it raises an error and causes bc(1) to reset (see
              the RREESSEETT section).  Otherwise, if xx is greater than 00, it
              returns aa((yy//xx)).  If xx is less than 00, and yy is greater than or
              equal to 00, it returns aa((yy//xx))++ppii.  If xx is less than 00, and yy is
              less than 00, it returns aa((yy//xx))--ppii.  If xx is equal to 00, and yy is
              greater than 00, it returns ppii//22.  If xx is equal to 00, and yy is
              less than 00, it returns --ppii//22.

              This function is the same as the aattaann22(()) function in many
              programming languages.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       ssiinn((xx)) Returns the sine of xx, which is assumed to be in radians.

              This is an alias of ss((xx)).

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       ccooss((xx)) Returns the cosine of xx, which is assumed to be in radians.

              This is an alias of cc((xx)).

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       ttaann((xx)) Returns the tangent of xx, which is assumed to be in radians.

              If xx is equal to 11 or --11, this raises an error and causes bc(1)
              to reset (see the RREESSEETT section).

              This is an alias of tt((xx)).

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       aattaann((xx))
              Returns the arctangent of xx, in radians.

              This is an alias of aa((xx)).

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       aattaann22((yy,, xx))
              Returns the arctangent of yy//xx, in radians.  If both yy and xx are
              equal to 00, it raises an error and causes bc(1) to reset (see
              the RREESSEETT section).  Otherwise, if xx is greater than 00, it
              returns aa((yy//xx)).  If xx is less than 00, and yy is greater than or
              equal to 00, it returns aa((yy//xx))++ppii.  If xx is less than 00, and yy is
              less than 00, it returns aa((yy//xx))--ppii.  If xx is equal to 00, and yy is
              greater than 00, it returns ppii//22.  If xx is equal to 00, and yy is
              less than 00, it returns --ppii//22.

              This function is the same as the aattaann22(()) function in many
              programming languages.

              This is an alias of aa22((yy,, xx)).

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       rr22dd((xx)) Converts xx from radians to degrees and returns the result.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       dd22rr((xx)) Converts xx from degrees to radians and returns the result.

              This is a transcendental function (see the _T_r_a_n_s_c_e_n_d_e_n_t_a_l
              _F_u_n_c_t_i_o_n_s subsection below).

       ffrraanndd((pp))
              Generates a pseudo-random number between 00 (inclusive) and 11
              (exclusive) with the number of decimal digits after the decimal
              point equal to the truncated absolute value of pp.  If pp is not
              00, then calling this function will change the value of sseeeedd.  If
              pp is 00, then 00 is returned, and sseeeedd is _n_o_t changed.

       iiffrraanndd((ii,, pp))
              Generates a pseudo-random number that is between 00 (inclusive)
              and the truncated absolute value of ii (exclusive) with the
              number of decimal digits after the decimal point equal to the
              truncated absolute value of pp.  If the absolute value of ii is
              greater than or equal to 22, and pp is not 00, then calling this
              function will change the value of sseeeedd; otherwise, 00 is returned
              and sseeeedd is not changed.

       ssrraanndd((xx))
              Returns xx with its sign flipped with probability 00..55.  In other
              words, it randomizes the sign of xx.

       bbrraanndd(())
              Returns a random boolean value (either 00 or 11).

       bbaanndd((aa,, bb))
              Takes the truncated absolute value of both aa and bb and
              calculates and returns the result of the bitwise aanndd operation
              between them.

              If you want to use signed two’s complement arguments, use ss22uu((xx))
              to convert.

       bboorr((aa,, bb))
              Takes the truncated absolute value of both aa and bb and
              calculates and returns the result of the bitwise oorr operation
              between them.

              If you want to use signed two’s complement arguments, use ss22uu((xx))
              to convert.

       bbxxoorr((aa,, bb))
              Takes the truncated absolute value of both aa and bb and
              calculates and returns the result of the bitwise xxoorr operation
              between them.

              If you want to use signed two’s complement arguments, use ss22uu((xx))
              to convert.

       bbsshhll((aa,, bb))
              Takes the truncated absolute value of both aa and bb and
              calculates and returns the result of aa bit-shifted left by bb
              places.

              If you want to use signed two’s complement arguments, use ss22uu((xx))
              to convert.

       bbsshhrr((aa,, bb))
              Takes the truncated absolute value of both aa and bb and
              calculates and returns the truncated result of aa bit-shifted
              right by bb places.

              If you want to use signed two’s complement arguments, use ss22uu((xx))
              to convert.

       bbnnoottnn((xx,, nn))
              Takes the truncated absolute value of xx and does a bitwise not
              as though it has the same number of bytes as the truncated
              absolute value of nn.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbnnoott88((xx))
              Does a bitwise not of the truncated absolute value of xx as
              though it has 88 binary digits (1 unsigned byte).

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbnnoott1166((xx))
              Does a bitwise not of the truncated absolute value of xx as
              though it has 1166 binary digits (2 unsigned bytes).

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbnnoott3322((xx))
              Does a bitwise not of the truncated absolute value of xx as
              though it has 3322 binary digits (4 unsigned bytes).

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbnnoott6644((xx))
              Does a bitwise not of the truncated absolute value of xx as
              though it has 6644 binary digits (8 unsigned bytes).

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbnnoott((xx))
              Does a bitwise not of the truncated absolute value of xx as
              though it has the minimum number of power of two unsigned bytes.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrreevvnn((xx,, nn))
              Runs a bit reversal on the truncated absolute value of xx as
              though it has the same number of 8-bit bytes as the truncated
              absolute value of nn.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrreevv88((xx))
              Runs a bit reversal on the truncated absolute value of xx as
              though it has 8 binary digits (1 unsigned byte).

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrreevv1166((xx))
              Runs a bit reversal on the truncated absolute value of xx as
              though it has 16 binary digits (2 unsigned bytes).

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrreevv3322((xx))
              Runs a bit reversal on the truncated absolute value of xx as
              though it has 32 binary digits (4 unsigned bytes).

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrreevv6644((xx))
              Runs a bit reversal on the truncated absolute value of xx as
              though it has 64 binary digits (8 unsigned bytes).

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrreevv((xx))
              Runs a bit reversal on the truncated absolute value of xx as
              though it has the minimum number of power of two unsigned bytes.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrroollnn((xx,, pp,, nn))
              Does a left bitwise rotatation of the truncated absolute value
              of xx, as though it has the same number of unsigned 8-bit bytes
              as the truncated absolute value of nn, by the number of places
              equal to the truncated absolute value of pp modded by the 22 to
              the power of the number of binary digits in nn 8-bit bytes.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrrooll88((xx,, pp))
              Does a left bitwise rotatation of the truncated absolute value
              of xx, as though it has 88 binary digits (11 unsigned byte), by the
              number of places equal to the truncated absolute value of pp
              modded by 22 to the power of 88.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrrooll1166((xx,, pp))
              Does a left bitwise rotatation of the truncated absolute value
              of xx, as though it has 1166 binary digits (22 unsigned bytes), by
              the number of places equal to the truncated absolute value of pp
              modded by 22 to the power of 1166.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrrooll3322((xx,, pp))
              Does a left bitwise rotatation of the truncated absolute value
              of xx, as though it has 3322 binary digits (22 unsigned bytes), by
              the number of places equal to the truncated absolute value of pp
              modded by 22 to the power of 3322.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrrooll6644((xx,, pp))
              Does a left bitwise rotatation of the truncated absolute value
              of xx, as though it has 6644 binary digits (22 unsigned bytes), by
              the number of places equal to the truncated absolute value of pp
              modded by 22 to the power of 6644.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrrooll((xx,, pp))
              Does a left bitwise rotatation of the truncated absolute value
              of xx, as though it has the minimum number of power of two
              unsigned 8-bit bytes, by the number of places equal to the
              truncated absolute value of pp modded by 2 to the power of the
              number of binary digits in the minimum number of 8-bit bytes.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrroorrnn((xx,, pp,, nn))
              Does a right bitwise rotatation of the truncated absolute value
              of xx, as though it has the same number of unsigned 8-bit bytes
              as the truncated absolute value of nn, by the number of places
              equal to the truncated absolute value of pp modded by the 22 to
              the power of the number of binary digits in nn 8-bit bytes.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrroorr88((xx,, pp))
              Does a right bitwise rotatation of the truncated absolute value
              of xx, as though it has 88 binary digits (11 unsigned byte), by the
              number of places equal to the truncated absolute value of pp
              modded by 22 to the power of 88.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrroorr1166((xx,, pp))
              Does a right bitwise rotatation of the truncated absolute value
              of xx, as though it has 1166 binary digits (22 unsigned bytes), by
              the number of places equal to the truncated absolute value of pp
              modded by 22 to the power of 1166.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrroorr3322((xx,, pp))
              Does a right bitwise rotatation of the truncated absolute value
              of xx, as though it has 3322 binary digits (22 unsigned bytes), by
              the number of places equal to the truncated absolute value of pp
              modded by 22 to the power of 3322.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrroorr6644((xx,, pp))
              Does a right bitwise rotatation of the truncated absolute value
              of xx, as though it has 6644 binary digits (22 unsigned bytes), by
              the number of places equal to the truncated absolute value of pp
              modded by 22 to the power of 6644.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbrroorr((xx,, pp))
              Does a right bitwise rotatation of the truncated absolute value
              of xx, as though it has the minimum number of power of two
              unsigned 8-bit bytes, by the number of places equal to the
              truncated absolute value of pp modded by 2 to the power of the
              number of binary digits in the minimum number of 8-bit bytes.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbmmooddnn((xx,, nn))
              Returns the modulus of the truncated absolute value of xx by 22 to
              the power of the multiplication of the truncated absolute value
              of nn and 88.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbmmoodd88((xx,, nn))
              Returns the modulus of the truncated absolute value of xx by 22 to
              the power of 88.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbmmoodd1166((xx,, nn))
              Returns the modulus of the truncated absolute value of xx by 22 to
              the power of 1166.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbmmoodd3322((xx,, nn))
              Returns the modulus of the truncated absolute value of xx by 22 to
              the power of 3322.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbmmoodd6644((xx,, nn))
              Returns the modulus of the truncated absolute value of xx by 22 to
              the power of 6644.

              If you want to a use signed two’s complement argument, use
              ss22uu((xx)) to convert.

       bbuunnrreevv((tt))
              Assumes tt is a bitwise-reversed number with an extra set bit one
              place more significant than the real most significant bit (which
              was the least significant bit in the original number).  This
              number is reversed and returned without the extra set bit.

              This function is used to implement other bitwise functions; it
              is not meant to be used by users, but it can be.

       ppllzz((xx)) If xx is not equal to 00 and greater that --11 and less than 11, it
              is printed with a leading zero, regardless of the use of the --zz
              option (see the OOPPTTIIOONNSS section) and without a trailing newline.

              Otherwise, xx is printed normally, without a trailing newline.

       ppllzznnll((xx))
              If xx is not equal to 00 and greater that --11 and less than 11, it
              is printed with a leading zero, regardless of the use of the --zz
              option (see the OOPPTTIIOONNSS section) and with a trailing newline.

              Otherwise, xx is printed normally, with a trailing newline.

       ppnnllzz((xx))
              If xx is not equal to 00 and greater that --11 and less than 11, it
              is printed without a leading zero, regardless of the use of the
              --zz option (see the OOPPTTIIOONNSS section) and without a trailing
              newline.

              Otherwise, xx is printed normally, without a trailing newline.

       ppnnllzznnll((xx))
              If xx is not equal to 00 and greater that --11 and less than 11, it
              is printed without a leading zero, regardless of the use of the
              --zz option (see the OOPPTTIIOONNSS section) and with a trailing newline.

              Otherwise, xx is printed normally, with a trailing newline.

       uubbyytteess((xx))
              Returns the numbers of unsigned integer bytes required to hold
              the truncated absolute value of xx.

       ssbbyytteess((xx))
              Returns the numbers of signed, two’s-complement integer bytes
              required to hold the truncated value of xx.

       ss22uu((xx)) Returns xx if it is non-negative.  If it _i_s negative, then it
              calculates what xx would be as a 2’s-complement signed integer
              and returns the non-negative integer that would have the same
              representation in binary.

       ss22uunn((xx,,nn))
              Returns xx if it is non-negative.  If it _i_s negative, then it
              calculates what xx would be as a 2’s-complement signed integer
              with nn bytes and returns the non-negative integer that would
              have the same representation in binary.  If xx cannot fit into nn
              2’s-complement signed bytes, it is truncated to fit.

       hheexx((xx)) Outputs the hexadecimal (base 1166) representation of xx.

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       bbiinnaarryy((xx))
              Outputs the binary (base 22) representation of xx.

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       oouuttppuutt((xx,, bb))
              Outputs the base bb representation of xx.

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       uuiinntt((xx))
              Outputs the representation, in binary and hexadecimal, of xx as
              an unsigned integer in as few power of two bytes as possible.
              Both outputs are split into bytes separated by spaces.

              If xx is not an integer or is negative, an error message is
              printed instead, but bc(1) is not reset (see the RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       iinntt((xx)) Outputs the representation, in binary and hexadecimal, of xx as a
              signed, two’s-complement integer in as few power of two bytes as
              possible.  Both outputs are split into bytes separated by
              spaces.

              If xx is not an integer, an error message is printed instead, but
              bc(1) is not reset (see the RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       uuiinnttnn((xx,, nn))
              Outputs the representation, in binary and hexadecimal, of xx as
              an unsigned integer in nn bytes.  Both outputs are split into
              bytes separated by spaces.

              If xx is not an integer, is negative, or cannot fit into nn bytes,
              an error message is printed instead, but bc(1) is not reset (see
              the RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       iinnttnn((xx,, nn))
              Outputs the representation, in binary and hexadecimal, of xx as a
              signed, two’s-complement integer in nn bytes.  Both outputs are
              split into bytes separated by spaces.

              If xx is not an integer or cannot fit into nn bytes, an error
              message is printed instead, but bc(1) is not reset (see the
              RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       uuiinntt88((xx))
              Outputs the representation, in binary and hexadecimal, of xx as
              an unsigned integer in 11 byte.  Both outputs are split into
              bytes separated by spaces.

              If xx is not an integer, is negative, or cannot fit into 11 byte,
              an error message is printed instead, but bc(1) is not reset (see
              the RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       iinntt88((xx))
              Outputs the representation, in binary and hexadecimal, of xx as a
              signed, two’s-complement integer in 11 byte.  Both outputs are
              split into bytes separated by spaces.

              If xx is not an integer or cannot fit into 11 byte, an error
              message is printed instead, but bc(1) is not reset (see the
              RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       uuiinntt1166((xx))
              Outputs the representation, in binary and hexadecimal, of xx as
              an unsigned integer in 22 bytes.  Both outputs are split into
              bytes separated by spaces.

              If xx is not an integer, is negative, or cannot fit into 22 bytes,
              an error message is printed instead, but bc(1) is not reset (see
              the RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       iinntt1166((xx))
              Outputs the representation, in binary and hexadecimal, of xx as a
              signed, two’s-complement integer in 22 bytes.  Both outputs are
              split into bytes separated by spaces.

              If xx is not an integer or cannot fit into 22 bytes, an error
              message is printed instead, but bc(1) is not reset (see the
              RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       uuiinntt3322((xx))
              Outputs the representation, in binary and hexadecimal, of xx as
              an unsigned integer in 44 bytes.  Both outputs are split into
              bytes separated by spaces.

              If xx is not an integer, is negative, or cannot fit into 44 bytes,
              an error message is printed instead, but bc(1) is not reset (see
              the RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       iinntt3322((xx))
              Outputs the representation, in binary and hexadecimal, of xx as a
              signed, two’s-complement integer in 44 bytes.  Both outputs are
              split into bytes separated by spaces.

              If xx is not an integer or cannot fit into 44 bytes, an error
              message is printed instead, but bc(1) is not reset (see the
              RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       uuiinntt6644((xx))
              Outputs the representation, in binary and hexadecimal, of xx as
              an unsigned integer in 88 bytes.  Both outputs are split into
              bytes separated by spaces.

              If xx is not an integer, is negative, or cannot fit into 88 bytes,
              an error message is printed instead, but bc(1) is not reset (see
              the RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       iinntt6644((xx))
              Outputs the representation, in binary and hexadecimal, of xx as a
              signed, two’s-complement integer in 88 bytes.  Both outputs are
              split into bytes separated by spaces.

              If xx is not an integer or cannot fit into 88 bytes, an error
              message is printed instead, but bc(1) is not reset (see the
              RREESSEETT section).

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       hheexx__uuiinntt((xx,, nn))
              Outputs the representation of the truncated absolute value of xx
              as an unsigned integer in hexadecimal using nn bytes.  Not all of
              the value will be output if nn is too small.

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       bbiinnaarryy__uuiinntt((xx,, nn))
              Outputs the representation of the truncated absolute value of xx
              as an unsigned integer in binary using nn bytes.  Not all of the
              value will be output if nn is too small.

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       oouuttppuutt__uuiinntt((xx,, nn))
              Outputs the representation of the truncated absolute value of xx
              as an unsigned integer in the current oobbaassee (see the SSYYNNTTAAXX
              section) using nn bytes.  Not all of the value will be output if
              nn is too small.

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

       oouuttppuutt__bbyyttee((xx,, ii))
              Outputs byte ii of the truncated absolute value of xx, where 00 is
              the least significant byte and nnuummbbeerr__ooff__bbyytteess -- 11 is the most
              significant byte.

              This is a vvooiidd function (see the _V_o_i_d _F_u_n_c_t_i_o_n_s subsection of
              the FFUUNNCCTTIIOONNSS section).

   TTrraannsscceennddeennttaall FFuunnccttiioonnss
       All transcendental functions can return slightly inaccurate results, up
       to 1 ULP (https://en.wikipedia.org/wiki/Unit_in_the_last_place).  This
       is unavoidable, and the article at
       https://people.eecs.berkeley.edu/~wkahan/LOG10HAF.TXT explains why it
       is impossible and unnecessary to calculate exact results for the
       transcendental functions.

       Because of the possible inaccuracy, I recommend that users call those
       functions with the precision (ssccaallee) set to at least 1 higher than is
       necessary.  If exact results are _a_b_s_o_l_u_t_e_l_y required, users can double
       the precision (ssccaallee) and then truncate.

       The transcendental functions in the standard math library are:

       • ss((xx))

       • cc((xx))

       • aa((xx))

       • ll((xx))

       • ee((xx))

       • jj((xx,, nn))

       The transcendental functions in the extended math library are:

       • ll22((xx))

       • ll1100((xx))

       • lloogg((xx,, bb))

       • ppii((pp))

       • tt((xx))

       • aa22((yy,, xx))

       • ssiinn((xx))

       • ccooss((xx))

       • ttaann((xx))

       • aattaann((xx))

       • aattaann22((yy,, xx))

       • rr22dd((xx))

       • dd22rr((xx))

RREESSEETT
       When bc(1) encounters an error or a signal that it has a non-default
       handler for, it resets.  This means that several things happen.

       First, any functions that are executing are stopped and popped off the
       stack.  The behavior is not unlike that of exceptions in programming
       languages.  Then the execution point is set so that any code waiting to
       execute (after all functions returned) is skipped.

       Thus, when bc(1) resets, it skips any remaining code waiting to be
       executed.  Then, if it is interactive mode, and the error was not a
       fatal error (see the EEXXIITT SSTTAATTUUSS section), it asks for more input;
       otherwise, it exits with the appropriate return code.

       Note that this reset behavior is different from the GNU bc(1), which
       attempts to start executing the statement right after the one that
       caused an error.

PPEERRFFOORRMMAANNCCEE
       Most bc(1) implementations use cchhaarr types to calculate the value of 11
       decimal digit at a time, but that can be slow.  This bc(1) does
       something different.

       It uses large integers to calculate more than 11 decimal digit at a
       time.  If built in a environment where BBCC__LLOONNGG__BBIITT (see the LLIIMMIITTSS
       section) is 6644, then each integer has 99 decimal digits.  If built in an
       environment where BBCC__LLOONNGG__BBIITT is 3322 then each integer has 44 decimal
       digits.  This value (the number of decimal digits per large integer) is
       called BBCC__BBAASSEE__DDIIGGSS.

       The actual values of BBCC__LLOONNGG__BBIITT and BBCC__BBAASSEE__DDIIGGSS can be queried with
       the lliimmiittss statement.

       In addition, this bc(1) uses an even larger integer for overflow
       checking.  This integer type depends on the value of BBCC__LLOONNGG__BBIITT, but
       is always at least twice as large as the integer type used to store
       digits.

LLIIMMIITTSS
       The following are the limits on bc(1):

       BBCC__LLOONNGG__BBIITT
              The number of bits in the lloonngg type in the environment where
              bc(1) was built.  This determines how many decimal digits can be
              stored in a single large integer (see the PPEERRFFOORRMMAANNCCEE section).

       BBCC__BBAASSEE__DDIIGGSS
              The number of decimal digits per large integer (see the
              PPEERRFFOORRMMAANNCCEE section).  Depends on BBCC__LLOONNGG__BBIITT.

       BBCC__BBAASSEE__PPOOWW
              The max decimal number that each large integer can store (see
              BBCC__BBAASSEE__DDIIGGSS) plus 11.  Depends on BBCC__BBAASSEE__DDIIGGSS.

       BBCC__OOVVEERRFFLLOOWW__MMAAXX
              The max number that the overflow type (see the PPEERRFFOORRMMAANNCCEE
              section) can hold.  Depends on BBCC__LLOONNGG__BBIITT.

       BBCC__BBAASSEE__MMAAXX
              The maximum output base.  Set at BBCC__BBAASSEE__PPOOWW.

       BBCC__DDIIMM__MMAAXX
              The maximum size of arrays.  Set at SSIIZZEE__MMAAXX--11.

       BBCC__SSCCAALLEE__MMAAXX
              The maximum ssccaallee.  Set at BBCC__OOVVEERRFFLLOOWW__MMAAXX--11.

       BBCC__SSTTRRIINNGG__MMAAXX
              The maximum length of strings.  Set at BBCC__OOVVEERRFFLLOOWW__MMAAXX--11.

       BBCC__NNAAMMEE__MMAAXX
              The maximum length of identifiers.  Set at BBCC__OOVVEERRFFLLOOWW__MMAAXX--11.

       BBCC__NNUUMM__MMAAXX
              The maximum length of a number (in decimal digits), which
              includes digits after the decimal point.  Set at
              BBCC__OOVVEERRFFLLOOWW__MMAAXX--11.

       BBCC__RRAANNDD__MMAAXX
              The maximum integer (inclusive) returned by the rraanndd(()) operand.
              Set at 22^^BBCC__LLOONNGG__BBIITT--11.

       Exponent
              The maximum allowable exponent (positive or negative).  Set at
              BBCC__OOVVEERRFFLLOOWW__MMAAXX.

       Number of vars
              The maximum number of vars/arrays.  Set at SSIIZZEE__MMAAXX--11.

       The actual values can be queried with the lliimmiittss statement.

       These limits are meant to be effectively non-existent; the limits are
       so large (at least on 64-bit machines) that there should not be any
       point at which they become a problem.  In fact, memory should be
       exhausted before these limits should be hit.

EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS
       As nnoonn--ppoorrttaabbllee eexxtteennssiioonnss, bc(1) recognizes the following environment
       variables:

       PPOOSSIIXXLLYY__CCOORRRREECCTT
              If this variable exists (no matter the contents), bc(1) behaves
              as if the --ss option was given.

       BBCC__EENNVV__AARRGGSS
              This is another way to give command-line arguments to bc(1).
              They should be in the same format as all other command-line
              arguments.  These are always processed first, so any files given
              in BBCC__EENNVV__AARRGGSS will be processed before arguments and files
              given on the command-line.  This gives the user the ability to
              set up “standard” options and files to be used at every
              invocation.  The most useful thing for such files to contain
              would be useful functions that the user might want every time
              bc(1) runs.

              The code that parses BBCC__EENNVV__AARRGGSS will correctly handle quoted
              arguments, but it does not understand escape sequences.  For
              example, the string ““//hhoommee//ggaavviinn//ssoommee bbcc ffiillee..bbcc”” will be
              correctly parsed, but the string ““//hhoommee//ggaavviinn//ssoommee """"bbcc"""" ffiillee..bbcc””
              will include the backslashes.

              The quote parsing will handle either kind of quotes, ’’ or ““.
              Thus, if you have a file with any number of single quotes in the
              name, you can use double quotes as the outside quotes, as in
              ““ssoommee ``bbcc'' ffiillee..bbcc””, and vice versa if you have a file with
              double quotes.  However, handling a file with both kinds of
              quotes in BBCC__EENNVV__AARRGGSS is not supported due to the complexity of
              the parsing, though such files are still supported on the
              command-line where the parsing is done by the shell.

       BBCC__LLIINNEE__LLEENNGGTTHH
              If this environment variable exists and contains an integer that
              is greater than 11 and is less than UUIINNTT1166__MMAAXX (22^^1166--11), bc(1)
              will output lines to that length, including the backslash (\\).
              The default line length is 7700.

              The special value of 00 will disable line length checking and
              print numbers without regard to line length and without
              backslashes and newlines.

       BBCC__BBAANNNNEERR
              If this environment variable exists and contains an integer,
              then a non-zero value activates the copyright banner when bc(1)
              is in interactive mode, while zero deactivates it.

              If bc(1) is not in interactive mode (see the IINNTTEERRAACCTTIIVVEE MMOODDEE
              section), then this environment variable has no effect because
              bc(1) does not print the banner when not in interactive mode.

              This environment variable overrides the default, which can be
              queried with the --hh or ----hheellpp options.

       BBCC__SSIIGGIINNTT__RREESSEETT
              If bc(1) is not in interactive mode (see the IINNTTEERRAACCTTIIVVEE MMOODDEE
              section), then this environment variable has no effect because
              bc(1) exits on SSIIGGIINNTT when not in interactive mode.

              However, when bc(1) is in interactive mode, then if this
              environment variable exists and contains an integer, a non-zero
              value makes bc(1) reset on SSIIGGIINNTT, rather than exit, and zero
              makes bc(1) exit.  If this environment variable exists and is
              _n_o_t an integer, then bc(1) will exit on SSIIGGIINNTT.

              This environment variable overrides the default, which can be
              queried with the --hh or ----hheellpp options.

       BBCC__TTTTYY__MMOODDEE
              If TTY mode is _n_o_t available (see the TTTTYY MMOODDEE section), then
              this environment variable has no effect.

              However, when TTY mode is available, then if this environment
              variable exists and contains an integer, then a non-zero value
              makes bc(1) use TTY mode, and zero makes bc(1) not use TTY mode.

              This environment variable overrides the default, which can be
              queried with the --hh or ----hheellpp options.

       BBCC__PPRROOMMPPTT
              If TTY mode is _n_o_t available (see the TTTTYY MMOODDEE section), then
              this environment variable has no effect.

              However, when TTY mode is available, then if this environment
              variable exists and contains an integer, a non-zero value makes
              bc(1) use a prompt, and zero or a non-integer makes bc(1) not
              use a prompt.  If this environment variable does not exist and
              BBCC__TTTTYY__MMOODDEE does, then the value of the BBCC__TTTTYY__MMOODDEE environment
              variable is used.

              This environment variable and the BBCC__TTTTYY__MMOODDEE environment
              variable override the default, which can be queried with the --hh
              or ----hheellpp options.

       BBCC__EEXXPPRR__EEXXIITT
              If any expressions or expression files are given on the command-
              line with --ee, ----eexxpprreessssiioonn, --ff, or ----ffiillee, then if this
              environment variable exists and contains an integer, a non-zero
              value makes bc(1) exit after executing the expressions and
              expression files, and a zero value makes bc(1) not exit.

              This environment variable overrides the default, which can be
              queried with the --hh or ----hheellpp options.

       BBCC__DDIIGGIITT__CCLLAAMMPP
              When parsing numbers and if this environment variable exists and
              contains an integer, a non-zero value makes bc(1) clamp digits
              that are greater than or equal to the current iibbaassee so that all
              such digits are considered equal to the iibbaassee minus 1, and a
              zero value disables such clamping so that those digits are
              always equal to their value, which is multiplied by the power of
              the iibbaassee.

              This never applies to single-digit numbers, as per the standard
              (see the SSTTAANNDDAARRDDSS section).

              This environment variable overrides the default, which can be
              queried with the --hh or ----hheellpp options.

EEXXIITT SSTTAATTUUSS
       bc(1) returns the following exit statuses:

       00      No error.

       11      A math error occurred.  This follows standard practice of using
              11 for expected errors, since math errors will happen in the
              process of normal execution.

              Math errors include divide by 00, taking the square root of a
              negative number, using a negative number as a bound for the
              pseudo-random number generator, attempting to convert a negative
              number to a hardware integer, overflow when converting a number
              to a hardware integer, overflow when calculating the size of a
              number, and attempting to use a non-integer where an integer is
              required.

              Converting to a hardware integer happens for the second operand
              of the power (^^), places (@@), left shift (<<<<), and right shift
              (>>>>) operators and their corresponding assignment operators.

       22      A parse error occurred.

              Parse errors include unexpected EEOOFF, using an invalid character,
              failing to find the end of a string or comment, using a token
              where it is invalid, giving an invalid expression, giving an
              invalid print statement, giving an invalid function definition,
              attempting to assign to an expression that is not a named
              expression (see the _N_a_m_e_d _E_x_p_r_e_s_s_i_o_n_s subsection of the SSYYNNTTAAXX
              section), giving an invalid aauuttoo list, having a duplicate
              aauuttoo/function parameter, failing to find the end of a code
              block, attempting to return a value from a vvooiidd function,
              attempting to use a variable as a reference, and using any
              extensions when the option --ss or any equivalents were given.

       33      A runtime error occurred.

              Runtime errors include assigning an invalid number to any global
              (iibbaassee, oobbaassee, or ssccaallee), giving a bad expression to a rreeaadd(())
              call, calling rreeaadd(()) inside of a rreeaadd(()) call, type errors,
              passing the wrong number of arguments to functions, attempting
              to call an undefined function, and attempting to use a vvooiidd
              function call as a value in an expression.

       44      A fatal error occurred.

              Fatal errors include memory allocation errors, I/O errors,
              failing to open files, attempting to use files that do not have
              only ASCII characters (bc(1) only accepts ASCII characters),
              attempting to open a directory as a file, and giving invalid
              command-line options.

       The exit status 44 is special; when a fatal error occurs, bc(1) always
       exits and returns 44, no matter what mode bc(1) is in.

       The other statuses will only be returned when bc(1) is not in
       interactive mode (see the IINNTTEERRAACCTTIIVVEE MMOODDEE section), since bc(1) resets
       its state (see the RREESSEETT section) and accepts more input when one of
       those errors occurs in interactive mode.  This is also the case when
       interactive mode is forced by the --ii flag or ----iinntteerraaccttiivvee option.

       These exit statuses allow bc(1) to be used in shell scripting with
       error checking, and its normal behavior can be forced by using the --ii
       flag or ----iinntteerraaccttiivvee option.

IINNTTEERRAACCTTIIVVEE MMOODDEE
       Per the standard (see the SSTTAANNDDAARRDDSS section), bc(1) has an interactive
       mode and a non-interactive mode.  Interactive mode is turned on
       automatically when both ssttddiinn and ssttddoouutt are hooked to a terminal, but
       the --ii flag and ----iinntteerraaccttiivvee option can turn it on in other
       situations.

       In interactive mode, bc(1) attempts to recover from errors (see the
       RREESSEETT section), and in normal execution, flushes ssttddoouutt as soon as
       execution is done for the current input.  bc(1) may also reset on
       SSIIGGIINNTT instead of exit, depending on the contents of, or default for,
       the BBCC__SSIIGGIINNTT__RREESSEETT environment variable (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS
       section).

TTTTYY MMOODDEE
       If ssttddiinn, ssttddoouutt, and ssttddeerrrr are all connected to a TTY, then “TTY
       mode” is considered to be available, and thus, bc(1) can turn on TTY
       mode, subject to some settings.

       If there is the environment variable BBCC__TTTTYY__MMOODDEE in the environment
       (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section), then if that environment
       variable contains a non-zero integer, bc(1) will turn on TTY mode when
       ssttddiinn, ssttddoouutt, and ssttddeerrrr are all connected to a TTY.  If the
       BBCC__TTTTYY__MMOODDEE environment variable exists but is _n_o_t a non-zero integer,
       then bc(1) will not turn TTY mode on.

       If the environment variable BBCC__TTTTYY__MMOODDEE does _n_o_t exist, the default
       setting is used.  The default setting can be queried with the --hh or
       ----hheellpp options.

       TTY mode is different from interactive mode because interactive mode is
       required in the bc(1) standard (see the SSTTAANNDDAARRDDSS section), and
       interactive mode requires only ssttddiinn and ssttddoouutt to be connected to a
       terminal.

   CCoommmmaanndd--LLiinnee HHiissttoorryy
       Command-line history is only enabled if TTY mode is, i.e., that ssttddiinn,
       ssttddoouutt, and ssttddeerrrr are connected to a TTY and the BBCC__TTTTYY__MMOODDEE
       environment variable (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section) and its
       default do not disable TTY mode.  See the CCOOMMMMAANNDD LLIINNEE HHIISSTTOORRYY section
       for more information.

   PPrroommpptt
       If TTY mode is available, then a prompt can be enabled.  Like TTY mode
       itself, it can be turned on or off with an environment variable:
       BBCC__PPRROOMMPPTT (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section).

       If the environment variable BBCC__PPRROOMMPPTT exists and is a non-zero integer,
       then the prompt is turned on when ssttddiinn, ssttddoouutt, and ssttddeerrrr are
       connected to a TTY and the --PP and ----nnoo--pprroommpptt options were not used.
       The read prompt will be turned on under the same conditions, except
       that the --RR and ----nnoo--rreeaadd--pprroommpptt options must also not be used.

       However, if BBCC__PPRROOMMPPTT does not exist, the prompt can be enabled or
       disabled with the BBCC__TTTTYY__MMOODDEE environment variable, the --PP and ----nnoo--
       pprroommpptt options, and the --RR and ----nnoo--rreeaadd--pprroommpptt options.  See the
       EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS and OOPPTTIIOONNSS sections for more details.

SSIIGGNNAALL HHAANNDDLLIINNGG
       Sending a SSIIGGIINNTT will cause bc(1) to do one of two things.

       If bc(1) is not in interactive mode (see the IINNTTEERRAACCTTIIVVEE MMOODDEE section),
       or the BBCC__SSIIGGIINNTT__RREESSEETT environment variable (see the EENNVVIIRROONNMMEENNTT
       VVAARRIIAABBLLEESS section), or its default, is either not an integer or it is
       zero, bc(1) will exit.

       However, if bc(1) is in interactive mode, and the BBCC__SSIIGGIINNTT__RREESSEETT or
       its default is an integer and non-zero, then bc(1) will stop executing
       the current input and reset (see the RREESSEETT section) upon receiving a
       SSIIGGIINNTT.

       Note that “current input” can mean one of two things.  If bc(1) is
       processing input from ssttddiinn in interactive mode, it will ask for more
       input.  If bc(1) is processing input from a file in interactive mode,
       it will stop processing the file and start processing the next file, if
       one exists, or ask for input from ssttddiinn if no other file exists.

       This means that if a SSIIGGIINNTT is sent to bc(1) as it is executing a file,
       it can seem as though bc(1) did not respond to the signal since it will
       immediately start executing the next file.  This is by design; most
       files that users execute when interacting with bc(1) have function
       definitions, which are quick to parse.  If a file takes a long time to
       execute, there may be a bug in that file.  The rest of the files could
       still be executed without problem, allowing the user to continue.

       SSIIGGTTEERRMM and SSIIGGQQUUIITT cause bc(1) to clean up and exit, and it uses the
       default handler for all other signals.  The one exception is SSIIGGHHUUPP; in
       that case, and only when bc(1) is in TTY mode (see the TTTTYY MMOODDEE
       section), a SSIIGGHHUUPP will cause bc(1) to clean up and exit.

CCOOMMMMAANNDD LLIINNEE HHIISSTTOORRYY
       bc(1) supports interactive command-line editing.

       If bc(1) can be in TTY mode (see the TTTTYY MMOODDEE section), history can be
       enabled.  This means that command-line history can only be enabled when
       ssttddiinn, ssttddoouutt, and ssttddeerrrr are all connected to a TTY.

       Like TTY mode itself, it can be turned on or off with the environment
       variable BBCC__TTTTYY__MMOODDEE (see the EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS section).

       If history is enabled, previous lines can be recalled and edited with
       the arrow keys.

       NNoottee: tabs are converted to 8 spaces.

LLOOCCAALLEESS
       This bc(1) ships with support for adding error messages for different
       locales and thus, supports LLCC__MMEESSSSAAGGEESS.

SSEEEE AALLSSOO
       dc(1)

SSTTAANNDDAARRDDSS
       bc(1) is compliant with the IEEE Std 1003.1-2017 (“POSIX.1-2017”)
       specification at
       https://pubs.opengroup.org/onlinepubs/9699919799/utilities/bc.html .
       The flags --eeffgghhiiqqssvvVVww, all long options, and the extensions noted above
       are extensions to that specification.

       In addition, the behavior of the qquuiitt implements an interpretation of
       that specification that is different from all known implementations.
       For more information see the SSttaatteemmeennttss subsection of the SSYYNNTTAAXX
       section.

       Note that the specification explicitly says that bc(1) only accepts
       numbers that use a period (..) as a radix point, regardless of the value
       of LLCC__NNUUMMEERRIICC.

       This bc(1) supports error messages for different locales, and thus, it
       supports LLCC__MMEESSSSAAGGEESS.

BBUUGGSS
       Before version 66..11..00, this bc(1) had incorrect behavior for the qquuiitt
       statement.

       No other bugs are known.  Report bugs at
       https://git.gavinhoward.com/gavin/bc .

AAUUTTHHOORRSS
       Gavin D.  Howard <gavin@gavinhoward.com> and contributors.

Gavin D. Howard                  February 2023                           BC(1)
"
expr,"EXPR(1)                     General Commands Manual                    EXPR(1)

NNAAMMEE
     eexxpprr – evaluate expression

SSYYNNOOPPSSIISS
     eexxpprr _e_x_p_r_e_s_s_i_o_n

DDEESSCCRRIIPPTTIIOONN
     The eexxpprr utility evaluates _e_x_p_r_e_s_s_i_o_n and writes the result on standard
     output.

     All operators and operands must be passed as separate arguments.  Several
     of the operators have special meaning to command interpreters and must
     therefore be quoted appropriately.  All integer operands are interpreted
     in base 10 and must consist of only an optional leading minus sign
     followed by one or more digits.

     Arithmetic operations are performed using signed integer math with a
     range according to the C _i_n_t_m_a_x___t data type (the largest signed integral
     type available).  All conversions and operations are checked for
     overflow.  Overflow results in program termination with an error message
     on stdout and with an error status.

     Operators are listed below in order of increasing precedence; all are
     left-associative.  Operators with equal precedence are grouped within
     symbols ‘{’ and ‘}’.

     _e_x_p_r_1 | _e_x_p_r_2
             Return the evaluation of _e_x_p_r_1 if it is neither an empty string
             nor zero; otherwise, returns the evaluation of _e_x_p_r_2 if it is not
             an empty string; otherwise, returns zero.

     _e_x_p_r_1 & _e_x_p_r_2
             Return the evaluation of _e_x_p_r_1 if neither expression evaluates to
             an empty string or zero; otherwise, returns zero.

     _e_x_p_r_1 {=, >, >=, <, <=, !=} _e_x_p_r_2
             Return the results of integer comparison if both arguments are
             integers; otherwise, returns the results of string comparison
             using the locale-specific collation sequence.  The result of each
             comparison is 1 if the specified relation is true, or 0 if the
             relation is false.

     _e_x_p_r_1 {+, -} _e_x_p_r_2
             Return the results of addition or subtraction of integer-valued
             arguments.

     _e_x_p_r_1 {*, /, %} _e_x_p_r_2
             Return the results of multiplication, integer division, or
             remainder of integer-valued arguments.

     _e_x_p_r_1 : _e_x_p_r_2
             The “:” operator matches _e_x_p_r_1 against _e_x_p_r_2, which must be a
             basic regular expression.  The regular expression is anchored to
             the beginning of the string with an implicit “^”.

             If the match succeeds and the pattern contains at least one
             regular expression subexpression “\(...\)”, the string
             corresponding to “\1” is returned; otherwise the matching
             operator returns the number of characters matched.  If the match
             fails and the pattern contains a regular expression subexpression
             the null string is returned; otherwise 0.

     Parentheses are used for grouping in the usual manner.

     The eexxpprr utility makes no lexical distinction between arguments which may
     be operators and arguments which may be operands.  An operand which is
     lexically identical to an operator will be considered a syntax error.
     See the examples below for a work-around.

     The syntax of the eexxpprr command in general is historic and inconvenient.
     New applications are advised to use shell arithmetic rather than eexxpprr.

EEXXIITT SSTTAATTUUSS
     The eexxpprr utility exits with one of the following values:
     0       the expression is neither an empty string nor 0.
     1       the expression is an empty string or 0.
     2       the expression is invalid.

EEXXAAMMPPLLEESS
     ••   The following example (in sh(1) syntax) adds one to the variable _a:
               a=$(expr $a + 1)

     ••   This will fail if the value of _a is a negative number.  To protect
         negative values of _a from being interpreted as options to the eexxpprr
         command, one might rearrange the expression:
               a=$(expr 1 + $a)

     ••   More generally, parenthesize possibly-negative values:
               a=$(expr \( $a \) + 1)

     ••   With shell arithmetic, no escaping is required:
               a=$((a + 1))

     ••   This example prints the filename portion of a pathname stored in
         variable _a.  Since _a might represent the path _/, it is necessary to
         prevent it from being interpreted as the division operator.  The //
         characters resolve this ambiguity.
               expr ""//$a"" : '.*/\(.*\)'

     ••   With modern sh(1) syntax,
               ""${a##*/}""
         expands to the same value.

     The following examples output the number of characters in variable _a.
     Again, if _a might begin with a hyphen, it is necessary to prevent it from
     being interpreted as an option to eexxpprr, and _a might be interpreted as an
     operator.

     ••   To deal with all of this, a complicated command is required:
               expr \( ""X$a"" : "".*"" \) - 1

     ••   With modern sh(1) syntax, this can be done much more easily:
               ${#a}
         expands to the required number.

SSEEEE AALLSSOO
     sh(1), test(1)

SSTTAANNDDAARRDDSS
     The eexxpprr utility conforms to IEEE Std 1003.1-2008 (“POSIX.1”).

     The extended arithmetic range and overflow checks do not conflict with
     POSIX's requirement that arithmetic be done using signed longs, since
     they only make a difference to the result in cases where using signed
     longs would give undefined behavior.

     According to the POSIX standard, the use of string arguments _l_e_n_g_t_h,
     _s_u_b_s_t_r, _i_n_d_e_x, or _m_a_t_c_h produces undefined results.  In this version of
     eexxpprr, these arguments are treated just as their respective string values.

HHIISSTTOORRYY
     An eexxpprr utility first appeared in the Programmer's Workbench (PWB/UNIX).
     A public domain version of eexxpprr written by Pace Willisson
     <_p_a_c_e_@_b_l_i_t_z_._c_o_m> appeared in 386BSD-0.1.

AAUUTTHHOORRSS
     Initial implementation by Pace Willisson <_p_a_c_e_@_b_l_i_t_z_._c_o_m> was largely
     rewritten by J.T. Conklin <_j_t_c_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                      October 5, 2016                     macOS 14.6
"
test,"TEST(1)                     General Commands Manual                    TEST(1)

NNAAMMEE
     tteesstt, [[ – condition evaluation utility

SSYYNNOOPPSSIISS
     tteesstt _e_x_p_r_e_s_s_i_o_n
     [[ _e_x_p_r_e_s_s_i_o_n ]]

DDEESSCCRRIIPPTTIIOONN
     The tteesstt utility evaluates the expression and, if it evaluates to true,
     returns a zero (true) exit status; otherwise it returns 1 (false).  If
     there is no expression, tteesstt also returns 1 (false).

     All operators and flags are separate arguments to the tteesstt utility.

     The following primaries are used to construct expression:

     --bb _f_i_l_e       True if _f_i_l_e exists and is a block special file.

     --cc _f_i_l_e       True if _f_i_l_e exists and is a character special file.

     --dd _f_i_l_e       True if _f_i_l_e exists and is a directory.

     --ee _f_i_l_e       True if _f_i_l_e exists (regardless of type).

     --ff _f_i_l_e       True if _f_i_l_e exists and is a regular file.

     --gg _f_i_l_e       True if _f_i_l_e exists and its set group ID flag is set.

     --hh _f_i_l_e       True if _f_i_l_e exists and is a symbolic link.  This operator
                   is retained for compatibility with previous versions of
                   this program.  Do not rely on its existence; use --LL
                   instead.

     --kk _f_i_l_e       True if _f_i_l_e exists and its sticky bit is set.

     --nn _s_t_r_i_n_g     True if the length of _s_t_r_i_n_g is nonzero.

     --pp _f_i_l_e       True if _f_i_l_e is a named pipe (FIFO).

     --rr _f_i_l_e       True if _f_i_l_e exists and is readable.

     --ss _f_i_l_e       True if _f_i_l_e exists and has a size greater than zero.

     --tt _f_i_l_e___d_e_s_c_r_i_p_t_o_r
                   True if the file whose file descriptor number is
                   _f_i_l_e___d_e_s_c_r_i_p_t_o_r is open and is associated with a terminal.

     --uu _f_i_l_e       True if _f_i_l_e exists and its set user ID flag is set.

     --ww _f_i_l_e       True if _f_i_l_e exists and is writable.  True indicates only
                   that the write flag is on.  The file is not writable on a
                   read-only file system even if this test indicates true.

     --xx _f_i_l_e       True if _f_i_l_e exists and is executable.  True indicates only
                   that the execute flag is on.  If _f_i_l_e is a directory, true
                   indicates that _f_i_l_e can be searched.

     --zz _s_t_r_i_n_g     True if the length of _s_t_r_i_n_g is zero.

     --LL _f_i_l_e       True if _f_i_l_e exists and is a symbolic link.

     --OO _f_i_l_e       True if _f_i_l_e exists and its owner matches the effective
                   user id of this process.

     --GG _f_i_l_e       True if _f_i_l_e exists and its group matches the effective
                   group id of this process.

     --SS _f_i_l_e       True if _f_i_l_e exists and is a socket.

     _f_i_l_e_1 --nntt _f_i_l_e_2
                   True if _f_i_l_e_1 exists and is newer than _f_i_l_e_2.

     _f_i_l_e_1 --oott _f_i_l_e_2
                   True if _f_i_l_e_1 exists and is older than _f_i_l_e_2.

     _f_i_l_e_1 --eeff _f_i_l_e_2
                   True if _f_i_l_e_1 and _f_i_l_e_2 exist and refer to the same file.

     _s_t_r_i_n_g        True if _s_t_r_i_n_g is not the null string.

     _s_1 == _s_2       True if the strings _s_1 and _s_2 are identical.

     _s_1 !!== _s_2      True if the strings _s_1 and _s_2 are not identical.

     _s_1 << _s_2       True if string _s_1 comes before _s_2 based on the binary value
                   of their characters.

     _s_1 >> _s_2       True if string _s_1 comes after _s_2 based on the binary value
                   of their characters.

     _n_1 --eeqq _n_2     True if the integers _n_1 and _n_2 are algebraically equal.

     _n_1 --nnee _n_2     True if the integers _n_1 and _n_2 are not algebraically equal.

     _n_1 --ggtt _n_2     True if the integer _n_1 is algebraically greater than the
                   integer _n_2.

     _n_1 --ggee _n_2     True if the integer _n_1 is algebraically greater than or
                   equal to the integer _n_2.

     _n_1 --lltt _n_2     True if the integer _n_1 is algebraically less than the
                   integer _n_2.

     _n_1 --llee _n_2     True if the integer _n_1 is algebraically less than or equal
                   to the integer _n_2.

     If _f_i_l_e is a symbolic link, tteesstt will fully dereference it and then
     evaluate the expression against the file referenced, except for the --hh
     and --LL primaries.

     These primaries can be combined with the following operators:

     !! _e_x_p_r_e_s_s_i_o_n  True if _e_x_p_r_e_s_s_i_o_n is false.

     _e_x_p_r_e_s_s_i_o_n_1 --aa _e_x_p_r_e_s_s_i_o_n_2
                   True if both _e_x_p_r_e_s_s_i_o_n_1 and _e_x_p_r_e_s_s_i_o_n_2 are true.

     _e_x_p_r_e_s_s_i_o_n_1 --oo _e_x_p_r_e_s_s_i_o_n_2
                   True if either _e_x_p_r_e_s_s_i_o_n_1 or _e_x_p_r_e_s_s_i_o_n_2 are true.

     (( _e_x_p_r_e_s_s_i_o_n ))
                   True if expression is true.

     The --aa operator has higher precedence than the --oo operator.

     Some shells may provide a builtin tteesstt command which is similar or
     identical to this utility.  Consult the builtin(1) manual page.

GGRRAAMMMMAARR AAMMBBIIGGUUIITTYY
     The tteesstt grammar is inherently ambiguous.  In order to assure a degree of
     consistency, the cases described in the IEEE Std 1003.2 (“POSIX.2”),
     section D11.2/4.62.4, standard are evaluated consistently according to
     the rules specified in the standards document.  All other cases are
     subject to the ambiguity in the command semantics.

     In particular, only expressions containing --aa, --oo, (( or )) can be
     ambiguous.

EEXXIITT SSTTAATTUUSS
     The tteesstt utility exits with one of the following values:

     0       expression evaluated to true.

     1       expression evaluated to false or expression was missing.

     >1      An error occurred.

EEXXAAMMPPLLEESS
     Implement test FILE1 -nt FILE2 using only POSIX functionality:

           test -n ""$(find -L -- FILE1 -prune -newer FILE2 2>/dev/null)""

     This can be modified using non-standard find(1) primaries like --nneewweerrccaa
     to compare other timestamps.

CCOOMMPPAATTIIBBIILLIITTYY
     For compatibility with some other implementations, the == primary can be
     substituted with ==== with the same meaning.

SSEEEE AALLSSOO
     builtin(1), expr(1), find(1), sh(1), stat(1), symlink(7)

SSTTAANNDDAARRDDSS
     The tteesstt utility implements a superset of the IEEE Std 1003.2 (“POSIX.2”)
     specification.  The primaries <<, ====, >>, --eeff, --nntt, --oott, --GG, and --OO are
     extensions.

HHIISSTTOORRYY
     A tteesstt utility appeared in Version 7 AT&T UNIX.

BBUUGGSS
     Both sides are always evaluated in --aa and --oo.  For instance, the writable
     status of _f_i_l_e will be tested by the following command even though the
     former expression indicated false, which results in a gratuitous access
     to the file system:
           [ -z abc -a -w file ]
     To avoid this, write
           [ -z abc ] && [ -w file ]

macOS 14.6                      October 5, 2016                     macOS 14.6
"
printf,"PRINTF(1)                   General Commands Manual                  PRINTF(1)

NNAAMMEE
     pprriinnttff – formatted output

SSYYNNOOPPSSIISS
     pprriinnttff _f_o_r_m_a_t [_a_r_g_u_m_e_n_t_s _._._.]

DDEESSCCRRIIPPTTIIOONN
     The pprriinnttff utility formats and prints its arguments, after the first,
     under control of the _f_o_r_m_a_t.  The _f_o_r_m_a_t is a character string which
     contains three types of objects: plain characters, which are simply
     copied to standard output, character escape sequences which are converted
     and copied to the standard output, and format specifications, each of
     which causes printing of the next successive _a_r_g_u_m_e_n_t.

     The _a_r_g_u_m_e_n_t_s after the first are treated as strings if the corresponding
     format is either cc, bb or ss; otherwise it is evaluated as a C constant,
     with the following extensions:

           ••   A leading plus or minus sign is allowed.
           ••   If the leading character is a single or double quote, the value
               is the character code of the next character.

     The format string is reused as often as necessary to satisfy the
     _a_r_g_u_m_e_n_t_s.  Any extra format specifications are evaluated with zero or
     the null string.

     Character escape sequences are in backslash notation as defined in the
     ANSI X3.159-1989 (“ANSI C89”), with extensions.  The characters and their
     meanings are as follows:

           \\aa      Write a <bell> character.
           \\bb      Write a <backspace> character.
           \\ff      Write a <form-feed> character.
           \\nn      Write a <new-line> character.
           \\rr      Write a <carriage return> character.
           \\tt      Write a <tab> character.
           \\vv      Write a <vertical tab> character.
           \\´´      Write a <single quote> character.
           \\\\      Write a backslash character.
           \\_n_u_m    Write a byte whose value is the 1-, 2-, or 3-digit octal
                   number _n_u_m.  Multibyte characters can be constructed using
                   multiple \\_n_u_m sequences.

     Each format specification is introduced by the percent character (``%'').
     The remainder of the format specification includes, in the following
     order:

     Zero or more of the following flags:

             ##       A `#' character specifying that the value should be
                     printed in an ``alternate form''.  For bb, cc, dd, ss and uu
                     formats, this option has no effect.  For the oo formats
                     the precision of the number is increased to force the
                     first character of the output string to a zero.  For the
                     xx (XX) format, a non-zero result has the string 0x (0X)
                     prepended to it.  For aa, AA, ee, EE, ff, FF, gg and GG formats,
                     the result will always contain a decimal point, even if
                     no digits follow the point (normally, a decimal point
                     only appears in the results of those formats if a digit
                     follows the decimal point).  For gg and GG formats,
                     trailing zeros are not removed from the result as they
                     would otherwise be;

             --       A minus sign `-' which specifies _l_e_f_t _a_d_j_u_s_t_m_e_n_t of the
                     output in the indicated field;

             ++       A `+' character specifying that there should always be a
                     sign placed before the number when using signed formats.

             ‘ ’     A space specifying that a blank should be left before a
                     positive number for a signed format.  A `+' overrides a
                     space if both are used;

             00       A zero `0' character indicating that zero-padding should
                     be used rather than blank-padding.  A `-' overrides a `0'
                     if both are used;

     Field Width:
             An optional digit string specifying a _f_i_e_l_d _w_i_d_t_h; if the output
             string has fewer bytes than the field width it will be blank-
             padded on the left (or right, if the left-adjustment indicator
             has been given) to make up the field width (note that a leading
             zero is a flag, but an embedded zero is part of a field width);

     Precision:
             An optional period, ‘..’, followed by an optional digit string
             giving a _p_r_e_c_i_s_i_o_n which specifies the number of digits to appear
             after the decimal point, for ee and ff formats, or the maximum
             number of bytes to be printed from a string; if the digit string
             is missing, the precision is treated as zero;

     Format:
             A character which indicates the type of format to use (one of
             ddiioouuxxXXffFFeeEEggGGaaAAccssbb).  The uppercase formats differ from their
             lowercase counterparts only in that the output of the former is
             entirely in uppercase.  The floating-point format specifiers
             (ffFFeeEEggGGaaAA) may be prefixed by an LL to request that additional
             precision be used, if available.

     A field width or precision may be ‘**’ instead of a digit string.  In this
     case an _a_r_g_u_m_e_n_t supplies the field width or precision.

     The format characters and their meanings are:

     ddiioouuXXxx      The _a_r_g_u_m_e_n_t is printed as a signed decimal (d or i),
                 unsigned octal, unsigned decimal, or unsigned hexadecimal (X
                 or x), respectively.

     ffFF          The _a_r_g_u_m_e_n_t is printed in the style `[-]ddd.ddd' where the
                 number of d's after the decimal point is equal to the
                 precision specification for the argument.  If the precision
                 is missing, 6 digits are given; if the precision is
                 explicitly 0, no digits and no decimal point are printed.
                 The values infinity and NaN are printed as ‘inf’ and ‘nan’,
                 respectively.

     eeEE          The _a_r_g_u_m_e_n_t is printed in the style ee ‘[-_d_._d_d_d±_d_d]’ where
                 there is one digit before the decimal point and the number
                 after is equal to the precision specification for the
                 argument; when the precision is missing, 6 digits are
                 produced.  The values infinity and NaN are printed as ‘inf’
                 and ‘nan’, respectively.

     ggGG          The _a_r_g_u_m_e_n_t is printed in style ff (FF) or in style ee (EE)
                 whichever gives full precision in minimum space.

     aaAA          The _a_r_g_u_m_e_n_t is printed in style ‘[-_h_._h_h_h±p_d]’ where there is
                 one digit before the hexadecimal point and the number after
                 is equal to the precision specification for the argument;
                 when the precision is missing, enough digits are produced to
                 convey the argument's exact double-precision floating-point
                 representation.  The values infinity and NaN are printed as
                 ‘inf’ and ‘nan’, respectively.

     cc           The first byte of _a_r_g_u_m_e_n_t is printed.

     ss           Bytes from the string _a_r_g_u_m_e_n_t are printed until the end is
                 reached or until the number of bytes indicated by the
                 precision specification is reached; however if the precision
                 is 0 or missing, the string is printed entirely.

     bb           As for ss, but interpret character escapes in backslash
                 notation in the string _a_r_g_u_m_e_n_t.  The permitted escape
                 sequences are slightly different in that octal escapes are
                 \\00_n_u_m instead of \\_n_u_m and that an additional escape sequence
                 \\cc stops further output from this pprriinnttff invocation.

     nn$$          Allows reordering of the output according to _a_r_g_u_m_e_n_t.

     %%           Print a `%'; no argument is used.

     The decimal point character is defined in the program's locale (category
     LC_NUMERIC).

     In no case does a non-existent or small field width cause truncation of a
     field; padding takes place only if the specified field width exceeds the
     actual width.

     Some shells may provide a builtin pprriinnttff command which is similar or
     identical to this utility.  Consult the builtin(1) manual page.

EEXXIITT SSTTAATTUUSS
     The pprriinnttff utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Print the string ""hello"":

           $ printf ""%s\n"" hello
           hello

     Same as above, but notice that the format string is not quoted and hence
     we do not get the expected behavior:

           $ printf %s\n hello
           hellon$

     Print arguments forcing sign only for the first argument:

           $ printf ""%+d\n%d\n%d\n"" 1 -2 13
           +1
           -2
           13

     Same as above, but the single format string will be applied to the three
     arguments:

           $ printf ""%+d\n"" 1 -2 13
           +1
           -2
           +13

     Print number using only two digits after the decimal point:

           $ printf ""%.2f\n"" 31.7456
           31.75

CCOOMMPPAATTIIBBIILLIITTYY
     The traditional BSD behavior of converting arguments of numeric formats
     not beginning with a digit to the ASCII code of the first character is
     not supported.

SSEEEE AALLSSOO
     builtin(1), echo(1), sh(1), printf(3)

SSTTAANNDDAARRDDSS
     The pprriinnttff command is expected to be compatible with the IEEE Std 1003.2
     (“POSIX.2”) specification.

HHIISSTTOORRYY
     The pprriinnttff command appeared in 4.3BSD-Reno.  It is modeled after the
     standard library function, printf(3).

CCAAVVEEAATTSS
     ANSI hexadecimal character constants were deliberately not provided.

     Trying to print a dash (""-"") as the first character causes pprriinnttff to
     interpret the dash as a program argument.  ---- must be used before _f_o_r_m_a_t.

     If the locale contains multibyte characters (such as UTF-8), the cc format
     and bb and ss formats with a precision may not operate as expected.

BBUUGGSS
     Since the floating point numbers are translated from ASCII to floating-
     point and then back again, floating-point precision may be lost.  (By
     default, the number is translated to an IEEE-754 double-precision value
     before being printed.  The LL modifier may produce additional precision,
     depending on the hardware platform.)

     The escape sequence \000 is the string terminator.  When present in the
     argument for the bb format, the argument will be truncated at the \000
     character.

     Multibyte characters are not recognized in format strings (this is only a
     problem if ‘%’ can appear inside a multibyte character).

macOS 14.6                       July 1, 2020                       macOS 14.6
"
basename,"BASENAME(1)                 General Commands Manual                BASENAME(1)

NNAAMMEE
     bbaasseennaammee, ddiirrnnaammee – return filename or directory portion of pathname

SSYYNNOOPPSSIISS
     bbaasseennaammee _s_t_r_i_n_g [_s_u_f_f_i_x]
     bbaasseennaammee [--aa] [--ss _s_u_f_f_i_x] _s_t_r_i_n_g [_._._.]
     ddiirrnnaammee _s_t_r_i_n_g [_._._.]

DDEESSCCRRIIPPTTIIOONN
     The bbaasseennaammee utility deletes any prefix ending with the last slash ‘/’
     character present in _s_t_r_i_n_g (after first stripping trailing slashes), and
     a _s_u_f_f_i_x, if given.  The _s_u_f_f_i_x is not stripped if it is identical to the
     remaining characters in _s_t_r_i_n_g.  The resulting filename is written to the
     standard output.  A non-existent suffix is ignored.  If --aa is specified,
     then every argument is treated as a _s_t_r_i_n_g as if bbaasseennaammee were invoked
     with just one argument.  If --ss is specified, then the _s_u_f_f_i_x is taken as
     its argument, and all other arguments are treated as a _s_t_r_i_n_g.

     The ddiirrnnaammee utility deletes the filename portion, beginning with the last
     slash ‘/’ character to the end of _s_t_r_i_n_g (after first stripping trailing
     slashes), and writes the result to the standard output.

EEXXIITT SSTTAATTUUSS
     The bbaasseennaammee and ddiirrnnaammee utilities exit 0 on success, and >0 if an error
     occurs.

EEXXAAMMPPLLEESS
     The following line sets the shell variable FOO to _/_u_s_r_/_b_i_n.

           FOO=`dirname /usr/bin/trail`

SSEEEE AALLSSOO
     csh(1), sh(1), basename(3), dirname(3)

SSTTAANNDDAARRDDSS
     The bbaasseennaammee and ddiirrnnaammee utilities are expected to be IEEE Std 1003.2
     (“POSIX.2”) compatible.

HHIISSTTOORRYY
     The bbaasseennaammee and ddiirrnnaammee utilities first appeared in 4.4BSD.

macOS 14.6                       May 26, 2020                       macOS 14.6
"
dirname,"BASENAME(1)                 General Commands Manual                BASENAME(1)

NNAAMMEE
     bbaasseennaammee, ddiirrnnaammee – return filename or directory portion of pathname

SSYYNNOOPPSSIISS
     bbaasseennaammee _s_t_r_i_n_g [_s_u_f_f_i_x]
     bbaasseennaammee [--aa] [--ss _s_u_f_f_i_x] _s_t_r_i_n_g [_._._.]
     ddiirrnnaammee _s_t_r_i_n_g [_._._.]

DDEESSCCRRIIPPTTIIOONN
     The bbaasseennaammee utility deletes any prefix ending with the last slash ‘/’
     character present in _s_t_r_i_n_g (after first stripping trailing slashes), and
     a _s_u_f_f_i_x, if given.  The _s_u_f_f_i_x is not stripped if it is identical to the
     remaining characters in _s_t_r_i_n_g.  The resulting filename is written to the
     standard output.  A non-existent suffix is ignored.  If --aa is specified,
     then every argument is treated as a _s_t_r_i_n_g as if bbaasseennaammee were invoked
     with just one argument.  If --ss is specified, then the _s_u_f_f_i_x is taken as
     its argument, and all other arguments are treated as a _s_t_r_i_n_g.

     The ddiirrnnaammee utility deletes the filename portion, beginning with the last
     slash ‘/’ character to the end of _s_t_r_i_n_g (after first stripping trailing
     slashes), and writes the result to the standard output.

EEXXIITT SSTTAATTUUSS
     The bbaasseennaammee and ddiirrnnaammee utilities exit 0 on success, and >0 if an error
     occurs.

EEXXAAMMPPLLEESS
     The following line sets the shell variable FOO to _/_u_s_r_/_b_i_n.

           FOO=`dirname /usr/bin/trail`

SSEEEE AALLSSOO
     csh(1), sh(1), basename(3), dirname(3)

SSTTAANNDDAARRDDSS
     The bbaasseennaammee and ddiirrnnaammee utilities are expected to be IEEE Std 1003.2
     (“POSIX.2”) compatible.

HHIISSTTOORRYY
     The bbaasseennaammee and ddiirrnnaammee utilities first appeared in 4.4BSD.

macOS 14.6                       May 26, 2020                       macOS 14.6
"
killall,"KILLALL(1)                  General Commands Manual                 KILLALL(1)

NNAAMMEE
     kkiillllaallll – kill processes by name

SSYYNNOOPPSSIISS
     kkiillllaallll [--ddeellmmssvvqqzz] [--hheellpp] [--II] [--uu _u_s_e_r] [--tt _t_t_y] [--cc _p_r_o_c_n_a_m_e]
             [--_S_I_G_N_A_L] [_p_r_o_c_n_a_m_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The kkiillllaallll utility kills processes selected by name, as opposed to the
     selection by PID as done by kill(1).  By default, it will send a TERM
     signal to all processes with a real UID identical to the caller of
     kkiillllaallll that match the name _p_r_o_c_n_a_m_e.  The super-user is allowed to kill
     any process.

     The options are as follows:

     --dd                 Be more verbose about what will be done, but do not
                        send any signal.  The total number of user processes
                        and the real user ID is shown.  A list of the
                        processes that will be sent the signal will be
                        printed, or a message indicating that no matching
                        processes have been found.

     --ee                 Use the effective user ID instead of the (default)
                        real user ID for matching processes specified with the
                        --uu option.

     --hheellpp              Give a help on the command usage and exit.

     --II                 Request confirmation before attempting to signal each
                        process.

     --ll                 List the names of the available signals and exit, like
                        in kill(1).

     --mm                 Match the argument _p_r_o_c_n_a_m_e as a (case sensitive)
                        regular expression against the names of processes
                        found.  CAUTION!  This is dangerous, a single dot will
                        match any process running under the real UID of the
                        caller.

     --vv                 Be verbose about what will be done.

     --ss                 Same as --vv, but do not send any signal.

     --_S_I_G_N_A_L            Send a different signal instead of the default TERM.
                        The signal may be specified either as a name (with or
                        without a leading “SIG”), or numerically.

     --uu _u_s_e_r            Limit potentially matching processes to those
                        belonging to the specified _u_s_e_r.

     --tt _t_t_y             Limit potentially matching processes to those running
                        on the specified _t_t_y.

     --cc _p_r_o_c_n_a_m_e        Limit potentially matching processes to those matching
                        the specified _p_r_o_c_n_a_m_e.

     --qq                 Suppress error message if no processes are matched.

     --zz                 Do not skip zombies.  This should not have any effect
                        except to print a few error messages if there are
                        zombie processes that match the specified pattern.

AALLLL PPRROOCCEESSSSEESS
     Sending a signal to all processes with the given UID is already supported
     by kill(1).  So use kill(1) for this job (e.g. “kill -TERM -1” or as root
     “echo kill -TERM -1 | su -m <user>”).

IIMMPPLLEEMMEENNTTAATTIIOONN NNOOTTEESS
     This FreeBSD implementation of kkiillllaallll has completely different semantics
     as compared to the traditional UNIX System V behavior of kkiillllaallll.  The
     latter will kill all processes that the current user is able to kill, and
     is intended to be used by the system shutdown process only.

EEXXIITT SSTTAATTUUSS
     The kkiillllaallll utility exits 0 if some processes have been found and
     signalled successfully.  Otherwise, a status of 1 will be returned.

EEXXAAMMPPLLEESS
     Send SIGTERM to all firefox processes:

           killall firefox

     Send SIGTERM to firefox processes belonging to _U_S_E_R:

           killall -u ${USER} firefox

     Stop all firefox processes:

           killall -SIGSTOP firefox

     Resume firefox processes:

           killall -SIGCONT firefox

     Show what would be done to firefox processes, but do not actually signal
     them:

           killall -s firefox

     Send SIGTERM to all processes matching provided pattern (like vim and
     vimdiff):

           killall -m 'vim*'

DDIIAAGGNNOOSSTTIICCSS
     Diagnostic messages will only be printed if the --dd flag is used.

SSEEEE AALLSSOO
     kill(1), pkill(1), sysctl(3)

HHIISSTTOORRYY
     The kkiillllaallll command appeared in FreeBSD 2.1.  It has been modeled after
     the kkiillllaallll command as available on other platforms.

AAUUTTHHOORRSS
     The kkiillllaallll program was originally written in Perl and was contributed by
     Wolfram Schneider, this manual page has been written by Jörg Wunsch.  The
     current version of kkiillllaallll was rewritten in C by Peter Wemm using
     sysctl(3).

macOS 14.6                       June 27, 2020                      macOS 14.6
"
pkill,"PKILL(1)                    General Commands Manual                   PKILL(1)

NNAAMMEE
     ppggrreepp, ppkkiillll – find or signal processes by name

SSYYNNOOPPSSIISS
     ppggrreepp [--LLaaffiillnnooqqvvxx] [--FF _p_i_d_f_i_l_e] [--GG _g_i_d] [--PP _p_p_i_d] [--UU _u_i_d] [--dd _d_e_l_i_m]
           [--gg _p_g_r_p] [--tt _t_t_y] [--uu _e_u_i_d] _p_a_t_t_e_r_n _._._.
     ppkkiillll [--_s_i_g_n_a_l] [--IILLaaffiillnnoovvxx] [--FF _p_i_d_f_i_l_e] [--GG _g_i_d] [--PP _p_p_i_d] [--UU _u_i_d]
           [--gg _p_g_r_p] [--tt _t_t_y] [--uu _e_u_i_d] _p_a_t_t_e_r_n _._._.

DDEESSCCRRIIPPTTIIOONN
     The ppggrreepp command searches the process table on the running system and
     prints the process IDs of all processes that match the criteria given on
     the command line.

     The ppkkiillll command searches the process table on the running system and
     signals all processes that match the criteria given on the command line.

     The following options are available:

     --FF _p_i_d_f_i_l_e        Restrict matches to a process whose PID is stored in
                       the _p_i_d_f_i_l_e file.

     --GG _g_i_d            Restrict matches to processes with a real group ID in
                       the comma-separated list _g_i_d.

     --II                Request confirmation before attempting to signal each
                       process.

     --LL                The _p_i_d_f_i_l_e file given for the --FF option must be locked
                       with the flock(2) syscall or created with pidfile(3).

     --PP _p_p_i_d           Restrict matches to processes with a parent process ID
                       in the comma-separated list _p_p_i_d.

     --UU _u_i_d            Restrict matches to processes with a real user ID in
                       the comma-separated list _u_i_d.

     --dd _d_e_l_i_m          Specify a delimiter to be printed between each process
                       ID.  The default is a newline.  This option can only be
                       used with the ppggrreepp command.

     --aa                Include process ancestors in the match list.  By
                       default, the current ppggrreepp or ppkkiillll process and all of
                       its ancestors are excluded (unless --vv is used).

     --ff                Match against full argument lists.  The default is to
                       match against process names.

     --gg _p_g_r_p           Restrict matches to processes with a process group ID
                       in the comma-separated list _p_g_r_p.  The value zero is
                       taken to mean the process group ID of the running ppggrreepp
                       or ppkkiillll command.

     --ii                Ignore case distinctions in both the process table and
                       the supplied pattern.

     --ll                Long output.  For ppggrreepp, print the process name in
                       addition to the process ID for each matching process.
                       If used in conjunction with --ff, print the process ID
                       and the full argument list for each matching process.
                       For ppkkiillll, display the kill command used for each
                       process killed.

     --nn                Select only the newest (most recently started) of the
                       matching processes.

     --oo                Select only the oldest (least recently started) of the
                       matching processes.

     --qq                For ppggrreepp, Do not write anything to standard output.

     --tt _t_t_y            Restrict matches to processes associated with a
                       terminal in the comma-separated list _t_t_y.  Terminal
                       names may be of the form _t_t_y_x_x or the shortened form
                       _x_x.  A single dash (‘-’) matches processes not
                       associated with a terminal.

     --uu _e_u_i_d           Restrict matches to processes with an effective user ID
                       in the comma-separated list _e_u_i_d.

     --vv                Reverse the sense of the matching; display processes
                       that do not match the given criteria.

     --xx                Require an exact match of the process name, or argument
                       list if --ff is given.  The default is to match any
                       substring.

     --_s_i_g_n_a_l           A non-negative decimal number or symbolic signal name
                       specifying the signal to be sent instead of the default
                       TERM.  This option is valid only when given as the
                       first argument to ppkkiillll.

     If any _p_a_t_t_e_r_n operands are specified, they are used as extended regular
     expressions to match the command name or full argument list of each
     process.

     Note that a running ppggrreepp or ppkkiillll process will never consider itself as
     a potential match.

EEXXIITT SSTTAATTUUSS
     The ppggrreepp and ppkkiillll utilities return one of the following values upon
     exit:

     0       One or more processes were matched.

     1       No processes were matched.

     2       Invalid options were specified on the command line.

     3       An internal error occurred.

EEXXAAMMPPLLEESS
     Show the pid of the process holding the _/_t_m_p_/_._X_0_-_l_o_c_k pid file:

           $ pgrep -F /tmp/.X0-lock
           1211

     Show long output for firefox processes:

           $ pgrep -l firefox
           1312 firefox
           1309 firefox
           1288 firefox
           1280 firefox
           1279 firefox
           1278 firefox
           1277 firefox
           1264 firefox

     Same as above but just showing the pid of the most recent process:

           $ pgrep -n firefox
           1312

     Look for vim processes.  Match against the full argument list:

           $ pgrep -f vim
           44968
           30790

     Same as above but matching against the ‘list’ word and showing the full
     argument list:

           $ pgrep -f -l list
           30790 vim list.txt

     Send _S_I_G_S_T_O_P signal to processes that are an exact match:

           $ pkill -SIGSTOP -f -x ""vim list.txt""

     Without --ff names over 19 characters will silently fail:

           $ vim this_is_a_very_long_file_name &
           [1] 36689
           $

           [1]+  Stopped                 vim this_is_a_very_long_file_name
           $ pgrep ""vim this""
           $

     Same as above using the --ff flag:

           $ pgrep -f ""vim this""
           36689

SSEEEE AALLSSOO
     kill(1), killall(1), ps(1), flock(2), kill(2), sigaction(2), pidfile(3),
     re_format(7)

HHIISSTTOORRYY
     The ppkkiillll and ppggrreepp utilities first appeared in NetBSD 1.6.  They are
     modelled after utilities of the same name that appeared in Sun Solaris 7.
     They made their first appearance in FreeBSD 5.3.

AAUUTTHHOORRSS
     Andrew Doran <_a_d_@_N_e_t_B_S_D_._o_r_g>

macOS 14.6                      October 5, 2020                     macOS 14.6
"
disown,No manual entry for disown
trap,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
xkill,No manual entry for xkill
nohup,"NOHUP(1)                    General Commands Manual                   NOHUP(1)

NNAAMMEE
     nnoohhuupp – invoke a utility immune to hangups

SSYYNNOOPPSSIISS
     nnoohhuupp [----] _u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t_s]

DDEESSCCRRIIPPTTIIOONN
     The nnoohhuupp utility invokes _u_t_i_l_i_t_y with its _a_r_g_u_m_e_n_t_s and at this time
     sets the signal SIGHUP to be ignored.  If the standard output is a
     terminal, the standard output is appended to the file _n_o_h_u_p_._o_u_t in the
     current directory.  If standard error is a terminal, it is directed to
     the same place as the standard output.

     Some shells may provide a builtin nnoohhuupp command which is similar or
     identical to this utility.  Consult the builtin(1) manual page.

EENNVVIIRROONNMMEENNTT
     The following variables are utilized by nnoohhuupp:

     HOME  If the output file _n_o_h_u_p_._o_u_t cannot be created in the current
           directory, the nnoohhuupp utility uses the directory named by HOME to
           create the file.

     PATH  Used to locate the requested _u_t_i_l_i_t_y if the name contains no ‘/’
           characters.

EEXXIITT SSTTAATTUUSS
     The nnoohhuupp utility exits with one of the following values:

     126     The _u_t_i_l_i_t_y was found, but could not be invoked.

     127     The _u_t_i_l_i_t_y could not be found or an error occurred in nnoohhuupp.

     Otherwise, the exit status of nnoohhuupp will be that of _u_t_i_l_i_t_y.

SSEEEE AALLSSOO
     builtin(1), csh(1), signal(3)

SSTTAANNDDAARRDDSS
     The nnoohhuupp utility is expected to be IEEE Std 1003.2 (“POSIX.2”)
     compatible.

BBUUGGSS
     Two or more instances of nnoohhuupp can append to the same file, which makes
     for a confusing output.

macOS 14.6                     November 9, 2018                     macOS 14.6
"
timeout,"curs_inopts(3X)                                                curs_inopts(3X)

NNAAMMEE
       ccbbrreeaakk, nnooccbbrreeaakk, eecchhoo, nnooeecchhoo, hhaallffddeellaayy, iinnttrrfflluusshh, kkeeyyppaadd, mmeettaa,
       nnooddeellaayy, nnoottiimmeeoouutt, rraaww, nnoorraaww, nnooqqiifflluusshh, qqiifflluusshh, ttiimmeeoouutt, wwttiimmeeoouutt,
       ttyyppeeaahheeaadd - ccuurrsseess input options

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ccuurrsseess..hh>>

       iinntt ccbbrreeaakk((vvooiidd));;
       iinntt nnooccbbrreeaakk((vvooiidd));;
       iinntt eecchhoo((vvooiidd));;
       iinntt nnooeecchhoo((vvooiidd));;
       iinntt hhaallffddeellaayy((iinntt tteenntthhss));;
       iinntt iinnttrrfflluusshh((WWIINNDDOOWW **wwiinn,, bbooooll bbff));;
       iinntt kkeeyyppaadd((WWIINNDDOOWW **wwiinn,, bbooooll bbff));;
       iinntt mmeettaa((WWIINNDDOOWW **wwiinn,, bbooooll bbff));;
       iinntt nnooddeellaayy((WWIINNDDOOWW **wwiinn,, bbooooll bbff));;
       iinntt rraaww((vvooiidd));;
       iinntt nnoorraaww((vvooiidd));;
       vvooiidd nnooqqiifflluusshh((vvooiidd));;
       vvooiidd qqiifflluusshh((vvooiidd));;
       iinntt nnoottiimmeeoouutt((WWIINNDDOOWW **wwiinn,, bbooooll bbff));;
       vvooiidd ttiimmeeoouutt((iinntt ddeellaayy));;
       vvooiidd wwttiimmeeoouutt((WWIINNDDOOWW **wwiinn,, iinntt ddeellaayy));;
       iinntt ttyyppeeaahheeaadd((iinntt ffdd));;

DDEESSCCRRIIPPTTIIOONN
       The nnccuurrsseess library provides several functions which let an application
       change way input from the terminal is handled.  Some are global,
       applying to all windows.  Others apply only to a specific window.
       Window-specific settings are not automatically applied to new or
       derived windows.  An application must apply these to each window, if
       the same behavior is needed.

   ccbbrreeaakk
       Normally, the tty driver buffers typed characters until a newline or
       carriage return is typed.  The ccbbrreeaakk routine disables line buffering
       and erase/kill character-processing (interrupt and flow control
       characters are unaffected), making characters typed by the user
       immediately available to the program.  The nnooccbbrreeaakk routine returns the
       terminal to normal (cooked) mode.

       Initially the terminal may or may not be in ccbbrreeaakk mode, as the mode is
       inherited; therefore, a program should call ccbbrreeaakk or nnooccbbrreeaakk
       explicitly.  Most interactive programs using ccuurrsseess set the ccbbrreeaakk
       mode.  Note that ccbbrreeaakk overrides rraaww.  [See ccuurrss__ggeettcchh(3X) for a
       discussion of how these routines interact with eecchhoo and nnooeecchhoo.]

   eecchhoo//nnooeecchhoo
       The eecchhoo and nnooeecchhoo routines control whether characters typed by the
       user are echoed by ggeettcchh as they are typed.  Echoing by the tty driver
       is always disabled, but initially ggeettcchh is in echo mode, so characters
       typed are echoed.  Authors of most interactive programs prefer to do
       their own echoing in a controlled area of the screen, or not to echo at
       all, so they disable echoing by calling nnooeecchhoo.  [See ccuurrss__ggeettcchh(3X)
       for a discussion of how these routines interact with ccbbrreeaakk and
       nnooccbbrreeaakk.]

   hhaallffddeellaayy
       The hhaallffddeellaayy routine is used for half-delay mode, which is similar to
       ccbbrreeaakk mode in that characters typed by the user are immediately
       available to the program.  However, after blocking for _t_e_n_t_h_s tenths of
       seconds, ERR is returned if nothing has been typed.  The value of
       tteenntthhss must be a number between 1 and 255.  Use nnooccbbrreeaakk to leave half-
       delay mode.

   iinnttrrfflluusshh
       If the iinnttrrfflluusshh option is enabled, (_b_f is TTRRUUEE), when an interrupt key
       is pressed on the keyboard (interrupt, break, quit) all output in the
       tty driver queue will be flushed, giving the effect of faster response
       to the interrupt, but causing ccuurrsseess to have the wrong idea of what is
       on the screen.  Disabling (_b_f is FFAALLSSEE), the option prevents the flush.
       The default for the option is inherited from the tty driver settings.
       The window argument is ignored.

   kkeeyyppaadd
       The kkeeyyppaadd option enables the keypad of the user's terminal.  If
       enabled (_b_f is TTRRUUEE), the user can press a function key (such as an
       arrow key) and wwggeettcchh returns a single value representing the function
       key, as in KKEEYY__LLEEFFTT.  If disabled (_b_f is FFAALLSSEE), ccuurrsseess does not treat
       function keys specially and the program has to interpret the escape
       sequences itself.  If the keypad in the terminal can be turned on (made
       to transmit) and off (made to work locally), turning on this option
       causes the terminal keypad to be turned on when wwggeettcchh is called.  The
       default value for keypad is FFAALLSSEE.

   mmeettaa
       Initially, whether the terminal returns 7 or 8 significant bits on
       input depends on the control mode of the tty driver [see termio(7)].
       To force 8 bits to be returned, invoke mmeettaa(_w_i_n, TTRRUUEE); this is
       equivalent, under POSIX, to setting the CS8 flag on the terminal.  To
       force 7 bits to be returned, invoke mmeettaa(_w_i_n, FFAALLSSEE); this is
       equivalent, under POSIX, to setting the CS7 flag on the terminal.  The
       window argument, _w_i_n, is always ignored.  If the terminfo capabilities
       ssmmmm (meta_on) and rrmmmm (meta_off) are defined for the terminal, ssmmmm is
       sent to the terminal when mmeettaa(_w_i_n, TTRRUUEE) is called and rrmmmm is sent
       when mmeettaa(_w_i_n, FFAALLSSEE) is called.

   nnooddeellaayy
       The nnooddeellaayy option causes ggeettcchh to be a non-blocking call.  If no input
       is ready, ggeettcchh returns EERRRR.  If disabled (_b_f is FFAALLSSEE), ggeettcchh waits
       until a key is pressed.

       While interpreting an input escape sequence, wwggeettcchh sets a timer while
       waiting for the next character.  If nnoottiimmeeoouutt((_w_i_n, TTRRUUEE) is called,
       then wwggeettcchh does not set a timer.  The purpose of the timeout is to
       differentiate between sequences received from a function key and those
       typed by a user.

   rraaww//nnoorraaww
       The rraaww and nnoorraaww routines place the terminal into or out of raw mode.
       Raw mode is similar to ccbbrreeaakk mode, in that characters typed are
       immediately passed through to the user program.  The differences are
       that in raw mode, the interrupt, quit, suspend, and flow control
       characters are all passed through uninterpreted, instead of generating
       a signal.  The behavior of the BREAK key depends on other bits in the
       tty driver that are not set by ccuurrsseess.

   nnooqqiifflluusshh
       When the nnooqqiifflluusshh routine is used, normal flush of input and output
       queues associated with the IINNTTRR, QQUUIITT and SSUUSSPP characters will not be
       done [see termio(7)].  When qqiifflluusshh is called, the queues will be
       flushed when these control characters are read.  You may want to call
       nnooqqiifflluusshh(()) in a signal handler if you want output to continue as
       though the interrupt had not occurred, after the handler exits.

   ttiimmeeoouutt//wwttiimmeeoouutt
       The ttiimmeeoouutt and wwttiimmeeoouutt routines set blocking or non-blocking read for
       a given window.  If _d_e_l_a_y is negative, blocking read is used (i.e.,
       waits indefinitely for input).  If _d_e_l_a_y is zero, then non-blocking
       read is used (i.e., read returns EERRRR if no input is waiting).  If _d_e_l_a_y
       is positive, then read blocks for _d_e_l_a_y milliseconds, and returns EERRRR
       if there is still no input.  Hence, these routines provide the same
       functionality as nnooddeellaayy, plus the additional capability of being able
       to block for only _d_e_l_a_y milliseconds (where _d_e_l_a_y is positive).

   ttyyppeeaahheeaadd
       The ccuurrsseess library does “line-breakout optimization” by looking for
       typeahead periodically while updating the screen.  If input is found,
       and it is coming from a tty, the current update is postponed until
       rreeffrreesshh or ddoouuppddaattee is called again.  This allows faster response to
       commands typed in advance.  Normally, the input FILE pointer passed to
       nneewwtteerrmm, or ssttddiinn in the case that iinniittssccrr was used, will be used to do
       this typeahead checking.  The ttyyppeeaahheeaadd routine specifies that the file
       descriptor _f_d is to be used to check for typeahead instead.  If _f_d is
       -1, then no typeahead checking is done.

RREETTUURRNN VVAALLUUEE
       All routines that return an integer return EERRRR upon failure and OK
       (SVr4 specifies only ""an integer value other than EERRRR"") upon successful
       completion, unless otherwise noted in the preceding routine
       descriptions.

       X/Open does not define any error conditions.  In this implementation,
       functions with a window parameter will return an error if it is null.
       Any function will also return an error if the terminal was not
       initialized.  Also,

              hhaallffddeellaayy
                   returns an error if its parameter is outside the range
                   1..255.

PPOORRTTAABBIILLIITTYY
       These functions are described in the XSI Curses standard, Issue 4.

       The ncurses library obeys the XPG4 standard and the historical practice
       of the AT&T curses implementations, in that the echo bit is cleared
       when curses initializes the terminal state.  BSD curses differed from
       this slightly; it left the echo bit on at initialization, but the BSD
       rraaww call turned it off as a side-effect.  For best portability, set
       echo or noecho explicitly just after initialization, even if your
       program remains in cooked mode.

       When kkeeyyppaadd is first enabled, ncurses loads the key-definitions for the
       current terminal description.  If the terminal description includes
       extended string capabilities, e.g., from using the --xx option of tic,
       then ncurses also defines keys for the capabilities whose names begin
       with ""k"".  The corresponding keycodes are generated and (depending on
       previous loads of terminal descriptions) may differ from one execution
       of a program to the next.  The generated keycodes are recognized by the
       kkeeyynnaammee function (which will then return a name beginning with ""k""
       denoting the terminfo capability name rather than ""K"", used for curses
       key-names).  On the other hand, an application can use ddeeffiinnee__kkeeyy to
       establish a specific keycode for a given string.  This makes it
       possible for an application to check for an extended capability's
       presence with _t_i_g_e_t_s_t_r, and reassign the keycode to match its own
       needs.

       Low-level applications can use ttiiggeettssttrr to obtain the definition of any
       particular string capability.  Higher-level applications which use the
       curses wwggeettcchh and similar functions to return keycodes rely upon the
       order in which the strings are loaded.  If more than one key definition
       has the same string value, then wwggeettcchh can return only one keycode.
       Most curses implementations (including ncurses) load key definitions in
       the order defined by the array of string capability names.  The last
       key to be loaded determines the keycode which will be returned.  In
       ncurses, you may also have extended capabilities interpreted as key
       definitions.  These are loaded after the predefined keys, and if a
       capability's value is the same as a previously-loaded key definition,
       the later definition is the one used.

NNOOTTEESS
       Note that eecchhoo, nnooeecchhoo, hhaallffddeellaayy, iinnttrrfflluusshh, mmeettaa, nnooddeellaayy, nnoottiimmeeoouutt,
       nnooqqiifflluusshh, qqiifflluusshh, ttiimmeeoouutt, and wwttiimmeeoouutt may be macros.

       The nnoorraaww and nnooccbbrreeaakk calls follow historical practice in that they
       attempt to restore to normal (`cooked') mode from raw and cbreak modes
       respectively.  Mixing raw/noraw and cbreak/nocbreak calls leads to tty
       driver control states that are hard to predict or understand; it is not
       recommended.

SSEEEE AALLSSOO
       ccuurrsseess(3X), ccuurrss__ggeettcchh(3X), ccuurrss__iinniittssccrr(3X), ccuurrss__uuttiill(3X),
       ddeeffiinnee__kkeeyy(3X), tteerrmmiioo(7)

                                                               curs_inopts(3X)
"
nice,"NICE(1)                     General Commands Manual                    NICE(1)

NNAAMMEE
     nniiccee – execute a utility at an altered scheduling priority

SSYYNNOOPPSSIISS
     nniiccee [--nn _i_n_c_r_e_m_e_n_t] _u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.]

DDEESSCCRRIIPPTTIIOONN
     The nniiccee utility runs _u_t_i_l_i_t_y at an altered scheduling priority, by
     incrementing its “nice” value by the specified _i_n_c_r_e_m_e_n_t, or a default
     value of 10.  The lower the nice value of a process, the higher its
     scheduling priority.

     The superuser may specify a negative increment in order to run a utility
     with a higher scheduling priority.

     Some shells may provide a builtin nniiccee command which is similar or
     identical to this utility.  Consult the builtin(1) manual page.

EENNVVIIRROONNMMEENNTT
     The PATH environment variable is used to locate the requested _u_t_i_l_i_t_y if
     the name contains no ‘/’ characters.

EEXXIITT SSTTAATTUUSS
     If _u_t_i_l_i_t_y is invoked, the exit status of nniiccee is the exit status of
     _u_t_i_l_i_t_y.

     An exit status of 126 indicates _u_t_i_l_i_t_y was found, but could not be
     executed.  An exit status of 127 indicates _u_t_i_l_i_t_y could not be found.

EEXXAAMMPPLLEESS
     Execute utility ‘date’ at priority 5 assuming the priority of the shell
     is 0:

           nice -n 5 date

     Execute utility ‘date’ at priority -19 assuming the priority of the shell
     is 0 and you are the super-user:

           nice -n 16 nice -n -35 date

CCOOMMPPAATTIIBBIILLIITTYY
     The traditional --_i_n_c_r_e_m_e_n_t option has been deprecated but is still
     supported.

SSEEEE AALLSSOO
     builtin(1), csh(1), getpriority(2), setpriority(2), renice(8)

SSTTAANNDDAARRDDSS
     The nniiccee utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).

HHIISSTTOORRYY
     A nniiccee utility appeared in Version 4 AT&T UNIX.

macOS 14.6                     February 24, 2011                    macOS 14.6
"
renice,"RENICE(8)                   System Manager's Manual                  RENICE(8)

NNAAMMEE
     rreenniiccee – alter priority of running processes

SSYYNNOOPPSSIISS
     rreenniiccee _p_r_i_o_r_i_t_y [[--ggppuu] _t_a_r_g_e_t]
     rreenniiccee --nn _i_n_c_r_e_m_e_n_t [[--ggppuu] _t_a_r_g_e_t]

DDEESSCCRRIIPPTTIIOONN
     The rreenniiccee utility alters the scheduling priority of one or more running
     processes.  The following _t_a_r_g_e_t parameters are interpreted as process
     ID's (the default), process group ID's, user ID's or user names.  The
     rreenniiccee'ing of a process group causes all processes in the process group
     to have their scheduling priority altered.  The rreenniiccee'ing of a user
     causes all processes owned by the user to have their scheduling priority
     altered.

     The following options are available:

     --nn      Instead of changing the specified processes to the given
             priority, interpret the following argument as an increment to be
             applied to the current priority of each process.

     --gg      Interpret _t_a_r_g_e_t parameters as process group ID's.

     --pp      Interpret _t_a_r_g_e_t parameters as process ID's (the default).

     --uu      Interpret _t_a_r_g_e_t parameters as user names or user ID's.

     Users other than the super-user may only alter the priority of processes
     they own, and can only monotonically increase their ``nice value'' within
     the range 0 to PRIO_MAX (20).  (This prevents overriding administrative
     fiats.)  The super-user may alter the priority of any process and set the
     priority to any value in the range PRIO_MIN (-20) to PRIO_MAX.  Useful
     priorities are: 20 (the affected processes will run only when nothing
     else in the system wants to), 0 (the ``base'' scheduling priority),
     anything negative (to make things go very fast).

FFIILLEESS
     _/_e_t_c_/_p_a_s_s_w_d  to map user names to user ID's

EEXXAAMMPPLLEESS
     Change the priority of process ID's 987 and 32, and all processes owned
     by users daemon and root.

           renice +1 987 -u daemon root -p 32

SSEEEE AALLSSOO
     nice(1), rtprio(1), getpriority(2), setpriority(2)

SSTTAANNDDAARRDDSS
     The rreenniiccee utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).

HHIISSTTOORRYY
     The rreenniiccee utility appeared in 4.0BSD.

BBUUGGSS
     Non super-users cannot increase scheduling priorities of their own
     processes, even if they were the ones that decreased the priorities in
     the first place.

macOS 14.6                     October 27, 2020                     macOS 14.6
"
screen,"SCREEN(1)                   General Commands Manual                  SCREEN(1)

NNAAMMEE
       screen - screen manager with VT100/ANSI terminal emulation



SSYYNNOOPPSSIISS
       ssccrreeeenn [ --_o_p_t_i_o_n_s ] [ _c_m_d [ _a_r_g_s ] ]
       ssccrreeeenn --rr [[_p_i_d..]_t_t_y[.._h_o_s_t]]
       ssccrreeeenn --rr _s_e_s_s_i_o_n_o_w_n_e_r//[[_p_i_d..]_t_t_y[.._h_o_s_t]]



DDEESSCCRRIIPPTTIIOONN
       _S_c_r_e_e_n is a full-screen window manager that multiplexes a physical
       terminal between several processes (typically interactive shells).
       Each virtual terminal provides the functions of a DEC VT100 terminal
       and, in addition, several control functions from the ISO 6429 (ECMA 48,
       ANSI X3.64) and ISO 2022 standards (e.g. insert/delete line and support
       for multiple character sets).  There is a scrollback history buffer for
       each virtual terminal and a copy-and-paste mechanism that allows moving
       text regions between windows.

       When _s_c_r_e_e_n is called, it creates a single window with a shell in it
       (or the specified command) and then gets out of your way so that you
       can use the program as you normally would.  Then, at any time, you can
       create new (full-screen) windows with other programs in them (including
       more shells), kill existing windows, view a list of windows, turn
       output logging on and off, copy-and-paste text between windows, view
       the scrollback history, switch between windows in whatever manner you
       wish, etc. All windows run their programs completely independent of
       each other. Programs continue to run when their window is currently not
       visible and even when the whole _s_c_r_e_e_n session is detached from the
       user's terminal.  When a program terminates, _s_c_r_e_e_n (per default) kills
       the window that contained it.  If this window was in the foreground,
       the display switches to the previous window; if none are left, _s_c_r_e_e_n
       exits.

       Everything you type is sent to the program running in the current
       window.  The only exception to this is the one keystroke that is used
       to initiate a command to the window manager.  By default, each command
       begins with a control-a (abbreviated C-a from now on), and is followed
       by one other keystroke.  The command character and all the key bindings
       can be fully customized to be anything you like, though they are always
       two characters in length.

       _S_c_r_e_e_n does not understand the prefix ""C-"" to mean control.  Please use
       the caret notation (""^A"" instead of ""C-a"") as arguments to e.g. the
       _e_s_c_a_p_e command or the _-_e option.  _S_c_r_e_e_n will also print out control
       characters in caret notation.

       The standard way to create a new window is to type ""C-a c"".  This
       creates a new window running a shell and switches to that window
       immediately, regardless of the state of the process running in the
       current window.  Similarly, you can create a new window with a custom
       command in it by first binding the command to a keystroke (in your
       .screenrc file or at the ""C-a :"" command line) and then using it just
       like the ""C-a c"" command.  In addition, new windows can be created by
       running a command like:

              screen emacs prog.c

       from a shell prompt within a previously created window.  This will not
       run another copy of _s_c_r_e_e_n, but will instead supply the command name
       and its arguments to the window manager (specified in the $STY
       environment variable) who will use it to create the new window.  The
       above example would start the emacs editor (editing prog.c) and switch
       to its window.

       If ""/etc/utmp"" is writable by _s_c_r_e_e_n, an appropriate record will be
       written to this file for each window, and removed when the window is
       terminated.  This is useful for working with ""talk"", ""script"",
       ""shutdown"", ""rsend"", ""sccs"" and other similar programs that use the
       utmp file to determine who you are. As long as _s_c_r_e_e_n is active on your
       terminal, the terminal's own record is removed from the utmp file. See
       also ""C-a L"".



GGEETTTTIINNGG SSTTAARRTTEEDD
       Before you begin to use _s_c_r_e_e_n you'll need to make sure you have
       correctly selected your terminal type, just as you would for any other
       termcap/terminfo program.  (You can do this by using _t_s_e_t for example.)

       If you're impatient and want to get started without doing a lot more
       reading, you should remember this one command:  ""C-a ?"".  Typing these
       two characters will display a list of the available _s_c_r_e_e_n commands and
       their bindings. Each keystroke is discussed in the section ""DEFAULT KEY
       BINDINGS"". The manual section ""CUSTOMIZATION"" deals with the contents
       of your .screenrc.

       If your terminal is a ""true"" auto-margin terminal (it doesn't allow the
       last position on the screen to be updated without scrolling the screen)
       consider using a version of your terminal's termcap that has automatic
       margins turned _o_f_f. This will ensure an accurate and optimal update of
       the screen in all circumstances. Most terminals nowadays have ""magic""
       margins (automatic margins plus usable last column). This is the VT100
       style type and perfectly suited for _s_c_r_e_e_n.  If all you've got is a
       ""true"" auto-margin terminal _s_c_r_e_e_n will be content to use it, but
       updating a character put into the last position on the screen may not
       be possible until the screen scrolls or the character is moved into a
       safe position in some other way. This delay can be shortened by using a
       terminal with insert-character capability.



CCOOMMMMAANNDD--LLIINNEE OOPPTTIIOONNSS
       Screen has the following command-line options:

       --aa   include _a_l_l capabilities (with some minor exceptions) in each
            window's termcap, even if _s_c_r_e_e_n must redraw parts of the display
            in order to implement a function.

       --AA   Adapt the sizes of all windows to the size of the current
            terminal.  By default, _s_c_r_e_e_n tries to restore its old window
            sizes when attaching to resizable terminals (those with ""WS"" in
            its description, e.g. suncmd or some xterm).

       --cc _f_i_l_e
            override the default configuration file from ""$HOME/.screenrc"" to
            _f_i_l_e.

       --dd|--DD [_p_i_d_._t_t_y_._h_o_s_t]
            does not start _s_c_r_e_e_n, but detaches the elsewhere running _s_c_r_e_e_n
            session. It has the same effect as typing ""C-a d"" from _s_c_r_e_e_n's
            controlling terminal. --DD is the equivalent to the power detach
            key.  If no session can be detached, this option is ignored. In
            combination with the --rr/--RR option more powerful effects can be
            achieved:

       --dd --rr   Reattach a session and if necessary detach it first.

       --dd --RR   Reattach a session and if necessary detach or even create it
               first.

       --dd --RRRR  Reattach a session and if necessary detach or create it. Use
               the first session if more than one session is available.

       --DD --rr   Reattach a session. If necessary detach and logout remotely
               first.

       --DD --RR   Attach here and now. In detail this means: If a session is
               running, then reattach. If necessary detach and logout remotely
               first.  If it was not running create it and notify the user.
               This is the author's favorite.

       --DD --RRRR  Attach here and now. Whatever that means, just do it.


            Note: It is always a good idea to check the status of your
            sessions by means of ""screen -list"".

       --ee _x_y
            specifies the command character to be _x and the character
            generating a literal command character to _y (when typed after the
            command character).  The default is ""C-a"" and `a', which can be
            specified as ""-e^Aa"".  When creating a _s_c_r_e_e_n session, this option
            sets the default command character. In a multiuser session all
            users added will start off with this command character. But when
            attaching to an already running session, this option changes only
            the command character of the attaching user.  This option is
            equivalent to either the commands ""defescape"" or ""escape""
            respectively.

       --ff, --ffnn, and --ffaa
            turns flow-control on, off, or ""automatic switching mode"".  This
            can also be defined through the ""defflow"" .screenrc command.

       --hh _n_u_m
            Specifies the history scrollback buffer to be _n_u_m lines high.

       --ii   will cause the interrupt key (usually C-c) to interrupt the
            display immediately when flow-control is on.  See the ""defflow""
            .screenrc command for details.  The use of this option is
            discouraged.

       --ll and --llnn
            turns login mode on or off (for /etc/utmp updating).  This can
            also be defined through the ""deflogin"" .screenrc command.

       --llss and --lliisstt
            does not start _s_c_r_e_e_n, but prints a list of _p_i_d_._t_t_y_._h_o_s_t strings
            identifying your _s_c_r_e_e_n sessions.  Sessions marked `detached' can
            be resumed with ""screen -r"". Those marked `attached' are running
            and have a controlling terminal. If the session runs in multiuser
            mode, it is marked `multi'. Sessions marked as `unreachable'
            either live on a different host or are `dead'.  An unreachable
            session is considered dead, when its name matches either the name
            of the local host, or the specified parameter, if any.  See the --rr
            flag for a description how to construct matches.  Sessions marked
            as `dead' should be thoroughly checked and removed.  Ask your
            system administrator if you are not sure. Remove sessions with the
            --wwiippee option.

       --LL   tells _s_c_r_e_e_n to turn on automatic output logging for the windows.

       --mm   causes _s_c_r_e_e_n to ignore the $STY environment variable. With
            ""screen -m"" creation of a new session is enforced, regardless
            whether _s_c_r_e_e_n is called from within another _s_c_r_e_e_n session or
            not. This flag has a special meaning in connection with the `-d'
            option:

       --dd --mm   Start _s_c_r_e_e_n in ""detached"" mode. This creates a new session but
               doesn't attach to it. This is useful for system startup
               scripts.

       --DD --mm   This also starts screen in ""detached"" mode, but doesn't fork a
               new process. The command exits if the session terminates.

       --OO   selects a more optimal output mode for your terminal rather than
            true VT100 emulation (only affects auto-margin terminals without
            `LP').  This can also be set in your .screenrc by specifying `OP'
            in a ""termcap"" command.

       --pp _n_u_m_b_e_r___o_r___n_a_m_e
            Preselect a window. This is usefull when you want to reattach to a
            specific windor or you want to send a command via the ""-X"" option
            to a specific window. As with screen's select commant, ""-"" selects
            the blank window. As a special case for reattach, ""="" brings up
            the windowlist on the blank window.

       --qq   Suppress printing of error messages. In combination with ""-ls"" the
            exit value is as follows: 9 indicates a directory without
            sessions. 10 indicates a directory with running but not attachable
            sessions. 11 (or more) indicates 1 (or more) usable sessions.  In
            combination with ""-r"" the exit value is as follows: 10 indicates
            that there is no session to resume. 12 (or more) indicates that
            there are 2 (or more) sessions to resume and you should specify
            which one to choose.  In all other cases ""-q"" has no effect.

       --rr [_p_i_d_._t_t_y_._h_o_s_t]
       --rr _s_e_s_s_i_o_n_o_w_n_e_r_/_[_p_i_d_._t_t_y_._h_o_s_t]
            resumes a detached _s_c_r_e_e_n session.  No other options (except
            combinations with --dd/--DD) may be specified, though an optional
            prefix of [_p_i_d_.]_t_t_y_._h_o_s_t may be needed to distinguish between
            multiple detached _s_c_r_e_e_n sessions.  The second form is used to
            connect to another user's screen session which runs in multiuser
            mode. This indicates that screen should look for sessions in
            another user's directory. This requires setuid-root.

       --RR   attempts to resume the first detached _s_c_r_e_e_n session it finds.  If
            successful, all other command-line options are ignored.  If no
            detached session exists, starts a new session using the specified
            options, just as if --RR had not been specified. The option is set
            by default if _s_c_r_e_e_n is run as a login-shell (actually screen uses
            ""-xRR"" in that case).  For combinations with the --dd/--DD option see
            there.

       --ss   sets the default shell to the program specified, instead of the
            value in the environment variable $SHELL (or ""/bin/sh"" if not
            defined).  This can also be defined through the ""shell"" .screenrc
            command.

       --SS _s_e_s_s_i_o_n_n_a_m_e
            When creating a new session, this option can be used to specify a
            meaningful name for the session. This name identifies the session
            for ""screen -list"" and ""screen -r"" actions. It substitutes the
            default [_t_t_y_._h_o_s_t] suffix.

       --tt _n_a_m_e
            sets the title (a.k.a.) for the default shell or specified
            program.  See also the ""shelltitle"" .screenrc command.

       --UU   Run screen in UTF-8 mode. This option tells screen that your
            terminal sends and understands UTF-8 encoded characters. It also
            sets the default encoding for new windows to `utf8'.

       --vv   Print version number.

       --wwiippee [_m_a_t_c_h]
            does the same as ""screen -ls"", but removes destroyed sessions
            instead of marking them as `dead'.  An unreachable session is
            considered dead, when its name matches either the name of the
            local host, or the explicitly given parameter, if any.  See the --rr
            flag for a description how to construct matches.

       --xx   Attach to a not detached _s_c_r_e_e_n session. (Multi display mode).

       --XX   Send the specified command to a running screen session. You can
            use the --dd or --rr option to tell screen to look only for attached
            or detached screen sessions. Note that this command doesn't work
            if the session is password protected.



DDEEFFAAUULLTT KKEEYY BBIINNDDIINNGGSS
       As mentioned, each _s_c_r_e_e_n command consists of a ""C-a"" followed by one
       other character.  For your convenience, all commands that are bound to
       lower-case letters are also bound to their control character
       counterparts (with the exception of ""C-a a""; see below), thus, ""C-a c""
       as well as ""C-a C-c"" can be used to create a window. See section
       ""CUSTOMIZATION"" for a description of the command.

       The following table shows the default key bindings:

       CC--aa ''       (select)      Prompt for a window name or number to switch
                                 to.

       CC--aa """"       (windowlist -b)
                                 Present a list of all windows for selection.

       CC--aa 00       (select 0)
        ......           ...
       CC--aa 99       (select 9)
       CC--aa --       (select -)    Switch to window number 0 - 9, or to the
                                 blank window.

       CC--aa ttaabb     (focus)       Switch the input focus to the next region.

       CC--aa CC--aa     (other)       Toggle to the window displayed previously.
                                 Note that this binding defaults to the
                                 command character typed twice, unless
                                 overridden.  For instance, if you use the
                                 option ""--ee]]xx"", this command becomes ""]]"".

       CC--aa aa       (meta)        Send the command character (C-a) to window.
                                 See _e_s_c_a_p_e command.

       CC--aa AA       (title)       Allow the user to enter a name for the
                                 current window.

       CC--aa bb
       CC--aa CC--bb     (break)       Send a break to window.

       CC--aa BB       (pow_break)   Reopen the terminal line and send a break.

       CC--aa cc
       CC--aa CC--cc     (screen)      Create a new window with a shell and switch
                                 to that window.

       CC--aa CC       (clear)       Clear the screen.

       CC--aa dd
       CC--aa CC--dd     (detach)      Detach _s_c_r_e_e_n from this terminal.

       CC--aa DD DD     (pow_detach)  Detach and logout.

       CC--aa ff
       CC--aa CC--ff     (flow)        Toggle flow _o_n, _o_f_f or _a_u_t_o.

       CC--aa FF       (fit)         Resize the window to the current region size.

       CC--aa CC--gg     (vbell)       Toggles _s_c_r_e_e_n_'_s visual bell mode.

       CC--aa hh       (hardcopy)    Write a hardcopy of the current window to the
                                 file ""hardcopy._n"".

       CC--aa HH       (log)         Begins/ends logging of the current window to
                                 the file ""screenlog._n"".

       CC--aa ii
       CC--aa CC--ii     (info)        Show info about this window.

       CC--aa kk
       CC--aa CC--kk     (kill)        Destroy current window.

       CC--aa ll
       CC--aa CC--ll     (redisplay)   Fully refresh current window.

       CC--aa LL       (login)       Toggle this windows login slot. Available
                                 only if _s_c_r_e_e_n is configured to update the
                                 utmp database.

       CC--aa mm
       CC--aa CC--mm     (lastmsg)     Repeat the last message displayed in the
                                 message line.

       CC--aa MM       (monitor)     Toggles monitoring of the current window.

       CC--aa ssppaaccee
       CC--aa nn
       CC--aa CC--nn     (next)        Switch to the next window.

       CC--aa NN       (number)      Show the number (and title) of the current
                                 window.

       CC--aa bbaacckkssppaaccee
       CC--aa hh
       CC--aa pp
       CC--aa CC--pp     (prev)        Switch to the previous window (opposite of CC--
                                 aa nn).

       CC--aa qq
       CC--aa CC--qq     (xon)         Send a control-q to the current window.

       CC--aa QQ       (only)        Delete all regions but the current one.

       CC--aa rr
       CC--aa CC--rr     (wrap)        Toggle the current window's line-wrap setting
                                 (turn the current window's automatic margins
                                 on and off).

       CC--aa ss
       CC--aa CC--ss     (xoff)        Send a control-s to the current window.

       CC--aa SS       (split)       Split the current region into two new ones.

       CC--aa tt
       CC--aa CC--tt     (time)        Show system information.

       CC--aa vv       (version)     Display the version and compilation date.

       CC--aa CC--vv     (digraph)     Enter digraph.

       CC--aa ww
       CC--aa CC--ww     (windows)     Show a list of window.

       CC--aa WW       (width)       Toggle 80/132 columns.

       CC--aa xx
       CC--aa CC--xx     (lockscreen)  Lock this terminal.

       CC--aa XX       (remove)      Kill the current region.

       CC--aa zz
       CC--aa CC--zz     (suspend)     Suspend _s_c_r_e_e_n.  Your system must support
                                 BSD-style job-control.

       CC--aa ZZ       (reset)       Reset the virtual terminal to its ""power-on""
                                 values.

       CC--aa ..       (dumptermcap) Write out a "".termcap"" file.

       CC--aa ??       (help)        Show key bindings.

       CC--aa CC--\\     (quit)        Kill all windows and terminate _s_c_r_e_e_n.

       CC--aa ::       (colon)       Enter command line mode.

       CC--aa [[
       CC--aa CC--[[
       CC--aa eesscc     (copy)        Enter copy/scrollback mode.

       CC--aa ]]       (paste .)     Write the contents of the paste buffer to the
                                 stdin queue of the current window.

       CC--aa {{
       CC--aa }}       (history)     Copy and paste a previous (command) line.

       CC--aa >>       (writebuf)    Write paste buffer to a file.

       CC--aa <<       (readbuf)     Reads the screen-exchange file into the paste
                                 buffer.

       CC--aa ==       (removebuf)   Removes the file used by CC--aa << and CC--aa >>.

       CC--aa ,,       (license)     Shows where _s_c_r_e_e_n comes from, where it went
                                 to and why you can use it.

       CC--aa __       (silence)     Start/stop monitoring the current window for
                                 inactivity.

       CC--aa **       (displays)    Show a listing of all currently attached
                                 displays.



CCUUSSTTOOMMIIZZAATTIIOONN
       The ""socket directory"" defaults either to $HOME/.screen or simply to
       /tmp/screens or preferably to /usr/local/screens chosen at compile-
       time. If _s_c_r_e_e_n is installed setuid-root, then the administrator should
       compile _s_c_r_e_e_n with an adequate (not NFS mounted) socket directory. If
       _s_c_r_e_e_n is not running setuid-root, the user can specify any mode 700
       directory in the environment variable $SCREENDIR.

       When _s_c_r_e_e_n is invoked, it executes initialization commands from the
       files ""/usr/local/etc/screenrc"" and "".screenrc"" in the user's home
       directory. These are the ""programmer's defaults"" that can be overridden
       in the following ways: for the global screenrc file _s_c_r_e_e_n searches for
       the environment variable $SYSSCREENRC (this override feature may be
       disabled at compile-time). The user specific screenrc file is searched
       in $SCREENRC, then $HOME/.screenrc.  The command line option --cc takes
       precedence over the above user screenrc files.

       Commands in these files are used to set options, bind functions to
       keys, and to automatically establish one or more windows at the
       beginning of your _s_c_r_e_e_n session.  Commands are listed one per line,
       with empty lines being ignored.  A command's arguments are separated by
       tabs or spaces, and may be surrounded by single or double quotes.  A
       `#' turns the rest of the line into a comment, except in quotes.
       Unintelligible lines are warned about and ignored.  Commands may
       contain references to environment variables. The syntax is the shell-
       like ""$VAR "" or ""${VAR}"". Note that this causes incompatibility with
       previous _s_c_r_e_e_n versions, as now the '$'-character has to be protected
       with '\' if no variable substitution shall be performed. A string in
       single-quotes is also protected from variable substitution.

       Two configuration files are shipped as examples with your screen
       distribution: ""etc/screenrc"" and ""etc/etcscreenrc"". They contain a
       number of useful examples for various commands.

       Customization can also be done 'on-line'. To enter the command mode
       type `C-a :'. Note that commands starting with ""def"" change default
       values, while others change current settings.

       The following commands are available:

       aaccllaadddd _u_s_e_r_n_a_m_e_s [_c_r_y_p_t_e_d_-_p_w]
       aaddddaaccll _u_s_e_r_n_a_m_e_s

       Enable users to fully access this screen session. _U_s_e_r_n_a_m_e_s can be one
       user or a comma separated list of users. This command enables to attach
       to the _s_c_r_e_e_n session and performs the equivalent of `aclchg _u_s_e_r_n_a_m_e_s
       +rwx ""#?""'.  executed. To add a user with restricted access, use the
       `aclchg' command below.  If an optional second parameter is supplied,
       it should be a crypted password for the named user(s). `Addacl' is a
       synonym to `acladd'.  Multi user mode only.

       aaccllcchhgg _u_s_e_r_n_a_m_e_s _p_e_r_m_b_i_t_s _l_i_s_t
       cchhaaccll _u_s_e_r_n_a_m_e_s _p_e_r_m_b_i_t_s _l_i_s_t

       Change permissions for a comma separated list of users. Permission bits
       are represented as `r', `w' and `x'. Prefixing `+' grants the
       permission, `-' removes it. The third parameter is a comma separated
       list of commands and/or windows (specified either by number or title).
       The special list `#' refers to all windows, `?' to all commands. if
       _u_s_e_r_n_a_m_e_s consists of a single `*', all known users are affected.  A
       command can be executed when the user has the `x' bit for it.  The user
       can type input to a window when he has its `w' bit set and no other
       user obtains a writelock for this window.  Other bits are currently
       ignored.  To withdraw the writelock from another user in window 2:
       `aclchg _u_s_e_r_n_a_m_e -w+w 2'.  To allow read-only access to the session:
       `aclchg _u_s_e_r_n_a_m_e -w ""#""'. As soon as a user's name is known to _s_c_r_e_e_n
       he can attach to the session and (per default) has full permissions for
       all command and windows. Execution permission for the acl commands,
       `at' and others should also be removed or the user may be able to
       regain write permission.  Rights of the special username nnoobbooddyy cannot
       be changed (see the ""su"" command).  `Chacl' is a synonym to `aclchg'.
       Multi user mode only.

       aaccllddeell _u_s_e_r_n_a_m_e

       Remove a user from _s_c_r_e_e_n's access control list. If currently attached,
       all the user's displays are detached from the session. He cannot attach
       again.  Multi user mode only.

       aaccllggrrpp _u_s_e_r_n_a_m_e [_g_r_o_u_p_n_a_m_e]

       Creates groups of users that share common access rights. The name of
       the group is the username of the group leader. Each member of the group
       inherits the permissions that are granted to the group leader. That
       means, if a user fails an access check, another check is made for the
       group leader.  A user is removed from all groups the special value
       ""none"" is used for _g_r_o_u_p_n_a_m_e.  If the second parameter is omitted all
       groups the user is in are listed.

       aacclluummaasskk [[_u_s_e_r_s]_+_b_i_t_s |[_u_s_e_r_s]_-_b_i_t_s .... ]
       uummaasskk [[_u_s_e_r_s]_+_b_i_t_s |[_u_s_e_r_s]_-_b_i_t_s .... ]

       This specifies the access other users have to windows that will be
       created by the caller of the command.  _U_s_e_r_s may be no, one or a comma
       separated list of known usernames. If no users are specified, a list of
       all currently known users is assumed.  _B_i_t_s is any combination of
       access control bits allowed defined with the ""aclchg"" command. The
       special username ""?"" predefines the access that not yet known users
       will be granted to any window initially.  The special username ""??""
       predefines the access that not yet known users are granted to any
       command.  Rights of the special username nnoobbooddyy cannot be changed (see
       the ""su"" command).  `Umask' is a synonym to `aclumask'.

       aaccttiivviittyy _m_e_s_s_a_g_e

       When any activity occurs in a background window that is being
       monitored, _s_c_r_e_e_n displays a notification in the message line.  The
       notification message can be re-defined by means of the ""activity""
       command.  Each occurrence of `%' in _m_e_s_s_a_g_e is replaced by the number
       of the window in which activity has occurred, and each occurrence of
       `^G' is replaced by the definition for bell in your termcap (usually an
       audible bell).  The default message is

                   'Activity in window %n'

       Note that monitoring is off for all windows by default, but can be
       altered by use of the ""monitor"" command (C-a M).

       aallllppaarrttiiaall oonn|ooffff

       If set to on, only the current cursor line is refreshed on window
       change.  This affects all windows and is useful for slow terminal
       lines. The previous setting of full/partial refresh for each window is
       restored with ""allpartial off"".  This is a global flag that immediately
       takes effect on all windows overriding the ""partial"" settings. It does
       not change the default redraw behavior of newly created windows.

       aallttssccrreeeenn oonn|ooffff

       If set to on, ""alternate screen"" support is enabled in virtual
       terminals, just like in xterm.  Initial setting is `off'.

       aatt [_i_d_e_n_t_i_f_i_e_r][##|**|%%]  _c_o_m_m_a_n_d [_a_r_g_s ... ]

       Execute a command at other displays or windows as if it had been
       entered there.  ""At"" changes the context (the `current window' or
       `current display' setting) of the command. If the first parameter
       describes a non-unique context, the command will be executed multiple
       times. If the first parameter is of the form `_i_d_e_n_t_i_f_i_e_r*' then
       identifier is matched against user names.  The command is executed once
       for each display of the selected user(s). If the first parameter is of
       the form `_i_d_e_n_t_i_f_i_e_r%' identifier is matched against displays. Displays
       are named after the ttys they attach. The prefix `/dev/' or `/dev/tty'
       may be omitted from the identifier.  If _i_d_e_n_t_i_f_i_e_r has a `#' or nothing
       appended it is matched against window numbers and titles. Omitting an
       identifier in front of the `#', `*' or `%'-character selects all users,
       displays or windows because a prefix-match is performed. Note that on
       the affected display(s) a short message will describe what happened.
       Permission is checked for initiator of the ""at"" command, not for the
       owners of the affected display(s).  Note that the '#' character works
       as a comment introducer when it is preceded by whitespace. This can be
       escaped by prefixing a '\'.  Permission is checked for the initiator of
       the ""at"" command, not for the owners of the affected display(s).
       Caveat: When matching against windows, the command is executed at least
       once per window. Commands that change the internal arrangement of
       windows (like ""other"") may be called again. In shared windows the
       command will be repeated for each attached display. Beware, when
       issuing toggle commands like ""login""!  Some commands (e.g. ""process"")
       require that a display is associated with the target windows.  These
       commands may not work correctly under ""at"" looping over windows.

       aattttrrccoolloorr _a_t_t_r_i_b [_a_t_t_r_i_b_u_t_e_/_c_o_l_o_r_-_m_o_d_i_f_i_e_r]

       This command can be used to highlight attributes by changing the color
       of the text. If the attribute _a_t_t_r_i_b is in use, the specified
       attribute/color modifier is also applied. If no modifier is given, the
       current one is deleted. See the ""STRING ESCAPES"" chapter for the syntax
       of the modifier. Screen understands two pseudo-attributes, ""i"" stands
       for high-intensity foreground color and ""I"" for high-intensity
       background color.

       Examples:

              attrcolor b ""R""

       Change the color to bright red if bold text is to be printed.

              attrcolor u ""-u b""

       Use blue text instead of underline.

              attrcolor b "".I""

       Use bright colors for bold text. Most terminal emulators do this
       already.

              attrcolor i ""+b""

       Make bright colored text also bold.

       aauuttooddeettaacchh oonn|ooffff

       Sets whether _s_c_r_e_e_n will automatically detach upon hangup, which saves
       all your running programs until they are resumed with a ssccrreeeenn --rr
       command.  When turned off, a hangup signal will terminate _s_c_r_e_e_n and
       all the processes it contains. Autodetach is on by default.

       aauuttoonnuukkee oonn|ooffff

       Sets whether a clear screen sequence should nuke all the output that
       has not been written to the terminal. See also ""obuflimit"".

       bbaacckkttiicckk _i_d _l_i_f_e_s_p_a_n _a_u_t_o_r_e_f_r_e_s_h _c_m_d _a_r_g_s_._._.
       bbaacckkttiicckk _i_d

       Program the backtick command with the numerical id _i_d.  The output of
       such a command is used for substitution of the ""%`"" string escape. The
       specified _l_i_f_e_s_p_a_n is the number of seconds the output is considered
       valid. After this time, the command is run again if a corresponding
       string escape is encountered.  The _a_u_t_o_r_e_f_r_e_s_h parameter triggers an
       automatic refresh for caption and hardstatus strings after the
       specified number of seconds. Only the last line of output is used for
       substitution.
       If both the _l_i_f_e_s_p_a_n and the _a_u_t_o_r_e_f_r_e_s_h parameters are zero, the
       backtick program is expected to stay in the background and generate
       output once in a while.  In this case, the command is executed right
       away and screen stores the last line of output. If a new line gets
       printed screen will automatically refresh the hardstatus or the
       captions.
       The second form of the command deletes the backtick command with the
       numerical id _i_d.

       bbccee [oonn|ooffff]

       Change background-color-erase setting. If ""bce"" is set to on, all
       characters cleared by an erase/insert/scroll/clear operation will be
       displayed in the current background color. Otherwise the default
       background color is used.

       bbeellll__mmssgg [_m_e_s_s_a_g_e]

       When a bell character is sent to a background window, _s_c_r_e_e_n displays a
       notification in the message line.  The notification message can be re-
       defined by this command.  Each occurrence of `%' in _m_e_s_s_a_g_e is replaced
       by the number of the window to which a bell has been sent, and each
       occurrence of `^G' is replaced by the definition for bell in your
       termcap (usually an audible bell).  The default message is

                   'Bell in window %n'

       An empty message can be supplied to the ""bell_msg"" command to suppress
       output of a message line (bell_msg """").  Without parameter, the current
       message is shown.

       bbiinndd  [--cc _c_l_a_s_s] _k_e_y [_c_o_m_m_a_n_d [_a_r_g_s]]

       Bind a command to a key.  By default, most of the commands provided by
       _s_c_r_e_e_n are bound to one or more keys as indicated in the ""DEFAULT KEY
       BINDINGS"" section, e.g. the command to create a new window is bound to
       ""C-c"" and ""c"".  The ""bind"" command can be used to redefine the key
       bindings and to define new bindings.  The _k_e_y argument is either a
       single character, a two-character sequence of the form ""^x"" (meaning
       ""C-x""), a backslash followed by an octal number (specifying the ASCII
       code of the character), or a backslash followed by a second character,
       such as ""\^"" or ""\\"".  The argument can also be quoted, if you like.
       If no further argument is given, any previously established binding for
       this key is removed.  The _c_o_m_m_a_n_d argument can be any command listed in
       this section.

       If a command class is specified via the ""-c"" option, the key is bound
       for the specified class. Use the ""command"" command to activate a class.
       Command classes can be used to create multiple command keys or multi-
       character bindings.

       Some examples:

                   bind ' ' windows
                   bind ^k
                   bind k
                   bind K kill
                   bind ^f screen telnet foobar
                   bind \033 screen -ln -t root -h 1000 9 su

       would bind the space key to the command that displays a list of windows
       (so that the command usually invoked by ""C-a C-w"" would also be
       available as ""C-a space""). The next three lines remove the default kill
       binding from ""C-a C-k"" and ""C-a k"".  ""C-a K"" is then bound to the kill
       command. Then it binds ""C-f"" to the command ""create a window with a
       TELNET connection to foobar"", and bind ""escape"" to the command that
       creates an non-login window with a.k.a. ""root"" in slot #9, with a
       superuser shell and a scrollback buffer of 1000 lines.

                   bind -c demo1 0 select 10
                   bind -c demo1 1 select 11
                   bind -c demo1 2 select 12
                   bindkey ""^B"" command -c demo1

       makes ""C-b 0"" select window 10, ""C-b 1"" window 11, etc.

                   bind -c demo2 0 select 10
                   bind -c demo2 1 select 11
                   bind -c demo2 2 select 12
                   bind - command -c demo2

       makes ""C-a - 0"" select window 10, ""C-a - 1"" window 11, etc.

       bbiinnddkkeeyy [--dd] [--mm] [--aa] [[--kk|--tt] _s_t_r_i_n_g [_c_m_d _a_r_g_s]]

       This command manages screen's input translation tables. Every entry in
       one of the tables tells screen how to react if a certain sequence of
       characters is encountered. There are three tables: one that should
       contain actions programmed by the user, one for the default actions
       used for terminal emulation and one for screen's copy mode to do cursor
       movement. See section ""INPUT TRANSLATION"" for a list of default key
       bindings.
       If the --dd option is given, bindkey modifies the default table, --mm
       changes the copy mode table and with neither option the user table is
       selected.  The argument _s_t_r_i_n_g is the sequence of characters to which
       an action is bound. This can either be a fixed string or a termcap
       keyboard capability name (selectable with the --kk option).
       Some keys on a VT100 terminal can send a different string if
       application mode is turned on (e.g the cursor keys).  Such keys have
       two entries in the translation table. You can select the application
       mode entry by specifying the --aa option.
       The --tt option tells screen not to do inter-character timing. One cannot
       turn off the timing if a termcap capability is used.
       _C_m_d can be any of screen's commands with an arbitrary number of _a_r_g_s.
       If _c_m_d is omitted the key-binding is removed from the table.
       Here are some examples of keyboard bindings:

               bindkey -d
       Show all of the default key bindings. The application mode entries are
       marked with [A].

               bindkey -k k1 select 1
       Make the ""F1"" key switch to window one.

               bindkey -t foo stuff barfoo
       Make ""foo"" an abbreviation of the word ""barfoo"". Timeout is disabled so
       that users can type slowly.

               bindkey ""\024"" mapdefault
       This key-binding makes ""^T"" an escape character for key-bindings. If
       you did the above ""stuff barfoo"" binding, you can enter the word ""foo""
       by typing ""^Tfoo"". If you want to insert a ""^T"" you have to press the
       key twice (i.e. escape the escape binding).

               bindkey -k F1 command
       Make the F11 (not F1!) key an alternative screen escape (besides ^A).

       bbrreeaakk [_d_u_r_a_t_i_o_n]

       Send a break signal for _d_u_r_a_t_i_o_n*0.25 seconds to this window.  For non-
       Posix systems the time interval may be rounded up to full seconds.
       Most useful if a character device is attached to the window rather than
       a shell process (See also chapter ""WINDOW TYPES""). The maximum duration
       of a break signal is limited to 15 seconds.

       bbllaannkkeerr

       Activate the screen blanker. First the screen is cleared. If no blanker
       program is defined, the cursor is turned off, otherwise, the program is
       started and it's output is written to the screen.  The screen blanker
       is killed with the first keypress, the read key is discarded.
       This command is normally used together with the ""idle"" command.

       bbllaannkkeerrpprrgg [_p_r_o_g_r_a_m _a_r_g_s]

       Defines a blanker program. Disables the blanker program if no arguments
       are given.

       bbrreeaakkttyyppee [_t_c_s_e_n_d_b_r_e_a_k|_T_I_O_C_S_B_R_K |_T_C_S_B_R_K]

       Choose one of the available methods of generating a break signal for
       terminal devices. This command should affect the current window only.
       But it still behaves identical to ""defbreaktype"". This will be changed
       in the future.  Calling ""breaktype"" with no parameter displays the
       break method for the current window.

       bbuuffffeerrffiillee [_e_x_c_h_a_n_g_e_-_f_i_l_e]

       Change the filename used for reading and writing with the paste buffer.
       If the optional argument to the ""bufferfile"" command is omitted, the
       default setting (""/tmp/screen-exchange"") is reactivated.  The following
       example will paste the system's password file into the _s_c_r_e_e_n window
       (using the paste buffer, where a copy remains):

                   C-a : bufferfile /etc/passwd
                   C-a < C-a ]
                   C-a : bufferfile

       cc11 [oonn|ooffff]

       Change c1 code processing. ""C1 on"" tells screen to treat the input
       characters between 128 and 159 as control functions.  Such an 8-bit
       code is normally the same as ESC followed by the corresponding 7-bit
       code. The default setting is to process c1 codes and can be changed
       with the ""defc1"" command.  Users with fonts that have usable characters
       in the c1 positions may want to turn this off.

       ccaappttiioonn aallwwaayyss|sspplliittoonnllyy [_s_t_r_i_n_g]
       ccaappttiioonn ssttrriinngg [_s_t_r_i_n_g]

       This command controls the display of the window captions. Normally a
       caption is only used if more than one window is shown on the display
       (split screen mode). But if the type is set to aallwwaayyss screen shows a
       caption even if only one window is displayed. The default is sspplliittoonnllyy.

       The second form changes the text used for the caption. You can use all
       escapes from the ""STRING ESCAPES"" chapter. Screen uses a default of
       `%3n %t'.

       You can mix both forms by providing a string as an additional argument.

       cchhaarrsseett _s_e_t

       Change the current character set slot designation and charset mapping.
       The first four character of _s_e_t are treated as charset designators
       while the fifth and sixth character must be in range '0' to '3' and set
       the GL/GR charset mapping. On every position a '.' may be used to
       indicate that the corresponding charset/mapping should not be changed
       (_s_e_t is padded to six characters internally by appending '.' chars).
       New windows have ""BBBB02"" as default charset, unless a ""encoding""
       command is active.
       The current setting can be viewed with the ""info"" command.

       cchhddiirr [_d_i_r_e_c_t_o_r_y]

       Change the _c_u_r_r_e_n_t _d_i_r_e_c_t_o_r_y of _s_c_r_e_e_n to the specified directory or,
       if called without an argument, to your home directory (the value of the
       environment variable $HOME).  All windows that are created by means of
       the ""screen"" command from within "".screenrc"" or by means of ""C-a :
       screen ..."" or ""C-a c"" use this as their default directory.  Without a
       chdir command, this would be the directory from which _s_c_r_e_e_n was
       invoked.  Hardcopy and log files are always written to the _w_i_n_d_o_w_'_s
       default directory, _n_o_t the current directory of the process running in
       the window.  You can use this command multiple times in your .screenrc
       to start various windows in different default directories, but the last
       chdir value will affect all the windows you create interactively.

       cclleeaarr

       Clears the current window and saves its image to the scrollback buffer.

       ccoolloonn [_p_r_e_f_i_x]

       Allows you to enter "".screenrc"" command lines. Useful for on-the-fly
       modification of key bindings, specific window creation and changing
       settings. Note that the ""set"" keyword no longer exists! Usually
       commands affect the current window rather than default settings for
       future windows. Change defaults with commands starting with 'def...'.

       If you consider this as the `Ex command mode' of _s_c_r_e_e_n, you may regard
       ""C-a esc"" (copy mode) as its `Vi command mode'.

       ccoommmmaanndd [--cc _c_l_a_s_s]

       This command has the same effect as typing the screen escape character
       (^A). It is probably only useful for key bindings.  If the ""-c"" option
       is given, select the specified command class.  See also ""bind"" and
       ""bindkey"".

       ccoommppaacctthhiisstt [oonn|ooffff]

       This tells screen whether to suppress trailing blank lines when
       scrolling up text into the history buffer.

       ccoonnssoollee [oonn|ooffff]

       Grabs or un-grabs the machines console output to a window.  _N_o_t_e: Only
       the owner of /dev/console can grab the console output.  This command is
       only available if the machine supports the ioctl TIOCCONS.

       ccooppyy

       Enter copy/scrollback mode. This allows you to copy text from the
       current window and its history into the paste buffer. In this mode a
       vi-like `full screen editor' is active:
       _M_o_v_e_m_e_n_t _k_e_y_s:
         hh, jj, kk, ll move the cursor line by line or column by column.
         00, ^^ and $$ move to the leftmost column, to the first or last non-
           whitespace character on the line.
         HH, MM and LL move the cursor to the leftmost column of the top, center
           or bottom line of the window.
         ++ and -- positions one line up and down.
         GG moves to the specified absolute line (default: end of buffer).
         || moves to the specified absolute column.
         ww, bb, ee move the cursor word by word.
         BB, EE move the cursor WORD by WORD (as in vi).
         CC--uu and CC--dd scroll the display up/down by the specified amount of
           lines while preserving the cursor position. (Default: half screen-
           full).
         CC--bb and CC--ff scroll the display up/down a full screen.
         gg moves to the beginning of the buffer.
         %% jumps to the specified percentage of the buffer.

           _N_o_t_e:
           Emacs style movement keys can be customized by a .screenrc command.
           (E.g. markkeys ""h=^B:l=^F:$=^E"") There is no simple method for a
           full emacs-style keymap, as this involves multi-character codes.

       _M_a_r_k_i_n_g:
           The copy range is specified by setting two marks. The text between
           these marks will be highlighted. Press
         ssppaaccee to set the first or second mark respectively.
         YY and yy used to mark one whole line or to mark from start of line.
         WW marks exactly one word.
       _R_e_p_e_a_t _c_o_u_n_t:
           Any of these commands can be prefixed with a repeat count number by
           pressing digits
         00..99 which is taken as a repeat count.
           Example: ""C-a C-[ H 10 j 5 Y"" will copy lines 11 to 15 into the
           paste buffer.
       _S_e_a_r_c_h_i_n_g:
         // _V_i-like search forward.
         ?? _V_i-like search backward.
         CC--aa ss _E_m_a_c_s style incremental search forward.
         CC--rr _E_m_a_c_s style reverse i-search.
       _S_p_e_c_i_a_l_s:
           There are however some keys that act differently than in _v_i.  _V_i
           does not allow one to yank rectangular blocks of text, but _s_c_r_e_e_n
           does. Press
         cc or CC to set the left or right margin respectively. If no repeat
           count is given, both default to the current cursor position.
           Example: Try this on a rather full text screen: ""C-a [ M 20 l SPACE
           c 10 l 5 j C SPACE"".

           This moves one to the middle line of the screen, moves in 20
           columns left, marks the beginning of the paste buffer, sets the
           left column, moves 5 columns down, sets the right column, and then
           marks the end of the paste buffer. Now try:
           ""C-a [ M 20 l SPACE 10 l 5 j SPACE""

           and notice the difference in the amount of text copied.
         JJ joins lines. It toggles between 4 modes: lines separated by a
           newline character (012), lines glued seamless, lines separated by a
           single whitespace and comma separated lines. Note that you can
           prepend the newline character with a carriage return character, by
           issuing a ""crlf on"".
         vv is for all the _v_i users with "":set numbers"" - it toggles the left
           margin between column 9 and 1. Press
         aa before the final space key to toggle in append mode. Thus the
           contents of the paste buffer will not be overwritten, but is
           appended to.
         AA toggles in append mode and sets a (second) mark.
         >> sets the (second) mark and writes the contents of the paste buffer
           to the screen-exchange file (/tmp/screen-exchange per default) once
           copy-mode is finished.
           This example demonstrates how to dump the whole scrollback buffer
           to that file: ""C-A [ g SPACE G $ >"".
         CC--gg gives information about the current line and column.
         xx exchanges the first mark and the current cursor position. You can
           use this to adjust an already placed mark.
         @@ does nothing. Does not even exit copy mode.
         All keys not described here exit copy mode.

       ccooppyy__rreegg [_k_e_y]

       No longer exists, use ""readreg"" instead.

       ccrrllff [oonn|ooffff]

       This affects the copying of text regions with the `C-a [' command. If
       it is set to `on', lines will be separated by the two character
       sequence `CR' - `LF'.  Otherwise (default) only `LF' is used.  When no
       parameter is given, the state is toggled.

       ddeebbuugg oonn|ooffff

       Turns runtime debugging on or off. If _s_c_r_e_e_n has been compiled with
       option -DDEBUG debugging available and is turned on per default. Note
       that this command only affects debugging output from the main ""SCREEN""
       process correctly. Debug output from attacher processes can only be
       turned off once and forever.

       ddeeffcc11 oonn|ooffff

       Same as the cc11 command except that the default setting for new windows
       is changed. Initial setting is `on'.

       ddeeffaauuttoonnuukkee oonn|ooffff

       Same as the aauuttoonnuukkee command except that the default setting for new
       displays is changed. Initial setting is `off'.  Note that you can use
       the special `AN' terminal capability if you want to have a dependency
       on the terminal type.

       ddeeffbbccee oonn|ooffff

       Same as the bbccee command except that the default setting for new windows
       is changed. Initial setting is `off'.

       ddeeffbbrreeaakkttyyppee [_t_c_s_e_n_d_b_r_e_a_k|_T_I_O_C_S_B_R_K |_T_C_S_B_R_K]

       Choose one of the available methods of generating a break signal for
       terminal devices. The preferred methods are _t_c_s_e_n_d_b_r_e_a_k and _T_I_O_C_S_B_R_K.
       The third, _T_C_S_B_R_K, blocks the complete _s_c_r_e_e_n session for the duration
       of the break, but it may be the only way to generate long breaks.
       _T_c_s_e_n_d_b_r_e_a_k and _T_I_O_C_S_B_R_K may or may not produce long breaks with spikes
       (e.g. 4 per second). This is not only system dependant, this also
       differs between serial board drivers.  Calling ""defbreaktype"" with no
       parameter displays the current setting.

       ddeeffcchhaarrsseett [_s_e_t]

       Like the cchhaarrsseett command except that the default setting for new
       windows is changed. Shows current default if called without argument.

       ddeeffeessccaappee _x_y

       Set the default command characters. This is equivalent to the ""escape""
       except that it is useful multiuser sessions only. In a multiuser
       session ""escape"" changes the command character of the calling user,
       where ""defescape"" changes the default command characters for users that
       will be added later.

       ddeeffffllooww oonn|ooffff|aauuttoo [iinntteerrrruupptt]

       Same as the ffllooww command except that the default setting for new
       windows is changed. Initial setting is `auto'.  Specifying ""defflow
       auto interrupt"" is the same as the command-line options --ffaa and --ii.

       ddeeffggrr oonn|ooffff

       Same as the ggrr command except that the default setting for new windows
       is changed. Initial setting is `off'.

       ddeeffhhssttaattuuss [_s_t_a_t_u_s]

       The hardstatus line that all new windows will get is set to _s_t_a_t_u_s.
       This command is useful to make the hardstatus of every window display
       the window number or title or the like.  _S_t_a_t_u_s may contain the same
       directives as in the window messages, but the directive escape
       character is '^E' (octal 005) instead of '%'.  This was done to make a
       misinterpretation of program generated hardstatus lines impossible.  If
       the parameter _s_t_a_t_u_s is omitted, the current default string is
       displayed.  Per default the hardstatus line of new windows is empty.

       ddeeffeennccooddiinngg _e_n_c

       Same as the eennccooddiinngg command except that the default setting for new
       windows is changed. Initial setting is the encoding taken from the
       terminal.

       ddeefflloogg oonn|ooffff

       Same as the lloogg command except that the default setting for new windows
       is changed. Initial setting is `off'.

       ddeeffllooggiinn oonn|ooffff

       Same as the llooggiinn command except that the default setting for new
       windows is changed. This is initialized with `on' as distributed (see
       config.h.in).

       ddeeffmmooddee _m_o_d_e

       The mode of each newly allocated pseudo-tty is set to _m_o_d_e.  _M_o_d_e is an
       octal number.  When no ""defmode"" command is given, mode 0622 is used.

       ddeeffmmoonniittoorr oonn|ooffff

       Same as the mmoonniittoorr command except that the default setting for new
       windows is changed. Initial setting is `off'.

       ddeeffnnoonnbblloocckk oonn|ooffff|_n_u_m_s_e_c_s

       Same as the nnoonnbblloocckk command except that the default setting for
       displays is changed. Initial setting is `off'.

       ddeeffoobbuufflliimmiitt _l_i_m_i_t

       Same as the oobbuufflliimmiitt command except that the default setting for new
       displays is changed. Initial setting is 256 bytes.  Note that you can
       use the special 'OL' terminal capability if you want to have a
       dependency on the terminal type.

       ddeeffssccrroollllbbaacckk _n_u_m

       Same as the ssccrroollllbbaacckk command except that the default setting for new
       windows is changed. Initial setting is 100.

       ddeeffsshheellll _c_o_m_m_a_n_d

       Synonym to the sshheellll command. See there.

       ddeeffssiilleennccee oonn|ooffff

       Same as the ssiilleennccee command except that the default setting for new
       windows is changed. Initial setting is `off'.

       ddeeffsslloowwppaassttee _m_s_e_c_""

       Same as the sslloowwppaassttee command except that the default setting for new
       windows is changed. Initial setting is 0 milliseconds, meaning `off'.

       ddeeffuuttff88 oonn|ooffff

       Same as the uuttff88 command except that the default setting for new
       windows is changed. Initial setting is `on' if screen was started with
       ""-U"", otherwise `off'.

       ddeeffwwrraapp oonn|ooffff

       Same as the wwrraapp command except that the default setting for new
       windows is changed. Initially line-wrap is on and can be toggled with
       the ""wrap"" command (""C-a r"") or by means of ""C-a : wrap on|off"".

       ddeeffwwrriitteelloocckk oonn|ooffff|aauuttoo

       Same as the wwrriitteelloocckk command except that the default setting for new
       windows is changed. Initially writelocks will off.

       ddeeffzzoommbbiiee [_k_e_y_s]

       Synonym to the zzoommbbiiee command. Both currently change the default.  See
       there.

       ddeettaacchh [--hh]

       Detach the _s_c_r_e_e_n session (disconnect it from the terminal and put it
       into the background).  This returns you to the shell where you invoked
       _s_c_r_e_e_n.  A detached _s_c_r_e_e_n can be resumed by invoking _s_c_r_e_e_n with the
       --rr option (see also section ""COMMAND-LINE OPTIONS""). The --hh option
       tells screen to immediately close the connection to the terminal
       (""hangup"").

       ddiinnffoo

       Show what screen thinks about your terminal. Useful if you want to know
       why features like color or the alternate charset don't work.

       ddiissppllaayyss

       Shows a tabular listing of all currently connected user front-ends
       (displays).  This is most useful for multiuser sessions.

       ddiiggrraapphh [_p_r_e_s_e_t]

       This command prompts the user for a digraph sequence. The next two
       characters typed are looked up in a builtin table and the resulting
       character is inserted in the input stream. For example, if the user
       enters 'a""', an a-umlaut will be inserted. If the first character
       entered is a 0 (zero), _s_c_r_e_e_n will treat the following characters (up
       to three) as an octal number instead.  The optional argument _p_r_e_s_e_t is
       treated as user input, thus one can create an ""umlaut"" key.  For
       example the command ""bindkey ^K digraph '""'"" enables the user to
       generate an a-umlaut by typing CTRL-K a.

       dduummpptteerrmmccaapp

       Write the termcap entry for the virtual terminal optimized for the
       currently active window to the file "".termcap"" in the user's
       ""$HOME/.screen"" directory (or wherever _s_c_r_e_e_n stores its sockets. See
       the ""FILES"" section below).  This termcap entry is identical to the
       value of the environment variable $TERMCAP that is set up by _s_c_r_e_e_n for
       each window. For terminfo based systems you will need to run a
       converter like _c_a_p_t_o_i_n_f_o and then compile the entry with _t_i_c.

       eecchhoo [--nn] _m_e_s_s_a_g_e

       The echo command may be used to annoy _s_c_r_e_e_n users with a 'message of
       the day'. Typically installed in a global /local/etc/screenrc.  The
       option ""-n"" may be used to suppress the line feed.  See also ""sleep"".
       Echo is also useful for online checking of environment variables.

       eennccooddiinngg _e_n_c [_e_n_c]

       Tell _s_c_r_e_e_n how to interpret the input/output. The first argument sets
       the encoding of the current window. Each window can emulate a different
       encoding. The optional second parameter overwrites the encoding of the
       connected terminal. It should never be needed as screen uses the locale
       setting to detect the encoding.  There is also a way to select a
       terminal encoding depending on the terminal type by using the ""KJ""
       termcap entry.

       Supported encodings are eucJP, SJIS, eucKR, eucCN, Big5, GBK, KOI8-R,
       CP1251, UTF-8, ISO8859-2, ISO8859-3, ISO8859-4, ISO8859-5, ISO8859-6,
       ISO8859-7, ISO8859-8, ISO8859-9, ISO8859-10, ISO8859-15, jis.

       See also ""defencoding"", which changes the default setting of a new
       window.

       eessccaappee _x_y

       Set the command character to _x and the character generating a literal
       command character (by triggering the ""meta"" command) to _y (similar to
       the -e option).  Each argument is either a single character, a two-
       character sequence of the form ""^x"" (meaning ""C-x""), a backslash
       followed by an octal number (specifying the ASCII code of the
       character), or a backslash followed by a second character, such as ""\^""
       or ""\\"".  The default is ""^Aa"".

       eevvaall _c_o_m_m_a_n_d_1 [_c_o_m_m_a_n_d_2 _._._.]

       Parses and executes each argument as separate command.

       eexxeecc [[_f_d_p_a_t] _n_e_w_c_o_m_m_a_n_d [_a_r_g_s _._._.]]

       Run a unix subprocess (specified by an executable path _n_e_w_c_o_m_m_a_n_d and
       its optional arguments) in the current window. The flow of data between
       newcommands stdin/stdout/stderr, the process originally started in the
       window (let us call it ""application-process"") and screen itself
       (window) is controlled by the filedescriptor pattern fdpat.  This
       pattern is basically a three character sequence representing stdin,
       stdout and stderr of newcommand. A dot (.) connects the file descriptor
       to _s_c_r_e_e_n.  An exclamation mark (!) causes the file descriptor to be
       connected to the application-process. A colon (:) combines both.  User
       input will go to newcommand unless newcommand receives the application-
       process' output (fdpats first character is `!' or `:') or a pipe symbol
       (|) is added (as a fourth character) to the end of fdpat.
       Invoking `exec' without arguments shows name and arguments of the
       currently running subprocess in this window. Only one subprocess a time
       can be running in each window.
       When a subprocess is running the `kill' command will affect it instead
       of the windows process.
       Refer to the postscript file `doc/fdpat.ps' for a confusing
       illustration of all 21 possible combinations. Each drawing shows the
       digits 2,1,0 representing the three file descriptors of newcommand. The
       box marked `W' is the usual pty that has the application-process on its
       replica side.  The box marked `P' is the secondary pty that now has
       _s_c_r_e_e_n at its primary side.

       Abbreviations:
       Whitespace between the word `exec' and fdpat and the command can be
       omitted. Trailing dots and a fdpat consisting only of dots can be
       omitted. A simple `|' is synonymous for the pattern `!..|'; the word
       exec can be omitted here and can always be replaced by `!'.

       Examples:

              exec ... /bin/sh
              exec /bin/sh
              !/bin/sh

       Creates another shell in the same window, while the original shell is
       still running. Output of both shells is displayed and user input is
       sent to the new /bin/sh.

              exec !.. stty 19200
              exec ! stty 19200
              !!stty 19200

       Set the speed of the window's tty. If your stty command operates on
       stdout, then add another `!'.

              exec !..| less
              |less

       This adds a pager to the window output. The special character `|' is
       needed to give the user control over the pager although it gets its
       input from the window's process. This works, because _l_e_s_s listens on
       stderr (a behavior that _s_c_r_e_e_n would not expect without the `|') when
       its stdin is not a tty.  _L_e_s_s versions newer than 177 fail miserably
       here; good old _p_g still works.

              !:sed -n s/.*Error.*/\007/p

       Sends window output to both, the user and the sed command. The sed
       inserts an additional bell character (oct. 007) to the window output
       seen by _s_c_r_e_e_n.  This will cause ""Bell in window x"" messages, whenever
       the string ""Error"" appears in the window.

       ffiitt

       Change the window size to the size of the current region. This command
       is needed because screen doesn't adapt the window size automatically if
       the window is displayed more than once.

       ffllooww [oonn|ooffff|aauuttoo]

       Sets the flow-control mode for this window.  Without parameters it
       cycles the current window's flow-control setting from ""automatic"" to
       ""on"" to ""off"".  See the discussion on ""FLOW-CONTROL"" later on in this
       document for full details and note, that this is subject to change in
       future releases.  Default is set by `defflow'.

       ffooccuuss [uupp|ddoowwnn|ttoopp|bboottttoomm]

       Move the input focus to the next region. This is done in a cyclic way
       so that the top region is selected after the bottom one. If no
       subcommand is given it defaults to `down'. `up' cycles in the opposite
       order, `top' and `bottom' go to the top and bottom region respectively.
       Useful bindings are (j and k as in vi)
           bind j focus down
           bind k focus up
           bind t focus top
           bind b focus bottom

       ggrr [oonn|ooffff]

       Turn GR charset switching on/off. Whenever screen sees an input
       character with the 8th bit set, it will use the charset stored in the
       GR slot and print the character with the 8th bit stripped. The default
       (see also ""defgr"") is not to process GR switching because otherwise the
       ISO88591 charset would not work.

       hhaarrddccooppyy [--hh] [_f_i_l_e]

       Writes out the currently displayed image to the file _f_i_l_e, or, if no
       filename is specified, to _h_a_r_d_c_o_p_y_._n in the default directory, where _n
       is the number of the current window.  This either appends or overwrites
       the file if it exists. See below.  If the option --hh is specified, dump
       also the contents of the scrollback buffer.

       hhaarrddccooppyy__aappppeenndd oonn|ooffff

       If set to ""on"", _s_c_r_e_e_n will append to the ""hardcopy.n"" files created by
       the command ""C-a h"", otherwise these files are overwritten each time.
       Default is `off'.

       hhaarrddccooppyyddiirr _d_i_r_e_c_t_o_r_y

       Defines a directory where hardcopy files will be placed. If unset,
       hardcopys are dumped in _s_c_r_e_e_n's current working directory.

       hhaarrddssttaattuuss [oonn|ooffff]
       hhaarrddssttaattuuss [aallwwaayyss]llaassttlliinnee|mmeessssaaggee|iiggnnoorree [_s_t_r_i_n_g]
       hhaarrddssttaattuuss ssttrriinngg [_s_t_r_i_n_g]

       This command configures the use and emulation of the terminal's
       hardstatus line. The first form toggles whether _s_c_r_e_e_n will use the
       hardware status line to display messages. If the flag is set to `off',
       these messages are overlaid in reverse video mode at the display line.
       The default setting is `on'.

       The second form tells _s_c_r_e_e_n what to do if the terminal doesn't have a
       hardstatus line (i.e. the termcap/terminfo capabilities ""hs"", ""ts"",
       ""fs"" and ""ds"" are not set). If the type ""lastline"" is used, _s_c_r_e_e_n will
       reserve the last line of the display for the hardstatus. ""message"" uses
       _s_c_r_e_e_n_'_s message mechanism and ""ignore"" tells _s_c_r_e_e_n never to display
       the hardstatus.  If you prepend the word ""always"" to the type (e.g.,
       ""alwayslastline""), _s_c_r_e_e_n will use the type even if the terminal
       supports a hardstatus.

       The third form specifies the contents of the hardstatus line.  '%h' is
       used as default string, i.e. the stored hardstatus of the current
       window (settable via ""ESC]0;<string>^G"" or ""ESC_<string>ESC\"") is
       displayed.  You can customize this to any string you like including the
       escapes from the ""STRING ESCAPES"" chapter. If you leave out the
       argument _s_t_r_i_n_g, the current string is displayed.

       You can mix the second and third form by providing the string as
       additional argument.

       hheeiigghhtt [--ww|--dd] [_l_i_n_e_s [_c_o_l_s]]

       Set the display height to a specified number of lines. When no argument
       is given it toggles between 24 and 42 lines display. You can also
       specify a width if you want to change both values.  The --ww option tells
       screen to leave the display size unchanged and just set the window
       size, --dd vice versa.

       hheellpp [--cc _c_l_a_s_s]

       Not really a online help, but displays a help _s_c_r_e_e_n showing you all
       the key bindings.  The first pages list all the internal commands
       followed by their current bindings.  Subsequent pages will display the
       custom commands, one command per key.  Press space when you're done
       reading each page, or return to exit early.  All other characters are
       ignored. If the ""-c"" option is given, display all bound commands for
       the specified command class.  See also ""DEFAULT KEY BINDINGS"" section.

       hhiissttoorryy

       Usually users work with a shell that allows easy access to previous
       commands.  For example csh has the command ""!!"" to repeat the last
       command executed.  _S_c_r_e_e_n allows you to have a primitive way of re-
       calling ""the command that started ..."": You just type the first letter
       of that command, then hit `C-a {' and _s_c_r_e_e_n tries to find a previous
       line that matches with the `prompt character' to the left of the
       cursor. This line is pasted into this window's input queue.  Thus you
       have a crude command history (made up by the visible window and its
       scrollback buffer).

       hhssttaattuuss _s_t_a_t_u_s

       Change the window's hardstatus line to the string _s_t_a_t_u_s.

       iiddllee [_t_i_m_e_o_u_t [_c_m_d _a_r_g_s]]

       Sets a command that is run after the specified number of seconds
       inactivity is reached. This command will normally be the ""blanker""
       command to create a screen blanker, but it can be any screen command.
       If no command is specified, only the timeout is set. A timeout of zero
       (ot the special timeout ooffff) disables the timer.  If no arguments are
       given, the current settings are displayed.

       iiggnnoorreeccaassee [oonn|ooffff]

       Tell screen to ignore the case of characters in searches. Default is
       `off'.

       iinnffoo

       Uses the message line to display some information about the current
       window: the cursor position in the form ""(column,row)"" starting with
       ""(1,1)"", the terminal width and height plus the size of the scrollback
       buffer in lines, like in ""(80,24)+50"", the current state of window
       XON/XOFF flow control is shown like this (See also section FLOW
       CONTROL):

         +flow     automatic flow control, currently on.
         -flow     automatic flow control, currently off.
         +(+)flow  flow control enabled. Agrees with automatic control.
         -(+)flow  flow control disabled. Disagrees with automatic control.
         +(-)flow  flow control enabled. Disagrees with automatic control.
         -(-)flow  flow control disabled. Agrees with automatic control.

       The current line wrap setting (`+wrap' indicates enabled, `-wrap' not)
       is also shown. The flags `ins', `org', `app', `log', `mon' or `nored'
       are displayed when the window is in insert mode, origin mode,
       application-keypad mode, has output logging, activity monitoring or
       partial redraw enabled.

       The currently active character set (_G_0, _G_1, _G_2, or _G_3) and in square
       brackets the terminal character sets that are currently designated as
       _G_0 through _G_3 is shown. If the window is in UTF-8 mode, the string
       ""UTF-8"" is shown instead.

       Additional modes depending on the type of the window are displayed at
       the end of the status line (See also chapter ""WINDOW TYPES"").
       If the state machine of the terminal emulator is in a non-default
       state, the info line is started with a string identifying the current
       state.
       For system information use the ""time"" command.

       iinnss__rreegg [_k_e_y]

       No longer exists, use ""paste"" instead.

       kkiillll

       Kill current window.
       If there is an `exec' command running then it is killed. Otherwise the
       process (shell) running in the window receives a HANGUP condition, the
       window structure is removed and _s_c_r_e_e_n (your display) switches to
       another window.  When the last window is destroyed, _s_c_r_e_e_n exits.
       After a kill _s_c_r_e_e_n switches to the previously displayed window.
       Note: _E_m_a_c_s users should keep this command in mind, when killing a
       line.  It is recommended not to use ""C-a"" as the _s_c_r_e_e_n escape key or
       to rebind kill to ""C-a K"".

       llaassttmmssgg

       Redisplay the last contents of the message/status line.  Useful if
       you're typing when a message appears, because  the message goes away
       when you press a key (unless your terminal has a hardware status line).
       Refer to the commands ""msgwait"" and ""msgminwait"" for fine tuning.

       lliicceennssee

       Display the disclaimer page. This is done whenever _s_c_r_e_e_n is started
       without options, which should be often enough. See also the
       ""startup_message"" command.

       lloocckkssccrreeeenn

       Lock this display.  Call a screenlock program (/local/bin/lck or
       /usr/bin/lock or a builtin if no other is available). Screen does not
       accept any command keys until this program terminates. Meanwhile
       processes in the windows may continue, as the windows are in the
       `detached' state. The screenlock program may be changed through the
       environment variable $LOCKPRG (which must be set in the shell from
       which _s_c_r_e_e_n is started) and is executed with the user's uid and gid.
       Warning: When you leave other shells unlocked and you have no password
       set on _s_c_r_e_e_n, the lock is void: One could easily re-attach from an
       unlocked shell. This feature should rather be called `lockterminal'.

       lloogg [oonn|ooffff]

       Start/stop writing output of the current window to a file ""screenlog._n""
       in the window's default directory, where _n is the number of the current
       window. This filename can be changed with the `logfile' command. If no
       parameter is given, the state of logging is toggled. The session log is
       appended to the previous contents of the file if it already exists. The
       current contents and the contents of the scrollback history are not
       included in the session log.  Default is `off'.

       llooggffiillee _f_i_l_e_n_a_m_e
       llooggffiillee fflluusshh _s_e_c_s

       Defines the name the logfiles will get. The default is ""screenlog.%n"".
       The second form changes the number of seconds _s_c_r_e_e_n will wait before
       flushing the logfile buffer to the file-system. The default value is 10
       seconds.

       llooggiinn [oonn|ooffff]

       Adds or removes the entry in the utmp database file for the current
       window.  This controls if the window is `logged in'.  When no parameter
       is given, the login state of the window is toggled.  Additionally to
       that toggle, it is convenient having a `log in' and a `log out' key.
       E.g. `bind I login on' and `bind O login off' will map these keys to be
       C-a I and C-a O.  The default setting (in config.h.in) should be ""on""
       for a _s_c_r_e_e_n that runs under suid-root.  Use the ""deflogin"" command to
       change the default login state for new windows. Both commands are only
       present when _s_c_r_e_e_n has been compiled with utmp support.

       llooggttssttaammpp [oonn|ooffff]
       llooggttssttaammpp aafftteerr [_s_e_c_s]
       llooggttssttaammpp ssttrriinngg [_s_t_r_i_n_g]

       This command controls logfile time-stamp mechanism of _s_c_r_e_e_n_.  If time-
       stamps are turned ""on"", _s_c_r_e_e_n adds a string containing the current
       time to the logfile after two minutes of inactivity.  When output
       continues and more than another two minutes have passed, a second time-
       stamp is added to document the restart of the output. You can change
       this timeout with the second form of the command. The third form is
       used for customizing the time-stamp string (`-- %n:%t -- time-stamp --
       %M/%d/%y %c:%s --\n' by default).

       mmaappddeeffaauulltt

       Tell _s_c_r_e_e_n that the next input character should only be looked up in
       the default bindkey table. See also ""bindkey"".

       mmaappnnoottnneexxtt

       Like mapdefault, but don't even look in the default bindkey table.

       mmaappttiimmeeoouutt [_t_i_m_o]

       Set the inter-character timer for input sequence detection to a timeout
       of _t_i_m_o ms. The default timeout is 300ms. Maptimeout with no arguments
       shows the current setting.  See also ""bindkey"".

       mmaarrkkkkeeyyss _s_t_r_i_n_g

       This is a method of changing the keymap used for copy/history mode.
       The string is made up of _o_l_d_c_h_a_r=_n_e_w_c_h_a_r pairs which are separated by
       `:'. Example: The string ""B=^B:F=^F"" will change the keys `C-b' and `C-
       f' to the vi style binding (scroll up/down fill page).  This happens to
       be the default binding for `B' and `F'.  The command ""markkeys
       h=^B:l=^F:$=^E"" would set the mode for an emacs-style binding.  If your
       terminal sends characters, that cause you to abort copy mode, then this
       command may help by binding these characters to do nothing.  The no-op
       character is `@' and is used like this: ""markkeys @=L=H"" if you do not
       want to use the `H' or `L' commands any longer.  As shown in this
       example, multiple keys can be assigned to one function in a single
       statement.

       mmaaxxwwiinn _n_u_m

       Set the maximum window number screen will create. Doesn't affect
       already existing windows. The number may only be decreased.

       mmeettaa

       Insert the command character (C-a) in the current window's input
       stream.

       mmoonniittoorr [oonn|ooffff]

       Toggles activity monitoring of windows.  When monitoring is turned on
       and an affected window is switched into the background, you will
       receive the activity notification message in the status line at the
       first sign of output and the window will also be marked with an `@' in
       the window-status display.  Monitoring is initially off for all
       windows.

       mmssggmmiinnwwaaiitt _s_e_c

       Defines the time _s_c_r_e_e_n delays a new message when one message is
       currently displayed.  The default is 1 second.

       mmssggwwaaiitt _s_e_c

       Defines the time a message is displayed if _s_c_r_e_e_n is not disturbed by
       other activity. The default is 5 seconds.

       mmuullttiiuusseerr oonn|ooffff

       Switch between singleuser and multiuser mode. Standard _s_c_r_e_e_n operation
       is singleuser. In multiuser mode the commands `acladd', `aclchg',
       `aclgrp' and `acldel' can be used to enable (and disable) other users
       accessing this _s_c_r_e_e_n session.

       nneetthhaacckk oonn|ooffff

       Changes the kind of error messages used by _s_c_r_e_e_n.  When you are
       familiar with the game ""nethack"", you may enjoy the nethack-style
       messages which will often blur the facts a little, but are much funnier
       to read. Anyway, standard messages often tend to be unclear as well.
       This option is only available if _s_c_r_e_e_n was compiled with the NETHACK
       flag defined. The default setting is then determined by the presence of
       the environment variable $NETHACKOPTIONS.

       nneexxtt

       Switch to the next window.  This command can be used repeatedly to
       cycle through the list of windows.

       nnoonnbblloocckk [oonn|ooffff|_n_u_m_s_e_c_s]

       Tell screen how to deal with user interfaces (displays) that cease to
       accept output. This can happen if a user presses ^S or a TCP/modem
       connection gets cut but no hangup is received. If nonblock is ooffff (this
       is the default) screen waits until the display restarts to accept the
       output. If nonblock is oonn, screen waits until the timeout is reached
       (oonn is treated as 1s). If the display still doesn't receive characters,
       screen will consider it ""blocked"" and stop sending characters to it. If
       at some time it restarts to accept characters, screen will unblock the
       display and redisplay the updated window contents.

       nnuummbbeerr [_n]

       Change the current windows number. If the given number _n is already
       used by another window, both windows exchange their numbers. If no
       argument is specified, the current window number (and title) is shown.

       oobbuufflliimmiitt [_l_i_m_i_t]

       If the output buffer contains more bytes than the specified limit, no
       more data will be read from the windows. The default value is 256. If
       you have a fast display (like xterm), you can set it to some higher
       value. If no argument is specified, the current setting is displayed.

       oonnllyy

       Kill all regions but the current one.

       ootthheerr

       Switch to the window displayed previously. If this window does no
       longer exist, _o_t_h_e_r has the same effect as _n_e_x_t.

       ppaarrttiiaall oonn|ooffff

       Defines whether the display should be refreshed (as with _r_e_d_i_s_p_l_a_y)
       after switching to the current window. This command only affects the
       current window.  To immediately affect all windows use the _a_l_l_p_a_r_t_i_a_l
       command.  Default is `off', of course.  This default is fixed, as there
       is currently no _d_e_f_p_a_r_t_i_a_l command.

       ppaasssswwoorrdd [_c_r_y_p_t_e_d___p_w]

       Present a crypted password in your "".screenrc"" file and _s_c_r_e_e_n will ask
       for it, whenever someone attempts to resume a detached. This is useful
       if you have privileged programs running under _s_c_r_e_e_n and you want to
       protect your session from reattach attempts by another user
       masquerading as your uid (i.e. any superuser.)  If no crypted password
       is specified, _s_c_r_e_e_n prompts twice for typing a password and places its
       encryption in the paste buffer.  Default is `none', this disables
       password checking.

       ppaassttee [_r_e_g_i_s_t_e_r_s [_d_e_s_t___r_e_g]]

       Write the (concatenated) contents of the specified registers to the
       stdin queue of the current window. The register '.' is treated as the
       paste buffer. If no parameter is given the user is prompted for a
       single register to paste.  The paste buffer can be filled with the
       _c_o_p_y, _h_i_s_t_o_r_y and _r_e_a_d_b_u_f commands.  Other registers can be filled with
       the _r_e_g_i_s_t_e_r, _r_e_a_d_r_e_g and _p_a_s_t_e commands.  If _p_a_s_t_e is called with a
       second argument, the contents of the specified registers is pasted into
       the named destination register rather than the window. If '.' is used
       as the second argument, the displays paste buffer is the destination.
       Note, that ""paste"" uses a wide variety of resources: Whenever a second
       argument is specified no current window is needed. When the source
       specification only contains registers (not the paste buffer) then there
       need not be a current display (terminal attached), as the registers are
       a global resource. The paste buffer exists once for every user.

       ppaasstteeffoonntt [oonn|ooffff]

       Tell _s_c_r_e_e_n to include font information in the paste buffer. The
       default is not to do so. This command is especially useful for multi
       character fonts like kanji.

       ppooww__bbrreeaakk

       Reopen the window's terminal line and send a break condition. See
       `break'.

       ppooww__ddeettaacchh

       Power detach.  Mainly the same as _d_e_t_a_c_h, but also sends a HANGUP
       signal to the parent process of _s_c_r_e_e_n.  CAUTION: This will result in a
       logout, when _s_c_r_e_e_n was started from your login shell.

       ppooww__ddeettaacchh__mmssgg [_m_e_s_s_a_g_e]

       The _m_e_s_s_a_g_e specified here is output whenever a `Power detach' was
       performed. It may be used as a replacement for a logout message or to
       reset baud rate, etc.  Without parameter, the current message is shown.

       pprreevv

       Switch to the window with the next lower number.  This command can be
       used repeatedly to cycle through the list of windows.

       pprriinnttccmmdd [_c_m_d]

       If _c_m_d is not an empty string, _s_c_r_e_e_n will not use the terminal
       capabilities ""po/pf"" if it detects an ansi print sequence EESSCC [[ 55 ii,
       but pipe the output into _c_m_d.  This should normally be a command like
       ""lpr"" or ""'cat > /tmp/scrprint'"".  pprriinnttccmmdd without a command displays
       the current setting.  The ansi sequence EESSCC \\ ends printing and closes
       the pipe.
       Warning: Be careful with this command! If other user have write access
       to your terminal, they will be able to fire off print commands.

       pprroocceessss [_k_e_y]

       Stuff the contents of the specified register into _s_c_r_e_e_n's input queue.
       If no argument is given you are prompted for a register name. The text
       is parsed as if it had been typed in from the user's keyboard. This
       command can be used to bind multiple actions to a single key.

       qquuiitt

       Kill all windows and terminate _s_c_r_e_e_n.  Note that on VT100-style
       terminals the keys C-4 and C-\ are identical.  This makes the default
       bindings dangerous: Be careful not to type C-a C-4 when selecting
       window no. 4.  Use the empty bind command (as in ""bind '^\'"") to remove
       a key binding.

       rreeaaddbbuuff [--ee _e_n_c_o_d_i_n_g] [_f_i_l_e_n_a_m_e]

       Reads the contents of the specified file into the paste buffer.  You
       can tell screen the encoding of the file via the --ee option.  If no file
       is specified, the screen-exchange filename is used.  See also
       ""bufferfile"" command.

       rreeaaddrreegg [--ee _e_n_c_o_d_i_n_g] [_r_e_g_i_s_t_e_r [_f_i_l_e_n_a_m_e]]

       Does one of two things, dependent on number of arguments: with zero or
       one arguments it it duplicates the paste buffer contents into the
       register specified or entered at the prompt. With two arguments it
       reads the contents of the named file into the register, just as _r_e_a_d_b_u_f
       reads the screen-exchange file into the paste buffer.  You can tell
       screen the encoding of the file via the --ee option.  The following
       example will paste the system's password file into the _s_c_r_e_e_n window
       (using register p, where a copy remains):

                   C-a : readreg p /etc/passwd
                   C-a : paste p

       rreeddiissppllaayy

       Redisplay the current window. Needed to get a full redisplay when in
       partial redraw mode.

       rreeggiisstteerr [--ee _e_n_c_o_d_i_n_g] _k_e_y _s_t_r_i_n_g

       Save the specified _s_t_r_i_n_g to the register _k_e_y.  The encoding of the
       string can be specified via the --ee option.  See also the ""paste""
       command.

       rreemmoovvee

       Kill the current region. This is a no-op if there is only one region.

       rreemmoovveebbuuff

       Unlinks the screen-exchange file used by the commands ""writebuf"" and
       ""readbuf"".

       rreesseett

       Reset the virtual terminal to its ""power-on"" values. Useful when
       strange settings (like scroll regions or graphics character set) are
       left over from an application.

       rreessiizzee

       Resize the current region. The space will be removed from or added to
       the region below or if there's not enough space from the region above.

              resize +N   increase current region height by N

              resize -N   decrease current region height by N

              resize  N   set current region height to N

              resize  =   make all windows equally high

              resize  max maximize current region height

              resize  min minimize current region height

       ssccrreeeenn [_-_o_p_t_s] [_n] [_c_m_d [_a_r_g_s]]

       Establish a new window.  The flow-control options (--ff, --ffnn and --ffaa),
       title (a.k.a.) option (--tt), login options (--ll and --llnn) , terminal type
       option (--TT <term>), the all-capability-flag (--aa) and scrollback option
       (--hh <num>) may be specified with each command.  The option (--MM) turns
       monitoring on for this window.  The option (--LL) turns output logging on
       for this window.  If an optional number _n in the range 0..9 is given,
       the window number _n is assigned to the newly created window (or, if
       this number is already in-use, the next available number).  If a
       command is specified after ""screen"", this command (with the given
       arguments) is started in the window; otherwise, a shell is created.
       Thus, if your "".screenrc"" contains the lines

                   # example for .screenrc:
                   screen 1
                   screen -fn -t foobar -L 2 telnet foobar

       _s_c_r_e_e_n creates a shell window (in window #1) and a window with a TELNET
       connection to the machine foobar (with no flow-control using the title
       ""foobar"" in window #2) and will write a logfile (""screenlog.2"") of the
       telnet session.  Note, that unlike previous versions of _s_c_r_e_e_n no
       additional default window is created when ""screen"" commands are
       included in your "".screenrc"" file. When the initialization is
       completed, _s_c_r_e_e_n switches to the last window specified in your
       .screenrc file or, if none, opens a default window #0.
       Screen has built in some functionality of ""cu"" and ""telnet"".  See also
       chapter ""WINDOW TYPES"".

       ssccrroollllbbaacckk _n_u_m

       Set the size of the scrollback buffer for the current windows to _n_u_m
       lines. The default scrollback is 100 lines.  See also the
       ""defscrollback"" command and use ""C-a i"" to view the current setting.

       sseelleecctt [_W_i_n_d_o_w_I_D]

       Switch to the window identified by _W_i_n_d_o_w_I_D.  This can be a prefix of a
       window title (alphanumeric window name) or a window number.  The
       parameter is optional and if omitted, you get prompted for an
       identifier.  When a new window is established, the first available
       number is assigned to this window.  Thus, the first window can be
       activated by ""select 0"".  The number of windows is limited at compile-
       time by the MAXWIN configuration parameter.  There are two special
       WindowIDs, ""-"" selects the internal blank window and ""."" selects the
       current window. The latter is useful if used with screen's ""-X"" option.

       sseessssiioonnnnaammee [_n_a_m_e]

       Rename the current session. Note, that for ""screen -list"" the name
       shows up with the process-id prepended. If the argument ""name"" is
       omitted, the name of this session is displayed. Caution: The $STY
       environment variables still reflects the old name. This may result in
       confusion.  The default is constructed from the tty and host names.

       sseetteennvv  [_v_a_r [_s_t_r_i_n_g]]

       Set the environment variable _v_a_r to value _s_t_r_i_n_g.  If only _v_a_r is
       specified, the user will be prompted to enter a value.  If no
       parameters are specified, the user will be prompted for both variable
       and value. The environment is inherited by all subsequently forked
       shells.

       sseettssiidd [oonn|ooffff]

       Normally screen uses different sessions and process groups for the
       windows. If setsid is turned _o_f_f, this is not done anymore and all
       windows will be in the same process group as the screen backend
       process. This also breaks job-control, so be careful.  The default is
       _o_n, of course. This command is probably useful only in rare
       circumstances.

       sshheellll _c_o_m_m_a_n_d

       Set the command to be used to create a new shell.  This overrides the
       value of the environment variable $SHELL.  This is useful if you'd like
       to run a tty-enhancer which is expecting to execute the program
       specified in $SHELL. If the command begins with a '-' character, the
       shell will be started as a login-shell.

       sshheellllttiittllee _t_i_t_l_e

       Set the title for all shells created during startup or by the C-A C-c
       command.  For details about what a title is, see the discussion
       entitled ""TITLES (naming windows)"".

       ssiilleennccee [oonn|ooffff|_s_e_c]

       Toggles silence monitoring of windows.  When silence is turned on and
       an affected window is switched into the background, you will receive
       the silence notification message in the status line after a specified
       period of inactivity (silence). The default timeout can be changed with
       the `silencewait' command or by specifying a number of seconds instead
       of `on' or `off'.  Silence is initially off for all windows.

       ssiilleenncceewwaaiitt _s_e_c

       Define the time that all windows monitored for silence should wait
       before displaying a message. Default 30 seconds.

       sslleeeepp _n_u_m

       This command will pause the execution of a .screenrc file for _n_u_m
       seconds.  Keyboard activity will end the sleep.  It may be used to give
       users a chance to read the messages output by ""echo"".

       sslloowwppaassttee _m_s_e_c

       Define the speed at which text is inserted into the current window by
       the paste (""C-a ]"") command.  If the slowpaste value is nonzero text is
       written character by character.  _s_c_r_e_e_n will make a pause of _m_s_e_c
       milliseconds after each single character write to allow the application
       to process its input. Only use slowpaste if your underlying system
       exposes flow control problems while pasting large amounts of text.

       ssoouurrccee _f_i_l_e

       Read and execute commands from file _f_i_l_e. Source commands may be nested
       to a maximum recursion level of ten. If file is not an absolute path
       and screen is already processing a source command, the parent directory
       of the running source command file is used to search for the new
       command file before screen's current directory.

       Note that termcap/terminfo/termcapinfo commands only work at startup
       and reattach time, so they must be reached via the default screenrc
       files to have an effect.

       ssoorreennddiittiioonn [_a_t_t_r [_c_o_l_o_r]]

       Change the way _s_c_r_e_e_n does highlighting for text marking and printing
       messages.  See the ""STRING ESCAPES"" chapter for the syntax of the
       modifiers.  The default is currently ""=s dd"" (standout, default
       colors).

       sspplliitt

       Split the current region into two new ones. All regions on the display
       are resized to make room for the new region. The blank window is
       displayed on the new region. Use the ""remove"" or the ""only"" command to
       delete regions.

       ssttaarrttuupp__mmeessssaaggee oonn|ooffff

       Select whether you want to see the copyright notice during startup.
       Default is `on', as you probably noticed.

       ssttuuffff _s_t_r_i_n_g

       Stuff the string _s_t_r_i_n_g in the input buffer of the current window.
       This is like the ""paste"" command but with much less overhead.  You
       cannot paste large buffers with the ""stuff"" command. It is most useful
       for key bindings. See also ""bindkey"".

       ssuu [uusseerrnnaammee [ppaasssswwoorrdd [ppaasssswwoorrdd22]]

       Substitute the user of a display. The command prompts for all
       parameters that are omitted. If passwords are specified as parameters,
       they have to be specified un-crypted. The first password is matched
       against the systems passwd database, the second password is matched
       against the _s_c_r_e_e_n password as set with the commands ""acladd"" or
       ""password"".  ""Su"" may be useful for the _s_c_r_e_e_n administrator to test
       multiuser setups.  When the identification fails, the user has access
       to the commands available for user nnoobbooddyy.  These are ""detach"",
       ""license"", ""version"", ""help"" and ""displays"".

       ssuussppeenndd

       Suspend _s_c_r_e_e_n.  The windows are in the `detached' state, while _s_c_r_e_e_n
       is suspended. This feature relies on the shell being able to do job
       control.

       tteerrmm _t_e_r_m

       In each window's environment _s_c_r_e_e_n opens, the $TERM variable is set to
       ""screen"" by default.  But when no description for ""screen"" is installed
       in the local termcap or terminfo data base, you set $TERM to - say -
       ""vt100"". This won't do much harm, as _s_c_r_e_e_n is VT100/ANSI compatible.
       The use of the ""term"" command is discouraged for non-default purpose.
       That is, one may want to specify special $TERM settings (e.g. vt100)
       for the next ""screen rlogin othermachine"" command. Use the command
       ""screen -T vt100 rlogin othermachine"" rather than setting and resetting
       the default.

       tteerrmmccaapp _t_e_r_m _t_e_r_m_i_n_a_l_-_t_w_e_a_k_s [_w_i_n_d_o_w_-_t_w_e_a_k_s]
       tteerrmmiinnffoo _t_e_r_m _t_e_r_m_i_n_a_l_-_t_w_e_a_k_s [_w_i_n_d_o_w_-_t_w_e_a_k_s]
       tteerrmmccaappiinnffoo _t_e_r_m _t_e_r_m_i_n_a_l_-_t_w_e_a_k_s [_w_i_n_d_o_w_-_t_w_e_a_k_s]

       Use this command to modify your terminal's termcap entry without going
       through all the hassles involved in creating a custom termcap entry.
       Plus, you can optionally customize the termcap generated for the
       windows.  You have to place these commands in one of the screenrc
       startup files, as they are meaningless once the terminal emulator is
       booted.
       If your system works uses the terminfo database rather than termcap,
       _s_c_r_e_e_n will understand the `terminfo' command, which has the same
       effects as the `termcap' command.  Two separate commands are provided,
       as there are subtle syntactic differences, e.g. when parameter
       interpolation (using `%') is required. Note that termcap names of the
       capabilities have to be used with the `terminfo' command.
       In many cases, where the arguments are valid in both terminfo and
       termcap syntax, you can use the command `termcapinfo', which is just a
       shorthand for a pair of `termcap' and `terminfo' commands with
       identical arguments.

       The first argument specifies which terminal(s) should be affected by
       this definition.  You can specify multiple terminal names by separating
       them with `|'s.  Use `*' to match all terminals and `vt*' to match all
       terminals that begin with ""vt"".

       Each _t_w_e_a_k argument contains one or more termcap defines (separated by
       `:'s) to be inserted at the start of the appropriate termcap entry,
       enhancing it or overriding existing values.  The first tweak modifies
       your terminal's termcap, and contains definitions that your terminal
       uses to perform certain functions.  Specify a null string to leave this
       unchanged (e.g. '').  The second (optional) tweak modifies all the
       window termcaps, and should contain definitions that _s_c_r_e_e_n understands
       (see the ""VIRTUAL TERMINAL"" section).

       Some examples:

              termcap xterm*  LP:hs@

       Informs _s_c_r_e_e_n that all terminals that begin with `xterm' have firm
       auto-margins that allow the last position on the screen to be updated
       (LP), but they don't really have a status line (no 'hs' - append `@' to
       turn entries off).  Note that we assume `LP' for all terminal names
       that start with ""vt"", but only if you don't specify a termcap command
       for that terminal.

              termcap vt*  LP
              termcap vt102|vt220  Z0=\E[?3h:Z1=\E[?3l

       Specifies the firm-margined `LP' capability for all terminals that
       begin with `vt', and the second line will also add the escape-sequences
       to switch into (Z0) and back out of (Z1) 132-character-per-line mode if
       this is a VT102 or VT220.  (You must specify Z0 and Z1 in your termcap
       to use the width-changing commands.)

              termcap vt100  """"  l0=PF1:l1=PF2:l2=PF3:l3=PF4

       This leaves your vt100 termcap alone and adds the function key labels
       to each window's termcap entry.

              termcap h19|z19  am@:im=\E@:ei=\EO  dc=\E[P

       Takes a h19 or z19 termcap and turns off auto-margins (am@) and enables
       the insert mode (im) and end-insert (ei) capabilities (the `@' in the
       `im' string is after the `=', so it is part of the string).  Having the
       `im' and `ei' definitions put into your terminal's termcap will cause
       _s_c_r_e_e_n to automatically advertise the character-insert capability in
       each window's termcap.  Each window will also get the delete-character
       capability (dc) added to its termcap, which _s_c_r_e_e_n will translate into
       a line-update for the terminal (we're pretending it doesn't support
       character deletion).

       If you would like to fully specify each window's termcap entry, you
       should instead set the $SCREENCAP variable prior to running _s_c_r_e_e_n.
       See the discussion on the ""VIRTUAL TERMINAL"" in this manual, and the
       termcap(5) man page for more information on termcap definitions.

       ttiimmee [_s_t_r_i_n_g]

       Uses the message line to display the time of day, the host name, and
       the load averages over 1, 5, and 15 minutes (if this is available on
       your system).  For window specific information use ""info"".

       If a string is specified, it changes the format of the time report like
       it is described in the ""STRING ESCAPES"" chapter. Screen uses a default
       of ""%c:%s %M %d %H%? %l%?"".

       ttiittllee [_w_i_n_d_o_w_t_i_t_l_e]

       Set the name of the current window to _w_i_n_d_o_w_t_i_t_l_e. If no name is
       specified, _s_c_r_e_e_n prompts for one. This command was known as `aka' in
       previous releases.

       uunnsseetteennvv _v_a_r

       Unset an environment variable.

       uuttff88 [oonn|ooffff [oonn|ooffff]]

       Change the encoding used in the current window. If utf8 is enabled, the
       strings sent to the window will be UTF-8 encoded and vice versa.
       Omitting the parameter toggles the setting. If a second parameter is
       given, the display's encoding is also changed (this should rather be
       done with screen's ""-U"" option).  See also ""defutf8"", which changes the
       default setting of a new window.

       vvbbeellll [oonn|ooffff]

       Sets the visual bell setting for this window. Omitting the parameter
       toggles the setting. If vbell is switched on, but your terminal does
       not support a visual bell, a `vbell-message' is displayed in the status
       line when the bell character (^G) is received.  Visual bell support of
       a terminal is defined by the termcap variable `vb' (terminfo: 'flash').
       Per default, vbell is off, thus the audible bell is used.  See also
       `bell_msg'.

       vvbbeellll__mmssgg [_m_e_s_s_a_g_e]

       Sets the visual bell message. _m_e_s_s_a_g_e is printed to the status line if
       the window receives a bell character (^G), vbell is set to ""on"", but
       the terminal does not support a visual bell.  The default message is
       ""Wuff, Wuff!!"".  Without parameter, the current message is shown.

       vvbbeellllwwaaiitt _s_e_c

       Define a delay in seconds after each display of _s_c_r_e_e_n's visual bell
       message. The default is 1 second.

       vveerrbboossee [oonn|ooffff]

       If verbose is switched on, the command name is echoed, whenever a
       window is created (or resurrected from zombie state). Default is off.
       Without parameter, the current setting is shown.

       vveerrssiioonn

       Print the current version and the compile date in the status line.

       wwaallll _m_e_s_s_a_g_e

       Write a message to all displays. The message will appear in the
       terminal's status line.

       wwiiddtthh [--ww|--dd] [_c_o_l_s [_l_i_n_e_s]]

       Toggle the window width between 80 and 132 columns or set it to _c_o_l_s
       columns if an argument is specified.  This requires a capable terminal
       and the termcap entries ""Z0"" and ""Z1"".  See the ""termcap"" command for
       more information. You can also specify a new height if you want to
       change both values.  The --ww option tells screen to leave the display
       size unchanged and just set the window size, --dd vice versa.

       wwiinnddoowwlliisstt [--bb] [--mm]
       wwiinnddoowwlliisstt ssttrriinngg [_s_t_r_i_n_g]
       wwiinnddoowwlliisstt ttiittllee [_t_i_t_l_e]

       Display all windows in a table for visual window selection. The desired
       window can be selected via the standard movement keys (see the ""copy""
       command) and activated via the return key.  If the --bb option is given,
       screen will switch to the blank window before presenting the list, so
       that the current window is also selectable.  The --mm option changes the
       order of the windows, instead of sorting by window numbers screen uses
       its internal most-recently-used list.

       The table format can be changed with the ssttrriinngg and ttiittllee option, the
       title is displayed as table heading, while the lines are made by using
       the string setting. The default setting is ""Num Name%=Flags"" for the
       title and ""%3n %t%=%f"" for the lines.  See the ""STRING ESCAPES"" chapter
       for more codes (e.g. color settings).

       wwiinnddoowwss

       Uses the message line to display a list of all the windows.  Each
       window is listed by number with the name of process that has been
       started in the window (or its title); the current window is marked with
       a `*'; the previous window is marked with a `-'; all the windows that
       are ""logged in"" are marked with a `$'; a background window that has
       received a bell is marked with a `!'; a background window that is being
       monitored and has had activity occur is marked with an `@'; a window
       which has output logging turned on is marked with `(L)'; windows
       occupied by other users are marked with `&'; windows in the zombie
       state are marked with `Z'.  If this list is too long to fit on the
       terminal's status line only the portion around the current window is
       displayed.

       wwrraapp [oonn|ooffff]

       Sets the line-wrap setting for the current window.  When line-wrap is
       on, the second consecutive printable character output at the last
       column of a line will wrap to the start of the following line.  As an
       added feature, backspace (^H) will also wrap through the left margin to
       the previous line.  Default is `on'.

       wwrriitteebbuuff [--ee _e_n_c_o_d_i_n_g] [_f_i_l_e_n_a_m_e]

       Writes the contents of the paste buffer to the specified file, or the
       public accessible screen-exchange file if no filename is given. This is
       thought of as a primitive means of communication between _s_c_r_e_e_n users
       on the same host. If an encoding is specified the paste buffer is
       recoded on the fly to match the encoding.  The filename can be set with
       the _b_u_f_f_e_r_f_i_l_e command and defaults to ""/tmp/screen-exchange"".

       wwrriitteelloocckk [oonn|ooffff|aauuttoo]

       In addition to access control lists, not all users may be able to write
       to the same window at once. Per default, writelock is in `auto' mode
       and grants exclusive input permission to the user who is the first to
       switch to the particular window. When he leaves the window, other users
       may obtain the writelock (automatically). The writelock of the current
       window is disabled by the command ""writelock off"". If the user issues
       the command ""writelock on"" he keeps the exclusive write permission
       while switching to other windows.

       xxooffff
       xxoonn

       Insert a CTRL-s / CTRL-q character to the stdin queue of the current
       window.

       zzmmooddeemm [ooffff|aauuttoo|ccaattcchh|ppaassss]
       zzmmooddeemm sseennddccmmdd [_s_t_r_i_n_g]
       zzmmooddeemm rreeccvvccmmdd [_s_t_r_i_n_g]

       Define zmodem support for screen. Screen understands two different
       modes when it detects a zmodem request: ""pass"" and ""catch"".  If the
       mode is set to ""pass"", screen will relay all data to the attacher until
       the end of the transmission is reached.  In ""catch"" mode screen acts as
       a zmodem endpoint and starts the corresponding rz/sz commands. If the
       mode is set to ""auto"", screen will use ""catch"" if the window is a tty
       (e.g. a serial line), otherwise it will use ""pass"".
       You can define the templates screen uses in ""catch"" mode via the second
       and the third form.
       Note also that this is an experimental feature.

       zzoommbbiiee [_k_e_y_s]
       ddeeffzzoommbbiiee [_k_e_y_s]

       Per default _s_c_r_e_e_n windows are removed from the window list as soon as
       the windows process (e.g. shell) exits. When a string of two keys is
       specified to the zombie command, `dead' windows will remain in the
       list.  The kkiillll command may be used to remove such a window. Pressing
       the first key in the dead window has the same effect. When pressing the
       second key, _s_c_r_e_e_n will attempt to resurrect the window. The process
       that was initially running in the window will be launched again.
       Calling zzoommbbiiee without parameters will clear the zombie setting, thus
       making windows disappear when their process exits.

       As the zombie-setting is manipulated globally for all windows, this
       command should only be called ddeeffzzoommbbiiee. Until we need this as a per
       window setting, the commands zzoommbbiiee and ddeeffzzoommbbiiee are synonymous.


TTHHEE MMEESSSSAAGGEE LLIINNEE
       _S_c_r_e_e_n displays informational messages and other diagnostics in a
       _m_e_s_s_a_g_e _l_i_n_e.  While this line is distributed to appear at the bottom
       of the screen, it can be defined to appear at the top of the screen
       during compilation.  If your terminal has a status line defined in its
       termcap, _s_c_r_e_e_n will use this for displaying its messages, otherwise a
       line of the current screen will be temporarily overwritten and output
       will be momentarily interrupted. The message line is automatically
       removed after a few seconds delay, but it can also be removed early (on
       terminals without a status line) by beginning to type.

       The message line facility can be used by an application running in the
       current window by means of the ANSI _P_r_i_v_a_c_y _m_e_s_s_a_g_e control sequence.
       For instance, from within the shell, try something like:

              echo '<esc>^Hello world from window '$WINDOW'<esc>\\'

       where '<esc>' is an _e_s_c_a_p_e, '^' is a literal up-arrow, and '\\' turns
       into a single backslash.


WWIINNDDOOWW TTYYPPEESS
       Screen provides three different window types. New windows are created
       with _s_c_r_e_e_n's ssccrreeeenn command (see also the entry in chapter
       ""CUSTOMIZATION""). The first parameter to the ssccrreeeenn command defines
       which type of window is created. The different window types are all
       special cases of the normal type. They have been added in order to
       allow _s_c_r_e_e_n to be used efficiently as a console multiplexer with 100
       or more windows.


       •  The normal window contains a shell (default, if no parameter is
          given) or any other system command that could be executed from a
          shell (e.g.  ssllooggiinn, etc...)


       •  If a tty (character special device) name (e.g. ""/dev/ttya"") is
          specified as the first parameter, then the window is directly
          connected to this device.  This window type is similar to ""screen cu
          -l /dev/ttya"".  Read and write access is required on the device
          node, an exclusive open is attempted on the node to mark the
          connection line as busy.  An optional parameter is allowed
          consisting of a comma separated list of flags in the notation used
          by stty(1):

          <baud_rate>
                 Usually 300, 1200, 9600 or 19200. This affects transmission
                 as well as receive speed.

          cs8 or cs7
                 Specify the transmission of eight (or seven) bits per byte.

          ixon or -ixon
                 Enables (or disables) software flow-control (CTRL-S/CTRL-Q)
                 for sending data.

          ixoff or -ixon
                 Enables (or disables) software flow-control for receiving
                 data.

          istrip or -istrip
                 Clear (or keep) the eight bit in each received byte.

          You may want to specify as many of these options as applicable.
          Unspecified options cause the terminal driver to make up the
          parameter values of the connection.  These values are system
          dependant and may be in defaults or values saved from a previous
          connection.

          For tty windows, the iinnffoo command shows some of the modem control
          lines in the status line. These may include `RTS', `CTS', 'DTR',
          `DSR', `CD' and more.  This depends on the available ioctl()'s and
          system header files as well as the on the physical capabilities of
          the serial board.  Signals that are logical low (inactive) have
          their name preceded by an exclamation mark (!), otherwise the signal
          is logical high (active).  Signals not supported by the hardware but
          available to the ioctl() interface are usually shown low.
          When the CLOCAL status bit is true, the whole set of modem signals
          is placed inside curly braces ({ and }).  When the CRTSCTS or
          TIOCSOFTCAR bit is set, the signals `CTS' or `CD' are shown in
          parenthesis, respectively.


          For tty windows, the command bbrreeaakk causes the Data transmission line
          (TxD) to go low for a specified period of time. This is expected to
          be interpreted as break signal on the other side.  No data is sent
          and no modem control line is changed when a bbrreeaakk is issued.

       •  If the first parameter is ""//telnet"", the second parameter is
          expected to be a host name, and an optional third parameter may
          specify a TCP port number (default decimal 23).  Screen will connect
          to a server listening on the remote host and use the telnet protocol
          to communicate with that server.
          For telnet windows, the command iinnffoo shows details about the
          connection in square brackets ([ and ]) at the end of the status
          line.

          b      BINARY. The connection is in binary mode.

          e      ECHO. Local echo is disabled.

          c      SGA. The connection is in `character mode' (default: `line
                 mode').

          t      TTYPE. The terminal type has been requested by the remote
                 host.  Screen sends the name ""screen"" unless instructed
                 otherwise (see also the command `term').

          w      NAWS. The remote site is notified about window size changes.

          f      LFLOW. The remote host will send flow control information.
                 (Ignored at the moment.)

          Additional flags for debugging are x, t and n (XDISPLOC, TSPEED and
          NEWENV).

          For telnet windows, the command bbrreeaakk sends the telnet code IAC
          BREAK (decimal 243) to the remote host.


          This window type is only available if _s_c_r_e_e_n was compiled with the
          BUILTIN_TELNET option defined.



SSTTRRIINNGG EESSCCAAPPEESS
       Screen provides an escape mechanism to insert information like the
       current time into messages or file names. The escape character is '%'
       with one exception: inside of a window's hardstatus '^%' ('^E') is used
       instead.

       Here is the full list of supported escapes:

       %      the escape character itself

       a      either 'am' or 'pm'

       A      either 'AM' or 'PM'

       c      current time HH:MM in 24h format

       C      current time HH:MM in 12h format

       d      day number

       D      weekday name

       f      flags of the window

       F      sets %? to true if the window has the focus

       h      hardstatus of the window

       H      hostname of the system

       l      current load of the system

       m      month number

       M      month name

       n      window number

       s      seconds

       t      window title

       u      all other users on this window

       w      all window numbers and names. With '-' quailifier: up to the
              current window; with '+' qualifier: starting with the window
              after the current one.

       W      all window numbers and names except the current one

       y      last two digits of the year number

       Y      full year number

       ?      the part to the next '%?' is displayed only if a '%' escape
              inside the part expands to a non-empty string

       :      else part of '%?'

       =      pad the string to the display's width (like TeX's hfill). If a
              number is specified, pad to the percentage of the window's
              width.  A '0' qualifier tells screen to treat the number as
              absolute position.  You can specify to pad relative to the last
              absolute pad position by adding a '+' qualifier or to pad
              relative to the right margin by using '-'. The padding truncates
              the string if the specified position lies before the current
              position. Add the 'L' qualifier to change this.

       <      same as '%=' but just do truncation, do not fill with spaces

       >      mark the current text position for the next truncation. When
              screen needs to do truncation, it tries to do it in a way that
              the marked position gets moved to the specified percentage of
              the output area. (The area starts from the last absolute pad
              position and ends with the position specified by the truncation
              operator.) The 'L' qualifier tells screen to mark the truncated
              parts with '...'.

       {      attribute/color modifier string terminated by the next ""}""

       `      Substitute with the output of a 'backtick' command. The length
              qualifier is misused to identify one of the commands.

       The 'c' and 'C' escape may be qualified with a '0' to make _s_c_r_e_e_n use
       zero instead of space as fill character. The '0' qualifier also makes
       the '=' escape use absolute positions. The 'n' and '=' escapes
       understand a length qualifier (e.g. '%3n'), 'D' and 'M' can be prefixed
       with 'L' to generate long names, 'w' and 'W' also show the window flags
       if 'L' is given.

       An attribute/color modifier is is used to change the attributes or the
       color settings. Its format is ""[attribute modifier] [color
       description]"". The attribute modifier must be prefixed by a change type
       indicator if it can be confused with a color desciption. The following
       change types are known:

       +      add the specified set to the current attributes

       -      remove the set from the current attributes

       !      invert the set in the current attributes

       =      change the current attributes to the specified set

       The attribute set can either be specified as a hexadecimal number or a
       combination of the following letters:

       d      dim
       u      underline
       b      bold
       r      reverse
       s      standout
       B      blinking

       Colors are coded either as a hexadecimal number or two letters
       specifying the desired background and foreground color (in that order).
       The following colors are known:

       k      black
       r      red
       g      green
       y      yellow
       b      blue
       m      magenta
       c      cyan
       w      white
       d      default color
       .      leave color unchanged

       The capitalized versions of the letter specify bright colors. You can
       also use the pseudo-color 'i' to set just the brightness and leave the
       color unchanged.
       A one digit/letter color description is treated as foreground or
       background color dependant on the current attributes: if reverse mode
       is set, the background color is changed instead of the foreground
       color.  If you don't like this, prefix the color with a ""."". If you
       want the same behaviour for two-letter color descriptions, also prefix
       them with a ""."".
       As a special case, ""%{-}"" restores the attributes and colors that were
       set before the last change was made (i.e. pops one level of the color-
       change stack).

       Examples:

              set color to bright green

              use bold red

              clear all attributes, write in default color on yellow
              background.

       %-Lw%{= BW}%50>%n%f* %t%{-}%+Lw%<
              The available windows centered at the current window and
              truncated to the available width. The current window is
              displayed white on blue.  This can be used with ""hardstatus
              alwayslastline"".

       %?%F%{.R.}%?%3n %t%? [%h]%?
              The window number and title and the window's hardstatus, if one
              is set.  Also use a red background if this is the active focus.
              Useful for ""caption string"".

FFLLOOWW--CCOONNTTRROOLL
       Each window has a flow-control setting that determines how _s_c_r_e_e_n deals
       with the XON and XOFF characters (and perhaps the interrupt character).
       When flow-control is turned off, _s_c_r_e_e_n ignores the XON and XOFF
       characters, which allows the user to send them to the current program
       by simply typing them (useful for the _e_m_a_c_s editor, for instance).  The
       trade-off is that it will take longer for output from a ""normal""
       program to pause in response to an XOFF.  With flow-control turned on,
       XON and XOFF characters are used to immediately pause the output of the
       current window.  You can still send these characters to the current
       program, but you must use the appropriate two-character _s_c_r_e_e_n commands
       (typically ""C-a q"" (xon) and ""C-a s"" (xoff)).  The xon/xoff commands
       are also useful for typing C-s and C-q past a terminal that intercepts
       these characters.

       Each window has an initial flow-control value set with either the --ff
       option or the ""defflow"" .screenrc command. Per default the windows are
       set to automatic flow-switching.  It can then be toggled between the
       three states 'fixed on', 'fixed off' and 'automatic' interactively with
       the ""flow"" command bound to ""C-a f"".

       The automatic flow-switching mode deals with flow control using the
       TIOCPKT mode (like ""rlogin"" does). If the tty driver does not support
       TIOCPKT, _s_c_r_e_e_n tries to find out the right mode based on the current
       setting of the application keypad - when it is enabled, flow-control is
       turned off and visa versa.  Of course, you can still manipulate flow-
       control manually when needed.

       If you're running with flow-control enabled and find that pressing the
       interrupt key (usually C-c) does not interrupt the display until
       another 6-8 lines have scrolled by, try running _s_c_r_e_e_n with the
       ""interrupt"" option (add the ""interrupt"" flag to the ""flow"" command in
       your .screenrc, or use the --ii command-line option).  This causes the
       output that _s_c_r_e_e_n has accumulated from the interrupted program to be
       flushed.  One disadvantage is that the virtual terminal's memory
       contains the non-flushed version of the output, which in rare cases can
       cause minor inaccuracies in the output.  For example, if you switch
       screens and return, or update the screen with ""C-a l"" you would see the
       version of the output you would have gotten without ""interrupt"" being
       on.  Also, you might need to turn off flow-control (or use auto-flow
       mode to turn it off automatically) when running a program that expects
       you to type the interrupt character as input, as it is possible to
       interrupt the output of the virtual terminal to your physical terminal
       when flow-control is enabled.  If this happens, a simple refresh of the
       screen with ""C-a l"" will restore it.  Give each mode a try, and use
       whichever mode you find more comfortable.



TTIITTLLEESS ((nnaammiinngg wwiinnddoowwss))
       You can customize each window's name in the window display (viewed with
       the ""windows"" command (C-a w)) by setting it with one of the title
       commands.  Normally the name displayed is the actual command name of
       the program created in the window.  However, it is sometimes useful to
       distinguish various programs of the same name or to change the name on-
       the-fly to reflect the current state of the window.

       The default name for all shell windows can be set with the ""shelltitle""
       command in the .screenrc file, while all other windows are created with
       a ""screen"" command and thus can have their name set with the --tt option.
       Interactively, there is the title-string escape-sequence
       (<esc>k_n_a_m_e<esc>\) and the ""title"" command (C-a A).  The former can be
       output from an application to control the window's name under software
       control, and the latter will prompt for a name when typed.  You can
       also bind pre-defined names to keys with the ""title"" command to set
       things quickly without prompting.

       Finally, _s_c_r_e_e_n has a shell-specific heuristic that is enabled by
       setting the window's name to ""_s_e_a_r_c_h_|_n_a_m_e"" and arranging to have a null
       title escape-sequence output as a part of your prompt.  The _s_e_a_r_c_h
       portion specifies an end-of-prompt search string, while the _n_a_m_e
       portion specifies the default shell name for the window.  If the _n_a_m_e
       ends in a `:' _s_c_r_e_e_n will add what it believes to be the current
       command running in the window to the end of the window's shell name
       (e.g. ""_n_a_m_e_:_c_m_d"").  Otherwise the current command name supersedes the
       shell name while it is running.

       Here's how it works:  you must modify your shell prompt to output a
       null title-escape-sequence (<esc>k<esc>\) as a part of your prompt.
       The last part of your prompt must be the same as the string you
       specified for the _s_e_a_r_c_h portion of the title.  Once this is set up,
       _s_c_r_e_e_n will use the title-escape-sequence to clear the previous command
       name and get ready for the next command.  Then, when a newline is
       received from the shell, a search is made for the end of the prompt.
       If found, it will grab the first word after the matched string and use
       it as the command name.  If the command name begins with either '!',
       '%', or '^' _s_c_r_e_e_n will use the first word on the following line (if
       found) in preference to the just-found name.  This helps csh users get
       better command names when using job control or history recall commands.

       Here's some .screenrc examples:

              screen -t top 2 nice top

       Adding this line to your .screenrc would start a nice-d version of the
       ""top"" command in window 2 named ""top"" rather than ""nice"".

                   shelltitle '> |csh'
                   screen 1

       These commands would start a shell with the given shelltitle.  The
       title specified is an auto-title that would expect the prompt and the
       typed command to look something like the following:

              /usr/joe/src/dir> trn

       (it looks after the '> ' for the command name).  The window status
       would show the name ""trn"" while the command was running, and revert to
       ""csh"" upon completion.

              bind R screen -t '% |root:' su

       Having this command in your .screenrc would bind the key sequence ""C-a
       R"" to the ""su"" command and give it an auto-title name of ""root:"".  For
       this auto-title to work, the screen could look something like this:

                   % !em
                   emacs file.c

       Here the user typed the csh history command ""!em"" which ran the
       previously entered ""emacs"" command.  The window status would show
       ""root:emacs"" during the execution of the command, and revert to simply
       ""root:"" at its completion.

                   bind o title
                   bind E title """"
                   bind u title (unknown)

       The first binding doesn't have any arguments, so it would prompt you
       for a title. when you type ""C-a o"".  The second binding would clear an
       auto-title's current setting (C-a E).  The third binding would set the
       current window's title to ""(unknown)"" (C-a u).

       One thing to keep in mind when adding a null title-escape-sequence to
       your prompt is that some shells (like the csh) count all the non-
       control characters as part of the prompt's length.  If these invisible
       characters aren't a multiple of 8 then backspacing over a tab will
       result in an incorrect display.  One way to get around this is to use a
       prompt like this:

              set prompt='^[[0000m^[k^[\% '

       The escape-sequence ""<esc>[0000m"" not only normalizes the character
       attributes, but all the zeros round the length of the invisible
       characters up to 8.  Bash users will probably want to echo the escape
       sequence in the PROMPT_COMMAND:

              PROMPT_COMMAND='echo -n -e ""\033k\033\134""'

       (I used ""134"" to output a `\' because of a bug in bash v1.04).



TTHHEE VVIIRRTTUUAALL TTEERRMMIINNAALL
       Each window in a _s_c_r_e_e_n session emulates a VT100 terminal, with some
       extra functions added. The VT100 emulator is hard-coded, no other
       terminal types can be emulated.
       Usually _s_c_r_e_e_n tries to emulate as much of the VT100/ANSI standard as
       possible. But if your terminal lacks certain capabilities, the
       emulation may not be complete. In these cases _s_c_r_e_e_n has to tell the
       applications that some of the features are missing. This is no problem
       on machines using termcap, because _s_c_r_e_e_n can use the $TERMCAP variable
       to customize the standard _s_c_r_e_e_n termcap.

       But if you do a rlogin on another machine or your machine supports only
       terminfo this method fails. Because of this, _s_c_r_e_e_n offers a way to
       deal with these cases.  Here is how it works:

       When _s_c_r_e_e_n tries to figure out a terminal name for itself, it first
       looks for an entry named ""screen.<term>"", where <term> is the contents
       of your $TERM variable.  If no such entry exists, _s_c_r_e_e_n tries ""screen""
       (or ""screen-w"" if the terminal is wide (132 cols or more)).  If even
       this entry cannot be found, ""vt100"" is used as a substitute.

       The idea is that if you have a terminal which doesn't support an
       important feature (e.g. delete char or clear to EOS) you can build a
       new termcap/terminfo entry for _s_c_r_e_e_n (named ""screen.<dumbterm>"") in
       which this capability has been disabled. If this entry is installed on
       your machines you are able to do a rlogin and still keep the correct
       termcap/terminfo entry.  The terminal name is put in the $TERM variable
       of all new windows.  _S_c_r_e_e_n also sets the $TERMCAP variable reflecting
       the capabilities of the virtual terminal emulated. Notice that,
       however, on machines using the terminfo database this variable has no
       effect.  Furthermore, the variable $WINDOW is set to the window number
       of each window.

       The actual set of capabilities supported by the virtual terminal
       depends on the capabilities supported by the physical terminal.  If,
       for instance, the physical terminal does not support underscore mode,
       _s_c_r_e_e_n does not put the `us' and `ue' capabilities into the window's
       $TERMCAP variable, accordingly.  However, a minimum number of
       capabilities must be supported by a terminal in order to run _s_c_r_e_e_n;
       namely scrolling, clear screen, and direct cursor addressing (in
       addition, _s_c_r_e_e_n does not run on hardcopy terminals or on terminals
       that over-strike).

       Also, you can customize the $TERMCAP value used by _s_c_r_e_e_n by using the
       ""termcap"" .screenrc command, or by defining the variable $SCREENCAP
       prior to startup.  When the is latter defined, its value will be copied
       verbatim into each window's $TERMCAP variable.  This can either be the
       full terminal definition, or a filename where the terminal ""screen""
       (and/or ""screen-w"") is defined.

       Note that _s_c_r_e_e_n honors the ""terminfo"" .screenrc command if the system
       uses the terminfo database rather than termcap.

       When the boolean `G0' capability is present in the termcap entry for
       the terminal on which _s_c_r_e_e_n has been called, the terminal emulation of
       _s_c_r_e_e_n supports multiple character sets.  This allows an application to
       make use of, for instance, the VT100 graphics character set or national
       character sets.  The following control functions from ISO 2022 are
       supported: _l_o_c_k _s_h_i_f_t _G_0 (_S_I), _l_o_c_k _s_h_i_f_t _G_1 (_S_O), _l_o_c_k _s_h_i_f_t _G_2, _l_o_c_k
       _s_h_i_f_t _G_3, _s_i_n_g_l_e _s_h_i_f_t _G_2, and _s_i_n_g_l_e _s_h_i_f_t _G_3.  When a virtual
       terminal is created or reset, the ASCII character set is designated as
       _G_0 through _G_3.  When the `G0' capability is present, _s_c_r_e_e_n evaluates
       the capabilities `S0', `E0', and `C0' if present. `S0' is the sequence
       the terminal uses to enable and start the graphics character set rather
       than _S_I.  `E0' is the corresponding replacement for _S_O. `C0' gives a
       character by character translation string that is used during semi-
       graphics mode. This string is built like the `acsc' terminfo
       capability.

       When the `po' and `pf' capabilities are present in the terminal's
       termcap entry, applications running in a _s_c_r_e_e_n window can send output
       to the printer port of the terminal.  This allows a user to have an
       application in one window sending output to a printer connected to the
       terminal, while all other windows are still active (the printer port is
       enabled and disabled again for each chunk of output).  As a side-
       effect, programs running in different windows can send output to the
       printer simultaneously.  Data sent to the printer is not displayed in
       the window.  The _i_n_f_o command displays a line starting `PRIN' while the
       printer is active.

       _S_c_r_e_e_n maintains a hardstatus line for every window. If a window gets
       selected, the display's hardstatus will be updated to match the
       window's hardstatus line. If the display has no hardstatus the line
       will be displayed as a standard _s_c_r_e_e_n message.  The hardstatus line
       can be changed with the ANSI Application Program Command (APC):
       ""ESC_<string>ESC\"". As a convenience for xterm users the sequence
       ""ESC]0..2;<string>^G"" is also accepted.

       Some capabilities are only put into the $TERMCAP variable of the
       virtual terminal if they can be efficiently implemented by the physical
       terminal.  For instance, `dl' (delete line) is only put into the
       $TERMCAP variable if the terminal supports either delete line itself or
       scrolling regions. Note that this may provoke confusion, when the
       session is reattached on a different terminal, as the value of $TERMCAP
       cannot be modified by parent processes.

       The ""alternate screen"" capability is not enabled by default.  Set the
       aallttssccrreeeenn .screenrc command to enable it.

       The following is a list of control sequences recognized by _s_c_r_e_e_n.
       ""(V)"" and ""(A)"" indicate VT100-specific and ANSI- or ISO-specific
       functions, respectively.


       EESSCC EE                      Next Line

       EESSCC DD                      Index

       EESSCC MM                      Reverse Index

       EESSCC HH                      Horizontal Tab Set

       EESSCC ZZ                      Send VT100 Identification String

       EESSCC 77                 (V)  Save Cursor and Attributes

       EESSCC 88                 (V)  Restore Cursor and Attributes

       EESSCC [[ss                (A)  Save Cursor and Attributes

       EESSCC [[uu                (A)  Restore Cursor and Attributes

       EESSCC cc                      Reset to Initial State

       EESSCC gg                      Visual Bell

       EESSCC Pn pp                   Cursor Visibility (97801)

           Pn = 66                 Invisible

                77                 Visible

       EESSCC ==                 (V)  Application Keypad Mode

       EESSCC >>                 (V)  Numeric Keypad Mode

       EESSCC ## 88               (V)  Fill Screen with E's

       EESSCC \\                 (A)  String Terminator

       EESSCC ^^                 (A)  Privacy Message String (Message Line)

       EESSCC !!                      Global Message String (Message Line)

       EESSCC kk                      A.k.a. Definition String

       EESSCC PP                 (A)  Device Control String.  Outputs a string
                                  directly to the host terminal without
                                  interpretation.

       EESSCC __                 (A)  Application Program Command (Hardstatus)

       EESSCC ]] 00 ;; ssttrriinngg ^^GG   (A)  Operating System Command (Hardstatus, xterm
                                  title hack)

       EESSCC ]] 8833 ;; ccmmdd ^^GG     (A)  Execute screen command. This only works if
                                  multi-user support is compiled into screen.
                                  The pseudo-user "":window:"" is used to check
                                  the access control list. Use ""addacl
                                  :window: -rwx #?"" to create a user with no
                                  rights and allow only the needed commands.

       CCoonnttrrooll--NN             (A)  Lock Shift G1 (SO)

       CCoonnttrrooll--OO             (A)  Lock Shift G0 (SI)

       EESSCC nn                 (A)  Lock Shift G2

       EESSCC oo                 (A)  Lock Shift G3

       EESSCC NN                 (A)  Single Shift G2

       EESSCC OO                 (A)  Single Shift G3

       EESSCC (( Pcs             (A)  Designate character set as G0

       EESSCC )) Pcs             (A)  Designate character set as G1

       EESSCC ** Pcs             (A)  Designate character set as G2

       EESSCC ++ Pcs             (A)  Designate character set as G3

       EESSCC [[ Pn ;; Pn HH            Direct Cursor Addressing

       EESSCC [[ Pn ;; Pn ff            same as above

       EESSCC [[ Pn JJ                 Erase in Display

             Pn = None or 00       From Cursor to End of Screen

                  11               From Beginning of Screen to Cursor

                  22               Entire Screen

       EESSCC [[ Pn KK                 Erase in Line

             Pn = None or 00       From Cursor to End of Line

                  11               From Beginning of Line to Cursor

                  22               Entire Line

       EESSCC [[ Pn XX                 Erase character

       EESSCC [[ Pn AA                 Cursor Up

       EESSCC [[ Pn BB                 Cursor Down

       EESSCC [[ Pn CC                 Cursor Right

       EESSCC [[ Pn DD                 Cursor Left

       EESSCC [[ Pn EE                 Cursor next line

       EESSCC [[ Pn FF                 Cursor previous line

       EESSCC [[ Pn GG                 Cursor horizontal position

       EESSCC [[ Pn ``                 same as above

       EESSCC [[ Pn dd                 Cursor vertical position

       EESSCC [[ Ps ;;...;; Ps mm        Select Graphic Rendition

             Ps = None or 00       Default Rendition

                  11               Bold

                  22          (A)  Faint

                  33          (A)  _S_t_a_n_d_o_u_t Mode (ANSI: Italicized)

                  44               Underlined

                  55               Blinking

                  77               Negative Image

                  2222         (A)  Normal Intensity

                  2233         (A)  _S_t_a_n_d_o_u_t Mode off (ANSI: Italicized off)

                  2244         (A)  Not Underlined

                  2255         (A)  Not Blinking

                  2277         (A)  Positive Image

                  3300         (A)  Foreground Black

                  3311         (A)  Foreground Red

                  3322         (A)  Foreground Green

                  3333         (A)  Foreground Yellow

                  3344         (A)  Foreground Blue

                  3355         (A)  Foreground Magenta

                  3366         (A)  Foreground Cyan

                  3377         (A)  Foreground White

                  3399         (A)  Foreground Default

                  4400         (A)  Background Black

                  ......             ...

                  4499         (A)  Background Default

       EESSCC [[ Pn gg                 Tab Clear

             Pn = None or 00       Clear Tab at Current Position

                  33               Clear All Tabs

       EESSCC [[ Pn ;; Pn rr       (V)  Set Scrolling Region

       EESSCC [[ Pn II            (A)  Horizontal Tab

       EESSCC [[ Pn ZZ            (A)  Backward Tab

       EESSCC [[ Pn LL            (A)  Insert Line

       EESSCC [[ Pn MM            (A)  Delete Line

       EESSCC [[ Pn @@            (A)  Insert Character

       EESSCC [[ Pn PP            (A)  Delete Character

       EESSCC [[ Pn SS                 Scroll Scrolling Region Up

       EESSCC [[ Pn TT                 Scroll Scrolling Region Down

       EESSCC [[ Pn ^^                 same as above

       EESSCC [[ Ps ;;...;; Ps hh        Set Mode

       EESSCC [[ Ps ;;...;; Ps ll        Reset Mode

             Ps = 44          (A)  Insert Mode

                  2200         (A)  _A_u_t_o_m_a_t_i_c _L_i_n_e_f_e_e_d Mode

                  3344              Normal Cursor Visibility

                  ??11         (V)  Application Cursor Keys

                  ??33         (V)  Change Terminal Width to 132 columns

                  ??55         (V)  Reverse Video

                  ??66         (V)  _O_r_i_g_i_n Mode

                  ??77         (V)  _W_r_a_p Mode

                  ??99              X10 mouse tracking

                  ??2255        (V)  Visible Cursor

                  ??4477             Alternate Screen (old xterm code)

                  ??11000000      (V)  VT200 mouse tracking

                  ??11004477           Alternate Screen (new xterm code)

                  ??11004499           Alternate Screen (new xterm code)

       EESSCC [[ 55 ii             (A)  Start relay to printer (ANSI Media Copy)

       EESSCC [[ 44 ii             (A)  Stop relay to printer (ANSI Media Copy)

       EESSCC [[ 88 ;; Ph ;; Pw tt        Resize the window to `Ph' lines and `Pw'
                                  columns (SunView special)

       EESSCC [[ cc                    Send VT100 Identification String

       EESSCC [[ xx                    Send Terminal Parameter Report

       EESSCC [[ >> cc                  Send VT220 Secondary Device Attributes
                                  String

       EESSCC [[ 66 nn                  Send Cursor Position Report



IINNPPUUTT TTRRAANNSSLLAATTIIOONN
       In order to do a full VT100 emulation _s_c_r_e_e_n has to detect that a
       sequence of characters in the input stream was generated by a keypress
       on the user's keyboard and insert the VT100 style escape sequence.
       _S_c_r_e_e_n has a very flexible way of doing this by making it possible to
       map arbitrary commands on arbitrary sequences of characters. For
       standard VT100 emulation the command will always insert a string in the
       input buffer of the window (see also command ssttuuffff in the command
       table).  Because the sequences generated by a keypress can change after
       a reattach from a different terminal type, it is possible to bind
       commands to the termcap name of the keys.  _S_c_r_e_e_n will insert the
       correct binding after each reattach. See the bbiinnddkkeeyy command for
       further details on the syntax and examples.

       Here is the table of the default key bindings. (A) means that the
       command is executed if the keyboard is switched into application mode.

       Key name          Termcap name    Command
       ______________________________________________________
       Cursor up             ku          stuff \033[A
                                         stuff \033OA    (A)
       Cursor down           kd          stuff \033[B
                                         stuff \033OB    (A)
       Cursor right          kr          stuff \033[C
                                         stuff \033OC    (A)
       Cursor left           kl          stuff \033[D
                                         stuff \033OD    (A)
       Function key 0        k0          stuff \033[10~
       Function key 1        k1          stuff \033OP
       Function key 2        k2          stuff \033OQ
       Function key 3        k3          stuff \033OR
       Function key 4        k4          stuff \033OS
       Function key 5        k5          stuff \033[15~
       Function key 6        k6          stuff \033[17~
       Function key 7        k7          stuff \033[18~
       Function key 8        k8          stuff \033[19~
       Function key 9        k9          stuff \033[20~
       Function key 10       k;          stuff \033[21~
       Function key 11       F1          stuff \033[23~
       Function key 12       F2          stuff \033[24~
       Home                  kh          stuff \033[1~
       End                   kH          stuff \033[4~
       Insert                kI          stuff \033[2~
       Delete                kD          stuff \033[3~
       Page up               kP          stuff \033[5~
       Page down             kN          stuff \033[6~
       Keypad 0              f0          stuff 0
                                         stuff \033Op    (A)
       Keypad 1              f1          stuff 1
                                         stuff \033Oq    (A)
       Keypad 2              f2          stuff 2
                                         stuff \033Or    (A)
       Keypad 3              f3          stuff 3
                                         stuff \033Os    (A)
       Keypad 4              f4          stuff 4
                                         stuff \033Ot    (A)
       Keypad 5              f5          stuff 5
                                         stuff \033Ou    (A)
       Keypad 6              f6          stuff 6
                                         stuff \033Ov    (A)
       Keypad 7              f7          stuff 7
                                         stuff \033Ow    (A)
       Keypad 8              f8          stuff 8
                                         stuff \033Ox    (A)
       Keypad 9              f9          stuff 9
                                         stuff \033Oy    (A)
       Keypad +              f+          stuff +
                                         stuff \033Ok    (A)
       Keypad -              f-          stuff -
                                         stuff \033Om    (A)
       Keypad *              f*          stuff *
                                         stuff \033Oj    (A)
       Keypad /              f/          stuff /
                                         stuff \033Oo    (A)
       Keypad =              fq          stuff =
                                         stuff \033OX    (A)
       Keypad .              f.          stuff .
                                         stuff \033On    (A)
       Keypad ,              f,          stuff ,
                                         stuff \033Ol    (A)
       Keypad enter          fe          stuff \015
                                         stuff \033OM    (A)



SSPPEECCIIAALL TTEERRMMIINNAALL CCAAPPAABBIILLIITTIIEESS
       The following table describes all terminal capabilities that are
       recognized by _s_c_r_e_e_n and are not in the termcap(5) manual.  You can
       place these capabilities in your termcap entries (in `/etc/termcap') or
       use them with the commands `termcap', `terminfo' and `termcapinfo' in
       your screenrc files. It is often not possible to place these
       capabilities in the terminfo database.


       LLPP   _(_b_o_o_l_)  Terminal has VT100 style margins (`magic margins'). Note
                    that this capability is obsolete because _s_c_r_e_e_n uses the
                    standard 'xn' instead.

       ZZ00   _(_s_t_r_)   Change width to 132 columns.

       ZZ11   _(_s_t_r_)   Change width to 80 columns.

       WWSS   _(_s_t_r_)   Resize display. This capability has the desired width and
                    height as arguments. _S_u_n_V_i_e_w_(_t_m_) example: '\E[8;%d;%dt'.

       NNFF   _(_b_o_o_l_)  Terminal doesn't need flow control. Send ^S and ^Q direct
                    to the application. Same as 'flow off'. The opposite of
                    this capability is 'nx'.

       GG00   _(_b_o_o_l_)  Terminal can deal with ISO 2022 font selection sequences.

       SS00   _(_s_t_r_)   Switch charset 'G0' to the specified charset. Default is
                    '\E(%.'.

       EE00   _(_s_t_r_)   Switch charset 'G0' back to standard charset. Default is
                    '\E(B'.

       CC00   _(_s_t_r_)   Use the string as a conversion table for font '0'. See the
                    'ac' capability for more details.

       CCSS   _(_s_t_r_)   Switch cursor-keys to application mode.

       CCEE   _(_s_t_r_)   Switch cursor-keys back to normal mode.

       AANN   _(_b_o_o_l_)  Turn on autonuke. See the 'autonuke' command for more
                    details.

       OOLL   _(_n_u_m_)   Set the output buffer limit. See the 'obuflimit' command
                    for more details.

       KKJJ   _(_s_t_r_)   Set the encoding of the terminal. See the 'encoding'
                    command for valid encodings.

       AAFF   _(_s_t_r_)   Change character foreground color in an ANSI conform way.
                    This capability will almost always be set to '\E[3%dm'
                    ('\E[3%p1%dm' on terminfo machines).

       AABB   _(_s_t_r_)   Same as 'AF', but change background color.

       AAXX   _(_b_o_o_l_)  Does understand ANSI set default fg/bg color (\E[39m /
                    \E[49m).

       XXCC   _(_s_t_r_)   Describe a translation of characters to strings depending
                    on the current font. More details follow in the next
                    section.

       XXTT   _(_b_o_o_l_)  Terminal understands special xterm sequences (OSC, mouse
                    tracking).

       CC88   _(_b_o_o_l_)  Terminal needs bold to display high-intensity colors (e.g.
                    Eterm).

       TTFF   _(_b_o_o_l_)  Add missing capabilities to the termcap/info entry. (Set
                    by default).


CCHHAARRAACCTTEERR TTRRAANNSSLLAATTIIOONN
       _S_c_r_e_e_n has a powerful mechanism to translate characters to arbitrary
       strings depending on the current font and terminal type.  Use this
       feature if you want to work with a common standard character set (say
       ISO8851-latin1) even on terminals that scatter the more unusual
       characters over several national language font pages.

       Syntax:
           XXCC==_<_c_h_a_r_s_e_t_-_m_a_p_p_i_n_g_>{,,,,_<_c_h_a_r_s_e_t_-_m_a_p_p_i_n_g_>}
           _<_c_h_a_r_s_e_t_-_m_a_p_p_i_n_g_> := _<_d_e_s_i_g_n_a_t_o_r_>_<_t_e_m_p_l_a_t_e_>{,,_<_m_a_p_p_i_n_g_>}
           _<_m_a_p_p_i_n_g_> := _<_c_h_a_r_-_t_o_-_b_e_-_m_a_p_p_e_d_>_<_t_e_m_p_l_a_t_e_-_a_r_g_>

       The things in braces may be repeated any number of times.

       A _<_c_h_a_r_s_e_t_-_m_a_p_p_i_n_g_> tells _s_c_r_e_e_n how to map characters in font
       _<_d_e_s_i_g_n_a_t_o_r_> ('B': Ascii, 'A': UK, 'K': german, etc.)  to strings.
       Every _<_m_a_p_p_i_n_g_> describes to what string a single character will be
       translated. A template mechanism is used, as most of the time the codes
       have a lot in common (for example strings to switch to and from another
       charset). Each occurrence of '%' in _<_t_e_m_p_l_a_t_e_> gets substituted with
       the _<_t_e_m_p_l_a_t_e_-_a_r_g_> specified together with the character. If your
       strings are not similar at all, then use '%' as a template and place
       the full string in _<_t_e_m_p_l_a_t_e_-_a_r_g_>. A quoting mechanism was added to
       make it possible to use a real '%'. The '\' character quotes the
       special characters '\', '%', and ','.

       Here is an example:

           termcap hp700 'XC=B\E(K%\E(B,\304[,\326\\\\,\334]'

       This tells _s_c_r_e_e_n how to translate ISOlatin1 (charset 'B') upper case
       umlaut characters on a hp700 terminal that has a german charset. '\304'
       gets translated to '\E(K[\E(B' and so on.  Note that this line gets
       parsed *three* times before the internal lookup table is built,
       therefore a lot of quoting is needed to create a single '\'.

       Another extension was added to allow more emulation: If a mapping
       translates the unquoted '%' char, it will be sent to the terminal
       whenever _s_c_r_e_e_n switches to the corresponding _<_d_e_s_i_g_n_a_t_o_r_>. In this
       special case the template is assumed to be just '%' because the charset
       switch sequence and the character mappings normally haven't much in
       common.

       This example shows one use of the extension:

           termcap xterm 'XC=K%,%\E(B,[\304,\\\\\326,]\334'

       Here, a part of the german ('K') charset is emulated on an xterm.  If
       _s_c_r_e_e_n has to change to the 'K' charset, '\E(B' will be sent to the
       terminal, i.e. the ASCII charset is used instead. The template is just
       '%', so the mapping is straightforward: '[' to '\304', '\' to '\326',
       and ']' to '\334'.


EENNVVIIRROONNMMEENNTT
       COLUMNS        Number of columns on the terminal (overrides termcap
                      entry).
       HOME           Directory in which to look for .screenrc.
       LINES          Number of lines on the terminal (overrides termcap
                      entry).
       LOCKPRG        Screen lock program.
       NETHACKOPTIONS Turns on nethack option.
       PATH           Used for locating programs to run.
       SCREENCAP      For customizing a terminal's TERMCAP value.
       SCREENDIR      Alternate socket directory.
       SCREENRC       Alternate user screenrc file.
       SHELL          Default shell program for opening windows (default
                      ""/bin/sh"").
       STY            Alternate socket name.
       SYSSCREENRC    Alternate system screenrc file.
       TERM           Terminal name.
       TERMCAP        Terminal description.
       WINDOW         Window number of a window (at creation time).

FFIILLEESS
       .../screen-4.?.??/etc/screenrc
       .../screen-4.?.??/etc/etcscreenrc Examples in the _s_c_r_e_e_n distribution
                                         package for private and global
                                         initialization files.
       $SYSSCREENRC
       /usr/local/etc/screenrc           _s_c_r_e_e_n initialization commands
       $SCREENRC
       $HOME/.screenrc                   Read in after /usr/local/etc/screenrc
       $SCREENDIR/S-<login>
       /local/screens/S-<login>          Socket directories (default)
       /usr/tmp/screens/S-<login>        Alternate socket directories.
       <socket directory>/.termcap       Written by the ""termcap"" output
                                         function
       /usr/tmp/screens/screen-exchange  or
       /tmp/screen-exchange              _s_c_r_e_e_n `interprocess communication
                                         buffer'
       hardcopy.[0-9]                    Screen images created by the hardcopy
                                         function
       screenlog.[0-9]                   Output log files created by the log
                                         function
       /usr/lib/terminfo/?/*             or
       /etc/termcap                      Terminal capability databases
       /etc/utmp                         Login records
       $LOCKPRG                          Program that locks a terminal.


SSEEEE AALLSSOO
       termcap(5), utmp(5), vi(1), captoinfo(1), tic(1)


AAUUTTHHOORRSS
       Originally created by Oliver Laumann, this latest version was produced
       by Wayne Davison, Juergen Weigert and Michael Schroeder.

CCOOPPYYLLEEFFTT
       Copyright (C) 1993-2003
            Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
            Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
       Copyright (C) 1987 Oliver Laumann
       This program is free software; you can redistribute it and/or modify it
       under the terms of the GNU General Public License as published by the
       Free Software Foundation; either version 2, or (at your option) any
       later version.
       This program is distributed in the hope that it will be useful, but
       WITHOUT ANY WARRANTY; without even the implied warranty of
       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
       General Public License for more details.
       You should have received a copy of the GNU General Public License along
       with this program (see the file COPYING); if not, write to the Free
       Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
       02111-1307, USA

CCOONNTTRRIIBBUUTTOORRSS
       Ken Beal (kbeal@amber.ssd.csd.harris.com),
       Rudolf Koenig (rfkoenig@immd4.informatik.uni-erlangen.de),
       Toerless Eckert (eckert@immd4.informatik.uni-erlangen.de),
       Wayne Davison (davison@borland.com),
       Patrick Wolfe (pat@kai.com, kailand!pat),
       Bart Schaefer (schaefer@cse.ogi.edu),
       Nathan Glasser (nathan@brokaw.lcs.mit.edu),
       Larry W. Virden (lvirden@cas.org),
       Howard Chu (hyc@hanauma.jpl.nasa.gov),
       Tim MacKenzie (tym@dibbler.cs.monash.edu.au),
       Markku Jarvinen (mta@{cc,cs,ee}.tut.fi),
       Marc Boucher (marc@CAM.ORG),
       Doug Siebert (dsiebert@isca.uiowa.edu),
       Ken Stillson (stillson@tsfsrv.mitre.org),
       Ian Frechett (frechett@spot.Colorado.EDU),
       Brian Koehmstedt (bpk@gnu.ai.mit.edu),
       Don Smith (djs6015@ultb.isc.rit.edu),
       Frank van der Linden (vdlinden@fwi.uva.nl),
       Martin Schweikert (schweik@cpp.ob.open.de),
       David Vrona (dave@sashimi.lcu.com),
       E. Tye McQueen (tye%spillman.UUCP@uunet.uu.net),
       Matthew Green (mrg@eterna.com.au),
       Christopher Williams (cgw@pobox.com),
       Matt Mosley (mattm@access.digex.net),
       Gregory Neil Shapiro (gshapiro@wpi.WPI.EDU),
       Johannes Zellner (johannes@zellner.org),
       Pablo Averbuj (pablo@averbuj.com).


VVEERRSSIIOONN
       This is version 4.0.2. Its roots are a merge of a custom version 2.3PR7
       by Wayne Davison and several enhancements to Oliver Laumann's version
       2.0. Note that all versions numbered 2.x are copyright by Oliver
       Laumann.

AAVVAAIILLAABBIILLIITTYY
       The latest official release of _s_c_r_e_e_n available via anonymous ftp from
       gnudist.gnu.org, nic.funet.fi or any other _G_N_U distribution site. The
       home site of _s_c_r_e_e_n is ftp.uni-erlangen.de, in the directory
       pub/utilities/screen. The subdirectory `private' contains the latest
       beta testing release. If you want to help, send a note to screen@uni-
       erlangen.de.

BBUUGGSS
       •  `dm' (delete mode) and `xs' are not handled correctly (they are
          ignored). `xn' is treated as a magic-margin indicator.

       •  _S_c_r_e_e_n has no clue about double-high or double-wide characters.  But
          this is the only area where _v_t_t_e_s_t is allowed to fail.

       •  It is not possible to change the environment variable $TERMCAP when
          reattaching under a different terminal type.

       •  The support of terminfo based systems is very limited. Adding extra
          capabilities to $TERMCAP may not have any effects.

       •  _S_c_r_e_e_n does not make use of hardware tabs.

       •  _S_c_r_e_e_n must be installed as set-uid with owner root on most systems
          in order to be able to correctly change the owner of the tty device
          file for each window.  Special permission may also be required to
          write the file ""/etc/utmp"".

       •  Entries in ""/etc/utmp"" are not removed when _s_c_r_e_e_n is killed with
          SIGKILL.  This will cause some programs (like ""w"" or ""rwho"") to
          advertise that a user is logged on who really isn't.

       •  _S_c_r_e_e_n may give a strange warning when your tty has no utmp entry.

       •  When the modem line was hung up, _s_c_r_e_e_n may not automatically detach
          (or quit) unless the device driver is configured to send a HANGUP
          signal.  To detach a _s_c_r_e_e_n session use the -D or -d command line
          option.

       •  If a password is set, the command line options -d and -D still
          detach a session without asking.

       •  Both ""breaktype"" and ""defbreaktype"" change the break generating
          method used by all terminal devices. The first should change a
          window specific setting, where the latter should change only the
          default for new windows.

       •  When attaching to a multiuser session, the user's .screenrc file is
          not sourced. Each user's personal settings have to be included in
          the .screenrc file from which the session is booted, or have to be
          changed manually.

       •  A weird imagination is most useful to gain full advantage of all the
          features.

       •  Send bug-reports, fixes, enhancements, t-shirts, money, beer & pizza
          to ssccrreeeenn@@uunnii--eerrllaannggeenn..ddee.


4th Berkeley Distribution          Aug 2003                          SCREEN(1)
"
tmux,No manual entry for tmux
strace,No manual entry for strace
ltrace,No manual entry for ltrace
ldd,No manual entry for ldd
objdump,"LLVM-OBJDUMP(1)                      LLVM                      LLVM-OBJDUMP(1)

NNAAMMEE
       llvm-objdump - LLVM's object file dumper

SSYYNNOOPPSSIISS
       llllvvmm--oobbjjdduummpp [_c_o_m_m_a_n_d_s] [_o_p_t_i_o_n_s] [_f_i_l_e_n_a_m_e_s_._._.]

DDEESSCCRRIIPPTTIIOONN
       The llllvvmm--oobbjjdduummpp utility prints the contents of object files and final
       linked images named on the command line. If no file name is specified,
       llllvvmm--oobbjjdduummpp will attempt to read from _a_._o_u_t. If _- is used as a file
       name, llllvvmm--oobbjjdduummpp will process a file on its standard input stream.

CCOOMMMMAANNDDSS
       At least one of the following commands are required, and some commands
       can be combined with other commands:

       --aa,, ----aarrcchhiivvee--hheeaaddeerrss
              Display the information contained within an archive's headers.

       --dd,, ----ddiissaasssseemmbbllee
              Disassemble all executable sections found in the input files. On
              some architectures (AArch64, PowerPC, x86), all known
              instructions are disassembled by default. On the others, _-_-_m_c_p_u
              or _-_-_m_a_t_t_r is needed to enable some instruction sets. Disabled
              instructions are displayed as <<uunnkknnoowwnn>>.

       --DD,, ----ddiissaasssseemmbbllee--aallll
              Disassemble all sections found in the input files.

       ----ddiissaasssseemmbbllee--ssyymmbboollss==<<ssyymmbbooll11[[,,ssyymmbbooll22,,......]]>>
              Disassemble only the specified symbols. Takes demangled symbol
              names when _-_-_d_e_m_a_n_g_l_e is specified, otherwise takes mangled
              symbol names.  Implies _-_-_d_i_s_a_s_s_e_m_b_l_e.

       ----ddwwaarrff==<<vvaalluuee>>
              Dump the specified DWARF debug sections. The supported values
              are:

              _f_r_a_m_e_s - .debug_frame

       --ff,, ----ffiillee--hheeaaddeerrss
              Display the contents of the overall file header.

       ----ffaauulltt--mmaapp--sseeccttiioonn
              Display the content of the fault map section.

       --hh,, ----hheeaaddeerrss,, ----sseeccttiioonn--hheeaaddeerrss
              Display summaries of the headers for each section.

       ----hheellpp Display usage information and exit. Does not stack with other
              commands.

       --pp,, ----pprriivvaattee--hheeaaddeerrss
              Display format-specific file headers.

       --rr,, ----rreelloocc
              Display the relocation entries in the file.

       --RR,, ----ddyynnaammiicc--rreelloocc
              Display the dynamic relocation entries in the file.

       ----rraaww--ccllaanngg--aasstt
              Dump the raw binary contents of the clang AST section.

       --ss,, ----ffuullll--ccoonntteennttss
              Display the contents of each section.

       --tt,, ----ssyymmss
              Display the symbol table.

       --TT,, ----ddyynnaammiicc--ssyymmss
              Display the contents of the dynamic symbol table.

       --uu,, ----uunnwwiinndd--iinnffoo
              Display the unwind info of the input(s).

              This operation is only currently supported for COFF and Mach-O
              object files.

       --vv,, ----vveerrssiioonn
              Display the version of the llllvvmm--oobbjjdduummpp executable. Does not
              stack with other commands.

       --xx,, ----aallll--hheeaaddeerrss
              Display all available header information. Equivalent to
              specifying _-_-_a_r_c_h_i_v_e_-_h_e_a_d_e_r_s, _-_-_f_i_l_e_-_h_e_a_d_e_r_s, _-_-_p_r_i_v_a_t_e_-_h_e_a_d_e_r_s,
              _-_-_r_e_l_o_c, _-_-_s_e_c_t_i_o_n_-_h_e_a_d_e_r_s, and _-_-_s_y_m_s.

OOPPTTIIOONNSS
       llllvvmm--oobbjjdduummpp supports the following options:

       ----aaddjjuusstt--vvmmaa==<<ooffffsseett>>
              Increase the displayed address in disassembly or section header
              printing by the specified offset.

       ----aarrcchh--nnaammee==<<ssttrriinngg>>
              Specify the target architecture when disassembling. Use
              _-_-_v_e_r_s_i_o_n for a list of available targets.

       ----bbuuiilldd--iidd==<<ssttrriinngg>>
              Look up the object using the given build ID, specified as a
              hexadecimal string. The found object is handled as if it were an
              input filename.

       --CC,, ----ddeemmaannggllee
              Demangle symbol names in the output.

       ----ddeebbuugg--ffiillee--ddiirreeccttoorryy <<ppaatthh>>
              Provide a path to a directory with a _._b_u_i_l_d_-_i_d subdirectory to
              search for debug information for stripped binaries. Multiple
              instances of this argument are searched in the order given.

       ----ddeebbuuggiinnffoodd,, ----nnoo--ddeebbuuggiinnffoodd
              Whether or not to try debuginfod lookups for debug binaries.
              Unless specified, debuginfod is only enabled if libcurl was
              compiled in (LLLLVVMM__EENNAABBLLEE__CCUURRLL) and at least one server URL was
              provided by the environment variable DDEEBBUUGGIINNFFOODD__UURRLLSS.

       ----ddeebbuugg--vvaarrss==<<ffoorrmmaatt>>
              Print the locations (in registers or memory) of source-level
              variables alongside disassembly. ffoorrmmaatt may be uunniiccooddee or aasscciiii,
              defaulting to uunniiccooddee if omitted.

       ----ddeebbuugg--vvaarrss--iinnddeenntt==<<wwiiddtthh>>
              Distance to indent the source-level variable display, relative
              to the start of the disassembly. Defaults to 52 characters.

       --jj,, ----sseeccttiioonn==<<sseeccttiioonn11[[,,sseeccttiioonn22,,......]]>>
              Perform commands on the specified sections only. For Mach-O use
              _s_e_g_m_e_n_t_,_s_e_c_t_i_o_n to specify the section name.

       --ll,, ----lliinnee--nnuummbbeerrss
              When disassembling, display source line numbers. Implies
              _-_-_d_i_s_a_s_s_e_m_b_l_e.

       --MM,, ----ddiissaasssseemmbblleerr--ooppttiioonnss==<<oopptt11[[,,oopptt22,,......]]>>
              Pass target-specific disassembler options. Available options:

              • rreegg--nnaammeess--ssttdd: ARM only (default). Print in ARM 's instruction
                set documentation, with r13/r14/r15 replaced by sp/lr/pc.

              • rreegg--nnaammeess--rraaww: ARM only. Use r followed by the register
                number.

              • nnoo--aalliiaasseess: AArch64 and RISC-V only. Print raw instruction
                mnemonic instead of pseudo instruction mnemonic.

              • nnuummeerriicc: RISC-V only. Print raw register names instead of ABI
                mnemonic. (e.g. print x1 instead of ra)

              • aatttt: x86 only (default). Print in the AT&T syntax.

              • iinntteell: x86 only. Print in the intel syntax.

       ----mmccppuu==<<ccppuu--nnaammee>>
              Target a specific CPU type for disassembly. Specify ----mmccppuu==hheellpp
              to display available CPUs.

       ----mmaattttrr==<<aa11,,++aa22,,--aa33,,......>>
              Enable/disable target-specific attributes. Specify ----mmaattttrr==hheellpp
              to display the available attributes.

       ----nnoo--lleeaaddiinngg--aaddddrr,, ----nnoo--aaddddrreesssseess
              When disassembling, do not print leading addresses for
              instructions or inline relocations.

       ----nnoo--pprriinntt--iimmmm--hheexx
              Do not use hex format for immediate values in disassembly
              output.

       ----nnoo--sshhooww--rraaww--iinnssnn
              When disassembling, do not print the raw bytes of each
              instruction.

       ----ooffffllooaaddiinngg
              Display the content of the LLVM offloading section.

       ----pprreeffiixx==<<pprreeffiixx>>
              When disassembling with the _-_-_s_o_u_r_c_e option, prepend pprreeffiixx to
              absolute paths.

       ----pprreeffiixx--ssttrriipp==<<lleevveell>>
              When disassembling with the _-_-_s_o_u_r_c_e option, strip out lleevveell
              initial directories from absolute paths. This option has no
              effect without _-_-_p_r_e_f_i_x.

       ----pprriinntt--iimmmm--hheexx
              Use hex format when printing immediate values in disassembly
              output (default).

       --SS,, ----ssoouurrccee
              When disassembling, display source interleaved with the
              disassembly. Implies _-_-_d_i_s_a_s_s_e_m_b_l_e.

       ----sshhooww--aallll--ssyymmbboollss
              Show all symbols during disassembly, even if multiple symbols
              are defined at the same location.

       ----sshhooww--llmmaa
              Display the LMA column when dumping ELF section headers.
              Defaults to off unless any section has different VMA and LMAs.

       ----ssttaarrtt--aaddddrreessss==<<aaddddrreessss>>
              When disassembling, only disassemble from the specified address.

              When printing relocations, only print the relocations patching
              offsets from at least aaddddrreessss.

              When printing symbols, only print symbols with a value of at
              least aaddddrreessss.

       ----ssttoopp--aaddddrreessss==<<aaddddrreessss>>
              When disassembling, only disassemble up to, but not including
              the specified address.

              When printing relocations, only print the relocations patching
              offsets up to aaddddrreessss.

              When printing symbols, only print symbols with a value up to
              aaddddrreessss.

       ----ssyymmbboolliizzee--ooppeerraannddss
              When disassembling, symbolize a branch target operand to print a
              label instead of a real address.

              When printing a PC-relative global symbol reference, print it as
              an offset from the leading symbol.

              When a bb-address-map section is present (i.e., the object file
              is built with --ffbbaassiicc--bblloocckk--sseeccttiioonnss==llaabbeellss), labels are
              retrieved from that section instead.

              Only works with PowerPC objects or X86 linked images.

              EExxaammppllee::
                     A non-symbolized branch instruction with a local target
                     and pc-relative memory access like

                 cmp eax, dword ptr [rip + 4112]
                 jge 0x20117e <_start+0x25>

              might become

                 <L0>:
                   cmp eax, dword ptr <g>
                   jge      <L0>

       ----ttrriippllee==<<ssttrriinngg>>
              Target triple to disassemble for, see ----vveerrssiioonn for available
              targets.

       --ww,, ----wwiiddee
              Ignored for compatibility with GNU objdump.

       ----xx8866--aassmm--ssyynnttaaxx==<<ssttyyllee>>
              Deprecated.  When used with _-_-_d_i_s_a_s_s_e_m_b_l_e, choose style of code
              to emit from X86 backend. Supported values are:

                 aatttt    AT&T-style assembly

                 iinntteell  Intel-style assembly

              The default disassembly style is aatttt.

       --zz,, ----ddiissaasssseemmbbllee--zzeerrooeess
              Do not skip blocks of zeroes when disassembling.

       @@<<FFIILLEE>>
              Read command-line options and commands from response file
              _<_F_I_L_E_>.

MMAACCHH--OO OONNLLYY OOPPTTIIOONNSS AANNDD CCOOMMMMAANNDDSS

       ----aarrcchh==<<aarrcchhiitteeccttuurree>>
              Specify the architecture to disassemble. see ----vveerrssiioonn for
              available architectures.

       ----aarrcchhiivvee--mmeemmbbeerr--ooffffsseettss
              Print the offset to each archive member for Mach-O archives
              (requires _-_-_a_r_c_h_i_v_e_-_h_e_a_d_e_r_s).

       ----bbiinndd Display binding info

       ----ddaattaa--iinn--ccooddee
              Display the data in code table.

       ----ddiiss--ssyymmnnaammee==<<nnaammee>>
              Disassemble just the specified symbol's instructions.

       ----cchhaaiinneedd--ffiixxuuppss
              Print chained fixup information.

       ----ddyylldd--iinnffoo
              Print bind and rebase information used by dyld to resolve
              external references in a final linked binary.

       ----ddyylliibbss--uusseedd
              Display the shared libraries used for linked files.

       ----ddssyymm==<<ssttrriinngg>>
              Use .dSYM file for debug info.

       ----ddyylliibb--iidd
              Display the shared library's ID for dylib files.

       ----eexxppoorrttss--ttrriiee
              Display exported symbols.

       ----ffuunnccttiioonn--ssttaarrttss [[==<<aaddddrrss||nnaammeess||bbootthh>>]]
              Print the function starts table for Mach-O objects. Either aaddddrrss
              (default) to print only the addresses of functions, nnaammeess to
              print only the names of the functions (when available), or bbootthh
              to print the names beside the addresses.

       --gg     Print line information from debug info if available.

       ----ffuullll--lleeaaddiinngg--aaddddrr
              Print the full leading address when disassembling.

       ----iinnddiirreecctt--ssyymmbboollss
              Display the indirect symbol table.

       ----iinnffoo--pplliisstt
              Display the info plist section as strings.

       ----llaazzyy--bbiinndd
              Display lazy binding info.

       ----lliinnkk--oopptt--hhiinnttss
              Display the linker optimization hints.

       --mm,, ----mmaacchhoo
              Use Mach-O specific object file parser. Commands and other
              options may behave differently when used with ----mmaacchhoo.

       ----nnoo--lleeaaddiinngg--hheeaaddeerrss
              Do not print any leading headers.

       ----nnoo--ssyymmbboolliicc--ooppeerraannddss
              Do not print symbolic operands when disassembling.

       ----nnoonn--vveerrbboossee
              Display the information for Mach-O objects in non-verbose or
              numeric form.

       ----oobbjjcc--mmeettaa--ddaattaa
              Display the Objective-C runtime meta data.

       ----pprriivvaattee--hheeaaddeerr
              Display only the first format specific file header.

       ----rreebbaassee
              Display rebasing information.

       ----rrppaatthhss
              Display runtime search paths for the binary.

       ----uunniivveerrssaall--hheeaaddeerrss
              Display universal headers.

       ----wweeaakk--bbiinndd
              Display weak binding information.

XXCCOOFFFF OONNLLYY OOPPTTIIOONNSS AANNDD CCOOMMMMAANNDDSS

       ----ssyymmbbooll--ddeessccrriippttiioonn
              Add symbol description to disassembly output.

       ----ttrraacceebbaacckk--ttaabbllee
              Decode traceback table in disassembly output. Implies
              _-_-_d_i_s_a_s_s_e_m_b_l_e.

BBUUGGSS
       To report bugs, please visit
       <_h_t_t_p_s_:_/_/_g_i_t_h_u_b_._c_o_m_/_l_l_v_m_/_l_l_v_m_-_p_r_o_j_e_c_t_/_l_a_b_e_l_s_/_t_o_o_l_s_:_l_l_v_m_-_o_b_j_d_u_m_p_/>.

SSEEEE AALLSSOO
       llllvvmm--nnmm((11)), llllvvmm--oottooooll((11)), llllvvmm--rreeaaddeellff((11)), llllvvmm--rreeaaddoobbjj((11))

AAUUTTHHOORR
       Maintained by the LLVM Team (https://llvm.org/).

CCOOPPYYRRIIGGHHTT
       2003-2024, LLVM Project

11                                2024-08-01                   LLVM-OBJDUMP(1)
"
readelf,No manual entry for readelf
ulimit,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
umask,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
getfacl,No manual entry for getfacl
setfacl,No manual entry for setfacl
id,"ID(1)                       General Commands Manual                      ID(1)

NNAAMMEE
     iidd – return user identity

SSYYNNOOPPSSIISS
     iidd [_u_s_e_r]
     iidd --AA
     iidd --FF [_u_s_e_r]
     iidd --GG [--nn] [_u_s_e_r]
     iidd --PP [_u_s_e_r]
     iidd --gg [--nnrr] [_u_s_e_r]
     iidd --pp [_u_s_e_r]
     iidd --uu [--nnrr] [_u_s_e_r]

DDEESSCCRRIIPPTTIIOONN
     The iidd utility displays the user and group names and numeric IDs, of the
     calling process, to the standard output.  If the real and effective IDs
     are different, both are displayed, otherwise only the real ID is
     displayed.

     If a _u_s_e_r (login name or user ID) is specified, the user and group IDs of
     that user are displayed.  In this case, the real and effective IDs are
     assumed to be the same.

     The options are as follows:

     --AA      Display the process audit user ID and other process audit
             properties, which requires privilege.

     --FF      Display the full name of the user.

     --GG      Display the different group IDs (effective, real and
             supplementary) as white-space separated numbers, in no particular
             order.

     --PP      Display the id as a password file entry.

     --aa      Ignored for compatibility with other iidd implementations.

     --gg      Display the effective group ID as a number.

     --nn      Display the name of the user or group ID for the --GG, --gg and --uu
             options instead of the number.  If any of the ID numbers cannot
             be mapped into names, the number will be displayed as usual.

     --pp      Make the output human-readable.  If the user name returned by
             getlogin(2) is different from the login name referenced by the
             user ID, the name returned by getlogin(2) is displayed, preceded
             by the keyword “login”.  The user ID as a name is displayed,
             preceded by the keyword “uid”.  If the effective user ID is
             different from the real user ID, the real user ID is displayed as
             a name, preceded by the keyword “euid”.  If the effective group
             ID is different from the real group ID, the real group ID is
             displayed as a name, preceded by the keyword “rgid”.  The list of
             groups to which the user belongs is then displayed as names,
             preceded by the keyword “groups”.  Each display is on a separate
             line.

     --rr      Display the real ID for the --gg and --uu options instead of the
             effective ID.

     --uu      Display the effective user ID as a number.

EEXXIITT SSTTAATTUUSS
     The iidd utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Show information for the user ‘bob’ as a password file entry:

           $ id -P bob
           bob:*:0:0::0:0:Robert:/bob:/usr/local/bin/bash

     Same output as groups(1) for the root user:

           $ id -Gn root
           wheel operator

     Show human readable information about ‘alice’:

           $ id -p alice
           uid     alice
           groups  alice webcamd vboxusers

     Assuming the user ‘bob’ executed “ssuu --ll” to simulate a root login,
     compare the result of the following commands:

           # id -un
           root
           # who am i
           bob          pts/5        Dec  4 19:51

SSEEEE AALLSSOO
     groups(1), who(1)

SSTTAANNDDAARRDDSS
     The iidd function is expected to conform to IEEE Std 1003.2 (“POSIX.2”).

HHIISSTTOORRYY
     The historic groups(1) command is equivalent to “iidd --GGnn [_u_s_e_r]”.

     The historic whoami(1) command is equivalent to “iidd --uunn”.

     The iidd command appeared in 4.4BSD.

macOS 14.6                       March 5, 2011                      macOS 14.6
"
groups,"GROUPS(1)                   General Commands Manual                  GROUPS(1)

NNAAMMEE
     ggrroouuppss – show group memberships

SSYYNNOOPPSSIISS
     ggrroouuppss [_u_s_e_r]

DDEESSCCRRIIPPTTIIOONN
     The ggrroouuppss utility has been obsoleted by the id(1) utility, and is
     equivalent to “iidd --GGnn [_u_s_e_r]”.  The command “iidd --pp” is suggested for
     normal interactive use.

     The ggrroouuppss utility displays the groups to which you (or the optionally
     specified _u_s_e_r) belong.

EEXXIITT SSTTAATTUUSS
     The ggrroouuppss utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Show groups the root user belongs to:

           $ groups root
           wheel operator

SSEEEE AALLSSOO
     id(1)

macOS 14.6                       June 6, 1993                       macOS 14.6
"
newgrp,"NEWGRP(1)                   General Commands Manual                  NEWGRP(1)

NNAAMMEE
     nneewwggrrpp – change to a new group

SSYYNNOOPPSSIISS
     nneewwggrrpp [--ll] [_g_r_o_u_p]

DDEESSCCRRIIPPTTIIOONN
     The nneewwggrrpp utility creates a new shell execution environment with
     modified real and effective group IDs.

     The options are as follows:

     --ll      Simulate a full login.  The environment and umask are set to what
             would be expected if the user actually logged in again.

     If the _g_r_o_u_p operand is present, a new shell is started with the
     specified effective and real group IDs.  The user will be prompted for a
     password if they are not a member of the specified group.

     Otherwise, the real, effective and supplementary group IDs are restored
     to those from the current user's password database entry.

EEXXIITT SSTTAATTUUSS
     The nneewwggrrpp utility attempts to start the shell regardless of whether
     group IDs were successfully changed.

     If an error occurs and the shell cannot be started, nneewwggrrpp exits >0.
     Otherwise, the exit status of nneewwggrrpp is the exit status of the shell.

SSEEEE AALLSSOO
     csh(1), groups(1), login(1), sh(1), su(1), umask(1), group(5), passwd(5),
     environ(7)

SSTTAANNDDAARRDDSS
     The nneewwggrrpp utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).

HHIISSTTOORRYY
     A nneewwggrrpp utility appeared in Version 6 AT&T UNIX.

BBUUGGSS
     Group passwords are inherently insecure as there is no way to stop users
     obtaining the password hash from the group database.  Their use is
     discouraged.  Instead, users should simply be added to the necessary
     groups.

macOS 14.6                     February 8, 2013                     macOS 14.6
"
sudoedit,No manual entry for sudoedit
visudo,"VISUDO(8)                   System Manager's Manual                  VISUDO(8)

NNAAMMEE
       vviissuuddoo - edit the sudoers file

SSYYNNOOPPSSIISS
       vviissuuddoo [--cchhIIOOPPqqssVV] [[--ff] _s_u_d_o_e_r_s]

DDEESSCCRRIIPPTTIIOONN
       vviissuuddoo edits the _s_u_d_o_e_r_s file in a safe fashion, analogous to vipw(8).
       vviissuuddoo locks the _s_u_d_o_e_r_s file against multiple simultaneous edits,
       performs basic validity checks, and checks for syntax errors before
       installing the edited file.  If the _s_u_d_o_e_r_s file is currently being
       edited you will receive a message to try again later.

       vviissuuddoo parses the _s_u_d_o_e_r_s file after editing and will not save the
       changes if there is a syntax error.  Upon finding an error, vviissuuddoo will
       print a message stating the line number(s) where the error occurred and
       the user will receive the “What now?” prompt.  At this point the user
       may enter ‘e’ to re-edit the _s_u_d_o_e_r_s file, ‘x’ to exit without saving
       the changes, or ‘Q’ to quit and save changes.  The ‘Q’ option should be
       used with extreme caution because if vviissuuddoo believes there to be a
       syntax error, so will ssuuddoo.  If ‘e’ is typed to edit the _s_u_d_o_e_r_s file
       after a syntax error has been detected, the cursor will be placed on
       the line where the error occurred (if the editor supports this
       feature).

       There are two _s_u_d_o_e_r_s settings that determine which editor vviissuuddoo will
       run.

       editor      A colon (‘:’) separated list of editors allowed to be used
                   with vviissuuddoo.  vviissuuddoo will choose the editor that matches
                   the user's SUDO_EDITOR, VISUAL, or EDITOR environment
                   variable if possible, or the first editor in the list that
                   exists and is executable.  ssuuddoo does not preserve the
                   SUDO_EDITOR, VISUAL, or EDITOR environment variables unless
                   they are present in the _e_n_v___k_e_e_p list or the _e_n_v___r_e_s_e_t
                   option is disabled in the _s_u_d_o_e_r_s file.  The default editor
                   path is _/_u_s_r_/_b_i_n_/_v_i which can be set at compile time via
                   the --with-editor configure option.

       env_editor  If set, vviissuuddoo will use the value of the SUDO_EDITOR,
                   VISUAL, or EDITOR environment variables before falling back
                   on the default editor list.  vviissuuddoo is typically run as
                   root so this option may allow a user with vviissuuddoo privileges
                   to run arbitrary commands as root without logging.  An
                   alternative is to place a colon-separated list of “safe”
                   editors in the _e_d_i_t_o_r variable.  vviissuuddoo will then only use
                   SUDO_EDITOR, VISUAL, or EDITOR if they match a value
                   specified in _e_d_i_t_o_r.  If the _e_n_v___r_e_s_e_t flag is enabled, the
                   SUDO_EDITOR, VISUAL, and/or EDITOR environment variables
                   must be present in the _e_n_v___k_e_e_p list for the _e_n_v___e_d_i_t_o_r
                   flag to function when vviissuuddoo is invoked via ssuuddoo.  The
                   default value is _o_n, which can be set at compile time via
                   the --with-env-editor configure option.

       The options are as follows:

       --cc, ----cchheecckk
               Enable _c_h_e_c_k_-_o_n_l_y mode.  The existing _s_u_d_o_e_r_s file (and any
               other files it includes) will be checked for syntax errors.  If
               the path to the _s_u_d_o_e_r_s file was not specified, vviissuuddoo will
               also check the file ownership and permissions (see the --OO and
               --PP options).  A message will be printed to the standard output
               describing the status of _s_u_d_o_e_r_s unless the --qq option was
               specified.  If the check completes successfully, vviissuuddoo will
               exit with a value of 0.  If an error is encountered, vviissuuddoo
               will exit with a value of 1.

       --ff _s_u_d_o_e_r_s, ----ffiillee=_s_u_d_o_e_r_s
               Specify an alternate _s_u_d_o_e_r_s file location, see below.  As of
               version 1.8.27, the _s_u_d_o_e_r_s path can be specified without using
               the --ff option.

       --hh, ----hheellpp
               Display a short help message to the standard output and exit.

       --II, ----nnoo--iinncclluuddeess
               Disable the editing of include files unless there is a pre-
               existing syntax error.  By default, vviissuuddoo will edit the main
               _s_u_d_o_e_r_s file and any files included via _@_i_n_c_l_u_d_e or _#_i_n_c_l_u_d_e
               directives.  Files included via _@_i_n_c_l_u_d_e_d_i_r or _#_i_n_c_l_u_d_e_d_i_r are
               never edited unless they contain a syntax error.

       --OO, ----oowwnneerr
               Enforce the default ownership (user and group) of the _s_u_d_o_e_r_s
               file.  In edit mode, the owner of the edited file will be set
               to the default.  In check mode (--cc), an error will be reported
               if the owner is incorrect.  This option is enabled by default
               if the _s_u_d_o_e_r_s file was not specified.

       --PP, ----ppeerrmmss
               Enforce the default permissions (mode) of the _s_u_d_o_e_r_s file.  In
               edit mode, the permissions of the edited file will be set to
               the default.  In check mode (--cc), an error will be reported if
               the file permissions are incorrect.  This option is enabled by
               default if the _s_u_d_o_e_r_s file was not specified.

       --qq, ----qquuiieett
               Enable _q_u_i_e_t mode.  In this mode details about syntax errors
               are not printed.  This option is only useful when combined with
               the --cc option.

       --ss, ----ssttrriicctt
               Enable _s_t_r_i_c_t checking of the _s_u_d_o_e_r_s file.  If an alias is
               referenced but not actually defined or if there is a cycle in
               an alias, vviissuuddoo will consider this a syntax error.  It is not
               possible to differentiate between an alias and a host name or
               user name that consists solely of uppercase letters, digits,
               and the underscore (‘_’) character.

       --VV, ----vveerrssiioonn
               Print the vviissuuddoo and _s_u_d_o_e_r_s grammar versions and exit.

       A _s_u_d_o_e_r_s file may be specified instead of the default,
       _/_p_r_i_v_a_t_e_/_e_t_c_/_s_u_d_o_e_r_s.  The temporary file used is the specified _s_u_d_o_e_r_s
       file with “.tmp” appended to it.  In _c_h_e_c_k_-_o_n_l_y mode only, ‘-’ may be
       used to indicate that _s_u_d_o_e_r_s will be read from the standard input.
       Because the policy is evaluated in its entirety, it is not sufficient
       to check an individual _s_u_d_o_e_r_s include file for syntax errors.

   DDeebbuuggggiinngg aanndd ssuuddooeerrss pplluuggiinn aarrgguummeennttss
       vviissuuddoo versions 1.8.4 and higher support a flexible debugging framework
       that is configured via _D_e_b_u_g lines in the sudo.conf(5) file.

       Starting with ssuuddoo 1.8.12, vviissuuddoo will also parse the arguments to the
       _s_u_d_o_e_r_s plugin to override the default _s_u_d_o_e_r_s path name, user-ID,
       group-ID, and file mode.  These arguments, if present, should be listed
       after the path to the plugin (i.e., after _s_u_d_o_e_r_s_._s_o).  Multiple
       arguments may be specified, separated by white space.  For example:

           Plugin sudoers_policy sudoers.so sudoers_mode=0400

       The following arguments are supported:

       sudoers_file=pathname
             The _s_u_d_o_e_r_s___f_i_l_e argument can be used to override the default
             path to the _s_u_d_o_e_r_s file.

       sudoers_uid=user-ID
             The _s_u_d_o_e_r_s___u_i_d argument can be used to override the default
             owner of the sudoers file.  It should be specified as a numeric
             user-ID.

       sudoers_gid=group-ID
             The _s_u_d_o_e_r_s___g_i_d argument can be used to override the default
             group of the sudoers file.  It must be specified as a numeric
             group-ID (not a group name).

       sudoers_mode=mode
             The _s_u_d_o_e_r_s___m_o_d_e argument can be used to override the default
             file mode for the sudoers file.  It should be specified as an
             octal value.

       For more information on configuring sudo.conf(5), refer to its manual.

EENNVVIIRROONNMMEENNTT
       The following environment variables may be consulted depending on the
       value of the _e_d_i_t_o_r and _e_n_v___e_d_i_t_o_r _s_u_d_o_e_r_s settings:

       SUDO_EDITOR      Invoked by vviissuuddoo as the editor to use

       VISUAL           Used by vviissuuddoo if SUDO_EDITOR is not set

       EDITOR           Used by vviissuuddoo if neither SUDO_EDITOR nor VISUAL is
                        set

FFIILLEESS
       _/_p_r_i_v_a_t_e_/_e_t_c_/_s_u_d_o_._c_o_n_f    Sudo front-end configuration

       _/_p_r_i_v_a_t_e_/_e_t_c_/_s_u_d_o_e_r_s      List of who can run what

       _/_p_r_i_v_a_t_e_/_e_t_c_/_s_u_d_o_e_r_s_._t_m_p  Default temporary file used by visudo

DDIIAAGGNNOOSSTTIICCSS
       In addition to reporting _s_u_d_o_e_r_s syntax errors, vviissuuddoo may produce the
       following messages:

       sudoers file busy, try again later.
             Someone else is currently editing the _s_u_d_o_e_r_s file.

       /private/etc/sudoers: Permission denied
             You didn't run vviissuuddoo as root.

       you do not exist in the passwd database
             Your user-ID does not appear in the system passwd database.

       Warning: {User,Runas,Host,Cmnd}_Alias referenced but not defined
             Either you are trying to use an undeclared
             {User,Runas,Host,Cmnd}_Alias or you have a user or host name
             listed that consists solely of uppercase letters, digits, and the
             underscore (‘_’) character.  In the latter case, you can ignore
             the warnings (ssuuddoo will not complain) .  The message is prefixed
             with the path name of the _s_u_d_o_e_r_s file and the line number where
             the undefined alias was used.  In --ss (strict) mode these are
             errors, not warnings.

       Warning: unused {User,Runas,Host,Cmnd}_Alias
             The specified {User,Runas,Host,Cmnd}_Alias was defined but never
             used.  The message is prefixed with the path name of the _s_u_d_o_e_r_s
             file and the line number where the unused alias was defined.  You
             may wish to comment out or remove the unused alias.

       Warning: cycle in {User,Runas,Host,Cmnd}_Alias
             The specified {User,Runas,Host,Cmnd}_Alias includes a reference
             to itself, either directly or through an alias it includes.  The
             message is prefixed with the path name of the _s_u_d_o_e_r_s file and
             the line number where the cycle was detected.  This is only a
             warning unless vviissuuddoo is run in --ss (strict) mode as ssuuddoo will
             ignore cycles when parsing the _s_u_d_o_e_r_s file.

       unknown defaults entry ""name""
             The _s_u_d_o_e_r_s file contains a _D_e_f_a_u_l_t_s setting not recognized by
             vviissuuddoo.

SSEEEE AALLSSOO
       vi(1), sudo.conf(5), sudoers(5), sudo(8), vipw(8)

AAUUTTHHOORRSS
       Many people have worked on ssuuddoo over the years; this version consists
       of code written primarily by:

             Todd C. Miller

       See the CONTRIBUTORS.md file in the ssuuddoo distribution
       (https://www.sudo.ws/about/contributors/) for an exhaustive list of
       people who have contributed to ssuuddoo.

CCAAVVEEAATTSS
       There is no easy way to prevent a user from gaining a root shell if the
       editor used by vviissuuddoo allows shell escapes.

BBUUGGSS
       If you believe you have found a bug in vviissuuddoo, you can submit a bug
       report at https://bugzilla.sudo.ws/

SSUUPPPPOORRTT
       Limited free support is available via the sudo-users mailing list, see
       https://www.sudo.ws/mailman/listinfo/sudo-users to subscribe or search
       the archives.

DDIISSCCLLAAIIMMEERR
       vviissuuddoo is provided “AS IS” and any express or implied warranties,
       including, but not limited to, the implied warranties of
       merchantability and fitness for a particular purpose are disclaimed.
       See the LICENSE.md file distributed with ssuuddoo or
       https://www.sudo.ws/about/license/ for complete details.

Sudo 1.9.13p2                  January 16, 2023                      VISUDO(8)
"
wall,"WALL(1)                     General Commands Manual                    WALL(1)

NNAAMMEE
     wwaallll – write a message to users

SSYYNNOOPPSSIISS
     wwaallll [--gg _g_r_o_u_p] [_f_i_l_e]

DDEESSCCRRIIPPTTIIOONN
     The wwaallll utility displays the contents of _f_i_l_e or, by default, its
     standard input, on the terminals of all currently logged in users.

     Only the super-user can write on the terminals of users who have chosen
     to deny messages or are using a program which automatically denies
     messages.

     --gg      Send messages to users in this group.  This option may be
             specified multiple times, and any user in any of the specified
             groups will receive the message.

SSEEEE AALLSSOO
     mesg(1), talk(1), write(1), shutdown(8)

HHIISSTTOORRYY
     A wwaallll command appeared in PWB UNIX.

BBUUGGSS
     The sender's LC_CTYPE setting is used to determine which characters are
     safe to write to a terminal, not the receiver's (which wwaallll has no way of
     knowing).

macOS 14.6                     February 24, 2012                    macOS 14.6
"
write,"WRITE(1)                    General Commands Manual                   WRITE(1)

NNAAMMEE
     wwrriittee – send a message to another user

SSYYNNOOPPSSIISS
     wwrriittee _u_s_e_r [_t_t_y]

DDEESSCCRRIIPPTTIIOONN
     The wwrriittee utility allows you to communicate with other users, by copying
     lines from your terminal to theirs.

     When you run the wwrriittee command, the user you are writing to gets a
     message of the form:

           Message from yourname@yourhost on yourtty at hh:mm ...

     Any further lines you enter will be copied to the specified user's
     terminal.  If the other user wants to reply, they must run wwrriittee as well.

     When you are done, type an end-of-file or interrupt character.  The other
     user will see the message ‘EOF’ indicating that the conversation is over.

     You can prevent people (other than the super-user) from writing to you
     with the mesg(1) command.

     If the user you want to write to is logged in on more than one terminal,
     you can specify which terminal to write to by specifying the terminal
     name as the second operand to the wwrriittee command.  Alternatively, you can
     let wwrriittee select one of the terminals - it will pick the one with the
     shortest idle time.  This is so that if the user is logged in at work and
     also dialed up from home, the message will go to the right place.

     The traditional protocol for writing to someone is that the string ‘-o’,
     either at the end of a line or on a line by itself, means that it is the
     other person's turn to talk.  The string ‘oo’ means that the person
     believes the conversation to be over.

SSEEEE AALLSSOO
     mesg(1), talk(1), wall(1), who(1)

HHIISSTTOORRYY
     A wwrriittee command appeared in Version 1 AT&T UNIX.

BBUUGGSS
     The sender's LC_CTYPE setting is used to determine which characters are
     safe to write to a terminal, not the receiver's (which wwrriittee has no way
     of knowing).

macOS 14.6                     February 13, 2012                    macOS 14.6
"
mail,"MAIL(1)                     General Commands Manual                    MAIL(1)

NNAAMMEE
     mmaaiill, mmaaiillxx – send and receive mail

SSYYNNOOPPSSIISS
     mmaaiill [--ddEEiiIInnvv] [--ss _s_u_b_j_e_c_t] [--cc _c_c_-_a_d_d_r] [--bb _b_c_c_-_a_d_d_r] [--FF] _t_o_-_a_d_d_r _._._.
     mmaaiill [--ddEEHHiiIInnNNvv] [--FF] --ff [_n_a_m_e]
     mmaaiill [--ddEEHHiiIInnNNvv] [--FF] [--uu _u_s_e_r]
     mmaaiill [--dd] --ee [--ff _n_a_m_e]
     mmaaiill [--HH]

IINNTTRROODDUUCCTTIIOONN
     The mmaaiill utility is an intelligent mail processing system, which has a
     command syntax reminiscent of ed(1) with lines replaced by messages.

     The following options are available:

     --vv      Verbose mode.  The details of delivery are displayed on the
             user's terminal.

     --dd      Debugging mode.  See the _d_e_b_u_g mail option for details.

     --ee      Test for the presence of mail in the (by default, system)
             mailbox.  An exit status of 0 is returned if it has mail;
             otherwise, an exit status of 1 is returned.

     --HH      Write a header summary only, then exit.

     --EE      Do not send messages with an empty body.  This is useful for
             piping errors from cron(8) scripts.

     --ii      Ignore tty interrupt signals.  This is particularly useful when
             using mmaaiill on noisy phone lines.

     --II      Force mmaaiill to run in interactive mode even when input is not a
             terminal.  In particular, the ‘~’ special character when sending
             mail is only active in interactive mode.

     --nn      Inhibit reading the system-wide _m_a_i_l_._r_c files upon startup.

     --NN      Inhibit the initial display of message headers when reading mail
             or editing a mail folder.

     --ss _s_u_b_j_e_c_t
             Specify _s_u_b_j_e_c_t on command line.  (Only the first argument after
             the --ss flag is used as a subject; be careful to quote subjects
             containing spaces.)

     --cc _c_c_-_a_d_d_r
             Send carbon copies to _c_c_-_a_d_d_r list of users.  The _c_c_-_a_d_d_r
             argument should be a comma-separated list of names.

     --bb _b_c_c_-_a_d_d_r
             Send blind carbon copies to _b_c_c_-_a_d_d_r list of users.  The _b_c_c_-_a_d_d_r
             argument should be a comma-separated list of names.

     --ff      Use an alternate mailbox.  Defaults to the user's _m_b_o_x if no _f_i_l_e
             is specified.  When quit, mmaaiill writes undeleted messages back to
             this file.

     --FF      Record the message in a file named after the first recipient.
             The name is the login-name portion of the address found first on
             the “To:” line in the mail header.  Overrides the _r_e_c_o_r_d
             variable, if set.

     --uu _u_s_e_r
             Is equivalent to:

                   mail -f /var/mail/user

   SSttaarrttuupp AAccttiioonnss
     At startup time mmaaiill will execute commands in the system command files
     _/_u_s_r_/_s_h_a_r_e_/_m_i_s_c_/_m_a_i_l_._r_c, _/_u_s_r_/_l_o_c_a_l_/_e_t_c_/_m_a_i_l_._r_c and _/_e_t_c_/_m_a_i_l_._r_c in
     order, unless explicitly told not to by the use of the --nn option.  Next,
     the commands in the user's personal command file _~_/_._m_a_i_l_r_c are executed.
     The mmaaiill utility then examines its command line options to determine
     whether a new message is to be sent, or whether an existing mailbox is to
     be read.

   SSeennddiinngg MMaaiill
     To send a message to one or more people, mmaaiill can be invoked with
     arguments which are the names of people to whom the mail will be sent.
     You are then expected to type in your message, followed by a ⟨control-D⟩
     at the beginning of a line.  The section below _R_e_p_l_y_i_n_g _T_o _o_r _O_r_i_g_i_n_a_t_i_n_g
     _M_a_i_l, describes some features of mmaaiill available to help you compose your
     letter.

   RReeaaddiinngg MMaaiill
     In normal usage mmaaiill is given no arguments and checks your mail out of
     the post office, then prints out a one line header of each message found.
     The current message is initially the first message (numbered 1) and can
     be printed using the pprriinntt command (which can be abbreviated pp).  You can
     move among the messages much as you move between lines in ed(1), with the
     commands ++ and -- moving backwards and forwards, and simple numbers.

   DDiissppoossiinngg ooff MMaaiill
     After examining a message you can ddeelleettee (dd) the message or rreeppllyy (rr) to
     it.  Deletion causes the mmaaiill program to forget about the message.  This
     is not irreversible; the message can be uunnddeelleetteedd (uu) by giving its
     number, or the mmaaiill session can be aborted by giving the eexxiitt (xx)
     command.  Deleted messages will, however, usually disappear never to be
     seen again.

   SSppeecciiffyyiinngg MMeessssaaggeess
     Commands such as pprriinntt and ddeelleettee can be given a list of message numbers
     as arguments to apply to a number of messages at once.  Thus “delete 1 2”
     deletes messages 1 and 2, while “delete 1-5” deletes messages 1 through
     5.  The special name ‘*’ addresses all messages, and ‘$’ addresses the
     last message; thus the command ttoopp which prints the first few lines of a
     message could be used in “top *” to print the first few lines of all
     messages.

   RReeppllyyiinngg TToo oorr OOrriiggiinnaattiinngg MMaaiill
     You can use the rreeppllyy command to set up a response to a message, sending
     it back to the person who it was from.  Text you then type in, up to an
     end-of-file, defines the contents of the message.  While you are
     composing a message, mmaaiill treats lines beginning with the character ‘~’
     specially.  For instance, typing ~~mm (alone on a line) will place a copy
     of the current message into the response right shifting it by a tabstop
     (see _i_n_d_e_n_t_p_r_e_f_i_x variable, below).  Other escapes will set up subject
     fields, add and delete recipients to the message and allow you to escape
     to an editor to revise the message or to a shell to run some commands.
     (These options are given in the summary below.)

   EEnnddiinngg aa MMaaiill PPrroocceessssiinngg SSeessssiioonn
     You can end a mmaaiill session with the qquuiitt (qq) command.  Messages which
     have been examined go to your _m_b_o_x file unless they have been deleted in
     which case they are discarded.  Unexamined messages go back to the post
     office.  (See the --ff option above).

   PPeerrssoonnaall aanndd SSyysstteemm WWiiddee DDiissttrriibbuuttiioonn LLiissttss
     It is also possible to create a personal distribution lists so that, for
     instance, you can send mail to “cohorts” and have it go to a group of
     people.  Such lists can be defined by placing a line like

           alias cohorts bill ozalp jkf mark kridle@ucbcory

     in the file _._m_a_i_l_r_c in your home directory.  The current list of such
     aliases can be displayed with the aalliiaass command in mmaaiill.  System wide
     distribution lists can be created by editing _/_e_t_c_/_m_a_i_l_/_a_l_i_a_s_e_s, see
     aliases(5) and sendmail(8); these are kept in a different syntax.  In
     mail you send, personal aliases will be expanded in mail sent to others
     so that they will be able to rreeppllyy to the recipients.  System wide
     aliases are not expanded when the mail is sent, but any reply returned to
     the machine will have the system wide alias expanded as all mail goes
     through sendmail(8).

   RReecciippiieenntt aaddddrreessss ssppeecciiffiiccaattiioonnss
     Recipient addresses (any of the “To”, “Cc” or “Bcc” header fields) are
     subject to expansion when the eexxppaannddaaddddrr option is set.

     An address may be expanded as follows:

     ••       An address that starts with a pipe (‘|’) character is treated as
             a command to run.  The command immediately following the ‘|’ is
             executed with the message as its standard input.

     ••       An address that starts with a ‘+’ character is treated as a
             folder.

     ••       An address that contains a ‘/’ character but no ‘!’, ‘%’, or ‘@’
             characters is also treated as a folder.

     ••       If none of the above apply, the recipient is treated as a local
             or network mail address.

     If the eexxppaannddaaddddrr option is not set (the default), no expansion is
     performed and the recipient is treated as a local or network mail
     address.

   NNeettwwoorrkk MMaaiill ((AARRPPAA,, UUUUCCPP,, BBeerrkknneett))
     The mmaaiill utility has a number of options which can be set in the _._m_a_i_l_r_c
     file to alter its behavior; thus “set askcc” enables the _a_s_k_c_c feature.
     (These options are summarized below.)

SSUUMMMMAARRYY
     (Adapted from the _M_a_i_l _R_e_f_e_r_e_n_c_e _M_a_n_u_a_l_._)

     Each command is typed on a line by itself, and may take arguments
     following the command word.  The command need not be typed in its
     entirety — the first command which matches the typed prefix is used.  For
     commands which take message lists as arguments, if no message list is
     given, then the next message forward which satisfies the command's
     requirements is used.  If there are no messages forward of the current
     message, the search proceeds backwards, and if there are no good messages
     at all, mmaaiill types “No applicable messages” and aborts the command.

     --       Print out the preceding message.  If given a numeric argument _n,
             goes to the _n'th previous message and prints it.

     ##       ignore the remainder of the line as a comment.

     ??       Prints a brief summary of commands.

     !!       Executes the shell (see sh(1) and csh(1)) command which follows.

     PPrriinntt   (PP) Like pprriinntt but also prints out ignored header fields.  See
             also pprriinntt, iiggnnoorree and rreettaaiinn.

     RReeppllyy   (RR) Reply to originator.  Does not reply to other recipients of
             the original message.

     TTyyppee    (TT) Identical to the PPrriinntt command.

     aalliiaass   (aa) With no arguments, prints out all currently-defined aliases.
             With one argument, prints out that alias.  With more than one
             argument, creates a new alias or changes an old one.

     aalltteerrnnaatteess
             (aalltt) The aalltteerrnnaatteess command is useful if you have accounts on
             several machines.  It can be used to inform mmaaiill that the listed
             addresses are really you.  When you rreeppllyy to messages, mmaaiill will
             not send a copy of the message to any of the addresses listed on
             the aalltteerrnnaatteess list.  If the aalltteerrnnaatteess command is given with no
             argument, the current set of alternative names is displayed.

     cchhddiirr   (cc) Changes the user's working directory to that specified, if
             given.  If no directory is given, then changes to the user's
             login directory.

     ccooppyy    (ccoo) The ccooppyy command does the same thing that ssaavvee does, except
             that it does not mark the messages it is used on for deletion
             when you qquuiitt.

     ddeelleettee  (dd) Takes a list of messages as argument and marks them all as
             deleted.  Deleted messages will not be saved in _m_b_o_x, nor will
             they be available for most other commands.

     ddpp      (also ddtt) Deletes the current message and prints the next
             message.  If there is no next message, mmaaiill says “at EOF”.

     eeddiitt    (ee) Takes a list of messages and points the text editor at each
             one in turn.  On return from the editor, the message is read back
             in.

     eexxiitt    (eexx or xx) Effects an immediate return to the shell without
             modifying the user's system mailbox, his _m_b_o_x file, or his edit
             file in --ff.

     ffiillee    (ffii) The same as ffoollddeerr.

     ffoollddeerrss
             List the names of the folders in your folder directory.

     ffoollddeerr  (ffoo) The ffoollddeerr command switches to a new mail file or folder.
             With no arguments, it tells you which file you are currently
             reading.  If you give it an argument, it will write out changes
             (such as deletions) you have made in the current file and read in
             the new file.  Some special conventions are recognized for the
             name.  ‘#’ means the previous file, ‘%’ means your system
             mailbox, “%_u_s_e_r” means user's system mailbox, ‘&’ means your _m_b_o_x
             file, and “+_f_o_l_d_e_r” means a file in your folder directory.

     ffrroomm    (ff) Takes a list of messages and prints their message headers.

     hheeaaddeerrss
             (hh) Lists the current range of headers, which is an 18-message
             group.  If a ‘+’ argument is given, then the next 18-message
             group is printed, and if a ‘-’ argument is given, the previous
             18-message group is printed.

     hheellpp    A synonym for ??.

     hhoolldd    (hhoo, also pprreesseerrvvee) Takes a message list and marks each message
             therein to be saved in the user's system mailbox instead of in
             _m_b_o_x.  Does not override the ddeelleettee command.

     iiggnnoorree  Add the list of header fields named to the _i_g_n_o_r_e_d _l_i_s_t.  Header
             fields in the ignore list are not printed on your terminal when
             you print a message.  This command is very handy for suppression
             of certain machine-generated header fields.  The TTyyppee and PPrriinntt
             commands can be used to print a message in its entirety,
             including ignored fields.  If iiggnnoorree is executed with no
             arguments, it lists the current set of ignored fields.

     iinncc     Incorporate any new messages that have arrived while mail is
             being read.  The new messages are added to the end of the message
             list, and the current message is reset to be the first new mail
             message.  This does not renumber the existing message list, nor
             does it cause any changes made so far to be saved.

     mmaaiill    (mm) Takes as argument login names and distribution group names
             and sends mail to those people.

     mmbbooxx    Indicate that a list of messages be sent to _m_b_o_x in your home
             directory when you quit.  This is the default action for messages
             if you do _n_o_t have the hhoolldd option set.

     mmoorree    (mmoo) Takes a list of messages and invokes the pager on that list.

     nneexxtt    (nn, like ++ or CR) Goes to the next message in sequence and types
             it.  With an argument list, types the next matching message.

     pprreesseerrvvee
             (pprree) A synonym for hhoolldd.

     pprriinntt   (pp) Takes a message list and types out each message on the user's
             terminal.

     qquuiitt    (qq) Terminates the session, saving all undeleted, unsaved
             messages in the user's _m_b_o_x file in his login directory,
             preserving all messages marked with hhoolldd or pprreesseerrvvee or never
             referenced in his system mailbox, and removing all other messages
             from his system mailbox.  If new mail has arrived during the
             session, the message “You have new mail” is given.  If given
             while editing a mailbox file with the --ff flag, then the edit file
             is rewritten.  A return to the shell is effected, unless the
             rewrite of edit file fails, in which case the user can escape
             with the eexxiitt command.

     rreeppllyy   (rr) Takes a message list and sends mail to the sender and all
             recipients of the specified message.  The default message must
             not be deleted.

     rreessppoonndd
             A synonym for rreeppllyy.

     rreettaaiinn  Add the list of header fields named to the _r_e_t_a_i_n_e_d _l_i_s_t.  Only
             the header fields in the retained list are shown on your terminal
             when you print a message.  All other header fields are
             suppressed.  The ttyyppee and pprriinntt commands can be used to print a
             message in its entirety.  If rreettaaiinn is executed with no
             arguments, it lists the current set of retained fields.

     ssaavvee    (ss) Takes a message list and a filename and appends each message
             in turn to the end of the file.  The filename in quotes, followed
             by the line count and character count is echoed on the user's
             terminal.

     sseett     (ssee) With no arguments, prints all variable values.  Otherwise,
             sets option.  Arguments are of the form _o_p_t_i_o_n=_v_a_l_u_e (no space
             before or after ‘=’) or _o_p_t_i_o_n.  Quotation marks may be placed
             around any part of the assignment statement to quote blanks or
             tabs, i.e. “set indentprefix=""->""”

     ssaavveeiiggnnoorree
             SSaavveeiiggnnoorree is to ssaavvee what iiggnnoorree is to pprriinntt and ttyyppee.  Header
             fields thus marked are filtered out when saving a message by ssaavvee
             or when automatically saving to _m_b_o_x.

     ssaavveerreettaaiinn
             SSaavveerreettaaiinn is to ssaavvee what rreettaaiinn is to pprriinntt and ttyyppee.  Header
             fields thus marked are the only ones saved with a message when
             saving by ssaavvee or when automatically saving to _m_b_o_x.  SSaavveerreettaaiinn
             overrides ssaavveeiiggnnoorree.

     sshheellll   (sshh) Invokes an interactive version of the shell.

     ssiizzee    Takes a message list and prints out the size in characters of
             each message.

     ssoouurrccee  The ssoouurrccee command reads commands from a file.

     ttoopp     Takes a message list and prints the top few lines of each.  The
             number of lines printed is controlled by the variable _t_o_p_l_i_n_e_s
             and defaults to 5.

     ttyyppee    (tt) A synonym for pprriinntt.

     uunnaalliiaass
             Takes a list of names defined by aalliiaass commands and discards the
             remembered groups of users.  The group names no longer have any
             significance.

     uunnddeelleettee
             (uu) Takes a message list and marks each message as _n_o_t being
             deleted.

     uunnrreeaadd  (UU) Takes a message list and marks each message as _n_o_t having
             been read.

     uunnsseett   Takes a list of option names and discards their remembered
             values; the inverse of sseett.

     vviissuuaall  (vv) Takes a message list and invokes the display editor on each
             message.

     wwrriittee   (ww) Similar to ssaavvee, except that _o_n_l_y the message body (_w_i_t_h_o_u_t
             the header) is saved.  Extremely useful for such tasks as sending
             and receiving source program text over the message system.

     xxiitt     (xx) A synonym for eexxiitt.

     zz       The mmaaiill utility presents message headers in windowfuls as
             described under the hheeaaddeerrss command.  You can move mmaaiill's
             attention forward to the next window with the zz command.  Also,
             you can move to the previous window by using zz--.

   TTiillddee//EEssccaappeess
     Here is a summary of the tilde escapes, which are used when composing
     messages to perform special functions.  Tilde escapes are only recognized
     at the beginning of lines.  The name “tilde escape” is somewhat of a
     misnomer since the actual escape character can be set by the option
     _e_s_c_a_p_e.

     ~~aa      Inserts the autograph string from the sign= option into the
             message.

     ~~AA      Inserts the autograph string from the Sign= option into the
             message.

     ~~bb _n_a_m_e _._._.
             Add the given names to the list of carbon copy recipients but do
             not make the names visible in the Cc: line (“blind” carbon copy).

     ~~cc _n_a_m_e _._._.
             Add the given names to the list of carbon copy recipients.

     ~~dd      Read the file _d_e_a_d_._l_e_t_t_e_r from your home directory into the
             message.

     ~~ee      Invoke the text editor on the message collected so far.  After
             the editing session is finished, you may continue appending text
             to the message.

     ~~ff _m_e_s_s_a_g_e_s
             Read the named messages into the message being sent.  If no
             messages are specified, read in the current message.  Message
             headers currently being ignored (by the iiggnnoorree or rreettaaiinn command)
             are not included.

     ~~FF _m_e_s_s_a_g_e_s
             Identical to ~~ff, except all message headers are included.

     ~~hh      Edit the message header fields by typing each one in turn and
             allowing the user to append text to the end or modify the field
             by using the current terminal erase and kill characters.

     ~~ii _s_t_r_i_n_g
             Inserts the value of the named option into the text of the
             message.

     ~~mm _m_e_s_s_a_g_e_s
             Read the named messages into the message being sent, indented by
             a tab or by the value of _i_n_d_e_n_t_p_r_e_f_i_x.  If no messages are
             specified, read the current message.  Message headers currently
             being ignored (by the iiggnnoorree or rreettaaiinn command) are not included.

     ~~MM _m_e_s_s_a_g_e_s
             Identical to ~~mm, except all message headers are included.

     ~~pp      Print out the message collected so far, prefaced by the message
             header fields.

     ~~qq      Abort the message being sent, copying the message to _d_e_a_d_._l_e_t_t_e_r
             in your home directory if _s_a_v_e is set.

     ~~rr _f_i_l_e_n_a_m_e, ~~rr !_c_o_m_m_a_n_d

     ~~<< _f_i_l_e_n_a_m_e, ~~<< !_c_o_m_m_a_n_d
             Read the named file into the message.  If the argument begins
             with a ‘!’, the rest of the string is taken as an arbitrary
             system command and is executed, with the standard output inserted
             into the message.

     ~~RR _s_t_r_i_n_g
             Use _s_t_r_i_n_g as the Reply-To field.

     ~~ss _s_t_r_i_n_g
             Cause the named string to become the current subject field.

     ~~tt _n_a_m_e _._._.
             Add the given names to the direct recipient list.

     ~~vv      Invoke an alternative editor (defined by the VISUAL environment
             variable) on the message collected so far.  Usually, the
             alternative editor will be a screen editor.  After you quit the
             editor, you may resume appending text to the end of your message.

     ~~ww _f_i_l_e_n_a_m_e
             Write the message onto the named file.

     ~~xx      Exits as with ~~qq, except the message is not saved in _d_e_a_d_._l_e_t_t_e_r.

     ~~!! _c_o_m_m_a_n_d
             Execute the indicated shell command, then return to the message.

     ~~|| _c_o_m_m_a_n_d, ~~^^ _c_o_m_m_a_n_d
             Pipe the message through the command as a filter.  If the command
             gives no output or terminates abnormally, retain the original
             text of the message.  The command fmt(1) is often used as _c_o_m_m_a_n_d
             to rejustify the message.

     ~~:: _m_a_i_l_-_c_o_m_m_a_n_d, ~~__ _m_a_i_l_-_c_o_m_m_a_n_d
             Execute the given mmaaiill command.  Not all commands, however, are
             allowed.

     ~~..      Simulate end-of-file on input.

     ~~??      Print a summary of the available command escapes.

     ~~~~ _s_t_r_i_n_g
             Insert the string of text in the message prefaced by a single
             ‘~’.  If you have changed the escape character, then you should
             double that character in order to send it.

   MMaaiill OOppttiioonnss
     Options can be set with the sseett command and can be disabled with the
     uunnsseett or sseett nnoo_n_a_m_e commands.  Options may be either binary, in which
     case it is only significant to see whether they are set or not; or
     string, in which case the actual value is of interest.  If an option is
     not set, mmaaiill will look for an environment variable of the same name.
     The available options include the following:

     _a_p_p_e_n_d  Causes messages saved in _m_b_o_x to be appended to the end rather
             than prepended.  This should always be set (preferably in one of
             the system-wide _m_a_i_l_._r_c files).  Default is _n_o_a_p_p_e_n_d.

     _a_s_k, _a_s_k_s_u_b
             Causes mmaaiill to prompt you for the subject of each message you
             send.  If you respond with simply a newline, no subject field
             will be sent.  Default is _a_s_k_s_u_b.

     _a_s_k_b_c_c  Causes you to be prompted for additional blind carbon copy
             recipients at the end of each message.  Responding with a newline
             indicates your satisfaction with the current list.  Default is
             _n_o_a_s_k_b_c_c.

     _a_s_k_c_c   Causes you to be prompted for additional carbon copy recipients
             at the end of each message.  Responding with a newline indicates
             your satisfaction with the current list.  Default is _n_o_a_s_k_c_c.

     _a_u_t_o_i_n_c
             Causes new mail to be automatically incorporated when it arrives.
             Setting this is similar to issuing the iinncc command at each
             prompt, except that the current message is not reset when new
             mail arrives.  Default is _n_o_a_u_t_o_i_n_c.

     _a_u_t_o_p_r_i_n_t
             Causes the ddeelleettee command to behave like ddpp; thus, after deleting
             a message, the next one will be typed automatically.  Default is
             _n_o_a_u_t_o_p_r_i_n_t.

     _c_r_t     The valued option _c_r_t is used as a threshold to determine how
             long a message must be before PAGER is used to read it.  If _c_r_t
             is set without a value, then the height of the terminal screen
             stored in the system is used to compute the threshold (see
             stty(1)).  Default is _n_o_c_r_t.

     _d_e_b_u_g   Setting the binary option _d_e_b_u_g is the same as specifying --dd on
             the command line and causes mmaaiill to output all sorts of
             information useful for debugging mmaaiill.  In case mmaaiill is invoked
             in this mode to send mail, all preparations will be performed and
             reported about, but the mail will not be actually sent.  Default
             is _n_o_d_e_b_u_g.

     _d_o_t     The binary option _d_o_t causes mmaaiill to interpret a period alone on
             a line as the terminator of a message you are sending.  Default
             is _n_o_d_o_t.

     _e_s_c_a_p_e  If defined, the first character of this option gives the
             character to use in place of ‘~’ to denote escapes.

     _e_x_p_a_n_d_a_d_d_r
             Causes mmaaiill to expand message recipient addresses, as explained
             in the section _R_e_c_i_p_i_e_n_t _a_d_d_r_e_s_s _s_p_e_c_i_f_i_c_a_t_i_o_n_s.

     _f_l_i_p_r   Reverses the sense of rreeppllyy and RReeppllyy commands.  Default is
             _n_o_f_l_i_p_r.

     _f_o_l_d_e_r  The name of the directory to use for storing folders of messages.
             If this name begins with a ‘/’, mmaaiill considers it to be an
             absolute pathname; otherwise, the folder directory is found
             relative to your home directory.

     _h_e_a_d_e_r  If defined, initially display message headers when reading mail
             or editing a mail folder.  Default is _h_e_a_d_e_r.  This option can be
             disabled by giving the --NN flag on the command line.

     _h_o_l_d    This option is used to hold messages in the system mailbox by
             default.  Default is _n_o_h_o_l_d.

     _i_g_n_o_r_e  Causes interrupt signals from your terminal to be ignored and
             echoed as @'s. Default is _n_o_i_g_n_o_r_e.

     _i_g_n_o_r_e_e_o_f
             An option related to _d_o_t is _i_g_n_o_r_e_e_o_f which makes mmaaiill refuse to
             accept a ⟨control-D⟩ as the end of a message.  _I_g_n_o_r_e_e_o_f also
             applies to mmaaiill command mode.  Default is _n_o_i_g_n_o_r_e_e_o_f.

     _i_n_d_e_n_t_p_r_e_f_i_x
             String used by the ~~mm tilde escape for indenting messages, in
             place of the normal tab character (^I).  Be sure to quote the
             value if it contains spaces or tabs.

     _m_e_t_o_o   Usually, when a group is expanded that contains the sender, the
             sender is removed from the expansion.  Setting this option causes
             the sender to be included in the group.  Default is _n_o_m_e_t_o_o.

     _q_u_i_e_t   Suppresses the printing of the version when first invoked.
             Default is _n_o_q_u_i_e_t.

     _r_e_c_o_r_d  If defined, gives the pathname of the file used to record all
             outgoing mail.  If not defined, outgoing mail is not saved.
             Default is _n_o_r_e_c_o_r_d.

     _R_e_p_l_y_a_l_l
             Reverses the sense of rreeppllyy and RReeppllyy commands.  Default is
             _n_o_R_e_p_l_y_a_l_l.

     _s_a_v_e    If this option is set, and you abort a message with two RUBOUT
             (erase or delete), mmaaiill will copy the partial letter to the file
             _d_e_a_d_._l_e_t_t_e_r in your home directory.  Default is _s_a_v_e.

     _s_e_a_r_c_h_h_e_a_d_e_r_s
             If this option is set, then a message-list specifier in the form
             “/_x:_y” will expand to all messages containing the substring _y in
             the header field _x.  The string search is case insensitive.  If _x
             is omitted, it will default to the “Subject” header field.  The
             form “/to:_y” is a special case, and will expand to all messages
             containing the substring _y in the “To”, “Cc” or “Bcc” header
             fields.  The check for ""to"" is case sensitive, so that “/To:_y”
             can be used to limit the search for _y to just the “To:” field.
             Default is _n_o_s_e_a_r_c_h_h_e_a_d_e_r_s.

     _t_o_p_l_i_n_e_s
             If defined, gives the number of lines of a message to be printed
             out with the ttoopp command; normally, the first five lines are
             printed.

     _v_e_r_b_o_s_e
             Setting the option _v_e_r_b_o_s_e is the same as using the --vv flag on
             the command line.  When mmaaiill runs in verbose mode, the actual
             delivery of messages is displayed on the user's terminal.
             Default is _n_o_v_e_r_b_o_s_e.

EENNVVIIRROONNMMEENNTT
     DEAD         Pathname of the file to save partial messages to in case of
                  interrupts or delivery errors.  Default is _~_/_d_e_a_d_._l_e_t_t_e_r.

     EDITOR       Pathname of the text editor to use in the eeddiitt command and
                  ~~ee escape.  If not defined, then a default editor is used.

     HOME         Pathname of the user's home directory.

     LISTER       Pathname of the directory lister to use in the ffoollddeerrss
                  command.  Default is _/_b_i_n_/_l_s.

     MAIL         Location of the user's mailbox.  Default is _/_v_a_r_/_m_a_i_l.

     MAILRC       Pathname of file containing initial mmaaiill commands.  Default
                  is _~_/_._m_a_i_l_r_c.

     MBOX         The name of the mailbox file.  It can be the name of a
                  folder.  The default is _m_b_o_x in the user's home directory.

     PAGER        Pathname of the program to use in the mmoorree command or when
                  _c_r_t variable is set.  The default paginator less(1) is used
                  if this option is not defined.

     REPLYTO      If set, will be used to initialize the Reply-To field for
                  outgoing messages.

     SHELL        Pathname of the shell to use in the !! command and the ~~!!
                  escape.  A default shell is used if this option is not
                  defined.

     TMPDIR       Pathname of the directory used for creating temporary files.

     VISUAL       Pathname of the text editor to use in the vviissuuaall command and
                  ~~vv escape.

     USER         Login name of the user executing mail.

FFIILLEESS
     _/_v_a_r_/_m_a_i_l_/_*                     Post office.
     _~_/_m_b_o_x                          User's old mail.
     _~_/_._m_a_i_l_r_c                       File giving initial mmaaiill commands.  This
                                     can be overridden by setting the MAILRC
                                     environment variable.
     _/_t_m_p_/_R_*                         Temporary files.
     _/_u_s_r_/_s_h_a_r_e_/_m_i_s_c_/_m_a_i_l_._*_h_e_l_p      Help files.

     _/_u_s_r_/_s_h_a_r_e_/_m_i_s_c_/_m_a_i_l_._r_c
     _/_u_s_r_/_l_o_c_a_l_/_e_t_c_/_m_a_i_l_._r_c
     _/_e_t_c_/_m_a_i_l_._r_c                    System-wide initialization files.  Each
                                     file will be sourced, in order, if it
                                     exists.

SSEEEE AALLSSOO
     fmt(1), newaliases(1), vacation(1), aliases(5), sendmail(8)

HHIISSTTOORRYY
     A mmaaiill command appeared in Version 1 AT&T UNIX.  This man page is derived
     from _T_h_e _M_a_i_l _R_e_f_e_r_e_n_c_e _M_a_n_u_a_l originally written by Kurt Shoens.

BBUUGGSS
     Usually, mmaaiill is just a link to MMaaiill and mmaaiillxx, which can be confusing.

     The name of the aalltteerrnnaatteess list is incorrect English (it should be
     “alternatives”), but is retained for compatibility.

macOS 14.6                      August 8, 2018                      macOS 14.6
"
mesg,"MESG(1)                     General Commands Manual                    MESG(1)

NNAAMMEE
     mmeessgg – display (do not display) messages from other users

SSYYNNOOPPSSIISS
     mmeessgg [nn | yy]

DDEESSCCRRIIPPTTIIOONN
     The mmeessgg utility is invoked by a user to control write access others have
     to a terminal device.  Write access is allowed by default, and programs
     such as talk(1) and write(1) may display messages on the terminal.

     The first terminal device in the sequence of devices associated with
     standard input, standard output and standard error is affected.

     The following options are available:

     nn       Disallow messages.

     yy       Permit messages to be displayed.

     If no arguments are given, mmeessgg displays the present message status to
     the standard output.

EEXXIITT SSTTAATTUUSS
     The mmeessgg utility exits with one of the following values:

            0    Messages are allowed.
            1    Messages are not allowed.
           >1    An error has occurred.

EEXXAAMMPPLLEESS
     Disallow messages from other users to the current terminal:

           mesg n

     Allow messages from other users to _t_t_y_p_1 (assuming you are also logged in
     on that terminal):

           mesg y </dev/ttyp1

CCOOMMPPAATTIIBBIILLIITTYY
     Previous versions of the mmeessgg utility wrote the message status to the
     standard error output and affected the terminal attached to standard
     error without first trying the standard input or output devices.

SSEEEE AALLSSOO
     biff(1), talk(1), wall(1), write(1)

SSTTAANNDDAARRDDSS
     The mmeessgg utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).

HHIISSTTOORRYY
     A mmeessgg command appeared in Version 1 AT&T UNIX.

macOS 14.6                        May 5, 2002                       macOS 14.6
"
ftp,"ftp(n)                            ftp client                            ftp(n)

______________________________________________________________________________

NNAAMMEE
       ftp - Client-side tcl implementation of the ftp protocol

SSYYNNOOPPSSIISS
       package require TTccll  88..22

       package require ffttpp  ??22..44..1133??

       ::::ffttpp::::OOppeenn _s_e_r_v_e_r _u_s_e_r _p_a_s_s_w_d ?_o_p_t_i_o_n_s?

       ::::ffttpp::::CClloossee _h_a_n_d_l_e

       ::::ffttpp::::CCdd _h_a_n_d_l_e _d_i_r_e_c_t_o_r_y

       ::::ffttpp::::PPwwdd _h_a_n_d_l_e

       ::::ffttpp::::TTyyppee _h_a_n_d_l_e ?aasscciiii||bbiinnaarryy||tteenneexx?

       ::::ffttpp::::LLiisstt _h_a_n_d_l_e ?_p_a_t_t_e_r_n?

       ::::ffttpp::::NNLLiisstt _h_a_n_d_l_e ?_d_i_r_e_c_t_o_r_y?

       ::::ffttpp::::FFiilleeSSiizzee _h_a_n_d_l_e _f_i_l_e

       ::::ffttpp::::MMooddTTiimmee _h_a_n_d_l_e _f_i_l_e

       ::::ffttpp::::DDeelleettee _h_a_n_d_l_e _f_i_l_e

       ::::ffttpp::::RReennaammee _h_a_n_d_l_e _f_r_o_m _t_o

       ::::ffttpp::::PPuutt _h_a_n_d_l_e (_l_o_c_a_l | -data _d_a_t_a | -channel _c_h_a_n) ?_r_e_m_o_t_e?

       ::::ffttpp::::AAppppeenndd _h_a_n_d_l_e (_l_o_c_a_l | -data _d_a_t_a | -channel _c_h_a_n) ?_r_e_m_o_t_e?

       ::::ffttpp::::GGeett _h_a_n_d_l_e _r_e_m_o_t_e ?(_l_o_c_a_l | -variable _v_a_r_n_a_m_e | -channel _c_h_a_n)?

       ::::ffttpp::::RReeggeett _h_a_n_d_l_e _r_e_m_o_t_e ?_l_o_c_a_l? ?_f_r_o_m? ?_t_o?

       ::::ffttpp::::NNeewweerr _h_a_n_d_l_e _r_e_m_o_t_e ?_l_o_c_a_l?

       ::::ffttpp::::MMkkDDiirr _h_a_n_d_l_e _d_i_r_e_c_t_o_r_y

       ::::ffttpp::::RRmmDDiirr _h_a_n_d_l_e _d_i_r_e_c_t_o_r_y

       ::::ffttpp::::QQuuoottee _h_a_n_d_l_e _a_r_g_1 _a_r_g_2 _._._.

       ::::ffttpp::::DDiissppllaayyMMssgg _h_a_n_d_l_e _m_s_g ?_s_t_a_t_e?

______________________________________________________________________________

DDEESSCCRRIIPPTTIIOONN
       The ftp package provides the client side of the ftp protocol as
       specified in RFC 959 (_h_t_t_p_:_/_/_w_w_w_._r_f_c_-_e_d_i_t_o_r_._o_r_g_/_r_f_c_/_r_f_c_9_5_9_._t_x_t).  The
       package implements both active (default) and passive ftp sessions.

       A new ftp session is started with the ::::ffttpp::::OOppeenn command. To shutdown
       an existing ftp session use ::::ffttpp::::CClloossee. All other commands are
       restricted to usage in an an open ftp session. They will generate
       errors if they are used out of context.  The ftp package includes file
       and directory manipulating commands for remote sites. To perform the
       same operations on the local site use commands built into the core,
       like ccdd or ffiillee.

       The output of the package is controlled by two state variables,
       ::::ffttpp::::VVEERRBBOOSSEE and ::::ffttpp::::DDEEBBUUGG. Setting ::::ffttpp::::VVEERRBBOOSSEE to ""1"" forces
       the package to show all responses from a remote server. The default
       value is ""0"". Setting ::::ffttpp::::DDEEBBUUGG to ""1"" enables debugging and forces
       the package to show all return codes, states, state changes and ""real""
       ftp commands. The default value is ""0"".

       The command ::::ffttpp::::DDiissppllaayyMMssgg is used to show the different messages
       from the ftp session. The setting of ::::ffttpp::::VVEERRBBOOSSEE determines if this
       command is called or not. The current implementation of the command
       uses the lloogg package of tcllib to write the messages to their final
       destination. This means that the behaviour of ::::ffttpp::::DDiissppllaayyMMssgg can be
       customized without changing its implementation. For more radical
       changes overwriting its implementation by the application is of course
       still possible. Note that the default implementation honors the option
       --oouuttppuutt to ::::ffttpp::::OOppeenn for a session specific log command.

       _C_a_u_t_i_o_n: The default implementation logs error messages like all other
       messages. If this behaviour is changed to throwing an error instead all
       commands in the API will change their behaviour too. In such a case
       they will not return a failure code as described below but pass the
       thrown error to their caller.

AAPPII
       ::::ffttpp::::OOppeenn _s_e_r_v_e_r _u_s_e_r _p_a_s_s_w_d ?_o_p_t_i_o_n_s?
              This command is used to start a FTP session by establishing a
              control connection to the FTP server. The defaults are used for
              any option not specified by the caller.

              The command takes a host name _s_e_r_v_e_r, a user name _u_s_e_r and a
              password _p_a_s_s_w_o_r_d as its parameters and returns a session handle
              that is an integer number greater than or equal to ""0"", if the
              connection is successfully established. Otherwise it returns
              ""-1"".  The _s_e_r_v_e_r parameter must be the name or internet address
              (in dotted decimal notation) of the ftp server to connect to.
              The _u_s_e_r and _p_a_s_s_w_d parameters must contain a valid user name
              and password to complete the login process.

              The options overwrite some default values or set special
              abilities:

              --bblloocckkssiizzee _s_i_z_e
                     The blocksize is used during data transfer. At most _s_i_z_e
                     bytes are transfered at once. The default value for this
                     option is 4096.  The package will evaluate the --pprrooggrreessss
                     ccaallllbbaacckk for the session after the transfer of each
                     block.

              --ttiimmeeoouutt _s_e_c_o_n_d_s
                     If _s_e_c_o_n_d_s is non-zero, then ::::ffttpp::::OOppeenn sets up a
                     timeout which will occur after the specified number of
                     seconds. The default value is 600.

              --ppoorrtt _n_u_m_b_e_r
                     The port _n_u_m_b_e_r specifies an alternative remote port on
                     the ftp server on which the ftp service resides. Most ftp
                     services listen for connection requests on the default
                     port 21. Sometimes, usually for security reasons, port
                     numbers other than 21 are used for ftp connections.

              --mmooddee _m_o_d_e
                     The transfer _m_o_d_e option determines if a file transfer
                     occurs in aaccttiivvee or ppaassssiivvee mode. In passive mode the
                     client will ask the ftp server to listen on a data port
                     and wait for the connection rather than to initiate the
                     process by itself when a data transfer request comes in.
                     Passive mode is normally a requirement when accessing
                     sites via a firewall. The default mode is aaccttiivvee.

              --pprrooggrreessss _c_a_l_l_b_a_c_k
                     This _c_a_l_l_b_a_c_k is evaluated whenever a block of data was
                     transfered. See the option --bblloocckkssiizzee for how to specify
                     the size of the transfered blocks.

                     When evaluating the _c_a_l_l_b_a_c_k one argument is appended to
                     the callback script, the current accumulated number of
                     bytes transferred so far.

              --ccoommmmaanndd _c_a_l_l_b_a_c_k
                     Specifying this option places the connection into
                     asynchronous mode. The _c_a_l_l_b_a_c_k is evaluated after the
                     completion of any operation. When an operation is running
                     no further operations must be started until a callback
                     has been received for the currently executing operation.

                     When evaluating the _c_a_l_l_b_a_c_k several arguments are
                     appended to the callback script, namely the keyword of
                     the operation that has completed and any additional
                     arguments specific to the operation.  If an error
                     occurred during the execution of the operation the
                     callback is given the keyword eerrrroorr.

              --oouuttppuutt _c_a_l_l_b_a_c_k
                     This option has no default. If it is set the default
                     implementation of ::::ffttpp::::DDiissppllaayyMMssgg will use its value as
                     command prefix to log all internal messages. The callback
                     will have three arguments appended to it before
                     evaluation, the id of the session, the message itself,
                     and the connection state, in this order.

       ::::ffttpp::::CClloossee _h_a_n_d_l_e
              This command terminates the specified ftp session. If no file
              transfer is in progress, the server will close the control
              connection immediately. If a file transfer is in progress
              however, the control connection will remain open until the
              transfers completes. When that happens the server will write the
              result response for the transfer to it and close the connection
              afterward.

       ::::ffttpp::::CCdd _h_a_n_d_l_e _d_i_r_e_c_t_o_r_y
              This command changes the current working directory on the ftp
              server to a specified target _d_i_r_e_c_t_o_r_y.  The command returns 1
              if the current working directory was successfully changed to the
              specified directory or 0 if it fails.  The target directory can
              be

              •      a subdirectory of the current directory,

              •      Two dots, ....  (as an indicator for the parent directory
                     of the current directory)

              •      or a fully qualified path to a new working directory.

       ::::ffttpp::::PPwwdd _h_a_n_d_l_e
              This command returns the complete path of the current working
              directory on the ftp server, or an empty string in case of an
              error.

       ::::ffttpp::::TTyyppee _h_a_n_d_l_e ?aasscciiii||bbiinnaarryy||tteenneexx?
              This command sets the ftp file transfer type to either aasscciiii,
              bbiinnaarryy, or tteenneexx. The command always returns the currently set
              type. If called without type no change is made.

              Currently only aasscciiii and bbiinnaarryy types are supported. There is
              some early (alpha) support for Tenex mode. The type aasscciiii is
              normally used to convert text files into a format suitable for
              text editors on the platform of the destination machine. This
              mainly affects end-of-line markers. The type bbiinnaarryy on the other
              hand allows the undisturbed transfer of non-text files, such as
              compressed files, images and executables.

       ::::ffttpp::::LLiisstt _h_a_n_d_l_e ?_p_a_t_t_e_r_n?
              This command returns a human-readable list of files.  Wildcard
              expressions such as ""_*_._t_c_l"" are allowed.  If _p_a_t_t_e_r_n refers to a
              specific directory, then the contents of that directory are
              returned.  If the _p_a_t_t_e_r_n is not a fully-qualified path name,
              the command lists entries relative to the current remote
              directory.  If no _p_a_t_t_e_r_n is specified, the contents of the
              current remote directory is returned.

              The listing includes any system-dependent information that the
              server chooses to include. For example most UNIX systems produce
              output from the command llss --ll. The command returns the retrieved
              information as a tcl list with one item per entry. Empty lines
              and UNIX's ""total"" lines are ignored and not included in the
              result as reported by this command.

              If the command fails an empty list is returned.

       ::::ffttpp::::NNLLiisstt _h_a_n_d_l_e ?_d_i_r_e_c_t_o_r_y?
              This command has the same behavior as the ::::ffttpp::::LLiisstt command,
              except that it only retrieves an abbreviated listing. This means
              only file names are returned in a sorted list.

       ::::ffttpp::::FFiilleeSSiizzee _h_a_n_d_l_e _f_i_l_e
              This command returns the size of the specified _f_i_l_e on the ftp
              server. If the command fails an empty string is returned.

              _A_T_T_E_N_T_I_O_N_! It will not work properly when in ascii mode and is
              not supported by all ftp server implementations.

       ::::ffttpp::::MMooddTTiimmee _h_a_n_d_l_e _f_i_l_e
              This command retrieves the time of the last modification of the
              _f_i_l_e on the ftp server as a system dependent integer value in
              seconds or an empty string if an error occurred. Use the built-
              in command cclloocckk to convert the retrieves value into other
              formats.

       ::::ffttpp::::DDeelleettee _h_a_n_d_l_e _f_i_l_e
              This command deletes the specified _f_i_l_e on the ftp server. The
              command returns 1 if the specified file was successfully deleted
              or 0 if it failed.

       ::::ffttpp::::RReennaammee _h_a_n_d_l_e _f_r_o_m _t_o
              This command renames the file _f_r_o_m in the current directory of
              the ftp server to the specified new file name _t_o. This new file
              name must not be the same as any existing subdirectory or file
              name.  The command returns 1 if the specified file was
              successfully renamed or 0 if it failed.

       ::::ffttpp::::PPuutt _h_a_n_d_l_e (_l_o_c_a_l | -data _d_a_t_a | -channel _c_h_a_n) ?_r_e_m_o_t_e?
              This command transfers a local file _l_o_c_a_l to a remote file
              _r_e_m_o_t_e on the ftp server. If the file parameters passed to the
              command do not fully qualified path names the command will use
              the current directory on local and remote host. If the remote
              file name is unspecified, the server will use the name of the
              local file as the name of the remote file. The command returns 1
              to indicate a successful transfer and 0 in the case of a
              failure.

              If --ddaattaa _d_a_t_a is specified instead of a local file, the system
              will not transfer a file, but the _d_a_t_a passed into it. In this
              case the name of the remote file has to be specified.

              If --cchhaannnneell _c_h_a_n is specified instead of a local file, the
              system will not transfer a file, but read the contents of the
              channel _c_h_a_n and write this to the remote file. In this case the
              name of the remote file has to be specified. After the transfer
              _c_h_a_n will be closed.

       ::::ffttpp::::AAppppeenndd _h_a_n_d_l_e (_l_o_c_a_l | -data _d_a_t_a | -channel _c_h_a_n) ?_r_e_m_o_t_e?
              This command behaves like ::::ffttpp::::PPuuttss, but appends the
              transfered information to the remote file. If the file did not
              exist on the server it will be created.

       ::::ffttpp::::GGeett _h_a_n_d_l_e _r_e_m_o_t_e ?(_l_o_c_a_l | -variable _v_a_r_n_a_m_e | -channel _c_h_a_n)?
              This command retrieves a remote file _r_e_m_o_t_e on the ftp server
              and stores its contents into the local file _l_o_c_a_l. If the file
              parameters passed to the command are not fully qualified path
              names the command will use the current directory on local and
              remote host. If the local file name is unspecified, the server
              will use the name of the remote file as the name of the local
              file. The command returns 1 to indicate a successful transfer
              and 0 in the case of a failure. The command will throw an error
              if the directory the file _l_o_c_a_l is to be placed in does not
              exist.

              If --vvaarriiaabbllee _v_a_r_n_a_m_e is specified, the system will store the
              retrieved data into the variable _v_a_r_n_a_m_e instead of a file.

              If --cchhaannnneell _c_h_a_n is specified, the system will write the
              retrieved data into the channel _c_h_a_n instead of a file. The
              system will _n_o_t close _c_h_a_n after the transfer, this is the
              responsibility of the caller to ::::ffttpp::::GGeett.

       ::::ffttpp::::RReeggeett _h_a_n_d_l_e _r_e_m_o_t_e ?_l_o_c_a_l? ?_f_r_o_m? ?_t_o?
              This command behaves like ::::ffttpp::::GGeett, except that if local file
              _l_o_c_a_l exists and is smaller than remote file _r_e_m_o_t_e, the local
              file is presumed to be a partially transferred copy of the
              remote file and the transfer is continued from the apparent
              point of failure.  The command will throw an error if the
              directory the file _l_o_c_a_l is to be placed in does not exist. This
              command is useful when transferring very large files over
              networks that tend to drop connections.

              Specifying the additional byte offsets _f_r_o_m and _t_o will cause
              the command to change its behaviour and to download exactly the
              specified slice of the remote file. This mode is possible only
              if a local destination is explicitly provided. Omission of _t_o
              leads to downloading till the end of the file.

       ::::ffttpp::::NNeewweerr _h_a_n_d_l_e _r_e_m_o_t_e ?_l_o_c_a_l?
              This command behaves like ::::ffttpp::::GGeett, except that it retrieves
              the remote file only if the modification time of the remote file
              is more recent than the file on the local system. If the file
              does not exist on the local system, the remote file is
              considered newer. The command will throw an error if the
              directory the file _l_o_c_a_l is to be placed in does not exist.

       ::::ffttpp::::MMkkDDiirr _h_a_n_d_l_e _d_i_r_e_c_t_o_r_y
              This command creates the specified _d_i_r_e_c_t_o_r_y on the ftp server.
              If the specified path is relative the new directory will be
              created as a subdirectory of the current working directory. Else
              the created directory will have the specified path name. The
              command returns 1 to indicate a successful creation of the
              directory and 0 in the case of a failure.

       ::::ffttpp::::RRmmDDiirr _h_a_n_d_l_e _d_i_r_e_c_t_o_r_y
              This command removes the specified directory on the ftp server.
              The remote directory has to be empty or the command will fail.
              The command returns 1 to indicate a successful removal of the
              directory and 0 in the case of a failure.

       ::::ffttpp::::QQuuoottee _h_a_n_d_l_e _a_r_g_1 _a_r_g_2 _._._.
              This command is used to send an arbitrary ftp command to the
              server. It cannot be used to obtain a directory listing or for
              transferring files. It is included to allow an application to
              execute commands on the ftp server which are not provided by
              this package.  The arguments are sent verbatim, i.e. as is, with
              no changes.

              In contrast to the other commands in this package this command
              will not parse the response it got from the ftp server but
              return it verbatim to the caller.

       ::::ffttpp::::DDiissppllaayyMMssgg _h_a_n_d_l_e _m_s_g ?_s_t_a_t_e?
              This command is used by the package itself to show the different
              messages from the ftp sessions. The package itself declares this
              command very simple, writing the messages to ssttddoouutt (if
              ::::ffttpp::::VVEERRBBOOSSEE was set, see below) and throwing tcl errors for
              error messages. It is the responsibility of the application to
              overwrite it as needed. A state variable for different states
              assigned to different colors is recommended by the author. The
              package lloogg is useful for this.

       ::::ffttpp::::VVEERRBBOOSSEE
              A state variable controlling the output of the package. Setting
              ::::ffttpp::::VVEERRBBOOSSEE to ""1"" forces the package to show all responses
              from a remote server. The default value is ""0"".

       ::::ffttpp::::DDEEBBUUGG
              A state variable controlling the output of ftp. Setting
              ::::ffttpp::::DDEEBBUUGG to ""1"" enables debugging and forces the package to
              show all return codes, states, state changes and ""real"" ftp
              commands. The default value is ""0"".

BBUUGGSS
       The correct execution of many commands depends upon the proper behavior
       by the remote server, network and router configuration.

       An update command placed in the procedure ::::ffttpp::::DDiissppllaayyMMssgg may run
       into persistent errors or infinite loops. The solution to this problem
       is to use uuppddaattee iiddlleettaasskkss instead of uuppddaattee.

BBUUGGSS,, IIDDEEAASS,, FFEEEEDDBBAACCKK
       This document, and the package it describes, will undoubtedly contain
       bugs and other problems.  Please report such in the category _f_t_p of the
       _T_c_l_l_i_b _T_r_a_c_k_e_r_s [http://core.tcl.tk/tcllib/reportlist].  Please also
       report any ideas for enhancements you may have for either package
       and/or documentation.

       When proposing code changes, please provide _u_n_i_f_i_e_d _d_i_f_f_s, i.e the
       output of ddiiffff --uu.

       Note further that _a_t_t_a_c_h_m_e_n_t_s are strongly preferred over inlined
       patches. Attachments can be made by going to the EEddiitt form of the
       ticket immediately after its creation, and then using the left-most
       button in the secondary navigation bar.

SSEEEE AALLSSOO
       ftpd, mime, pop3, smtp

KKEEYYWWOORRDDSS
       ftp, internet, net, rfc 959

CCAATTEEGGOORRYY
       Networking

tcllib                              2.4.13                              ftp(n)
"
rsync,"rsync(1)                                                              rsync(1)

NNAAMMEE
       rsync - faster, flexible replacement for rcp

SSYYNNOOPPSSIISS
       rsync [OPTION]... SRC [SRC]... DEST

       rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST

       rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST

       rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST

       rsync [OPTION]... SRC

       rsync [OPTION]... [USER@]HOST:SRC [DEST]

       rsync [OPTION]... [USER@]HOST::SRC [DEST]

       rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]

DDEESSCCRRIIPPTTIIOONN
       rsync is a program that behaves in much the same way that rcp does, but
       has many more options and uses the rsync remote-update protocol to
       greatly speed up file transfers when the destination file is being
       updated.

       The rsync remote-update protocol allows rsync to transfer just the
       differences between two sets of files across the network connection,
       using an efficient checksum-search algorithm described in the technical
       report that accompanies this package.

       Some of the additional features of rsync are:

       o      support for copying links, devices, owners, groups, and
              permissions

       o      exclude and exclude-from options similar to GNU tar

       o      a CVS exclude mode for ignoring the same files that CVS would
              ignore

       o      can use any transparent remote shell, including ssh or rsh

       o      does not require super-user privileges

       o      pipelining of file transfers to minimize latency costs

       o      support for anonymous or authenticated rsync daemons (ideal for
              mirroring)


GGEENNEERRAALL
       Rsync copies files either to or from a remote host, or locally on the
       current host (it does not support copying files between two remote
       hosts).

       There are two different ways for rsync to contact a remote system:
       using a remote-shell program as the transport (such as ssh or rsh) or
       contacting an rsync daemon directly via TCP.  The remote-shell
       transport is used whenever the source or destination path contains a
       single colon (:) separator after a host specification.  Contacting an
       rsync daemon directly happens when the source or destination path
       contains a double colon (::) separator after a host specification, OR
       when an rsync:// URL is specified (see also the ""USING RSYNC-DAEMON
       FEATURES VIA A REMOTE-SHELL CONNECTION"" section for an exception to
       this latter rule).

       As a special case, if a single source arg is specified without a
       destination, the files are listed in an output format similar to ""ls
       -l"".

       As expected, if neither the source or destination path specify a remote
       host, the copy occurs locally (see also the ----lliisstt--oonnllyy option).

SSEETTUUPP
       See the file README for installation instructions.

       Once installed, you can use rsync to any machine that you can access
       via a remote shell (as well as some that you can access using the rsync
       daemon-mode protocol).  For remote transfers, a modern rsync uses ssh
       for its communications, but it may have been configured to use a
       different remote shell by default, such as rsh or remsh.

       You can also specify any remote shell you like, either by using the --ee
       command line option, or by setting the RSYNC_RSH environment variable.

       Note that rsync must be installed on both the source and destination
       machines.

UUSSAAGGEE
       You use rsync in the same way you use rcp. You must specify a source
       and a destination, one of which may be remote.

       Perhaps the best way to explain the syntax is with some examples:

              rsync -t *.c foo:src/


       This would transfer all files matching the pattern *.c from the current
       directory to the directory src on the machine foo. If any of the files
       already exist on the remote system then the rsync remote-update
       protocol is used to update the file by sending only the differences.
       See the tech report for details.

              rsync -avz foo:src/bar /data/tmp


       This would recursively transfer all files from the directory src/bar on
       the machine foo into the /data/tmp/bar directory on the local machine.
       The files are transferred in ""archive"" mode, which ensures that
       symbolic links, devices, attributes, permissions, ownerships, etc. are
       preserved in the transfer.  Additionally, compression will be used to
       reduce the size of data portions of the transfer.

              rsync -avz foo:src/bar/ /data/tmp


       A trailing slash on the source changes this behavior to avoid creating
       an additional directory level at the destination.  You can think of a
       trailing / on a source as meaning ""copy the contents of this directory""
       as opposed to ""copy the directory by name"", but in both cases the
       attributes of the containing directory are transferred to the
       containing directory on the destination.  In other words, each of the
       following commands copies the files in the same way, including their
       setting of the attributes of /dest/foo:

              rsync -av /src/foo /dest
              rsync -av /src/foo/ /dest/foo


       Note also that host and module references don't require a trailing
       slash to copy the contents of the default directory.  For example, both
       of these copy the remote directory's contents into ""/dest"":

              rsync -av host: /dest
              rsync -av host::module /dest


       You can also use rsync in local-only mode, where both the source and
       destination don't have a ':' in the name. In this case it behaves like
       an improved copy command.

       Finally, you can list all the (listable) modules available from a
       particular rsync daemon by leaving off the module name:

              rsync somehost.mydomain.com::


       See the following section for more details.

AADDVVAANNCCEEDD UUSSAAGGEE
       The syntax for requesting multiple files from a remote host involves
       using quoted spaces in the SRC.  Some examples:

              rsync host::'modname/dir1/file1 modname/dir2/file2' /dest


       This would copy file1 and file2 into /dest from an rsync daemon.  Each
       additional arg must include the same ""modname/"" prefix as the first
       one, and must be preceded by a single space.  All other spaces are
       assumed to be a part of the filenames.

              rsync -av host:'dir1/file1 dir2/file2' /dest


       This would copy file1 and file2 into /dest using a remote shell.  This
       word-splitting is done by the remote shell, so if it doesn't work it
       means that the remote shell isn't configured to split its args based on
       whitespace (a very rare setting, but not unknown).  If you need to
       transfer a filename that contains whitespace, you'll need to either
       escape the whitespace in a way that the remote shell will understand,
       or use wildcards in place of the spaces.  Two examples of this are:

              rsync -av host:'file\ name\ with\ spaces' /dest
              rsync -av host:file?name?with?spaces /dest


       This latter example assumes that your shell passes through unmatched
       wildcards.  If it complains about ""no match"", put the name in quotes.

CCOONNNNEECCTTIINNGG TTOO AANN RRSSYYNNCC DDAAEEMMOONN
       It is also possible to use rsync without a remote shell as the
       transport.  In this case you will directly connect to a remote rsync
       daemon, typically using TCP port 873.  (This obviously requires the
       daemon to be running on the remote system, so refer to the STARTING AN
       RSYNC DAEMON TO ACCEPT CONNECTIONS section below for information on
       that.)

       Using rsync in this way is the same as using it with a remote shell
       except that:

       o      you either use a double colon :: instead of a single colon to
              separate the hostname from the path, or you use an rsync:// URL.

       o      the first word of the ""path"" is actually a module name.

       o      the remote daemon may print a message of the day when you
              connect.

       o      if you specify no path name on the remote daemon then the list
              of accessible paths on the daemon will be shown.

       o      if you specify no local destination then a listing of the
              specified files on the remote daemon is provided.

       o      you must not specify the ----rrsshh (--ee) option.


       An example that copies all the files in a remote module named ""src"":

           rsync -av host::src /dest


       Some modules on the remote daemon may require authentication. If so,
       you will receive a password prompt when you connect. You can avoid the
       password prompt by setting the environment variable RSYNC_PASSWORD to
       the password you want to use or using the ----ppaasssswwoorrdd--ffiillee option. This
       may be useful when scripting rsync.

       WARNING: On some systems environment variables are visible to all
       users. On those systems using ----ppaasssswwoorrdd--ffiillee is recommended.

       You may establish the connection via a web proxy by setting the
       environment variable RSYNC_PROXY to a hostname:port pair pointing to
       your web proxy.  Note that your web proxy's configuration must support
       proxy connections to port 873.

UUSSIINNGG RRSSYYNNCC--DDAAEEMMOONN FFEEAATTUURREESS VVIIAA AA RREEMMOOTTEE--SSHHEELLLL CCOONNNNEECCTTIIOONN
       It is sometimes useful to use various features of an rsync daemon (such
       as named modules) without actually allowing any new socket connections
       into a system (other than what is already required to allow remote-
       shell access).  Rsync supports connecting to a host using a remote
       shell and then spawning a single-use ""daemon"" server that expects to
       read its config file in the home dir of the remote user.  This can be
       useful if you want to encrypt a daemon-style transfer's data, but since
       the daemon is started up fresh by the remote user, you may not be able
       to use features such as chroot or change the uid used by the daemon.
       (For another way to encrypt a daemon transfer, consider using ssh to
       tunnel a local port to a remote machine and configure a normal rsync
       daemon on that remote host to only allow connections from ""localhost"".)

       From the user's perspective, a daemon transfer via a remote-shell
       connection uses nearly the same command-line syntax as a normal rsync-
       daemon transfer, with the only exception being that you must explicitly
       set the remote shell program on the command-line with the ----rrsshh==CCOOMMMMAANNDD
       option.  (Setting the RSYNC_RSH in the environment will not turn on
       this functionality.)  For example:

           rsync -av --rsh=ssh host::module /dest


       If you need to specify a different remote-shell user, keep in mind that
       the user@ prefix in front of the host is specifying the rsync-user
       value (for a module that requires user-based authentication).  This
       means that you must give the '-l user' option to ssh when specifying
       the remote-shell, as in this example that uses the short version of the
       ----rrsshh option:

           rsync -av -e ""ssh -l ssh-user"" rsync-user@host::module /dest


       The ""ssh-user"" will be used at the ssh level; the ""rsync-user"" will be
       used to log-in to the ""module"".

SSTTAARRTTIINNGG AANN RRSSYYNNCC DDAAEEMMOONN TTOO AACCCCEEPPTT CCOONNNNEECCTTIIOONNSS
       In order to connect to an rsync daemon, the remote system needs to have
       a daemon already running (or it needs to have configured something like
       inetd to spawn an rsync daemon for incoming connections on a particular
       port).  For full information on how to start a daemon that will
       handling incoming socket connections, see the rrssyynnccdd..ccoonnff(5) man page
       -- that is the config file for the daemon, and it contains the full
       details for how to run the daemon (including stand-alone and inetd
       configurations).

       If you're using one of the remote-shell transports for the transfer,
       there is no need to manually start an rsync daemon.

EEXXAAMMPPLLEESS
       Here are some examples of how I use rsync.

       To backup my wife's home directory, which consists of large MS Word
       files and mail folders, I use a cron job that runs

              rsync -Cavz . arvidsjaur:backup


       each night over a PPP connection to a duplicate directory on my machine
       ""arvidsjaur"".

       To synchronize my samba source trees I use the following Makefile
       targets:

           get:
                   rsync -avuzb --exclude '*~' samba:samba/ .
           put:
                   rsync -Cavuzb . samba:samba/
           sync: get put


       this allows me to sync with a CVS directory at the other end of the
       connection. I then do CVS operations on the remote machine, which saves
       a lot of time as the remote CVS protocol isn't very efficient.

       I mirror a directory between my ""old"" and ""new"" ftp sites with the
       command:

       rsync -az -e ssh --delete ~ftp/pub/samba nimbus:""~ftp/pub/tridge""

       This is launched from cron every few hours.

OOPPTTIIOONNSS SSUUMMMMAARRYY
       Here is a short summary of the options available in rsync. Please refer
       to the detailed description below for a complete description.

        -v, --verbose               increase verbosity
        -q, --quiet                 suppress non-error messages
            --no-motd               suppress daemon-mode MOTD (see caveat)
        -c, --checksum              skip based on checksum, not mod-time & size
        -a, --archive               archive mode; same as -rlptgoD (no -H)
            --no-OPTION             turn off an implied OPTION (e.g. --no-D)
        -r, --recursive             recurse into directories
        -R, --relative              use relative path names
            --no-implied-dirs       don't send implied dirs with --relative
        -b, --backup                make backups (see --suffix & --backup-dir)
            --backup-dir=DIR        make backups into hierarchy based in DIR
            --suffix=SUFFIX         backup suffix (default ~ w/o --backup-dir)
        -u, --update                skip files that are newer on the receiver
            --inplace               update destination files in-place
            --append                append data onto shorter files
        -d, --dirs                  transfer directories without recursing
        -l, --links                 copy symlinks as symlinks
        -L, --copy-links            transform symlink into referent file/dir
            --copy-unsafe-links     only ""unsafe"" symlinks are transformed
            --safe-links            ignore symlinks that point outside the tree
        -k, --copy-dirlinks         transform symlink to dir into referent dir
        -K, --keep-dirlinks         treat symlinked dir on receiver as dir
        -H, --hard-links            preserve hard links
        -p, --perms                 preserve permissions
            --executability         preserve executability
            --chmod=CHMOD           affect file and/or directory permissions
        -o, --owner                 preserve owner (super-user only)
        -g, --group                 preserve group
            --devices               preserve device files (super-user only)
            --specials              preserve special files
        -D                          same as --devices --specials
        -t, --times                 preserve times
        -O, --omit-dir-times        omit directories when preserving times
            --super                 receiver attempts super-user activities
        -S, --sparse                handle sparse files efficiently
        -n, --dry-run               show what would have been transferred
        -W, --whole-file            copy files whole (without rsync algorithm)
        -x, --one-file-system       don't cross filesystem boundaries
        -B, --block-size=SIZE       force a fixed checksum block-size
        -e, --rsh=COMMAND           specify the remote shell to use
            --rsync-path=PROGRAM    specify the rsync to run on remote machine
            --existing              skip creating new files on receiver
            --ignore-existing       skip updating files that exist on receiver
            --remove-source-files   sender removes synchronized files (non-dir)
            --del                   an alias for --delete-during
            --delete                delete extraneous files from dest dirs
            --delete-before         receiver deletes before transfer (default)
            --delete-during         receiver deletes during xfer, not before
            --delete-after          receiver deletes after transfer, not before
            --delete-excluded       also delete excluded files from dest dirs
            --ignore-errors         delete even if there are I/O errors
            --force                 force deletion of dirs even if not empty
            --max-delete=NUM        don't delete more than NUM files
            --max-size=SIZE         don't transfer any file larger than SIZE
            --min-size=SIZE         don't transfer any file smaller than SIZE
            --partial               keep partially transferred files
            --partial-dir=DIR       put a partially transferred file into DIR
            --delay-updates         put all updated files into place at end
        -m, --prune-empty-dirs      prune empty directory chains from file-list
            --numeric-ids           don't map uid/gid values by user/group name
            --timeout=TIME          set I/O timeout in seconds
        -I, --ignore-times          don't skip files that match size and time
            --size-only             skip files that match in size
            --modify-window=NUM     compare mod-times with reduced accuracy
        -T, --temp-dir=DIR          create temporary files in directory DIR
        -y, --fuzzy                 find similar file for basis if no dest file
            --compare-dest=DIR      also compare received files relative to DIR
            --copy-dest=DIR         ... and include copies of unchanged files
            --link-dest=DIR         hardlink to files in DIR when unchanged
        -z, --compress              compress file data during the transfer
            --compress-level=NUM    explicitly set compression level
        -C, --cvs-exclude           auto-ignore files in the same way CVS does
        -f, --filter=RULE           add a file-filtering RULE
        -F                          same as --filter='dir-merge /.rsync-filter'
                                    repeated: --filter='- .rsync-filter'
            --exclude=PATTERN       exclude files matching PATTERN
            --exclude-from=FILE     read exclude patterns from FILE
            --include=PATTERN       don't exclude files matching PATTERN
            --include-from=FILE     read include patterns from FILE
            --files-from=FILE       read list of source-file names from FILE
        -0, --from0                 all *from/filter files are delimited by 0s
            --address=ADDRESS       bind address for outgoing socket to daemon
            --port=PORT             specify double-colon alternate port number
            --sockopts=OPTIONS      specify custom TCP options
            --blocking-io           use blocking I/O for the remote shell
            --stats                 give some file-transfer stats
        -8, --8-bit-output          leave high-bit chars unescaped in output
        -h, --human-readable        output numbers in a human-readable format
            --progress              show progress during transfer
        -P                          same as --partial --progress
        -i, --itemize-changes       output a change-summary for all updates
            --out-format=FORMAT     output updates using the specified FORMAT
            --log-file=FILE         log what we're doing to the specified FILE
            --log-file-format=FMT   log updates using the specified FMT
            --password-file=FILE    read password from FILE
            --list-only             list the files instead of copying them
            --bwlimit=KBPS          limit I/O bandwidth; KBytes per second
            --write-batch=FILE      write a batched update to FILE
            --only-write-batch=FILE like --write-batch but w/o updating dest
            --read-batch=FILE       read a batched update from FILE
            --protocol=NUM          force an older protocol version to be used
            --checksum-seed=NUM     set block/file checksum seed (advanced)
        -4, --ipv4                  prefer IPv4
        -6, --ipv6                  prefer IPv6
        -E, --extended-attributes   copy extended attributes, resource forks
            --cache                 disable fcntl(F_NOCACHE)
            --version               print version number
       (-h) --help                  show this help (see below for -h comment)


       Rsync can also be run as a daemon, in which case the following options
       are accepted:

            --daemon                run as an rsync daemon
            --address=ADDRESS       bind to the specified address
            --bwlimit=KBPS          limit I/O bandwidth; KBytes per second
            --config=FILE           specify alternate rsyncd.conf file
            --no-detach             do not detach from the parent
            --port=PORT             listen on alternate port number
            --log-file=FILE         override the ""log file"" setting
            --log-file-format=FMT   override the ""log format"" setting
            --sockopts=OPTIONS      specify custom TCP options
        -v, --verbose               increase verbosity
        -4, --ipv4                  prefer IPv4
        -6, --ipv6                  prefer IPv6
        -h, --help                  show this help (if used after --daemon)


OOPPTTIIOONNSS
       rsync uses the GNU long options package. Many of the command line
       options have two variants, one short and one long.  These are shown
       below, separated by commas. Some options only have a long variant.  The
       '=' for options that take a parameter is optional; whitespace can be
       used instead.

       ----hheellpp Print a short help page describing the options available in
              rsync and exit.  For backward-compatibility with older versions
              of rsync, the help will also be output if you use the --hh option
              without any other args.

       ----vveerrssiioonn
              print the rsync version number and exit.

       --vv,, ----vveerrbboossee
              This option increases the amount of information you are given
              during the transfer.  By default, rsync works silently. A single
              --vv will give you information about what files are being
              transferred and a brief summary at the end. Two --vv flags will
              give you information on what files are being skipped and
              slightly more information at the end. More than two --vv flags
              should only be used if you are debugging rsync.

              Note that the names of the transferred files that are output are
              done using a default ----oouutt--ffoorrmmaatt of ""%n%L"", which tells you
              just the name of the file and, if the item is a link, where it
              points.  At the single --vv level of verbosity, this does not
              mention when a file gets its attributes changed.  If you ask for
              an itemized list of changed attributes (either ----iitteemmiizzee--cchhaannggeess
              or adding ""%i"" to the ----oouutt--ffoorrmmaatt setting), the output (on the
              client) increases to mention all items that are changed in any
              way.  See the ----oouutt--ffoorrmmaatt option for more details.

       --qq,, ----qquuiieett
              This option decreases the amount of information you are given
              during the transfer, notably suppressing information messages
              from the remote server. This flag is useful when invoking rsync
              from cron.

       ----nnoo--mmoottdd
              This option affects the information that is output by the client
              at the start of a daemon transfer.  This suppresses the message-
              of-the-day (MOTD) text, but it also affects the list of modules
              that the daemon sends in response to the ""rsync host::"" request
              (due to a limitation in the rsync protocol), so omit this option
              if you want to request the list of modules from the deamon.

       --II,, ----iiggnnoorree--ttiimmeess
              Normally rsync will skip any files that are already the same
              size and have the same modification time-stamp.  This option
              turns off this ""quick check"" behavior, causing all files to be
              updated.

       ----ssiizzee--oonnllyy
              Normally rsync will not transfer any files that are already the
              same size and have the same modification time-stamp. With the
              ----ssiizzee--oonnllyy option, files will not be transferred if they have
              the same size, regardless of timestamp. This is useful when
              starting to use rsync after using another mirroring system which
              may not preserve timestamps exactly.

       ----mmooddiiffyy--wwiinnddooww
              When comparing two timestamps, rsync treats the timestamps as
              being equal if they differ by no more than the modify-window
              value.  This is normally 0 (for an exact match), but you may
              find it useful to set this to a larger value in some situations.
              In particular, when transferring to or from an MS Windows FAT
              filesystem (which represents times with a 2-second resolution),
              ----mmooddiiffyy--wwiinnddooww==11 is useful (allowing times to differ by up to 1
              second).

       --cc,, ----cchheecckkssuumm
              This forces the sender to checksum _e_v_e_r_y regular file using a
              128-bit MD4 checksum.  It does this during the initial file-
              system scan as it builds the list of all available files. The
              receiver then checksums its version of each file (if it exists
              and it has the same size as its sender-side counterpart) in
              order to decide which files need to be updated: files with
              either a changed size or a changed checksum are selected for
              transfer.  Since this whole-file checksumming of all files on
              both sides of the connection occurs in addition to the automatic
              checksum verifications that occur during a file's transfer, this
              option can be quite slow.

              Note that rsync always verifies that each _t_r_a_n_s_f_e_r_r_e_d file was
              correctly reconstructed on the receiving side by checking its
              whole-file checksum, but that automatic after-the-transfer
              verification has nothing to do with this option's before-the-
              transfer ""Does this file need to be updated?"" check.

       --aa,, ----aarrcchhiivvee
              This is equivalent to --rrllppttggooDD. It is a quick way of saying you
              want recursion and want to preserve almost everything (with -H
              being a notable omission).  The only exception to the above
              equivalence is when ----ffiilleess--ffrroomm is specified, in which case --rr
              is not implied.

              Note that --aa ddooeess nnoott pprreesseerrvvee hhaarrddlliinnkkss, because finding
              multiply-linked files is expensive.  You must separately specify
              --HH.

       --no-OPTION
              You may turn off one or more implied options by prefixing the
              option name with ""no-"".  Not all options may be prefixed with a
              ""no-"": only options that are implied by other options (e.g.
              ----nnoo--DD, ----nnoo--ppeerrmmss) or have different defaults in various
              circumstances (e.g. ----nnoo--wwhhoollee--ffiillee, ----nnoo--bblloocckkiinngg--iioo,
              ----nnoo--ddiirrss).  You may specify either the short or the long option
              name after the ""no-"" prefix (e.g. ----nnoo--RR is the same as
              ----nnoo--rreellaattiivvee).

              For example: if you want to use --aa (----aarrcchhiivvee) but don't want --oo
              (----oowwnneerr), instead of converting --aa into --rrllppttggDD, you could
              specify --aa ----nnoo--oo (or --aa ----nnoo--oowwnneerr).

              The order of the options is important:  if you specify ----nnoo--rr
              --aa, the --rr option would end up being turned on, the opposite of
              --aa ----nnoo--rr.  Note also that the side-effects of the ----ffiilleess--ffrroomm
              option are NOT positional, as it affects the default state of
              several options and slightly changes the meaning of --aa (see the
              ----ffiilleess--ffrroomm option for more details).

       --rr,, ----rreeccuurrssiivvee
              This tells rsync to copy directories recursively.  See also
              ----ddiirrss (--dd).

       --RR,, ----rreellaattiivvee
              Use relative paths. This means that the full path names
              specified on the command line are sent to the server rather than
              just the last parts of the filenames. This is particularly
              useful when you want to send several different directories at
              the same time. For example, if you used this command:
                 rsync -av /foo/bar/baz.c remote:/tmp/


              ... this would create a file named baz.c in /tmp/ on the remote
              machine. If instead you used
                 rsync -avR /foo/bar/baz.c remote:/tmp/


              then a file named /tmp/foo/bar/baz.c would be created on the
              remote machine -- the full path name is preserved.  To limit the
              amount of path information that is sent, you have a couple
              options:  (1) With a modern rsync on the sending side (beginning
              with 2.6.7), you can insert a dot and a slash into the source
              path, like this:
                 rsync -avR /foo/./bar/baz.c remote:/tmp/


              That would create /tmp/bar/baz.c on the remote machine.  (Note
              that the dot must be followed by a slash, so ""/foo/."" would not
              be abbreviated.) (2) For older rsync versions, you would need to
              use a chdir to limit the source path.  For example, when pushing
              files:
                 (cd /foo; rsync -avR bar/baz.c remote:/tmp/)


              (Note that the parens put the two commands into a sub-shell, so
              that the ""cd"" command doesn't remain in effect for future
              commands.) If you're pulling files, use this idiom (which
              doesn't work with an rsync daemon):
                 rsync -avR --rsync-path=""cd /foo; rsync"" \
                     remote:bar/baz.c /tmp/


       ----nnoo--iimmpplliieedd--ddiirrss
              This option affects the default behavior of the ----rreellaattiivvee
              option.  When it is specified, the attributes of the implied
              directories from the source names are not included in the
              transfer.  This means that the corresponding path elements on
              the destination system are left unchanged if they exist, and any
              missing implied directories are created with default attributes.
              This even allows these implied path elements to have big
              differences, such as being a symlink to a directory on one side
              of the transfer, and a real directory on the other side.

              For instance, if a command-line arg or a files-from entry told
              rsync to transfer the file ""path/foo/file"", the directories
              ""path"" and ""path/foo"" are implied when ----rreellaattiivvee is used.  If
              ""path/foo"" is a symlink to ""bar"" on the destination system, the
              receiving rsync would ordinarily delete ""path/foo"", recreate it
              as a directory, and receive the file into the new directory.
              With ----nnoo--iimmpplliieedd--ddiirrss, the receiving rsync updates
              ""path/foo/file"" using the existing path elements, which means
              that the file ends up being created in ""path/bar"".  Another way
              to accomplish this link preservation is to use the
              ----kkeeeepp--ddiirrlliinnkkss option (which will also affect symlinks to
              directories in the rest of the transfer).

              In a similar but opposite scenario, if the transfer of
              ""path/foo/file"" is requested and ""path/foo"" is a symlink on the
              sending side, running without ----nnoo--iimmpplliieedd--ddiirrss would cause
              rsync to transform ""path/foo"" on the receiving side into an
              identical symlink, and then attempt to transfer ""path/foo/file"",
              which might fail if the duplicated symlink did not point to a
              directory on the receiving side.  Another way to avoid this
              sending of a symlink as an implied directory is to use
              ----ccooppyy--uunnssaaffee--lliinnkkss, or ----ccooppyy--ddiirrlliinnkkss (both of which also
              affect symlinks in the rest of the transfer -- see their
              descriptions for full details).

       --bb,, ----bbaacckkuupp
              With this option, preexisting destination files are renamed as
              each file is transferred or deleted.  You can control where the
              backup file goes and what (if any) suffix gets appended using
              the ----bbaacckkuupp--ddiirr and ----ssuuffffiixx options.

              Note that if you don't specify ----bbaacckkuupp--ddiirr, (1) the
              ----oommiitt--ddiirr--ttiimmeess option will be implied, and (2) if ----ddeelleettee is
              also in effect (without ----ddeelleettee--eexxcclluuddeedd), rsync will add a
              ""protect"" filter-rule for the backup suffix to the end of all
              your existing excludes (e.g. -f ""P *~"").  This will prevent
              previously backed-up files from being deleted.  Note that if you
              are supplying your own filter rules, you may need to manually
              insert your own exclude/protect rule somewhere higher up in the
              list so that it has a high enough priority to be effective
              (e.g., if your rules specify a trailing inclusion/exclusion of
              '*', the auto-added rule would never be reached).

       ----bbaacckkuupp--ddiirr==DDIIRR
              In combination with the ----bbaacckkuupp option, this tells rsync to
              store all backups in the specified directory on the receiving
              side.  This can be used for incremental backups.  You can
              additionally specify a backup suffix using the ----ssuuffffiixx option
              (otherwise the files backed up in the specified directory will
              keep their original filenames).

       ----ssuuffffiixx==SSUUFFFFIIXX
              This option allows you to override the default backup suffix
              used with the ----bbaacckkuupp (--bb) option. The default suffix is a ~ if
              no ---bbaacckkuupp--ddiirr was specified, otherwise it is an empty string.

       --uu,, ----uuppddaattee
              This forces rsync to skip any files which exist on the
              destination and have a modified time that is newer than the
              source file.  (If an existing destination file has a modify time
              equal to the source file's, it will be updated if the sizes are
              different.)

              In the current implementation of ----uuppddaattee, a difference of file
              format between the sender and receiver is always considered to
              be important enough for an update, no matter what date is on the
              objects.  In other words, if the source has a directory or a
              symlink where the destination has a file, the transfer would
              occur regardless of the timestamps.  This might change in the
              future (feel free to comment on this on the mailing list if you
              have an opinion).

       ----iinnppllaaccee
              This causes rsync not to create a new copy of the file and then
              move it into place.  Instead rsync will overwrite the existing
              file, meaning that the rsync algorithm can't accomplish the full
              amount of network reduction it might be able to otherwise (since
              it does not yet try to sort data matches).  One exception to
              this is if you combine the option with ----bbaacckkuupp, since rsync is
              smart enough to use the backup file as the basis file for the
              transfer.

              This option is useful for transfer of large files with block-
              based changes or appended data, and also on systems that are
              disk bound, not network bound.

              The option implies ----ppaarrttiiaall (since an interrupted transfer does
              not delete the file), but conflicts with ----ppaarrttiiaall--ddiirr and
              ----ddeellaayy--uuppddaatteess.  Prior to rsync 2.6.4 ----iinnppllaaccee was also
              incompatible with ----ccoommppaarree--ddeesstt and ----lliinnkk--ddeesstt.

              WARNING: The file's data will be in an inconsistent state during
              the transfer (and possibly afterward if the transfer gets
              interrupted), so you should not use this option to update files
              that are in use.  Also note that rsync will be unable to update
              a file in-place that is not writable by the receiving user.

       ----aappppeenndd
              This causes rsync to update a file by appending data onto the
              end of the file, which presumes that the data that already
              exists on the receiving side is identical with the start of the
              file on the sending side.  If that is not true, the file will
              fail the checksum test, and the resend will do a normal
              ----iinnppllaaccee update to correct the mismatched data.  Only files on
              the receiving side that are shorter than the corresponding file
              on the sending side (as well as new files) are sent.  Implies
              ----iinnppllaaccee, but does not conflict with ----ssppaarrssee (though the
              ----ssppaarrssee option will be auto-disabled if a resend of the
              already-existing data is required).

       --dd,, ----ddiirrss
              Tell the sending side to include any directories that are
              encountered.  Unlike ----rreeccuurrssiivvee, a directory's contents are not
              copied unless the directory name specified is ""."" or ends with a
              trailing slash (e.g. ""."", ""dir/."", ""dir/"", etc.).  Without this
              option or the ----rreeccuurrssiivvee option, rsync will skip all
              directories it encounters (and output a message to that effect
              for each one).  If you specify both ----ddiirrss and ----rreeccuurrssiivvee,
              ----rreeccuurrssiivvee takes precedence.

       --ll,, ----lliinnkkss
              When symlinks are encountered, recreate the symlink on the
              destination.

       --LL,, ----ccooppyy--lliinnkkss
              When symlinks are encountered, the item that they point to (the
              referent) is copied, rather than the symlink.  In older versions
              of rsync, this option also had the side-effect of telling the
              receiving side to follow symlinks, such as symlinks to
              directories.  In a modern rsync such as this one, you'll need to
              specify ----kkeeeepp--ddiirrlliinnkkss (--KK) to get this extra behavior.  The
              only exception is when sending files to an rsync that is too old
              to understand --KK -- in that case, the --LL option will still have
              the side-effect of --KK on that older receiving rsync.

       ----ccooppyy--uunnssaaffee--lliinnkkss
              This tells rsync to copy the referent of symbolic links that
              point outside the copied tree.  Absolute symlinks are also
              treated like ordinary files, and so are any symlinks in the
              source path itself when ----rreellaattiivvee is used.  This option has no
              additional effect if ----ccooppyy--lliinnkkss was also specified.

       ----ssaaffee--lliinnkkss
              This tells rsync to ignore any symbolic links which point
              outside the copied tree. All absolute symlinks are also ignored.
              Using this option in conjunction with ----rreellaattiivvee may give
              unexpected results.

       --KK,, ----ccooppyy--ddiirrlliinnkkss
              This option causes the sending side to treat a symlink to a
              directory as though it were a real directory.  This is useful if
              you don't want symlinks to non-directories to be affected, as
              they would be using ----ccooppyy--lliinnkkss.

              Without this option, if the sending side has replaced a
              directory with a symlink to a directory, the receiving side will
              delete anything that is in the way of the new symlink, including
              a directory hierarchy (as long as ----ffoorrccee or ----ddeelleettee is in
              effect).

              See also ----kkeeeepp--ddiirrlliinnkkss for an analogous option for the
              receiving side.

       --KK,, ----kkeeeepp--ddiirrlliinnkkss
              This option causes the receiving side to treat a symlink to a
              directory as though it were a real directory, but only if it
              matches a real directory from the sender.  Without this option,
              the receiver's symlink would be deleted and replaced with a real
              directory.

              For example, suppose you transfer a directory ""foo"" that
              contains a file ""file"", but ""foo"" is a symlink to directory
              ""bar"" on the receiver.  Without ----kkeeeepp--ddiirrlliinnkkss, the receiver
              deletes symlink ""foo"", recreates it as a directory, and receives
              the file into the new directory.  With ----kkeeeepp--ddiirrlliinnkkss, the
              receiver keeps the symlink and ""file"" ends up in ""bar"".

              See also ----ccooppyy--ddiirrlliinnkkss for an analogous option for the sending
              side.

       --HH,, ----hhaarrdd--lliinnkkss
              This tells rsync to look for hard-linked files in the transfer
              and link together the corresponding files on the receiving side.
              Without this option, hard-linked files in the transfer are
              treated as though they were separate files.

              Note that rsync can only detect hard links if both parts of the
              link are in the list of files being sent.

       --pp,, ----ppeerrmmss
              This option causes the receiving rsync to set the destination
              permissions to be the same as the source permissions.  (See also
              the ----cchhmmoodd option for a way to modify what rsync considers to
              be the source permissions.)

              When this option is _o_f_f, permissions are set as follows:

              o      Existing files (including updated files) retain their
                     existing permissions, though the ----eexxeeccuuttaabbiilliittyy option
                     might change just the execute permission for the file.

              o      New files get their ""normal"" permission bits set to the
                     source file's permissions masked with the receiving end's
                     umask setting, and their special permission bits disabled
                     except in the case where a new directory inherits a
                     setgid bit from its parent directory.


              Thus, when ----ppeerrmmss and ----eexxeeccuuttaabbiilliittyy are both disabled,
              rsync's behavior is the same as that of other file-copy
              utilities, such as ccpp(1) and ttaarr(1).

              In summary: to give destination files (both old and new) the
              source permissions, use ----ppeerrmmss.  To give new files the
              destination-default permissions (while leaving existing files
              unchanged), make sure that the ----ppeerrmmss option is off and use
              ----cchhmmoodd==uuggoo==rrwwXX (which ensures that all non-masked bits get
              enabled).  If you'd care to make this latter behavior easier to
              type, you could define a popt alias for it, such as putting this
              line in the file ~/.popt (this defines the --ss option, and
              includes --no-g to use the default group of the destination
              dir):
                 rsync alias -s --no-p --no-g --chmod=ugo=rwX


              You could then use this new option in a command such as this
              one:
                 rsync -asv src/ dest/


              (Caveat: make sure that --aa does not follow --ss, or it will re-
              enable the ""--no-*"" options.)

              The preservation of the destination's setgid bit on newly-
              created directories when ----ppeerrmmss is off was added in rsync
              2.6.7.  Older rsync versions erroneously preserved the three
              special permission bits for newly-created files when ----ppeerrmmss was
              off, while overriding the destination's setgid bit setting on a
              newly-created directory.  (Keep in mind that it is the version
              of the receiving rsync that affects this behavior.)

       ----eexxeeccuuttaabbiilliittyy
              This option causes rsync to preserve the executability (or non-
              executability) of regular files when ----ppeerrmmss is not enabled.  A
              regular file is considered to be executable if at least one 'x'
              is turned on in its permissions.  When an existing destination
              file's executability differs from that of the corresponding
              source file, rsync modifies the destination file's permissions
              as follows:

              o      To make a file non-executable, rsync turns off all its
                     'x' permissions.

              o      To make a file executable, rsync turns on each 'x'
                     permission that has a corresponding 'r' permission
                     enabled.


              If ----ppeerrmmss is enabled, this option is ignored.

       ----cchhmmoodd
              This option tells rsync to apply one or more comma-separated
              ""chmod"" strings to the permission of the files in the transfer.
              The resulting value is treated as though it was the permissions
              that the sending side supplied for the file, which means that
              this option can seem to have no effect on existing files if
              ----ppeerrmmss is not enabled.

              In addition to the normal parsing rules specified in the
              cchhmmoodd(1) manpage, you can specify an item that should only apply
              to a directory by prefixing it with a 'D', or specify an item
              that should only apply to a file by prefixing it with a 'F'.
              For example:
              --chmod=Dg+s,ug+w,Fo-w,+X


              It is also legal to specify multiple ----cchhmmoodd options, as each
              additional option is just appended to the list of changes to
              make.

              See the ----ppeerrmmss and ----eexxeeccuuttaabbiilliittyy options for how the
              resulting permission value can be applied to the files in the
              transfer.

       --oo,, ----oowwnneerr
              This option causes rsync to set the owner of the destination
              file to be the same as the source file, but only if the
              receiving rsync is being run as the super-user (see also the
              ----ssuuppeerr option to force rsync to attempt super-user activities).
              Without this option, the owner is set to the invoking user on
              the receiving side.

              The preservation of ownership will associate matching names by
              default, but may fall back to using the ID number in some
              circumstances (see also the ----nnuummeerriicc--iiddss option for a full
              discussion).

       --gg,, ----ggrroouupp
              This option causes rsync to set the group of the destination
              file to be the same as the source file.  If the receiving
              program is not running as the super-user (or if ----nnoo--ssuuppeerr was
              specified), only groups that the invoking user on the receiving
              side is a member of will be preserved.  Without this option, the
              group is set to the default group of the invoking user on the
              receiving side.

              The preservation of group information will associate matching
              names by default, but may fall back to using the ID number in
              some circumstances (see also the ----nnuummeerriicc--iiddss option for a full
              discussion).

       ----ddeevviicceess
              This option causes rsync to transfer character and block device
              files to the remote system to recreate these devices.  This
              option has no effect if the receiving rsync is not run as the
              super-user and ----ssuuppeerr is not specified.

       ----ssppeecciiaallss
              This option causes rsync to transfer special files such as named
              sockets and fifos.

       --DD     The --DD option is equivalent to ----ddeevviicceess ----ssppeecciiaallss.

       --tt,, ----ttiimmeess
              This tells rsync to transfer modification times along with the
              files and update them on the remote system.  Note that if this
              option is not used, the optimization that excludes files that
              have not been modified cannot be effective; in other words, a
              missing --tt or --aa will cause the next transfer to behave as if it
              used --II, causing all files to be updated (though the rsync
              algorithm will make the update fairly efficient if the files
              haven't actually changed, you're much better off using --tt).

       --OO,, ----oommiitt--ddiirr--ttiimmeess
              This tells rsync to omit directories when it is preserving
              modification times (see ----ttiimmeess).  If NFS is sharing the
              directories on the receiving side, it is a good idea to use --OO.
              This option is inferred if you use ----bbaacckkuupp without
              ----bbaacckkuupp--ddiirr.

       ----ssuuppeerr
              This tells the receiving side to attempt super-user activities
              even if the receiving rsync wasn't run by the super-user.  These
              activities include: preserving users via the ----oowwnneerr option,
              preserving all groups (not just the current user's groups) via
              the ----ggrroouuppss option, and copying devices via the ----ddeevviicceess
              option.  This is useful for systems that allow such activities
              without being the super-user, and also for ensuring that you
              will get errors if the receiving side isn't being running as the
              super-user.  To turn off super-user activities, the super-user
              can use ----nnoo--ssuuppeerr.

       --SS,, ----ssppaarrssee
              Try to handle sparse files efficiently so they take up less
              space on the destination.  Conflicts with ----iinnppllaaccee because it's
              not possible to overwrite data in a sparse fashion.

              NOTE: Don't use this option when the destination is a Solaris
              ""tmpfs"" filesystem. It doesn't seem to handle seeks over null
              regions correctly and ends up corrupting the files.

       --nn,, ----ddrryy--rruunn
              This tells rsync to not do any file transfers, instead it will
              just report the actions it would have taken.

       --WW,, ----wwhhoollee--ffiillee
              With this option the incremental rsync algorithm is not used and
              the whole file is sent as-is instead.  The transfer may be
              faster if this option is used when the bandwidth between the
              source and destination machines is higher than the bandwidth to
              disk (especially when the ""disk"" is actually a networked
              filesystem).  This is the default when both the source and
              destination are specified as local paths.

       --xx,, ----oonnee--ffiillee--ssyysstteemm
              This tells rsync to avoid crossing a filesystem boundary when
              recursing.  This does not limit the user's ability to specify
              items to copy from multiple filesystems, just rsync's recursion
              through the hierarchy of each directory that the user specified,
              and also the analogous recursion on the receiving side during
              deletion.  Also keep in mind that rsync treats a ""bind"" mount to
              the same device as being on the same filesystem.

              If this option is repeated, rsync omits all mount-point
              directories from the copy.  Otherwise, it includes an empty
              directory at each mount-point it encounters (using the
              attributes of the mounted directory because those of the
              underlying mount-point directory are inaccessible).

              If rsync has been told to collapse symlinks (via ----ccooppyy--lliinnkkss or
              ----ccooppyy--uunnssaaffee--lliinnkkss), a symlink to a directory on another device
              is treated like a mount-point.  Symlinks to non-directories are
              unaffected by this option.

       ----eexxiissttiinngg,, ----iiggnnoorree--nnoonn--eexxiissttiinngg
              This tells rsync to skip creating files (including directories)
              that do not exist yet on the destination.  If this option is
              combined with the ----iiggnnoorree--eexxiissttiinngg option, no files will be
              updated (which can be useful if all you want to do is to delete
              extraneous files).

       ----iiggnnoorree--eexxiissttiinngg
              This tells rsync to skip updating files that already exist on
              the destination (this does _n_o_t ignore existing directores, or
              nothing would get done).  See also ----eexxiissttiinngg.

       ----rreemmoovvee--ssoouurrccee--ffiilleess
              This tells rsync to remove from the sending side the files
              (meaning non-directories) that are a part of the transfer and
              have been successfully duplicated on the receiving side.

       ----ddeelleettee
              This tells rsync to delete extraneous files from the receiving
              side (ones that aren't on the sending side), but only for the
              directories that are being synchronized.  You must have asked
              rsync to send the whole directory (e.g. ""dir"" or ""dir/"") without
              using a wildcard for the directory's contents (e.g. ""dir/*"")
              since the wildcard is expanded by the shell and rsync thus gets
              a request to transfer individual files, not the files' parent
              directory.  Files that are excluded from transfer are also
              excluded from being deleted unless you use the ----ddeelleettee--eexxcclluuddeedd
              option or mark the rules as only matching on the sending side
              (see the include/exclude modifiers in the FILTER RULES section).

              Prior to rsync 2.6.7, this option would have no effect unless
              ----rreeccuurrssiivvee was in effect.  Beginning with 2.6.7, deletions will
              also occur when ----ddiirrss (--dd) is in effect, but only for
              directories whose contents are being copied.

              This option can be dangerous if used incorrectly!  It is a very
              good idea to run first using the ----ddrryy--rruunn option (--nn) to see
              what files would be deleted to make sure important files aren't
              listed.

              If the sending side detects any I/O errors, then the deletion of
              any files at the destination will be automatically disabled.
              This is to prevent temporary filesystem failures (such as NFS
              errors) on the sending side causing a massive deletion of files
              on the destination.  You can override this with the
              ----iiggnnoorree--eerrrroorrss option.

              The ----ddeelleettee option may be combined with one of the
              --delete-WHEN options without conflict, as well as
              ----ddeelleettee--eexxcclluuddeedd.  However, if none of the --delete-WHEN
              options are specified, rsync will currently choose the
              ----ddeelleettee--bbeeffoorree algorithm.  A future version may change this to
              choose the ----ddeelleettee--dduurriinngg algorithm.  See also ----ddeelleettee--aafftteerr.

       ----ddeelleettee--bbeeffoorree
              Request that the file-deletions on the receiving side be done
              before the transfer starts.  This is the default if ----ddeelleettee or
              ----ddeelleettee--eexxcclluuddeedd is specified without one of the --delete-WHEN
              options.  See ----ddeelleettee (which is implied) for more details on
              file-deletion.

              Deleting before the transfer is helpful if the filesystem is
              tight for space and removing extraneous files would help to make
              the transfer possible.  However, it does introduce a delay
              before the start of the transfer, and this delay might cause the
              transfer to timeout (if ----ttiimmeeoouutt was specified).

       ----ddeelleettee--dduurriinngg,, ----ddeell
              Request that the file-deletions on the receiving side be done
              incrementally as the transfer happens.  This is a faster method
              than choosing the before- or after-transfer algorithm, but it is
              only supported beginning with rsync version 2.6.4.  See ----ddeelleettee
              (which is implied) for more details on file-deletion.

       ----ddeelleettee--aafftteerr
              Request that the file-deletions on the receiving side be done
              after the transfer has completed.  This is useful if you are
              sending new per-directory merge files as a part of the transfer
              and you want their exclusions to take effect for the delete
              phase of the current transfer.  See ----ddeelleettee (which is implied)
              for more details on file-deletion.

       ----ddeelleettee--eexxcclluuddeedd
              In addition to deleting the files on the receiving side that are
              not on the sending side, this tells rsync to also delete any
              files on the receiving side that are excluded (see ----eexxcclluuddee).
              See the FILTER RULES section for a way to make individual
              exclusions behave this way on the receiver, and for a way to
              protect files from ----ddeelleettee--eexxcclluuddeedd.  See ----ddeelleettee (which is
              implied) for more details on file-deletion.

       ----iiggnnoorree--eerrrroorrss
              Tells ----ddeelleettee to go ahead and delete files even when there are
              I/O errors.

       ----ffoorrccee
              This option tells rsync to delete a non-empty directory when it
              is to be replaced by a non-directory.  This is only relevant if
              deletions are not active (see ----ddeelleettee for details).

              Note for older rsync versions: ----ffoorrccee used to still be required
              when using ----ddeelleettee--aafftteerr, and it used to be non-functional
              unless the ----rreeccuurrssiivvee option was also enabled.

       ----mmaaxx--ddeelleettee==NNUUMM
              This tells rsync not to delete more than NUM files or
              directories (NUM must be non-zero).  This is useful when
              mirroring very large trees to prevent disasters.

       ----mmaaxx--ssiizzee==SSIIZZEE
              This tells rsync to avoid transferring any file that is larger
              than the specified SIZE. The SIZE value can be suffixed with a
              string to indicate a size multiplier, and may be a fractional
              value (e.g. ""----mmaaxx--ssiizzee==11..55mm"").

              The suffixes are as follows: ""K"" (or ""KiB"") is a kibibyte
              (1024), ""M"" (or ""MiB"") is a mebibyte (1024*1024), and ""G"" (or
              ""GiB"") is a gibibyte (1024*1024*1024).  If you want the
              multiplier to be 1000 instead of 1024, use ""KB"", ""MB"", or ""GB"".
              (Note: lower-case is also accepted for all values.) Finally, if
              the suffix ends in either ""+1"" or ""-1"", the value will be offset
              by one byte in the indicated direction.

              Examples: --max-size=1.5mb-1 is 1499999 bytes, and
              --max-size=2g+1 is 2147483649 bytes.

       ----mmiinn--ssiizzee==SSIIZZEE
              This tells rsync to avoid transferring any file that is smaller
              than the specified SIZE, which can help in not transferring
              small, junk files.  See the ----mmaaxx--ssiizzee option for a description
              of SIZE.

       --BB,, ----bblloocckk--ssiizzee==BBLLOOCCKKSSIIZZEE
              This forces the block size used in the rsync algorithm to a
              fixed value.  It is normally selected based on the size of each
              file being updated.  See the technical report for details.

       --ee,, ----rrsshh==CCOOMMMMAANNDD
              This option allows you to choose an alternative remote shell
              program to use for communication between the local and remote
              copies of rsync. Typically, rsync is configured to use ssh by
              default, but you may prefer to use rsh on a local network.

              If this option is used with [[uusseerr@@]]hhoosstt::::mmoodduullee//ppaatthh, then the
              remote shell _C_O_M_M_A_N_D will be used to run an rsync daemon on the
              remote host, and all data will be transmitted through that
              remote shell connection, rather than through a direct socket
              connection to a running rsync daemon on the remote host.  See
              the section ""USING RSYNC-DAEMON FEATURES VIA A REMOTE-SHELL
              CONNECTION"" above.

              Command-line arguments are permitted in COMMAND provided that
              COMMAND is presented to rsync as a single argument.  You must
              use spaces (not tabs or other whitespace) to separate the
              command and args from each other, and you can use single- and/or
              double-quotes to preserve spaces in an argument (but not
              backslashes).  Note that doubling a single-quote inside a
              single-quoted string gives you a single-quote; likewise for
              double-quotes (though you need to pay attention to which quotes
              your shell is parsing and which quotes rsync is parsing).  Some
              examples:
                  -e 'ssh -p 2234'
                  -e 'ssh -o ""ProxyCommand nohup ssh firewall nc -w1 %h %p""'


              (Note that ssh users can alternately customize site-specific
              connect options in their .ssh/config file.)

              You can also choose the remote shell program using the RSYNC_RSH
              environment variable, which accepts the same range of values as
              --ee.

              See also the ----bblloocckkiinngg--iioo option which is affected by this
              option.

       ----rrssyynncc--ppaatthh==PPRROOGGRRAAMM
              Use this to specify what program is to be run on the remote
              machine to start-up rsync.  Often used when rsync is not in the
              default remote-shell's path (e.g.
              --rsync-path=/usr/local/bin/rsync).  Note that PROGRAM is run
              with the help of a shell, so it can be any program, script, or
              command sequence you'd care to run, so long as it does not
              corrupt the standard-in & standard-out that rsync is using to
              communicate.

              One tricky example is to set a different default directory on
              the remote machine for use with the ----rreellaattiivvee option.  For
              instance:
                  rsync -avR --rsync-path=""cd /a/b && rsync"" hst:c/d /e/


       --CC,, ----ccvvss--eexxcclluuddee
              This is a useful shorthand for excluding a broad range of files
              that you often don't want to transfer between systems. It uses
              the same algorithm that CVS uses to determine if a file should
              be ignored.

              The exclude list is initialized to:
                     RCS SCCS CVS CVS.adm RCSLOG cvslog.* tags TAGS
                     .make.state .nse_depinfo *~ #* .#* ,* _$* *$ *.old *.bak
                     *.BAK *.orig *.rej .del-* *.a *.olb *.o *.obj *.so *.exe
                     *.Z *.elc *.ln core .svn/


              then files listed in a $HOME/.cvsignore are added to the list
              and any files listed in the CVSIGNORE environment variable (all
              cvsignore names are delimited by whitespace).

              Finally, any file is ignored if it is in the same directory as a
              .cvsignore file and matches one of the patterns listed therein.
              Unlike rsync's filter/exclude files, these patterns are split on
              whitespace.  See the ccvvss(1) manual for more information.

              If you're combining --CC with your own ----ffiilltteerr rules, you should
              note that these CVS excludes are appended at the end of your own
              rules, regardless of where the --CC was placed on the command-
              line.  This makes them a lower priority than any rules you
              specified explicitly.  If you want to control where these CVS
              excludes get inserted into your filter rules, you should omit
              the --CC as a command-line option and use a combination of
              ----ffiilltteerr==::CC and ----ffiilltteerr==--CC (either on your command-line or by
              putting the "":C"" and ""-C"" rules into a filter file with your
              other rules).  The first option turns on the per-directory
              scanning for the .cvsignore file.  The second option does a one-
              time import of the CVS excludes mentioned above.

       --ff,, ----ffiilltteerr==RRUULLEE
              This option allows you to add rules to selectively exclude
              certain files from the list of files to be transferred. This is
              most useful in combination with a recursive transfer.

              You may use as many ----ffiilltteerr options on the command line as you
              like to build up the list of files to exclude.

              See the FILTER RULES section for detailed information on this
              option.

       --FF     The --FF option is a shorthand for adding two ----ffiilltteerr rules to
              your command.  The first time it is used is a shorthand for this
              rule:
                 --filter='dir-merge /.rsync-filter'


              This tells rsync to look for per-directory .rsync-filter files
              that have been sprinkled through the hierarchy and use their
              rules to filter the files in the transfer.  If --FF is repeated,
              it is a shorthand for this rule:
                 --filter='exclude .rsync-filter'


              This filters out the .rsync-filter files themselves from the
              transfer.

              See the FILTER RULES section for detailed information on how
              these options work.

       ----eexxcclluuddee==PPAATTTTEERRNN
              This option is a simplified form of the ----ffiilltteerr option that
              defaults to an exclude rule and does not allow the full rule-
              parsing syntax of normal filter rules.

              See the FILTER RULES section for detailed information on this
              option.

       ----eexxcclluuddee--ffrroomm==FFIILLEE
              This option is related to the ----eexxcclluuddee option, but it specifies
              a FILE that contains exclude patterns (one per line).  Blank
              lines in the file and lines starting with ';' or '#' are
              ignored.  If _F_I_L_E is --, the list will be read from standard
              input.

       ----iinncclluuddee==PPAATTTTEERRNN
              This option is a simplified form of the ----ffiilltteerr option that
              defaults to an include rule and does not allow the full rule-
              parsing syntax of normal filter rules.

              See the FILTER RULES section for detailed information on this
              option.

       ----iinncclluuddee--ffrroomm==FFIILLEE
              This option is related to the ----iinncclluuddee option, but it specifies
              a FILE that contains include patterns (one per line).  Blank
              lines in the file and lines starting with ';' or '#' are
              ignored.  If _F_I_L_E is --, the list will be read from standard
              input.

       ----ffiilleess--ffrroomm==FFIILLEE
              Using this option allows you to specify the exact list of files
              to transfer (as read from the specified FILE or -- for standard
              input).  It also tweaks the default behavior of rsync to make
              transferring just the specified files and directories easier:

              o      The ----rreellaattiivvee (--RR) option is implied, which preserves
                     the path information that is specified for each item in
                     the file (use ----nnoo--rreellaattiivvee or ----nnoo--RR if you want to turn
                     that off).

              o      The ----ddiirrss (--dd) option is implied, which will create
                     directories specified in the list on the destination
                     rather than noisily skipping them (use ----nnoo--ddiirrss or
                     ----nnoo--dd if you want to turn that off).

              o      The ----aarrcchhiivvee (--aa) option's behavior does not imply
                     ----rreeccuurrssiivvee (--rr), so specify it explicitly, if you want
                     it.

              o      These side-effects change the default state of rsync, so
                     the position of the ----ffiilleess--ffrroomm option on the command-
                     line has no bearing on how other options are parsed (e.g.
                     --aa works the same before or after ----ffiilleess--ffrroomm, as does
                     ----nnoo--RR and all other options).


              The file names that are read from the FILE are all relative to
              the source dir -- any leading slashes are removed and no ""..""
              references are allowed to go higher than the source dir.  For
              example, take this command:
                 rsync -a --files-from=/tmp/foo /usr remote:/backup


              If /tmp/foo contains the string ""bin"" (or even ""/bin""), the
              /usr/bin directory will be created as /backup/bin on the remote
              host.  If it contains ""bin/"" (note the trailing slash), the
              immediate contents of the directory would also be sent (without
              needing to be explicitly mentioned in the file -- this began in
              version 2.6.4).  In both cases, if the --rr option was enabled,
              that dir's entire hierarchy would also be transferred (keep in
              mind that --rr needs to be specified explicitly with ----ffiilleess--ffrroomm,
              since it is not implied by --aa).  Also note that the effect of
              the (enabled by default) ----rreellaattiivvee option is to duplicate only
              the path info that is read from the file -- it does not force
              the duplication of the source-spec path (/usr in this case).

              In addition, the ----ffiilleess--ffrroomm file can be read from the remote
              host instead of the local host if you specify a ""host:"" in front
              of the file (the host must match one end of the transfer).  As a
              short-cut, you can specify just a prefix of "":"" to mean ""use the
              remote end of the transfer"".  For example:
                 rsync -a --files-from=:/path/file-list src:/ /tmp/copy


              This would copy all the files specified in the /path/file-list
              file that was located on the remote ""src"" host.

       --00,, ----ffrroomm00
              This tells rsync that the rules/filenames it reads from a file
              are terminated by a null ('\0') character, not a NL, CR, or
              CR+LF.  This affects ----eexxcclluuddee--ffrroomm, ----iinncclluuddee--ffrroomm,
              ----ffiilleess--ffrroomm, and any merged files specified in a ----ffiilltteerr rule.
              It does not affect ----ccvvss--eexxcclluuddee (since all names read from a
              .cvsignore file are split on whitespace).

       --TT,, ----tteemmpp--ddiirr==DDIIRR
              This option instructs rsync to use DIR as a scratch directory
              when creating temporary copies of the files transferred on the
              receiving side.  The default behavior is to create each
              temporary file in the same directory as the associated
              destination file.

              This option is most often used when the receiving disk partition
              does not have enough free space to hold a copy of the largest
              file in the transfer.  In this case (i.e. when the scratch
              directory in on a different disk partition), rsync will not be
              able to rename each received temporary file over the top of the
              associated destination file, but instead must copy it into
              place.  Rsync does this by copying the file over the top of the
              destination file, which means that the destination file will
              contain truncated data during this copy.  If this were not done
              this way (even if the destination file were first removed, the
              data locally copied to a temporary file in the destination
              directory, and then renamed into place) it would be possible for
              the old file to continue taking up disk space (if someone had it
              open), and thus there might not be enough room to fit the new
              version on the disk at the same time.

              If you are using this option for reasons other than a shortage
              of disk space, you may wish to combine it with the
              ----ddeellaayy--uuppddaatteess option, which will ensure that all copied files
              get put into subdirectories in the destination hierarchy,
              awaiting the end of the transfer.  If you don't have enough room
              to duplicate all the arriving files on the destination
              partition, another way to tell rsync that you aren't overly
              concerned about disk space is to use the ----ppaarrttiiaall--ddiirr option
              with a relative path; because this tells rsync that it is OK to
              stash off a copy of a single file in a subdir in the destination
              hierarchy, rsync will use the partial-dir as a staging area to
              bring over the copied file, and then rename it into place from
              there. (Specifying a ----ppaarrttiiaall--ddiirr with an absolute path does
              not have this side-effect.)

       --yy,, ----ffuuzzzzyy
              This option tells rsync that it should look for a basis file for
              any destination file that is missing.  The current algorithm
              looks in the same directory as the destination file for either a
              file that has an identical size and modified-time, or a
              similarly-named file.  If found, rsync uses the fuzzy basis file
              to try to speed up the transfer.

              Note that the use of the ----ddeelleettee option might get rid of any
              potential fuzzy-match files, so either use ----ddeelleettee--aafftteerr or
              specify some filename exclusions if you need to prevent this.

       ----ccoommppaarree--ddeesstt==DDIIRR
              This option instructs rsync to use _D_I_R on the destination
              machine as an additional hierarchy to compare destination files
              against doing transfers (if the files are missing in the
              destination directory).  If a file is found in _D_I_R that is
              identical to the sender's file, the file will NOT be transferred
              to the destination directory.  This is useful for creating a
              sparse backup of just files that have changed from an earlier
              backup.

              Beginning in version 2.6.4, multiple ----ccoommppaarree--ddeesstt directories
              may be provided, which will cause rsync to search the list in
              the order specified for an exact match.  If a match is found
              that differs only in attributes, a local copy is made and the
              attributes updated.  If a match is not found, a basis file from
              one of the _D_I_Rs will be selected to try to speed up the
              transfer.

              If _D_I_R is a relative path, it is relative to the destination
              directory.  See also ----ccooppyy--ddeesstt and ----lliinnkk--ddeesstt.

       ----ccooppyy--ddeesstt==DDIIRR
              This option behaves like ----ccoommppaarree--ddeesstt, but rsync will also
              copy unchanged files found in _D_I_R to the destination directory
              using a local copy.  This is useful for doing transfers to a new
              destination while leaving existing files intact, and then doing
              a flash-cutover when all files have been successfully
              transferred.

              Multiple ----ccooppyy--ddeesstt directories may be provided, which will
              cause rsync to search the list in the order specified for an
              unchanged file.  If a match is not found, a basis file from one
              of the _D_I_Rs will be selected to try to speed up the transfer.

              If _D_I_R is a relative path, it is relative to the destination
              directory.  See also ----ccoommppaarree--ddeesstt and ----lliinnkk--ddeesstt.

       ----lliinnkk--ddeesstt==DDIIRR
              This option behaves like ----ccooppyy--ddeesstt, but unchanged files are
              hard linked from _D_I_R to the destination directory.  The files
              must be identical in all preserved attributes (e.g. permissions,
              possibly ownership) in order for the files to be linked
              together.  An example:
                rsync -av --link-dest=$PWD/prior_dir host:src_dir/ new_dir/


              Beginning in version 2.6.4, multiple ----lliinnkk--ddeesstt directories may
              be provided, which will cause rsync to search the list in the
              order specified for an exact match.  If a match is found that
              differs only in attributes, a local copy is made and the
              attributes updated.  If a match is not found, a basis file from
              one of the _D_I_Rs will be selected to try to speed up the
              transfer.

              Note that if you combine this option with ----iiggnnoorree--ttiimmeess, rsync
              will not link any files together because it only links identical
              files together as a substitute for transferring the file, never
              as an additional check after the file is updated.

              If _D_I_R is a relative path, it is relative to the destination
              directory.  See also ----ccoommppaarree--ddeesstt and ----ccooppyy--ddeesstt.

              Note that rsync versions prior to 2.6.1 had a bug that could
              prevent ----lliinnkk--ddeesstt from working properly for a non-super-user
              when --oo was specified (or implied by --aa).  You can work-around
              this bug by avoiding the --oo option when sending to an old rsync.

       --zz,, ----ccoommpprreessss
              With this option, rsync compresses the file data as it is sent
              to the destination machine, which reduces the amount of data
              being transmitted -- something that is useful over a slow
              connection.

              Note that this option typically achieves better compression
              ratios than can be achieved by using a compressing remote shell
              or a compressing transport because it takes advantage of the
              implicit information in the matching data blocks that are not
              explicitly sent over the connection.

       ----ccoommpprreessss--lleevveell==NNUUMM
              Explicitly set the compression level to use (see ----ccoommpprreessss)
              instead of letting it default.  If NUM is non-zero, the
              ----ccoommpprreessss option is implied.

       ----nnuummeerriicc--iiddss
              With this option rsync will transfer numeric group and user IDs
              rather than using user and group names and mapping them at both
              ends.

              By default rsync will use the username and groupname to
              determine what ownership to give files. The special uid 0 and
              the special group 0 are never mapped via user/group names even
              if the ----nnuummeerriicc--iiddss option is not specified.

              If a user or group has no name on the source system or it has no
              match on the destination system, then the numeric ID from the
              source system is used instead.  See also the comments on the
              ""use chroot"" setting in the rsyncd.conf manpage for information
              on how the chroot setting affects rsync's ability to look up the
              names of the users and groups and what you can do about it.

       ----ttiimmeeoouutt==TTIIMMEEOOUUTT
              This option allows you to set a maximum I/O timeout in seconds.
              If no data is transferred for the specified time then rsync will
              exit. The default is 0, which means no timeout.

       ----aaddddrreessss
              By default rsync will bind to the wildcard address when
              connecting to an rsync daemon.  The ----aaddddrreessss option allows you
              to specify a specific IP address (or hostname) to bind to.  See
              also this option in the ----ddaaeemmoonn mode section.

       ----ppoorrtt==PPOORRTT
              This specifies an alternate TCP port number to use rather than
              the default of 873.  This is only needed if you are using the
              double-colon (::) syntax to connect with an rsync daemon (since
              the URL syntax has a way to specify the port as a part of the
              URL).  See also this option in the ----ddaaeemmoonn mode section.

       ----ssoocckkooppttss
              This option can provide endless fun for people who like to tune
              their systems to the utmost degree. You can set all sorts of
              socket options which may make transfers faster (or slower!).
              Read the man page for the setsockopt() system call for details
              on some of the options you may be able to set. By default no
              special socket options are set. This only affects direct socket
              connections to a remote rsync daemon.  This option also exists
              in the ----ddaaeemmoonn mode section.

       ----bblloocckkiinngg--iioo
              This tells rsync to use blocking I/O when launching a remote
              shell transport.  If the remote shell is either rsh or remsh,
              rsync defaults to using blocking I/O, otherwise it defaults to
              using non-blocking I/O.  (Note that ssh prefers non-blocking
              I/O.)

       --ii,, ----iitteemmiizzee--cchhaannggeess
              Requests a simple itemized list of the changes that are being
              made to each file, including attribute changes.  This is exactly
              the same as specifying ----oouutt--ffoorrmmaatt==''%%ii %%nn%%LL''.  If you repeat
              the option, unchanged files will also be output, but only if the
              receiving rsync is at least version 2.6.7 (you can use --vvvv with
              older versions of rsync, but that also turns on the output of
              other verbose messages).

              The ""%i"" escape has a cryptic output that is 9 letters long.
              The general format is like the string YYXXccssttppooggzz, where YY is
              replaced by the type of update being done, XX is replaced by the
              file-type, and the other letters represent attributes that may
              be output if they are being modified.

              The update types that replace the YY are as follows:

              o      A << means that a file is being transferred to the remote
                     host (sent).

              o      A >> means that a file is being transferred to the local
                     host (received).

              o      A cc means that a local change/creation is occurring for
                     the item (such as the creation of a directory or the
                     changing of a symlink, etc.).

              o      A hh means that the item is a hard link to another item
                     (requires ----hhaarrdd--lliinnkkss).

              o      A .. means that the item is not being updated (though it
                     might have attributes that are being modified).


              The file-types that replace the XX are: ff for a file, a dd for a
              directory, an LL for a symlink, a DD for a device, and a SS for a
              special file (e.g. named sockets and fifos).

              The other letters in the string above are the actual letters
              that will be output if the associated attribute for the item is
              being updated or a ""."" for no change.  Three exceptions to this
              are: (1) a newly created item replaces each letter with a ""+"",
              (2) an identical item replaces the dots with spaces, and (3) an
              unknown attribute replaces each letter with a ""?"" (this can
              happen when talking to an older rsync).

              The attribute that is associated with each letter is as follows:

              o      A cc means the checksum of the file is different and will
                     be updated by the file transfer (requires ----cchheecckkssuumm).

              o      A ss means the size of the file is different and will be
                     updated by the file transfer.

              o      A tt means the modification time is different and is being
                     updated to the sender's value (requires ----ttiimmeess).  An
                     alternate value of TT means that the time will be set to
                     the transfer time, which happens anytime a symlink is
                     transferred, or when a file or device is transferred
                     without ----ttiimmeess.

              o      A pp means the permissions are different and are being
                     updated to the sender's value (requires ----ppeerrmmss).

              o      An oo means the owner is different and is being updated to
                     the sender's value (requires ----oowwnneerr and super-user
                     privileges).

              o      A gg means the group is different and is being updated to
                     the sender's value (requires ----ggrroouupp and the authority to
                     set the group).

              o      The zz slot is reserved for future use.


              One other output is possible:  when deleting files, the ""%i""
              will output the string ""*deleting"" for each item that is being
              removed (assuming that you are talking to a recent enough rsync
              that it logs deletions instead of outputting them as a verbose
              message).

       ----oouutt--ffoorrmmaatt==FFOORRMMAATT
              This allows you to specify exactly what the rsync client outputs
              to the user on a per-update basis.  The format is a text string
              containing embedded single-character escape sequences prefixed
              with a percent (%) character.  For a list of the possible escape
              characters, see the ""log format"" setting in the rsyncd.conf
              manpage.

              Specifying this option will mention each file, dir, etc. that
              gets updated in a significant way (a transferred file, a
              recreated symlink/device, or a touched directory).  In addition,
              if the itemize-changes escape (%i) is included in the string,
              the logging of names increases to mention any item that is
              changed in any way (as long as the receiving side is at least
              2.6.4).  See the ----iitteemmiizzee--cchhaannggeess option for a description of
              the output of ""%i"".

              The ----vveerrbboossee option implies a format of ""%n%L"", but you can use
              ----oouutt--ffoorrmmaatt without ----vveerrbboossee if you like, or you can override
              the format of its per-file output using this option.

              Rsync will output the out-format string prior to a file's
              transfer unless one of the transfer-statistic escapes is
              requested, in which case the logging is done at the end of the
              file's transfer.  When this late logging is in effect and
              ----pprrooggrreessss is also specified, rsync will also output the name of
              the file being transferred prior to its progress information
              (followed, of course, by the out-format output).

       ----lloogg--ffiillee==FFIILLEE
              This option causes rsync to log what it is doing to a file.
              This is similar to the logging that a daemon does, but can be
              requested for the client side and/or the server side of a non-
              daemon transfer.  If specified as a client option, transfer
              logging will be enabled with a default format of ""%i %n%L"".  See
              the ----lloogg--ffiillee--ffoorrmmaatt option if you wish to override this.

              Here's a example command that requests the remote side to log
              what is happening:

                rsync -av --rsync-path=""rsync --log-file=/tmp/rlog"" src/ dest/


              This is very useful if you need to debug why a connection is
              closing unexpectedly.

       ----lloogg--ffiillee--ffoorrmmaatt==FFOORRMMAATT
              This allows you to specify exactly what per-update logging is
              put into the file specified by the ----lloogg--ffiillee option (which must
              also be specified for this option to have any effect).  If you
              specify an empty string, updated files will not be mentioned in
              the log file.  For a list of the possible escape characters, see
              the ""log format"" setting in the rsyncd.conf manpage.

       ----ssttaattss
              This tells rsync to print a verbose set of statistics on the
              file transfer, allowing you to tell how effective the rsync
              algorithm is for your data.

              The current statistics are as follows:

              o      NNuummbbeerr ooff ffiilleess is the count of all ""files"" (in the
                     generic sense), which includes directories, symlinks,
                     etc.

              o      NNuummbbeerr ooff ffiilleess ttrraannssffeerrrreedd is the count of normal files
                     that were updated via the rsync algorithm, which does not
                     include created dirs, symlinks, etc.

              o      TToottaall ffiillee ssiizzee is the total sum of all file sizes in the
                     transfer.  This does not count any size for directories
                     or special files, but does include the size of symlinks.

              o      TToottaall ttrraannssffeerrrreedd ffiillee ssiizzee is the total sum of all files
                     sizes for just the transferred files.

              o      LLiitteerraall ddaattaa is how much unmatched file-update data we
                     had to send to the receiver for it to recreate the
                     updated files.

              o      MMaattcchheedd ddaattaa is how much data the receiver got locally
                     when recreating the updated files.

              o      FFiillee lliisstt ssiizzee is how big the file-list data was when the
                     sender sent it to the receiver.  This is smaller than the
                     in-memory size for the file list due to some compressing
                     of duplicated data when rsync sends the list.

              o      FFiillee lliisstt ggeenneerraattiioonn ttiimmee is the number of seconds that
                     the sender spent creating the file list.  This requires a
                     modern rsync on the sending side for this to be present.

              o      FFiillee lliisstt ttrraannssffeerr ttiimmee is the number of seconds that the
                     sender spent sending the file list to the receiver.

              o      TToottaall bbyytteess sseenntt is the count of all the bytes that rsync
                     sent from the client side to the server side.

              o      TToottaall bbyytteess rreecceeiivveedd is the count of all non-message
                     bytes that rsync received by the client side from the
                     server side.  ""Non-message"" bytes means that we don't
                     count the bytes for a verbose message that the server
                     sent to us, which makes the stats more consistent.


       --88,, ----88--bbiitt--oouuttppuutt
              This tells rsync to leave all high-bit characters unescaped in
              the output instead of trying to test them to see if they're
              valid in the current locale and escaping the invalid ones.  All
              control characters (but never tabs) are always escaped,
              regardless of this option's setting.

              The escape idiom that started in 2.6.7 is to output a literal
              backslash (\) and a hash (#), followed by exactly 3 octal
              digits.  For example, a newline would output as ""\#012"".  A
              literal backslash that is in a filename is not escaped unless it
              is followed by a hash and 3 digits (0-9).

       --hh,, ----hhuummaann--rreeaaddaabbllee
              Output numbers in a more human-readable format.  This makes big
              numbers output using larger units, with a K, M, or G suffix.  If
              this option was specified once, these units are K (1000), M
              (1000*1000), and G (1000*1000*1000); if the option is repeated,
              the units are powers of 1024 instead of 1000.

       ----ppaarrttiiaall
              By default, rsync will delete any partially transferred file if
              the transfer is interrupted. In some circumstances it is more
              desirable to keep partially transferred files. Using the
              ----ppaarrttiiaall option tells rsync to keep the partial file which
              should make a subsequent transfer of the rest of the file much
              faster.

       ----ppaarrttiiaall--ddiirr==DDIIRR
              A better way to keep partial files than the ----ppaarrttiiaall option is
              to specify a _D_I_R that will be used to hold the partial data
              (instead of writing it out to the destination file).  On the
              next transfer, rsync will use a file found in this dir as data
              to speed up the resumption of the transfer and then delete it
              after it has served its purpose.

              Note that if ----wwhhoollee--ffiillee is specified (or implied), any
              partial-dir file that is found for a file that is being updated
              will simply be removed (since rsync is sending files without
              using the incremental rsync algorithm).

              Rsync will create the _D_I_R if it is missing (just the last dir --
              not the whole path).  This makes it easy to use a relative path
              (such as ""----ppaarrttiiaall--ddiirr==..rrssyynncc--ppaarrttiiaall"") to have rsync create
              the partial-directory in the destination file's directory when
              needed, and then remove it again when the partial file is
              deleted.

              If the partial-dir value is not an absolute path, rsync will add
              an exclude rule at the end of all your existing excludes.  This
              will prevent the sending of any partial-dir files that may exist
              on the sending side, and will also prevent the untimely deletion
              of partial-dir items on the receiving side.  An example: the
              above ----ppaarrttiiaall--ddiirr option would add the equivalent of
              ""----eexxcclluuddee==..rrssyynncc--ppaarrttiiaall//"" at the end of any other filter
              rules.

              If you are supplying your own exclude rules, you may need to add
              your own exclude/hide/protect rule for the partial-dir because
              (1) the auto-added rule may be ineffective at the end of your
              other rules, or (2) you may wish to override rsync's exclude
              choice.  For instance, if you want to make rsync clean-up any
              left-over partial-dirs that may be lying around, you should
              specify ----ddeelleettee--aafftteerr and add a ""risk"" filter rule, e.g.  --ff ''RR
              ..rrssyynncc--ppaarrttiiaall//''.  (Avoid using ----ddeelleettee--bbeeffoorree or
              ----ddeelleettee--dduurriinngg unless you don't need rsync to use any of the
              left-over partial-dir data during the current run.)

              IMPORTANT: the ----ppaarrttiiaall--ddiirr should not be writable by other
              users or it is a security risk.  E.g. AVOID ""/tmp"".

              You can also set the partial-dir value the RSYNC_PARTIAL_DIR
              environment variable.  Setting this in the environment does not
              force ----ppaarrttiiaall to be enabled, but rather it affects where
              partial files go when ----ppaarrttiiaall is specified.  For instance,
              instead of using ----ppaarrttiiaall--ddiirr==..rrssyynncc--ttmmpp along with ----pprrooggrreessss,
              you could set RSYNC_PARTIAL_DIR=.rsync-tmp in your environment
              and then just use the --PP option to turn on the use of the
              .rsync-tmp dir for partial transfers.  The only times that the
              ----ppaarrttiiaall option does not look for this environment value are
              (1) when ----iinnppllaaccee was specified (since ----iinnppllaaccee conflicts with
              ----ppaarrttiiaall--ddiirr), and (2) when ----ddeellaayy--uuppddaatteess was specified (see
              below).

              For the purposes of the daemon-config's ""refuse options""
              setting, ----ppaarrttiiaall--ddiirr does _n_o_t imply ----ppaarrttiiaall.  This is so
              that a refusal of the ----ppaarrttiiaall option can be used to disallow
              the overwriting of destination files with a partial transfer,
              while still allowing the safer idiom provided by ----ppaarrttiiaall--ddiirr.

       ----ddeellaayy--uuppddaatteess
              This option puts the temporary file from each updated file into
              a holding directory until the end of the transfer, at which time
              all the files are renamed into place in rapid succession.  This
              attempts to make the updating of the files a little more atomic.
              By default the files are placed into a directory named "".~tmp~""
              in each file's destination directory, but if you've specified
              the ----ppaarrttiiaall--ddiirr option, that directory will be used instead.
              See the comments in the ----ppaarrttiiaall--ddiirr section for a discussion
              of how this "".~tmp~"" dir will be excluded from the transfer, and
              what you can do if you wnat rsync to cleanup old "".~tmp~"" dirs
              that might be lying around.  Conflicts with ----iinnppllaaccee and
              ----aappppeenndd.

              This option uses more memory on the receiving side (one bit per
              file transferred) and also requires enough free disk space on
              the receiving side to hold an additional copy of all the updated
              files.  Note also that you should not use an absolute path to
              ----ppaarrttiiaall--ddiirr unless (1) there is no chance of any of the files
              in the transfer having the same name (since all the updated
              files will be put into a single directory if the path is
              absolute) and (2) there are no mount points in the hierarchy
              (since the delayed updates will fail if they can't be renamed
              into place).

              See also the ""atomic-rsync"" perl script in the ""support"" subdir
              for an update algorithm that is even more atomic (it uses
              ----lliinnkk--ddeesstt and a parallel hierarchy of files).

       --mm,, ----pprruunnee--eemmppttyy--ddiirrss
              This option tells the receiving rsync to get rid of empty
              directories from the file-list, including nested directories
              that have no non-directory children.  This is useful for
              avoiding the creation of a bunch of useless directories when the
              sending rsync is recursively scanning a hierarchy of files using
              include/exclude/filter rules.

              Because the file-list is actually being pruned, this option also
              affects what directories get deleted when a delete is active.
              However, keep in mind that excluded files and directories can
              prevent existing items from being deleted (because an exclude
              hides source files and protects destination files).

              You can prevent the pruning of certain empty directories from
              the file-list by using a global ""protect"" filter.  For instance,
              this option would ensure that the directory ""emptydir"" was kept
              in the file-list:
              --filter 'protect emptydir/'


              Here's an example that copies all .pdf files in a hierarchy,
              only creating the necessary destination directories to hold the
              .pdf files, and ensures that any superfluous files and
              directories in the destination are removed (note the hide filter
              of non-directories being used instead of an exclude):
              rsync -avm --del --include='*.pdf' -f 'hide,! */' src/ dest


              If you didn't want to remove superfluous destination files, the
              more time-honored options of ""--include='*/' --exclude='*'""
              would work fine in place of the hide-filter (if that is more
              natural to you).

       ----pprrooggrreessss
              This option tells rsync to print information showing the
              progress of the transfer. This gives a bored user something to
              watch.  Implies ----vveerrbboossee if it wasn't already specified.

              While rsync is transferring a regular file, it updates a
              progress line that looks like this:

                    782448  63%  110.64kB/s    0:00:04


              In this example, the receiver has reconstructed 782448 bytes or
              63% of the sender's file, which is being reconstructed at a rate
              of 110.64 kilobytes per second, and the transfer will finish in
              4 seconds if the current rate is maintained until the end.

              These statistics can be misleading if the incremental transfer
              algorithm is in use.  For example, if the sender's file consists
              of the basis file followed by additional data, the reported rate
              will probably drop dramatically when the receiver gets to the
              literal data, and the transfer will probably take much longer to
              finish than the receiver estimated as it was finishing the
              matched part of the file.

              When the file transfer finishes, rsync replaces the progress
              line with a summary line that looks like this:

                   1238099 100%  146.38kB/s    0:00:08  (xfer#5, to-check=169/396)


              In this example, the file was 1238099 bytes long in total, the
              average rate of transfer for the whole file was 146.38 kilobytes
              per second over the 8 seconds that it took to complete, it was
              the 5th transfer of a regular file during the current rsync
              session, and there are 169 more files for the receiver to check
              (to see if they are up-to-date or not) remaining out of the 396
              total files in the file-list.

       --PP     The --PP option is equivalent to ----ppaarrttiiaall ----pprrooggrreessss.  Its
              purpose is to make it much easier to specify these two options
              for a long transfer that may be interrupted.

       ----ppaasssswwoorrdd--ffiillee
              This option allows you to provide a password in a file for
              accessing a remote rsync daemon. Note that this option is only
              useful when accessing an rsync daemon using the built in
              transport, not when using a remote shell as the transport. The
              file must not be world readable. It should contain just the
              password as a single line.

       ----lliisstt--oonnllyy
              This option will cause the source files to be listed instead of
              transferred.  This option is inferred if there is a single
              source arg and no destination specified, so its main uses are:
              (1) to turn a copy command that includes a destination arg into
              a file-listing command, (2) to be able to specify more than one
              local source arg (note: be sure to include the destination), or
              (3) to avoid the automatically added ""--rr ----eexxcclluuddee==''//**//**''""
              options that rsync usually uses as a compatibility kluge when
              generating a non-recursive listing.  Caution: keep in mind that
              a source arg with a wild-card is expanded by the shell into
              multiple args, so it is never safe to try to list such an arg
              without using this option.  For example:

                  rsync -av --list-only foo* dest/


       ----bbwwlliimmiitt==KKBBPPSS
              This option allows you to specify a maximum transfer rate in
              kilobytes per second. This option is most effective when using
              rsync with large files (several megabytes and up). Due to the
              nature of rsync transfers, blocks of data are sent, then if
              rsync determines the transfer was too fast, it will wait before
              sending the next data block. The result is an average transfer
              rate equaling the specified limit. A value of zero specifies no
              limit.

       ----wwrriittee--bbaattcchh==FFIILLEE
              Record a file that can later be applied to another identical
              destination with ----rreeaadd--bbaattcchh. See the ""BATCH MODE"" section for
              details, and also the ----oonnllyy--wwrriittee--bbaattcchh option.

       ----oonnllyy--wwrriittee--bbaattcchh==FFIILLEE
              Works like ----wwrriittee--bbaattcchh, except that no updates are made on the
              destination system when creating the batch.  This lets you
              transport the changes to the destination system via some other
              means and then apply the changes via ----rreeaadd--bbaattcchh.

              Note that you can feel free to write the batch directly to some
              portable media: if this media fills to capacity before the end
              of the transfer, you can just apply that partial transfer to the
              destination and repeat the whole process to get the rest of the
              changes (as long as you don't mind a partially updated
              destination system while the multi-update cycle is happening).

              Also note that you only save bandwidth when pushing changes to a
              remote system because this allows the batched data to be
              diverted from the sender into the batch file without having to
              flow over the wire to the receiver (when pulling, the sender is
              remote, and thus can't write the batch).

       ----rreeaadd--bbaattcchh==FFIILLEE
              Apply all of the changes stored in FILE, a file previously
              generated by ----wwrriittee--bbaattcchh.  If _F_I_L_E is --, the batch data will
              be read from standard input.  See the ""BATCH MODE"" section for
              details.

       ----pprroottooccooll==NNUUMM
              Force an older protocol version to be used.  This is useful for
              creating a batch file that is compatible with an older version
              of rsync.  For instance, if rsync 2.6.4 is being used with the
              ----wwrriittee--bbaattcchh option, but rsync 2.6.3 is what will be used to
              run the ----rreeaadd--bbaattcchh option, you should use ""--protocol=28"" when
              creating the batch file to force the older protocol version to
              be used in the batch file (assuming you can't upgrade the rsync
              on the reading system).

       --44,, ----iippvv44 or --66,, ----iippvv66
              Tells rsync to prefer IPv4/IPv6 when creating sockets.  This
              only affects sockets that rsync has direct control over, such as
              the outgoing socket when directly contacting an rsync daemon.
              See also these options in the ----ddaaeemmoonn mode section.

       ----cchheecckkssuumm--sseeeedd==NNUUMM
              Set the MD4 checksum seed to the integer NUM.  This 4 byte
              checksum seed is included in each block and file MD4 checksum
              calculation.  By default the checksum seed is generated by the
              server and defaults to the current time() .  This option is used
              to set a specific checksum seed, which is useful for
              applications that want repeatable block and file checksums, or
              in the case where the user wants a more random checksum seed.
              Note that setting NUM to 0 causes rsync to use the default of
              time() for checksum seed.

       --EE,, ----eexxtteennddeedd--aattttrriibbuutteess
              Apple specific option to copy extended attributes, resource
              forks, and ACLs.  Requires at least Mac OS X 10.4 or suitably
              patched rsync.

       ----ccaacchhee
              Apple specific option to enable filesystem caching of rsync file
              i/o Otherwise fcntl(F_NOCACHE) is used to limit memory growth.

DDAAEEMMOONN OOPPTTIIOONNSS
       The options allowed when starting an rsync daemon are as follows:

       ----ddaaeemmoonn
              This tells rsync that it is to run as a daemon.  The daemon you
              start running may be accessed using an rsync client using the
              hhoosstt::::mmoodduullee or rrssyynncc::////hhoosstt//mmoodduullee// syntax.

              If standard input is a socket then rsync will assume that it is
              being run via inetd, otherwise it will detach from the current
              terminal and become a background daemon.  The daemon will read
              the config file (rsyncd.conf) on each connect made by a client
              and respond to requests accordingly.  See the rrssyynnccdd..ccoonnff(5) man
              page for more details.

       ----aaddddrreessss
              By default rsync will bind to the wildcard address when run as a
              daemon with the ----ddaaeemmoonn option.  The ----aaddddrreessss option allows
              you to specify a specific IP address (or hostname) to bind to.
              This makes virtual hosting possible in conjunction with the
              ----ccoonnffiigg option.  See also the ""address"" global option in the
              rsyncd.conf manpage.

       ----bbwwlliimmiitt==KKBBPPSS
              This option allows you to specify a maximum transfer rate in
              kilobytes per second for the data the daemon sends.  The client
              can still specify a smaller ----bbwwlliimmiitt value, but their requested
              value will be rounded down if they try to exceed it.  See the
              client version of this option (above) for some extra details.

       ----ccoonnffiigg==FFIILLEE
              This specifies an alternate config file than the default.  This
              is only relevant when ----ddaaeemmoonn is specified.  The default is
              /etc/rsyncd.conf unless the daemon is running over a remote
              shell program and the remote user is not the super-user; in that
              case the default is rsyncd.conf in the current directory
              (typically $HOME).

       ----nnoo--ddeettaacchh
              When running as a daemon, this option instructs rsync to not
              detach itself and become a background process.  This option is
              required when running as a service on Cygwin, and may also be
              useful when rsync is supervised by a program such as ddaaeemmoonnttoooollss
              or AIX's SSyysstteemm RReessoouurrccee CCoonnttrroolllleerr.  ----nnoo--ddeettaacchh is also
              recommended when rsync is run under a debugger.  This option has
              no effect if rsync is run from inetd or sshd.

       ----ppoorrtt==PPOORRTT
              This specifies an alternate TCP port number for the daemon to
              listen on rather than the default of 873.  See also the ""port""
              global option in the rsyncd.conf manpage.

       ----lloogg--ffiillee==FFIILLEE
              This option tells the rsync daemon to use the given log-file
              name instead of using the ""log file"" setting in the config file.

       ----lloogg--ffiillee--ffoorrmmaatt==FFOORRMMAATT
              This option tells the rsync daemon to use the given FORMAT
              string instead of using the ""log format"" setting in the config
              file.  It also enables ""transfer logging"" unless the string is
              empty, in which case transfer logging is turned off.

       ----ssoocckkooppttss
              This overrides the ssoocckkeett ooppttiioonnss setting in the rsyncd.conf
              file and has the same syntax.

       --vv,, ----vveerrbboossee
              This option increases the amount of information the daemon logs
              during its startup phase.  After the client connects, the
              daemon's verbosity level will be controlled by the options that
              the client used and the ""max verbosity"" setting in the module's
              config section.

       --44,, ----iippvv44 or --66,, ----iippvv66
              Tells rsync to prefer IPv4/IPv6 when creating the incoming
              sockets that the rsync daemon will use to listen for
              connections.  One of these options may be required in older
              versions of Linux to work around an IPv6 bug in the kernel (if
              you see an ""address already in use"" error when nothing else is
              using the port, try specifying ----iippvv66 or ----iippvv44 when starting
              the daemon).

       --hh,, ----hheellpp
              When specified after ----ddaaeemmoonn, print a short help page
              describing the options available for starting an rsync daemon.


FFIILLTTEERR RRUULLEESS
       The filter rules allow for flexible selection of which files to
       transfer (include) and which files to skip (exclude).  The rules either
       directly specify include/exclude patterns or they specify a way to
       acquire more include/exclude patterns (e.g. to read them from a file).

       As the list of files/directories to transfer is built, rsync checks
       each name to be transferred against the list of include/exclude
       patterns in turn, and the first matching pattern is acted on:  if it is
       an exclude pattern, then that file is skipped; if it is an include
       pattern then that filename is not skipped; if no matching pattern is
       found, then the filename is not skipped.

       Rsync builds an ordered list of filter rules as specified on the
       command-line.  Filter rules have the following syntax:

              RULE [PATTERN_OR_FILENAME]
              RULE,MODIFIERS [PATTERN_OR_FILENAME]


       You have your choice of using either short or long RULE names, as
       described below.  If you use a short-named rule, the ',' separating the
       RULE from the MODIFIERS is optional.  The PATTERN or FILENAME that
       follows (when present) must come after either a single space or an
       underscore (_).  Here are the available rule prefixes:

              eexxcclluuddee,, -- specifies an exclude pattern.
              iinncclluuddee,, ++ specifies an include pattern.
              mmeerrggee,, .. specifies a merge-file to read for more rules.
              ddiirr--mmeerrggee,, :: specifies a per-directory merge-file.
              hhiiddee,, HH specifies a pattern for hiding files from the transfer.
              sshhooww,, SS files that match the pattern are not hidden.
              pprrootteecctt,, PP specifies a pattern for protecting files from
              deletion.
              rriisskk,, RR files that match the pattern are not protected.
              cclleeaarr,, !! clears the current include/exclude list (takes no arg)


       When rules are being read from a file, empty lines are ignored, as are
       comment lines that start with a ""#"".

       Note that the ----iinncclluuddee/----eexxcclluuddee command-line options do not allow the
       full range of rule parsing as described above -- they only allow the
       specification of include/exclude patterns plus a ""!"" token to clear the
       list (and the normal comment parsing when rules are read from a file).
       If a pattern does not begin with ""- "" (dash, space) or ""+ "" (plus,
       space), then the rule will be interpreted as if ""+ "" (for an include
       option) or ""- "" (for an exclude option) were prefixed to the string.  A
       ----ffiilltteerr option, on the other hand, must always contain either a short
       or long rule name at the start of the rule.

       Note also that the ----ffiilltteerr, ----iinncclluuddee, and ----eexxcclluuddee options take one
       rule/pattern each. To add multiple ones, you can repeat the options on
       the command-line, use the merge-file syntax of the ----ffiilltteerr option, or
       the ----iinncclluuddee--ffrroomm/----eexxcclluuddee--ffrroomm options.

IINNCCLLUUDDEE//EEXXCCLLUUDDEE PPAATTTTEERRNN RRUULLEESS
       You can include and exclude files by specifying patterns using the ""+"",
       ""-"", etc. filter rules (as introduced in the FILTER RULES section
       above).  The include/exclude rules each specify a pattern that is
       matched against the names of the files that are going to be
       transferred.  These patterns can take several forms:

       o      if the pattern starts with a / then it is anchored to a
              particular spot in the hierarchy of files, otherwise it is
              matched against the end of the pathname.  This is similar to a
              leading ^ in regular expressions.  Thus ""/foo"" would match a
              file named ""foo"" at either the ""root of the transfer"" (for a
              global rule) or in the merge-file's directory (for a per-
              directory rule).  An unqualified ""foo"" would match any file or
              directory named ""foo"" anywhere in the tree because the algorithm
              is applied recursively from the top down; it behaves as if each
              path component gets a turn at being the end of the file name.
              Even the unanchored ""sub/foo"" would match at any point in the
              hierarchy where a ""foo"" was found within a directory named
              ""sub"".  See the section on ANCHORING INCLUDE/EXCLUDE PATTERNS
              for a full discussion of how to specify a pattern that matches
              at the root of the transfer.

       o      if the pattern ends with a / then it will only match a
              directory, not a file, link, or device.

       o      rsync chooses between doing a simple string match and wildcard
              matching by checking if the pattern contains one of these three
              wildcard characters: '*', '?', and '[' .

       o      a '*' matches any non-empty path component (it stops at
              slashes).

       o      use '**' to match anything, including slashes.

       o      a '?' matches any character except a slash (/).

       o      a '[' introduces a character class, such as [a-z] or
              [[:alpha:]].

       o      in a wildcard pattern, a backslash can be used to escape a
              wildcard character, but it is matched literally when no
              wildcards are present.

       o      if the pattern contains a / (not counting a trailing /) or a
              ""**"", then it is matched against the full pathname, including
              any leading directories. If the pattern doesn't contain a / or a
              ""**"", then it is matched only against the final component of the
              filename.  (Remember that the algorithm is applied recursively
              so ""full filename"" can actually be any portion of a path from
              the starting directory on down.)

       o      a trailing ""dir_name/***"" will match both the directory (as if
              ""dir_name/"" had been specified) and all the files in the
              directory (as if ""dir_name/**"" had been specified).  (This
              behavior is new for version 2.6.7.)


       Note that, when using the ----rreeccuurrssiivvee (--rr) option (which is implied by
       --aa), every subcomponent of every path is visited from the top down, so
       include/exclude patterns get applied recursively to each subcomponent's
       full name (e.g. to include ""/foo/bar/baz"" the subcomponents ""/foo"" and
       ""/foo/bar"" must not be excluded).  The exclude patterns actually short-
       circuit the directory traversal stage when rsync finds the files to
       send.  If a pattern excludes a particular parent directory, it can
       render a deeper include pattern ineffectual because rsync did not
       descend through that excluded section of the hierarchy.  This is
       particularly important when using a trailing '*' rule.  For instance,
       this won't work:

              + /some/path/this-file-will-not-be-found
              + /file-is-included
              - *


       This fails because the parent directory ""some"" is excluded by the '*'
       rule, so rsync never visits any of the files in the ""some"" or
       ""some/path"" directories.  One solution is to ask for all directories in
       the hierarchy to be included by using a single rule: ""+ */"" (put it
       somewhere before the ""- *"" rule), and perhaps use the
       ----pprruunnee--eemmppttyy--ddiirrss option.  Another solution is to add specific include
       rules for all the parent dirs that need to be visited.  For instance,
       this set of rules works fine:

              + /some/
              + /some/path/
              + /some/path/this-file-is-found
              + /file-also-included
              - *


       Here are some examples of exclude/include matching:

       o      ""- *.o"" would exclude all filenames matching *.o

       o      ""- /foo"" would exclude a file (or directory) named foo in the
              transfer-root directory

       o      ""- foo/"" would exclude any directory named foo

       o      ""- /foo/*/bar"" would exclude any file named bar which is at two
              levels below a directory named foo in the transfer-root
              directory

       o      ""- /foo/**/bar"" would exclude any file named bar two or more
              levels below a directory named foo in the transfer-root
              directory

       o      The combination of ""+ */"", ""+ *.c"", and ""- *"" would include all
              directories and C source files but nothing else (see also the
              ----pprruunnee--eemmppttyy--ddiirrss option)

       o      The combination of ""+ foo/"", ""+ foo/bar.c"", and ""- *"" would
              include only the foo directory and foo/bar.c (the foo directory
              must be explicitly included or it would be excluded by the ""*"")


MMEERRGGEE--FFIILLEE FFIILLTTEERR RRUULLEESS
       You can merge whole files into your filter rules by specifying either a
       merge (.) or a dir-merge (:) filter rule (as introduced in the FILTER
       RULES section above).

       There are two kinds of merged files -- single-instance ('.') and per-
       directory (':').  A single-instance merge file is read one time, and
       its rules are incorporated into the filter list in the place of the "".""
       rule.  For per-directory merge files, rsync will scan every directory
       that it traverses for the named file, merging its contents when the
       file exists into the current list of inherited rules.  These per-
       directory rule files must be created on the sending side because it is
       the sending side that is being scanned for the available files to
       transfer.  These rule files may also need to be transferred to the
       receiving side if you want them to affect what files don't get deleted
       (see PER-DIRECTORY RULES AND DELETE below).

       Some examples:

              merge /etc/rsync/default.rules
              . /etc/rsync/default.rules
              dir-merge .per-dir-filter
              dir-merge,n- .non-inherited-per-dir-excludes
              :n- .non-inherited-per-dir-excludes


       The following modifiers are accepted after a merge or dir-merge rule:

       o      A -- specifies that the file should consist of only exclude
              patterns, with no other rule-parsing except for in-file
              comments.

       o      A ++ specifies that the file should consist of only include
              patterns, with no other rule-parsing except for in-file
              comments.

       o      A CC is a way to specify that the file should be read in a CVS-
              compatible manner.  This turns on 'n', 'w', and '-', but also
              allows the list-clearing token (!) to be specified.  If no
              filename is provided, "".cvsignore"" is assumed.

       o      A ee will exclude the merge-file name from the transfer; e.g.
              ""dir-merge,e .rules"" is like ""dir-merge .rules"" and ""- .rules"".

       o      An nn specifies that the rules are not inherited by
              subdirectories.

       o      A ww specifies that the rules are word-split on whitespace
              instead of the normal line-splitting.  This also turns off
              comments.  Note: the space that separates the prefix from the
              rule is treated specially, so ""- foo + bar"" is parsed as two
              rules (assuming that prefix-parsing wasn't also disabled).

       o      You may also specify any of the modifiers for the ""+"" or ""-""
              rules (below) in order to have the rules that are read in from
              the file default to having that modifier set.  For instance,
              ""merge,-/ .excl"" would treat the contents of .excl as absolute-
              path excludes, while ""dir-merge,s .filt"" and "":sC"" would each
              make all their per-directory rules apply only on the sending
              side.


       The following modifiers are accepted after a ""+"" or ""-"":

       o      A ""/"" specifies that the include/exclude rule should be matched
              against the absolute pathname of the current item.  For example,
              ""-/ /etc/passwd"" would exclude the passwd file any time the
              transfer was sending files from the ""/etc"" directory, and ""-/
              subdir/foo"" would always exclude ""foo"" when it is in a dir named
              ""subdir"", even if ""foo"" is at the root of the current transfer.

       o      A ""!"" specifies that the include/exclude should take effect if
              the pattern fails to match.  For instance, ""-! */"" would exclude
              all non-directories.

       o      A CC is used to indicate that all the global CVS-exclude rules
              should be inserted as excludes in place of the ""-C"".  No arg
              should follow.

       o      An ss is used to indicate that the rule applies to the sending
              side.  When a rule affects the sending side, it prevents files
              from being transferred.  The default is for a rule to affect
              both sides unless ----ddeelleettee--eexxcclluuddeedd was specified, in which case
              default rules become sender-side only.  See also the hide (H)
              and show (S) rules, which are an alternate way to specify
              sending-side includes/excludes.

       o      An rr is used to indicate that the rule applies to the receiving
              side.  When a rule affects the receiving side, it prevents files
              from being deleted.  See the ss modifier for more info.  See also
              the protect (P) and risk (R) rules, which are an alternate way
              to specify receiver-side includes/excludes.


       Per-directory rules are inherited in all subdirectories of the
       directory where the merge-file was found unless the 'n' modifier was
       used.  Each subdirectory's rules are prefixed to the inherited per-
       directory rules from its parents, which gives the newest rules a higher
       priority than the inherited rules.  The entire set of dir-merge rules
       are grouped together in the spot where the merge-file was specified, so
       it is possible to override dir-merge rules via a rule that got
       specified earlier in the list of global rules.  When the list-clearing
       rule (""!"") is read from a per-directory file, it only clears the
       inherited rules for the current merge file.

       Another way to prevent a single rule from a dir-merge file from being
       inherited is to anchor it with a leading slash.  Anchored rules in a
       per-directory merge-file are relative to the merge-file's directory, so
       a pattern ""/foo"" would only match the file ""foo"" in the directory where
       the dir-merge filter file was found.

       Here's an example filter file which you'd specify via ----ffiilltteerr==""""..
       ffiillee""""::

              merge /home/user/.global-filter
              - *.gz
              dir-merge .rules
              + *.[ch]
              - *.o


       This will merge the contents of the /home/user/.global-filter file at
       the start of the list and also turns the "".rules"" filename into a per-
       directory filter file.  All rules read in prior to the start of the
       directory scan follow the global anchoring rules (i.e. a leading slash
       matches at the root of the transfer).

       If a per-directory merge-file is specified with a path that is a parent
       directory of the first transfer directory, rsync will scan all the
       parent dirs from that starting point to the transfer directory for the
       indicated per-directory file.  For instance, here is a common filter
       (see --FF):

              --filter=': /.rsync-filter'


       That rule tells rsync to scan for the file .rsync-filter in all
       directories from the root down through the parent directory of the
       transfer prior to the start of the normal directory scan of the file in
       the directories that are sent as a part of the transfer.  (Note: for an
       rsync daemon, the root is always the same as the module's ""path"".)

       Some examples of this pre-scanning for per-directory files:

              rsync -avF /src/path/ /dest/dir
              rsync -av --filter=': ../../.rsync-filter' /src/path/ /dest/dir
              rsync -av --filter=': .rsync-filter' /src/path/ /dest/dir


       The first two commands above will look for "".rsync-filter"" in ""/"" and
       ""/src"" before the normal scan begins looking for the file in
       ""/src/path"" and its subdirectories.  The last command avoids the
       parent-dir scan and only looks for the "".rsync-filter"" files in each
       directory that is a part of the transfer.

       If you want to include the contents of a "".cvsignore"" in your patterns,
       you should use the rule "":C"", which creates a dir-merge of the
       .cvsignore file, but parsed in a CVS-compatible manner.  You can use
       this to affect where the ----ccvvss--eexxcclluuddee (--CC) option's inclusion of the
       per-directory .cvsignore file gets placed into your rules by putting
       the "":C"" wherever you like in your filter rules.  Without this, rsync
       would add the dir-merge rule for the .cvsignore file at the end of all
       your other rules (giving it a lower priority than your command-line
       rules).  For example:

              cat <<EOT | rsync -avC --filter='. -' a/ b
              + foo.o
              :C
              - *.old
              EOT
              rsync -avC --include=foo.o -f :C --exclude='*.old' a/ b


       Both of the above rsync commands are identical.  Each one will merge
       all the per-directory .cvsignore rules in the middle of the list rather
       than at the end.  This allows their dir-specific rules to supersede the
       rules that follow the :C instead of being subservient to all your
       rules.  To affect the other CVS exclude rules (i.e. the default list of
       exclusions, the contents of $HOME/.cvsignore, and the value of
       $CVSIGNORE) you should omit the --CC command-line option and instead
       insert a ""-C"" rule into your filter rules; e.g. ""--filter=-C"".

LLIISSTT--CCLLEEAARRIINNGG FFIILLTTEERR RRUULLEE
       You can clear the current include/exclude list by using the ""!"" filter
       rule (as introduced in the FILTER RULES section above).  The ""current""
       list is either the global list of rules (if the rule is encountered
       while parsing the filter options) or a set of per-directory rules
       (which are inherited in their own sub-list, so a subdirectory can use
       this to clear out the parent's rules).

AANNCCHHOORRIINNGG IINNCCLLUUDDEE//EEXXCCLLUUDDEE PPAATTTTEERRNNSS
       As mentioned earlier, global include/exclude patterns are anchored at
       the ""root of the transfer"" (as opposed to per-directory patterns, which
       are anchored at the merge-file's directory).  If you think of the
       transfer as a subtree of names that are being sent from sender to
       receiver, the transfer-root is where the tree starts to be duplicated
       in the destination directory.  This root governs where patterns that
       start with a / match.

       Because the matching is relative to the transfer-root, changing the
       trailing slash on a source path or changing your use of the ----rreellaattiivvee
       option affects the path you need to use in your matching (in addition
       to changing how much of the file tree is duplicated on the destination
       host).  The following examples demonstrate this.

       Let's say that we want to match two source files, one with an absolute
       path of ""/home/me/foo/bar"", and one with a path of ""/home/you/bar/baz"".
       Here is how the various command choices differ for a 2-source transfer:

              Example cmd: rsync -a /home/me /home/you /dest
              +/- pattern: /me/foo/bar
              +/- pattern: /you/bar/baz
              Target file: /dest/me/foo/bar
              Target file: /dest/you/bar/baz


              Example cmd: rsync -a /home/me/ /home/you/ /dest
              +/- pattern: /foo/bar               (note missing ""me"")
              +/- pattern: /bar/baz               (note missing ""you"")
              Target file: /dest/foo/bar
              Target file: /dest/bar/baz


              Example cmd: rsync -a --relative /home/me/ /home/you /dest
              +/- pattern: /home/me/foo/bar       (note full path)
              +/- pattern: /home/you/bar/baz      (ditto)
              Target file: /dest/home/me/foo/bar
              Target file: /dest/home/you/bar/baz


              Example cmd: cd /home; rsync -a --relative me/foo you/ /dest
              +/- pattern: /me/foo/bar      (starts at specified path)
              +/- pattern: /you/bar/baz     (ditto)
              Target file: /dest/me/foo/bar
              Target file: /dest/you/bar/baz


       The easiest way to see what name you should filter is to just look at
       the output when using ----vveerrbboossee and put a / in front of the name (use
       the ----ddrryy--rruunn option if you're not yet ready to copy any files).

PPEERR--DDIIRREECCTTOORRYY RRUULLEESS AANNDD DDEELLEETTEE
       Without a delete option, per-directory rules are only relevant on the
       sending side, so you can feel free to exclude the merge files
       themselves without affecting the transfer.  To make this easy, the 'e'
       modifier adds this exclude for you, as seen in these two equivalent
       commands:

              rsync -av --filter=': .excl' --exclude=.excl host:src/dir /dest
              rsync -av --filter=':e .excl' host:src/dir /dest


       However, if you want to do a delete on the receiving side AND you want
       some files to be excluded from being deleted, you'll need to be sure
       that the receiving side knows what files to exclude.  The easiest way
       is to include the per-directory merge files in the transfer and use
       ----ddeelleettee--aafftteerr, because this ensures that the receiving side gets all
       the same exclude rules as the sending side before it tries to delete
       anything:

              rsync -avF --delete-after host:src/dir /dest


       However, if the merge files are not a part of the transfer, you'll need
       to either specify some global exclude rules (i.e. specified on the
       command line), or you'll need to maintain your own per-directory merge
       files on the receiving side.  An example of the first is this (assume
       that the remote .rules files exclude themselves):

       rsync -av --filter=': .rules' --filter='. /my/extra.rules'
          --delete host:src/dir /dest


       In the above example the extra.rules file can affect both sides of the
       transfer, but (on the sending side) the rules are subservient to the
       rules merged from the .rules files because they were specified after
       the per-directory merge rule.

       In one final example, the remote side is excluding the .rsync-filter
       files from the transfer, but we want to use our own .rsync-filter files
       to control what gets deleted on the receiving side.  To do this we must
       specifically exclude the per-directory merge files (so that they don't
       get deleted) and then put rules into the local files to control what
       else should not get deleted.  Like one of these commands:

           rsync -av --filter=':e /.rsync-filter' --delete \
               host:src/dir /dest
           rsync -avFF --delete host:src/dir /dest


BBAATTCCHH MMOODDEE
       Batch mode can be used to apply the same set of updates to many
       identical systems. Suppose one has a tree which is replicated on a
       number of hosts.  Now suppose some changes have been made to this
       source tree and those changes need to be propagated to the other hosts.
       In order to do this using batch mode, rsync is run with the write-batch
       option to apply the changes made to the source tree to one of the
       destination trees.  The write-batch option causes the rsync client to
       store in a ""batch file"" all the information needed to repeat this
       operation against other, identical destination trees.

       To apply the recorded changes to another destination tree, run rsync
       with the read-batch option, specifying the name of the same batch file,
       and the destination tree.  Rsync updates the destination tree using the
       information stored in the batch file.

       For convenience, one additional file is creating when the write-batch
       option is used.  This file's name is created by appending "".sh"" to the
       batch filename.  The .sh file contains a command-line suitable for
       updating a destination tree using that batch file. It can be executed
       using a Bourne (or Bourne-like) shell, optionally passing in an
       alternate destination tree pathname which is then used instead of the
       original path. This is useful when the destination tree path differs
       from the original destination tree path.

       Generating the batch file once saves having to perform the file status,
       checksum, and data block generation more than once when updating
       multiple destination trees. Multicast transport protocols can be used
       to transfer the batch update files in parallel to many hosts at once,
       instead of sending the same data to every host individually.

       Examples:

              $ rsync --write-batch=foo -a host:/source/dir/ /adest/dir/
              $ scp foo* remote:
              $ ssh remote ./foo.sh /bdest/dir/


              $ rsync --write-batch=foo -a /source/dir/ /adest/dir/
              $ ssh remote rsync --read-batch=- -a /bdest/dir/ <foo


       In these examples, rsync is used to update /adest/dir/ from
       /source/dir/ and the information to repeat this operation is stored in
       ""foo"" and ""foo.sh"".  The host ""remote"" is then updated with the batched
       data going into the directory /bdest/dir.  The differences between the
       two examples reveals some of the flexibility you have in how you deal
       with batches:

       o      The first example shows that the initial copy doesn't have to be
              local -- you can push or pull data to/from a remote host using
              either the remote-shell syntax or rsync daemon syntax, as
              desired.

       o      The first example uses the created ""foo.sh"" file to get the
              right rsync options when running the read-batch command on the
              remote host.

       o      The second example reads the batch data via standard input so
              that the batch file doesn't need to be copied to the remote
              machine first.  This example avoids the foo.sh script because it
              needed to use a modified ----rreeaadd--bbaattcchh option, but you could edit
              the script file if you wished to make use of it (just be sure
              that no other option is trying to use standard input, such as
              the ""----eexxcclluuddee--ffrroomm==--"" option).


       Caveats:

       The read-batch option expects the destination tree that it is updating
       to be identical to the destination tree that was used to create the
       batch update fileset.  When a difference between the destination trees
       is encountered the update might be discarded with a warning (if the
       file appears to be up-to-date already) or the file-update may be
       attempted and then, if the file fails to verify, the update discarded
       with an error.  This means that it should be safe to re-run a read-
       batch operation if the command got interrupted.  If you wish to force
       the batched-update to always be attempted regardless of the file's size
       and date, use the --II option (when reading the batch).  If an error
       occurs, the destination tree will probably be in a partially updated
       state. In that case, rsync can be used in its regular (non-batch) mode
       of operation to fix up the destination tree.

       The rsync version used on all destinations must be at least as new as
       the one used to generate the batch file.  Rsync will die with an error
       if the protocol version in the batch file is too new for the batch-
       reading rsync to handle.  See also the ----pprroottooccooll option for a way to
       have the creating rsync generate a batch file that an older rsync can
       understand.  (Note that batch files changed format in version 2.6.3, so
       mixing versions older than that with newer versions will not work.)

       When reading a batch file, rsync will force the value of certain
       options to match the data in the batch file if you didn't set them to
       the same as the batch-writing command.  Other options can (and should)
       be changed.  For instance ----wwrriittee--bbaattcchh changes to ----rreeaadd--bbaattcchh,
       ----ffiilleess--ffrroomm is dropped, and the ----ffiilltteerr/----iinncclluuddee/----eexxcclluuddee options
       are not needed unless one of the ----ddeelleettee options is specified.

       The code that creates the BATCH.sh file transforms any
       filter/include/exclude options into a single list that is appended as a
       ""here"" document to the shell script file.  An advanced user can use
       this to modify the exclude list if a change in what gets deleted by
       ----ddeelleettee is desired.  A normal user can ignore this detail and just use
       the shell script as an easy way to run the appropriate ----rreeaadd--bbaattcchh
       command for the batched data.

       The original batch mode in rsync was based on ""rsync+"", but the latest
       version uses a new implementation.

SSYYMMBBOOLLIICC LLIINNKKSS
       Three basic behaviors are possible when rsync encounters a symbolic
       link in the source directory.

       By default, symbolic links are not transferred at all.  A message
       ""skipping non-regular"" file is emitted for any symlinks that exist.

       If ----lliinnkkss is specified, then symlinks are recreated with the same
       target on the destination.  Note that ----aarrcchhiivvee implies ----lliinnkkss.

       If ----ccooppyy--lliinnkkss is specified, then symlinks are ""collapsed"" by copying
       their referent, rather than the symlink.

       rsync also distinguishes ""safe"" and ""unsafe"" symbolic links.  An
       example where this might be used is a web site mirror that wishes
       ensure the rsync module they copy does not include symbolic links to
       //eettcc//ppaasssswwdd in the public section of the site.  Using
       ----ccooppyy--uunnssaaffee--lliinnkkss will cause any links to be copied as the file they
       point to on the destination.  Using ----ssaaffee--lliinnkkss will cause unsafe
       links to be omitted altogether.  (Note that you must specify ----lliinnkkss
       for ----ssaaffee--lliinnkkss to have any effect.)

       Symbolic links are considered unsafe if they are absolute symlinks
       (start with //), empty, or if they contain enough """"...."""" components to
       ascend from the directory being copied.

       Here's a summary of how the symlink options are interpreted.  The list
       is in order of precedence, so if your combination of options isn't
       mentioned, use the first line that is a complete subset of your
       options:

       ----ccooppyy--lliinnkkss
              Turn all symlinks into normal files (leaving no symlinks for any
              other options to affect).

       ----lliinnkkss ----ccooppyy--uunnssaaffee--lliinnkkss
              Turn all unsafe symlinks into files and duplicate all safe
              symlinks.

       ----ccooppyy--uunnssaaffee--lliinnkkss
              Turn all unsafe symlinks into files, noisily skip all safe
              symlinks.

       ----lliinnkkss ----ssaaffee--lliinnkkss
              Duplicate safe symlinks and skip unsafe ones.

       ----lliinnkkss
              Duplicate all symlinks.

DDIIAAGGNNOOSSTTIICCSS
       rsync occasionally produces error messages that may seem a little
       cryptic. The one that seems to cause the most confusion is ""protocol
       version mismatch -- is your shell clean?"".

       This message is usually caused by your startup scripts or remote shell
       facility producing unwanted garbage on the stream that rsync is using
       for its transport. The way to diagnose this problem is to run your
       remote shell like this:

              ssh remotehost /bin/true > out.dat


       then look at out.dat. If everything is working correctly then out.dat
       should be a zero length file. If you are getting the above error from
       rsync then you will probably find that out.dat contains some text or
       data. Look at the contents and try to work out what is producing it.
       The most common cause is incorrectly configured shell startup scripts
       (such as .cshrc or .profile) that contain output statements for non-
       interactive logins.

       If you are having trouble debugging filter patterns, then try
       specifying the --vvvv option.  At this level of verbosity rsync will show
       why each individual file is included or excluded.

EEXXIITT VVAALLUUEESS
       00      Success

       11      Syntax or usage error

       22      Protocol incompatibility

       33      Errors selecting input/output files, dirs

       44      Requested action not supported: an attempt was made to
              manipulate 64-bit files on a platform that cannot support them;
              or an option was specified that is supported by the client and
              not by the server.

       55      Error starting client-server protocol

       66      Daemon unable to append to log-file

       1100     Error in socket I/O

       1111     Error in file I/O

       1122     Error in rsync protocol data stream

       1133     Errors with program diagnostics

       1144     Error in IPC code

       2200     Received SIGUSR1 or SIGINT

       2211     Some error returned by waitpid()

       2222     Error allocating core memory buffers

       2233     Partial transfer due to error

       2244     Partial transfer due to vanished source files

       2255     The --max-delete limit stopped deletions

       3300     Timeout in data send/receive


EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS
       CCVVSSIIGGNNOORREE
              The CVSIGNORE environment variable supplements any ignore
              patterns in .cvsignore files. See the ----ccvvss--eexxcclluuddee option for
              more details.

       RRSSYYNNCC__RRSSHH
              The RSYNC_RSH environment variable allows you to override the
              default shell used as the transport for rsync.  Command line
              options are permitted after the command name, just as in the --ee
              option.

       RRSSYYNNCC__PPRROOXXYY
              The RSYNC_PROXY environment variable allows you to redirect your
              rsync client to use a web proxy when connecting to a rsync
              daemon. You should set RSYNC_PROXY to a hostname:port pair.

       RRSSYYNNCC__PPAASSSSWWOORRDD
              Setting RSYNC_PASSWORD to the required password allows you to
              run authenticated rsync connections to an rsync daemon without
              user intervention. Note that this does not supply a password to
              a shell transport such as ssh.

       UUSSEERR or LLOOGGNNAAMMEE
              The USER or LOGNAME environment variables are used to determine
              the default username sent to an rsync daemon.  If neither is
              set, the username defaults to ""nobody"".

       HHOOMMEE   The HOME environment variable is used to find the user's default
              .cvsignore file.


FFIILLEESS
       /etc/rsyncd.conf or rsyncd.conf

SSEEEE AALLSSOO
       rrssyynnccdd..ccoonnff(5) ffccnnttll(2)

BBUUGGSS
       times are transferred as *nix time_t values

       When transferring to FAT filesystems rsync may re-sync unmodified
       files.  See the comments on the ----mmooddiiffyy--wwiinnddooww option.

       file permissions, devices, etc. are transferred as native numerical
       values

       see also the comments on the ----ddeelleettee option

       Please report bugs! See the website at http://rsync.samba.org/

VVEERRSSIIOONN
       This man page is current for version 2.6.9 of rsync.

IINNTTEERRNNAALL OOPPTTIIOONNSS
       The options ----sseerrvveerr and ----sseennddeerr are used internally by rsync, and
       should never be typed by a user under normal circumstances.  Some
       awareness of these options may be needed in certain scenarios, such as
       when setting up a login that can only run an rsync command.  For
       instance, the support directory of the rsync distribution has an
       example script named rrsync (for restricted rsync) that can be used
       with a restricted ssh login.

CCRREEDDIITTSS
       rsync is distributed under the GNU public license.  See the file
       COPYING for details.

       A WEB site is available at http://rsync.samba.org/.  The site includes
       an FAQ-O-Matic which may cover questions unanswered by this manual
       page.

       The primary ftp site for rsync is ftp://rsync.samba.org/pub/rsync.

       We would be delighted to hear from you if you like this program.

       This program uses the excellent zlib compression library written by
       Jean-loup Gailly and Mark Adler.

TTHHAANNKKSS
       Thanks to Richard Brent, Brendan Mackay, Bill Waite, Stephen Rothwell
       and David Bell for helpful suggestions, patches and testing of rsync.
       I've probably missed some people, my apologies if I have.

       Especial thanks also to: David Dykstra, Jos Backus, Sebastian Krahmer,
       Martin Pool, Wayne Davison, J.W. Schultz.

AAUUTTHHOORR
       rsync was originally written by Andrew Tridgell and Paul Mackerras.
       Many people have later contributed to it.

       Mailing lists for support and development are available at
       http://lists.samba.org

                                  6 Nov 2006                          rsync(1)
"
curlftpfs,No manual entry for curlftpfs
fusermount,No manual entry for fusermount
ln,"LN(1)                       General Commands Manual                      LN(1)

NNAAMMEE
     llnn, lliinnkk – link files

SSYYNNOOPPSSIISS
     llnn [--LL | --PP | --ss [--FF]] [--ff | --iiww] [--hhnnvv] _s_o_u_r_c_e___f_i_l_e [_t_a_r_g_e_t___f_i_l_e]
     llnn [--LL | --PP | --ss [--FF]] [--ff | --iiww] [--hhnnvv] _s_o_u_r_c_e___f_i_l_e _._._. _t_a_r_g_e_t___d_i_r
     lliinnkk _s_o_u_r_c_e___f_i_l_e _t_a_r_g_e_t___f_i_l_e

DDEESSCCRRIIPPTTIIOONN
     The llnn utility creates a new directory entry (linked file) for the file
     name specified by _t_a_r_g_e_t___f_i_l_e.  The _t_a_r_g_e_t___f_i_l_e will be created with the
     same file modes as the _s_o_u_r_c_e___f_i_l_e.  It is useful for maintaining
     multiple copies of a file in many places at once without using up storage
     for the “copies”; instead, a link “points” to the original copy.  There
     are two types of links; hard links and symbolic links.  How a link
     “points” to a file is one of the differences between a hard and symbolic
     link.

     The options are as follows:

     --FF    If the target file already exists and is a directory, then remove
           it so that the link may occur.  The --FF option should be used with
           either --ff or --ii options.  If neither --ff nor --ii is specified, --ff is
           implied.  The --FF option is a no-op unless --ss is specified.

     --LL    When creating a hard link to a symbolic link, create a hard link to
           the target of the symbolic link.  This is the default.  This option
           cancels the --PP option.

     --PP    When creating a hard link to a symbolic link, create a hard link to
           the symbolic link itself.  This option cancels the --LL option.

     --ff    If the target file already exists, then unlink it so that the link
           may occur.  (The --ff option overrides any previous --ii and --ww
           options.)

     --hh    If the _t_a_r_g_e_t___f_i_l_e or _t_a_r_g_e_t___d_i_r is a symbolic link, do not follow
           it.  This is most useful with the --ff option, to replace a symlink
           which may point to a directory.

     --ii    Cause llnn to write a prompt to standard error if the target file
           exists.  If the response from the standard input begins with the
           character ‘y’ or ‘Y’, then unlink the target file so that the link
           may occur.  Otherwise, do not attempt the link.  (The --ii option
           overrides any previous --ff options.)

     --nn    Same as --hh, for compatibility with other llnn implementations.

     --ss    Create a symbolic link.

     --vv    Cause llnn to be verbose, showing files as they are processed.

     --ww    Warn if the source of a symbolic link does not currently exist.

     By default, llnn makes _h_a_r_d links.  A hard link to a file is
     indistinguishable from the original directory entry; any changes to a
     file are effectively independent of the name used to reference the file.
     Directories may not be hardlinked, and hard links may not span file
     systems.

     A symbolic link contains the name of the file to which it is linked.  The
     referenced file is used when an open(2) operation is performed on the
     link.  A stat(2) on a symbolic link will return the linked-to file; an
     lstat(2) must be done to obtain information about the link.  The
     readlink(2) call may be used to read the contents of a symbolic link.
     Symbolic links may span file systems and may refer to directories.

     Given one or two arguments, llnn creates a link to an existing file
     _s_o_u_r_c_e___f_i_l_e.  If _t_a_r_g_e_t___f_i_l_e is given, the link has that name;
     _t_a_r_g_e_t___f_i_l_e may also be a directory in which to place the link; otherwise
     it is placed in the current directory.  If only the directory is
     specified, the link will be made to the last component of _s_o_u_r_c_e___f_i_l_e.

     Given more than two arguments, llnn makes links in _t_a_r_g_e_t___d_i_r to all the
     named source files.  The links made will have the same name as the files
     being linked to.

     When the utility is called as lliinnkk, exactly two arguments must be
     supplied, neither of which may specify a directory.  No options may be
     supplied in this simple mode of operation, which performs a link(2)
     operation using the two passed arguments.

EEXXAAMMPPLLEESS
     Create a symbolic link named _/_h_o_m_e_/_s_r_c and point it to _/_u_s_r_/_s_r_c:

           # ln -s /usr/src /home/src

     Hard link _/_u_s_r_/_l_o_c_a_l_/_b_i_n_/_f_o_o_p_r_o_g to file _/_u_s_r_/_l_o_c_a_l_/_b_i_n_/_f_o_o_p_r_o_g_-_1_._0:

           # ln /usr/local/bin/fooprog-1.0 /usr/local/bin/fooprog

     As an exercise, try the following commands:

           # ls -i /bin/[
           11553 /bin/[
           # ls -i /bin/test
           11553 /bin/test

     Note that both files have the same inode; that is, _/_b_i_n_/_[ is essentially
     an alias for the test(1) command.  This hard link exists so test(1) may
     be invoked from shell scripts, for example, using the if [ ] construct.

     In the next example, the second call to llnn removes the original _f_o_o and
     creates a replacement pointing to _b_a_z:

           # mkdir bar baz
           # ln -s bar foo
           # ln -shf baz foo

     Without the --hh option, this would instead leave _f_o_o pointing to _b_a_r and
     inside _f_o_o create a new symlink _b_a_z pointing to itself.  This results
     from directory-walking.

     An easy rule to remember is that the argument order for llnn is the same as
     for cp(1): The first argument needs to exist, the second one is created.

CCOOMMPPAATTIIBBIILLIITTYY
     The --hh, --ii, --nn, --vv and --ww options are non-standard and their use in
     scripts is not recommended.  They are provided solely for compatibility
     with other llnn implementations.

     The --FF option is a FreeBSD extension and should not be used in portable
     scripts.

SSEEEE AALLSSOO
     link(2), lstat(2), readlink(2), stat(2), symlink(2), symlink(7)

SSTTAANNDDAARRDDSS
     The llnn utility conforms to IEEE Std 1003.2-1992 (“POSIX.2”).

     The simplified lliinnkk command conforms to Version 2 of the Single UNIX
     Specification (“SUSv2”).

HHIISSTTOORRYY
     An llnn command appeared in Version 1 AT&T UNIX.

macOS 14.6                       May 10, 2021                       macOS 14.6
"
lsblk,No manual entry for lsblk
blkid,No manual entry for blkid
dd,"DD(1)                       General Commands Manual                      DD(1)

NNAAMMEE
     dddd – convert and copy a file

SSYYNNOOPPSSIISS
     dddd [_o_p_e_r_a_n_d_s _._._.]

DDEESSCCRRIIPPTTIIOONN
     The dddd utility copies the standard input to the standard output.  Input
     data is read and written in 512-byte blocks.  If input reads are short,
     input from multiple reads are aggregated to form the output block.  When
     finished, dddd displays the number of complete and partial input and output
     blocks and truncated input records to the standard error output.

     The following operands are available:

     bbss=_n     Set both input and output block size to _n bytes, superseding the
              iibbss and oobbss operands.  If no conversion values other than
              nnooeerrrroorr, nnoottrruunncc or ssyynncc are specified, then each input block is
              copied to the output as a single block without any aggregation
              of short blocks.

     ccbbss=_n    Set the conversion record size to _n bytes.  The conversion
              record size is required by the record oriented conversion
              values.

     ccoouunntt=_n  Copy only _n input blocks.

     ffiilleess=_n  Copy _n input files before terminating.  This operand is only
              applicable when the input device is a tape.

     ffiillllcchhaarr=_c
              When padding a block in conversion mode or due to use of nnooeerrrroorr
              and ssyynncc modes, fill with the specified ASCII character, rather
              than using a space or NUL.

     iibbss=_n    Set the input block size to _n bytes instead of the default 512.

     iiff=_f_i_l_e  Read input from _f_i_l_e instead of the standard input.

     iiffllaagg=_v_a_l_u_e[,_v_a_l_u_e _._._.]
              Where vvaalluuee is one of the symbols from the following list.

              ffuullllbblloocckk  Reading from the input file may not obtain a full
                         block.  When a read returns short, continue reading
                         to fill the block.  Without this flag, ccoouunntt limits
                         the number of times read(2) is called on the input
                         rather than the number of blocks copied in full.  May
                         not be combined with ccoonnvv==ssyynncc.

              ddiirreecctt     Set F_NOCACHE on the input file to make reads bypass
                         any local caching.

     iisseeeekk=_n  Seek on the input file _n blocks.  This is synonymous with
              sskkiipp=_n.

     oobbss=_n    Set the output block size to _n bytes instead of the default 512.

     ooff=_f_i_l_e  Write output to _f_i_l_e instead of the standard output.  Any
              regular output file is truncated unless the nnoottrruunncc conversion
              value is specified.  If an initial portion of the output file is
              seeked past (see the oosseeeekk operand), the output file is
              truncated at that point.

     ooffllaagg=_v_a_l_u_e[,_v_a_l_u_e _._._.]
              Where vvaalluuee is one of the symbols from the following list.

              ffssyynncc   Set the O_FSYNC flag on the output file to make writes
                      synchronous.

              ssyynncc    Set the O_SYNC flag on the output file to make writes
                      synchronous.  This is synonymous with the ffssyynncc value.

              ddiirreecctt  Set F_NOCACHE on the output file to make writes bypass
                      any local caching.

     oosseeeekk=_n  Seek on the output file _n blocks.  This is synonymous with
              sseeeekk=_n.

     sseeeekk=_n   Seek _n blocks from the beginning of the output before copying.
              On non-tape devices, an lseek(2) operation is used.  Otherwise,
              existing blocks are read and the data discarded.  If the user
              does not have read permission for the tape, it is positioned
              using the tape ioctl(2) function calls.  If the seek operation
              is past the end of file, space from the current end of file to
              the specified offset is filled with blocks of NUL bytes.

     sskkiipp=_n   Skip _n blocks from the beginning of the input before copying.
              On input which supports seeks, an lseek(2) operation is used.
              Otherwise, input data is read and discarded.  For pipes, the
              correct number of bytes is read.  For all other devices, the
              correct number of blocks is read without distinguishing between
              a partial or complete block being read.

     ssppeeeedd=_n  Limit the copying speed to _n bytes per second.

     ssttaattuuss=_v_a_l_u_e
              Where vvaalluuee is one of the symbols from the following list.

              nnooxxffeerr    Do not print the transfer statistics as the last line
                        of status output.

              nnoonnee      Do not print the status output.  Error messages are
                        shown; informational messages are not.

              pprrooggrreessss  Print basic transfer statistics once per second.

     ccoonnvv=_v_a_l_u_e[,_v_a_l_u_e _._._.]
              Where vvaalluuee is one of the symbols from the following list.

              aasscciiii, oollddaasscciiii
                       The same as the uunnbblloocckk value except that characters
                       are translated from EBCDIC to ASCII before the records
                       are converted.  (These values imply uunnbblloocckk if the
                       operand ccbbss is also specified.)  There are two
                       conversion maps for ASCII.  The value aasscciiii specifies
                       the recommended one which is compatible with AT&T
                       System V UNIX.  The value oollddaasscciiii specifies the one
                       used in historic AT&T UNIX and pre-4.3BSD-Reno systems.

              bblloocckk    Treats the input as a sequence of newline or end-of-
                       file terminated variable length records independent of
                       input and output block boundaries.  Any trailing
                       newline character is discarded.  Each input record is
                       converted to a fixed length output record where the
                       length is specified by the ccbbss operand.  Input records
                       shorter than the conversion record size are padded with
                       spaces.  Input records longer than the conversion
                       record size are truncated.  The number of truncated
                       input records, if any, are reported to the standard
                       error output at the completion of the copy.

              eebbccddiicc, iibbmm, oollddeebbccddiicc, oollddiibbmm
                       The same as the bblloocckk value except that characters are
                       translated from ASCII to EBCDIC after the records are
                       converted.  (These values imply bblloocckk if the operand
                       ccbbss is also specified.)  There are four conversion maps
                       for EBCDIC.  The value eebbccddiicc specifies the recommended
                       one which is compatible with AT&T System V UNIX.  The
                       value iibbmm is a slightly different mapping, which is
                       compatible with the AT&T System V UNIX iibbmm value.  The
                       values oollddeebbccddiicc and oollddiibbmm are maps used in historic
                       AT&T UNIX and pre-4.3BSD-Reno systems.

              ffssyynncc    Perform an fsync(2) on the output file before closing
                       it.

              llccaassee    Transform uppercase characters into lowercase
                       characters.

              ppaarreevveenn, ppaarrnnoonnee, ppaarroodddd, ppaarrsseett
                       Output data with the specified parity.  The parity bit
                       on input is stripped unless EBCDIC to ASCII conversions
                       is also specified.

              nnooeerrrroorr  Do not stop processing on an input error.  When an
                       input error occurs, a diagnostic message followed by
                       the current input and output block counts will be
                       written to the standard error output in the same format
                       as the standard completion message.  If the ssyynncc
                       conversion is also specified, any missing input data
                       will be replaced with NUL bytes (or with spaces if a
                       block oriented conversion value was specified) and
                       processed as a normal input buffer.  If the ffiillllcchhaarr
                       option is specified, the fill character provided on the
                       command line will override the automatic selection of
                       the fill character.  If the ssyynncc conversion is not
                       specified, the input block is omitted from the output.
                       On input files which are not tapes or pipes, the file
                       offset will be positioned past the block in which the
                       error occurred using lseek(2).

              nnoottrruunncc  Do not truncate the output file.  This will preserve
                       any blocks in the output file not explicitly written by
                       dddd.  The nnoottrruunncc value is not supported for tapes.

              oossyynncc    Pad the final output block to the full output block
                       size.  If the input file is not a multiple of the
                       output block size after conversion, this conversion
                       forces the final output block to be the same size as
                       preceding blocks for use on devices that require
                       regularly sized blocks to be written.  This option is
                       incompatible with use of the bbss=_n block size
                       specification.

              ssppaarrssee   If one or more output blocks would consist solely of
                       NUL bytes, try to seek the output file by the required
                       space instead of filling them with NULs, resulting in a
                       sparse file.

              sswwaabb     Swap every pair of input bytes.  If an input buffer has
                       an odd number of bytes, the last byte will be ignored
                       during swapping.

              ssyynncc     Pad every input block to the input buffer size.  Spaces
                       are used for pad bytes if a block oriented conversion
                       value is specified, otherwise NUL bytes are used.

              uuccaassee    Transform lowercase characters into uppercase
                       characters.

              uunnbblloocckk  Treats the input as a sequence of fixed length records
                       independent of input and output block boundaries.  The
                       length of the input records is specified by the ccbbss
                       operand.  Any trailing space characters are discarded
                       and a newline character is appended.

     Where sizes or speed are specified, a decimal, octal, or hexadecimal
     number of bytes is expected.  If the number ends with a “b”, “k”, “m”,
     “g”, “t”, “p”, or “w”, the number is multiplied by 512, 1024 (1K),
     1048576 (1M), 1073741824 (1G), 1099511627776 (1T), 1125899906842624 (1P)
     or the number of bytes in an integer, respectively.  Two or more numbers
     may be separated by an “x” to indicate a product.

     When finished, dddd displays the number of complete and partial input and
     output blocks, truncated input records and odd-length byte-swapping
     blocks to the standard error output.  A partial input block is one where
     less than the input block size was read.  A partial output block is one
     where less than the output block size was written.  Partial output blocks
     to tape devices are considered fatal errors.  Otherwise, the rest of the
     block will be written.  Partial output blocks to character devices will
     produce a warning message.  A truncated input block is one where a
     variable length record oriented conversion value was specified and the
     input line was too long to fit in the conversion record or was not
     newline terminated.

     Normally, data resulting from input or conversion or both are aggregated
     into output blocks of the specified size.  After the end of input is
     reached, any remaining output is written as a block.  This means that the
     final output block may be shorter than the output block size.

     If dddd receives a SIGINFO (see the ssttaattuuss argument for stty(1)) signal,
     the current input and output block counts will be written to the standard
     error output in the same format as the standard completion message.  If
     dddd receives a SIGINT signal, the current input and output block counts
     will be written to the standard error output in the same format as the
     standard completion message and dddd will exit.

EEXXIITT SSTTAATTUUSS
     The dddd utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Check that a disk drive contains no bad blocks:

           dd if=/dev/ada0 of=/dev/null bs=1m

     Do a refresh of a disk drive, in order to prevent presently recoverable
     read errors from progressing into unrecoverable read errors:

           dd if=/dev/ada0 of=/dev/ada0 bs=1m

     Remove parity bit from a file:

           dd if=file conv=parnone of=file.txt

     Check for (even) parity errors on a file:

           dd if=file conv=pareven | cmp -x - file

     To create an image of a Mode-1 CD-ROM, which is a commonly used format
     for data CD-ROM disks, use a block size of 2048 bytes:

           dd if=/dev/cd0 of=filename.iso bs=2048

     Write a filesystem image to a memory stick, padding the end with zeros,
     if necessary, to a 1MiB boundary:

           dd if=memstick.img of=/dev/da0 bs=1m conv=noerror,sync

SSEEEE AALLSSOO
     cp(1), tr(1)

SSTTAANNDDAARRDDSS
     The dddd utility is expected to be a superset of the IEEE Std 1003.2
     (“POSIX.2”) standard.  The ffiilleess and ssttaattuuss operands and the aasscciiii,
     eebbccddiicc, iibbmm, oollddaasscciiii, oollddeebbccddiicc and oollddiibbmm values are extensions to the
     POSIX standard.

HHIISSTTOORRYY
     A dddd command appeared in Version 5 AT&T UNIX.

macOS 14.6                       May 19, 2021                       macOS 14.6
"
losetup,No manual entry for losetup
vgcreate,No manual entry for vgcreate
vgextend,No manual entry for vgextend
lvcreate,No manual entry for lvcreate
lvextend,No manual entry for lvextend
lvreduce,No manual entry for lvreduce
lvremove,No manual entry for lvremove
lvs,No manual entry for lvs
vgs,No manual entry for vgs
pvs,No manual entry for pvs
vgscan,No manual entry for vgscan
vgchange,No manual entry for vgchange
tput,"tput(1)                     General Commands Manual                    tput(1)

NNAAMMEE
       ttppuutt, rreesseett - initialize a terminal or query terminfo database

SSYYNNOOPPSSIISS
       ttppuutt [--TT_t_y_p_e] _c_a_p_n_a_m_e [_p_a_r_m_s ... ]
       ttppuutt [--TT_t_y_p_e] iinniitt
       ttppuutt [--TT_t_y_p_e] rreesseett
       ttppuutt [--TT_t_y_p_e] lloonnggnnaammee
       ttppuutt --SS  <<<<
       ttppuutt --VV

DDEESSCCRRIIPPTTIIOONN
       The ttppuutt utility uses the tteerrmmiinnffoo database to make the values of
       terminal-dependent capabilities and information available to the shell
       (see sshh(1)), to initialize or reset the terminal, or return the long
       name of the requested terminal type.  The result depends upon the
       capability's type:

              string
                   ttppuutt writes the string to the standard output.  No trailing
                   newline is supplied.

              integer
                   ttppuutt writes the decimal value to the standard output, with
                   a trailing newline.

              boolean
                   ttppuutt simply sets the exit code (00 for TRUE if the terminal
                   has the capability, 11 for FALSE if it does not), and writes
                   nothing to the standard output.

       Before using a value returned on the standard output, the application
       should test the exit code (e.g., $$??, see sshh(1)) to be sure it is 00.
       (See the EEXXIITT CCOODDEESS and DDIIAAGGNNOOSSTTIICCSS sections.)  For a complete list of
       capabilities and the _c_a_p_n_a_m_e associated with each, see tteerrmmiinnffoo(5).

       --TT_t_y_p_e indicates the _t_y_p_e of terminal.  Normally this option is
              unnecessary, because the default is taken from the environment
              variable TTEERRMM.  If --TT is specified, then the shell variables
              LLIINNEESS and CCOOLLUUMMNNSS will also be ignored.

       _c_a_p_n_a_m_e
              indicates the capability from the tteerrmmiinnffoo database.  When
              tteerrmmccaapp support is compiled in, the tteerrmmccaapp name for the
              capability is also accepted.

       _p_a_r_m_s  If the capability is a string that takes parameters, the
              arguments _p_a_r_m_s will be instantiated into the string.

              Most parameters are numbers.  Only a few terminfo capabilities
              require string parameters; ttppuutt uses a table to decide which to
              pass as strings.  Normally ttppuutt uses ttppaarrmm (3X) to perform the
              substitution.  If no parameters are given for the capability,
              ttppuutt writes the string without performing the substitution.

       --SS     allows more than one capability per invocation of ttppuutt.  The
              capabilities must be passed to ttppuutt from the standard input
              instead of from the command line (see example).  Only one
              _c_a_p_n_a_m_e is allowed per line.  The --SS option changes the meaning
              of the 00 and 11 boolean and string exit codes (see the EXIT CODES
              section).

              Again, ttppuutt uses a table and the presence of parameters in its
              input to decide whether to use ttppaarrmm (3X), and how to interpret
              the parameters.

       --VV     reports the version of ncurses which was used in this program,
              and exits.

       iinniitt   If the tteerrmmiinnffoo database is present and an entry for the user's
              terminal exists (see --TT_t_y_p_e, above), the following will occur:

              (1)    if present, the terminal's initialization strings will be
                     output as detailed in the tteerrmmiinnffoo(5) section on _T_a_b_s _a_n_d
                     _I_n_i_t_i_a_l_i_z_a_t_i_o_n,

              (2)    any delays (e.g., newline) specified in the entry will be
                     set in the tty driver,

              (3)    tabs expansion will be turned on or off according to the
                     specification in the entry, and

              (4)    if tabs are not expanded, standard tabs will be set
                     (every 8 spaces).

              If an entry does not contain the information needed for any of
              the four above activities, that activity will silently be
              skipped.

       rreesseett  Instead of putting out initialization strings, the terminal's
              reset strings will be output if present (rrss11, rrss22, rrss33, rrff).  If
              the reset strings are not present, but initialization strings
              are, the initialization strings will be output.  Otherwise,
              rreesseett acts identically to iinniitt.

       lloonnggnnaammee
              If the tteerrmmiinnffoo database is present and an entry for the user's
              terminal exists (see --TT_t_y_p_e above), then the long name of the
              terminal will be put out.  The long name is the last name in the
              first line of the terminal's description in the tteerrmmiinnffoo
              database [see tteerrmm(5)].

       If ttppuutt is invoked by a link named rreesseett, this has the same effect as
       ttppuutt rreesseett.  See @@TTSSEETT@@ for comparison, which has similar behavior.

EEXXAAMMPPLLEESS
       ttppuutt iinniitt
            Initialize the terminal according to the type of terminal in the
            environmental variable TTEERRMM.  This command should be included in
            everyone's .profile after the environmental variable TTEERRMM has been
            exported, as illustrated on the pprrooffiillee(5) manual page.

       ttppuutt --TT55662200 rreesseett
            Reset an AT&T 5620 terminal, overriding the type of terminal in
            the environmental variable TTEERRMM.

       ttppuutt ccuupp 00 00
            Send the sequence to move the cursor to row 00, column 00 (the upper
            left corner of the screen, usually known as the ""home"" cursor
            position).

       ttppuutt cclleeaarr
            Echo the clear-screen sequence for the current terminal.

       ttppuutt ccoollss
            Print the number of columns for the current terminal.

       ttppuutt --TT445500 ccoollss
            Print the number of columns for the 450 terminal.

       bboolldd==``ttppuutt ssmmssoo`` ooffffbboolldd==``@@TTPPUUTT@@ rrmmssoo``
            Set the shell variables bboolldd, to begin stand-out mode sequence,
            and ooffffbboolldd, to end standout mode sequence, for the current
            terminal.  This might be followed by a prompt: eecchhoo """"$${{bboolldd}}PPlleeaassee
            ttyyppee iinn yyoouurr nnaammee:: $${{ooffffbboolldd}}\\cc""""

       ttppuutt hhcc
            Set exit code to indicate if the current terminal is a hard copy
            terminal.

       ttppuutt ccuupp 2233 44
            Send the sequence to move the cursor to row 23, column 4.

       ttppuutt ccuupp
            Send the terminfo string for cursor-movement, with no parameters
            substituted.

       ttppuutt lloonnggnnaammee
            Print the long name from the tteerrmmiinnffoo database for the type of
            terminal specified in the environmental variable TTEERRMM.

            ttppuutt --SS <<<<!!
            >> cclleeaarr
            >> ccuupp 1100 1100
            >> bboolldd
            >> !!

            This example shows ttppuutt processing several capabilities in one
            invocation.  It clears the screen, moves the cursor to position
            10, 10 and turns on bold (extra bright) mode.  The list is
            terminated by an exclamation mark (!!) on a line by itself.

FFIILLEESS
       //uussrr//sshhaarree//tteerrmmiinnffoo
              compiled terminal description database

       //uussrr//sshhaarree//ttaabbsseett//**
              tab settings for some terminals, in a format appropriate to be
              output to the terminal (escape sequences that set margins and
              tabs); for more information, see the ""Tabs and Initialization""
              section of tteerrmmiinnffoo(5)

EEXXIITT CCOODDEESS
       If the --SS option is used, ttppuutt checks for errors from each line, and if
       any errors are found, will set the exit code to 4 plus the number of
       lines with errors.  If no errors are found, the exit code is 00.  No
       indication of which line failed can be given so exit code 11 will never
       appear.  Exit codes 22, 33, and 44 retain their usual interpretation.  If
       the --SS option is not used, the exit code depends on the type of
       _c_a_p_n_a_m_e:

            _b_o_o_l_e_a_n
                   a value of 00 is set for TRUE and 11 for FALSE.

            _s_t_r_i_n_g a value of 00 is set if the _c_a_p_n_a_m_e is defined for this
                   terminal _t_y_p_e (the value of _c_a_p_n_a_m_e is returned on standard
                   output); a value of 11 is set if _c_a_p_n_a_m_e is not defined for
                   this terminal _t_y_p_e (nothing is written to standard output).

            _i_n_t_e_g_e_r
                   a value of 00 is always set, whether or not _c_a_p_n_a_m_e is
                   defined for this terminal _t_y_p_e.  To determine if _c_a_p_n_a_m_e is
                   defined for this terminal _t_y_p_e, the user must test the
                   value written to standard output.  A value of --11 means that
                   _c_a_p_n_a_m_e is not defined for this terminal _t_y_p_e.

            _o_t_h_e_r  rreesseett or iinniitt may fail to find their respective files.  In
                   that case, the exit code is set to 4 + eerrrrnnoo.

       Any other exit code indicates an error; see the DIAGNOSTICS section.

DDIIAAGGNNOOSSTTIICCSS
       ttppuutt prints the following error messages and sets the corresponding
       exit codes.

       exit code   error message
       ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
       00           (_c_a_p_n_a_m_e is a numeric variable that is not specified in
                   the tteerrmmiinnffoo(5) database for this terminal type, e.g.
                   ttppuutt --TT445500 lliinneess and @@TTPPUUTT@@ --TT22662211 xxmmcc)
       11           no error message is printed, see the EEXXIITT CCOODDEESS section.
       22           usage error
       33           unknown terminal _t_y_p_e or no tteerrmmiinnffoo database
       44           unknown tteerrmmiinnffoo capability _c_a_p_n_a_m_e
       >>44          error occurred in -S
       ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

PPOORRTTAABBIILLIITTYY
       The lloonnggnnaammee and --SS options, and the parameter-substitution features
       used in the ccuupp example, are not supported in BSD curses or in AT&T/USL
       curses before SVr4.

       X/Open documents only the operands for cclleeaarr, iinniitt and rreesseett.  In this
       implementation, cclleeaarr is part of the _c_a_p_n_a_m_e support.  Other
       implementations of ttppuutt on SVr4-based systems such as Solaris, IRIX64
       and HPUX as well as others such as AIX and Tru64 provide support for
       _c_a_p_n_a_m_e operands.

       A few platforms such as FreeBSD and NetBSD recognize termcap names
       rather than terminfo capability names in their respective ttppuutt
       commands.

       Most implementations which provide support for _c_a_p_n_a_m_e operands use the
       _t_p_a_r_m function to expand parameters in it.  That function expects a
       mixture of numeric and string parameters, requiring ttppuutt to know which
       type to use.  This implementation uses a table to determine that for
       the standard _c_a_p_n_a_m_e operands, and an internal library function to
       analyze nonstandard _c_a_p_n_a_m_e operands.  Other implementations may simply
       guess that an operand containing only digits is intended to be a
       number.

SSEEEE AALLSSOO
       cclleeaarr(1), ssttttyy(1), ttaabbss(1), tteerrmmiinnffoo(5), ccuurrss__tteerrmmccaapp(3X).

       This describes nnccuurrsseess version 5.7 (patch 20081102).

                                                                       tput(1)
"
stty,"STTY(1)                     General Commands Manual                    STTY(1)

NNAAMMEE
     ssttttyy – set the options for a terminal device interface

SSYYNNOOPPSSIISS
     ssttttyy [--aa | --ee | --gg] [--ff _f_i_l_e] [_a_r_g_u_m_e_n_t_s]

DDEESSCCRRIIPPTTIIOONN
     The ssttttyy utility sets or reports on terminal characteristics for the
     device that is its standard input.  If no options or arguments are
     specified, it reports the settings of a subset of characteristics as well
     as additional ones if they differ from their default values.  Otherwise
     it modifies the terminal state according to the specified arguments.
     Some combinations of arguments are mutually exclusive on some terminal
     types.

     The following options are available:

     --aa      Display all the current settings for the terminal to standard
             output as per IEEE Std 1003.2 (“POSIX.2”).

     --ee      Display all the current settings for the terminal to standard
             output in the traditional BSD ``all'' and ``everything'' formats.

     --ff      Open and use the terminal named by _f_i_l_e rather than using
             standard input.  The file is opened using the O_NONBLOCK flag of
             ooppeenn(), making it possible to set or display settings on a
             terminal that might otherwise block on the open.

     --gg      Display all the current settings for the terminal to standard
             output in a form that may be used as an argument to a subsequent
             invocation of ssttttyy to restore the current terminal state as per
             IEEE Std 1003.2 (“POSIX.2”).

     The following arguments are available to set the terminal
     characteristics:

   CCoonnttrrooll MMooddeess::
     Control mode flags affect hardware characteristics associated with the
     terminal.  This corresponds to the c_cflag in the termios structure.

     _n_u_m_b_e_r      Set terminal baud rate to the number given, if possible.  If
                 the baud rate is set to zero, modem control is no longer
                 asserted.

     ccllooccaall (--ccllooccaall)
                 Assume a line without (with) modem control.

     ccrreeaadd (--ccrreeaadd)
                 Enable (disable) the receiver.

     ccrrttssccttss (--ccrrttssccttss)
                 Enable (disable) RTS/CTS flow control.

     ccss55 ccss66 ccss77 ccss88
                 Select character size, if possible.

     ccssttooppbb (--ccssttooppbb)
                 Use two (one) stop bits per character.

     hhuupp (--hhuupp)  Same as hhuuppccll (--hhuuppccll).

     hhuuppccll (--hhuuppccll)
                 Stop asserting modem control (do not stop asserting modem
                 control) on last close.

     iissppeeeedd _n_u_m_b_e_r
                 Set terminal input baud rate to the number given, if
                 possible.  If the input baud rate is set to zero, the input
                 baud rate is set to the value of the output baud rate.

     oossppeeeedd _n_u_m_b_e_r
                 Set terminal output baud rate to the number given, if
                 possible.  If the output baud rate is set to zero, modem
                 control is no longer asserted.

     ppaarreennbb (--ppaarreennbb)
                 Enable (disable) parity generation and detection.

     ppaarroodddd (--ppaarroodddd)
                 Select odd (even) parity.

     ssppeeeedd _n_u_m_b_e_r
                 This sets both iissppeeeedd and oossppeeeedd to _n_u_m_b_e_r.

   IInnppuutt MMooddeess::
     This corresponds to the c_iflag in the termios structure.

     bbrrkkiinntt (--bbrrkkiinntt)
                 Signal (do not signal) INTR on break.

     iiccrrnnll (--iiccrrnnll)
                 Map (do not map) CR to NL on input.

     iiggnnbbrrkk (--iiggnnbbrrkk)
                 Ignore (do not ignore) break on input.

     iiggnnccrr (--iiggnnccrr)
                 Ignore (do not ignore) CR on input.

     iiggnnppaarr (--iiggnnppaarr)
                 Ignore (do not ignore) characters with parity errors.

     iimmaaxxbbeell (--iimmaaxxbbeell)
                 The system imposes a limit of MAX_INPUT (currently 255)
                 characters in the input queue.  If iimmaaxxbbeell is set and the
                 input queue limit has been reached, subsequent input causes
                 the system to send an ASCII BEL character to the output queue
                 (the terminal beeps at you).  Otherwise, if iimmaaxxbbeell is unset
                 and the input queue is full, the next input character causes
                 the entire input and output queues to be discarded.

     iinnllccrr (--iinnllccrr)
                 Map (do not map) NL to CR on input.

     iinnppcckk (--iinnppcckk)
                 Enable (disable) input parity checking.

     iissttrriipp (--iissttrriipp)
                 Strip (do not strip) input characters to seven bits.

     iiuuttff88 (--iiuuttff88)
                 Assume input characters are UTF-8 encoded.

     iixxaannyy (--iixxaannyy)
                 Allow any character (allow only START) to restart output.

     iixxooffff (--iixxooffff)
                 Request that the system send (not send) START/STOP characters
                 when the input queue is nearly empty/full.

     iixxoonn (--iixxoonn)
                 Enable (disable) START/STOP output control.  Output from the
                 system is stopped when the system receives STOP and started
                 when the system receives START, or if iixxaannyy is set, any
                 character restarts output.

     ppaarrmmrrkk (--ppaarrmmrrkk)
                 Mark (do not mark) characters with parity errors.

   OOuuttppuutt MMooddeess::
     This corresponds to the c_oflag of the termios structure.

     bbss00 bbss11     Select the style of delay for backspaces (e.g., set BSDLY to
                 BS0).

     ccrr00 ccrr11 ccrr22 ccrr33
                 Select the style of delay for carriage returns (e.g., set
                 CRDLY to CR0).

     ffff00 ffff11     Select the style of delay for form feeds (e.g., set FFDLY to
                 FF0).

     nnll00 nnll11     Select the style of delay for newlines (e.g., set NLDLY to
                 NL0).

     ooccrrnnll (--ooccrrnnll)
                 Map (do not map) carriage return to newline on output.

     ooffddeell (--ooddeellll)
                 Use DELs (NULs) as fill characters.

     ooffiillll (--ooffiillll)
                 Use fill characters (use timing) for delays.

     oonnllccrr (--oonnllccrr)
                 Map (do not map) NL to CR-NL on output.

     oonnllrreett (--oonnllrreett)
                 On the terminal, NL performs (does not perform) the CR
                 function.

     oonnooccrr (--oonnooccrr)
                 Do not (do) output CRs at column zero.

     ooppoosstt (--ooppoosstt)
                 Post-process output (do not post-process output; ignore all
                 other output modes).

     ooxxttaabbss (--ooxxttaabbss)
                 Expand (do not expand) tabs to spaces on output.

     ttaabb00 ttaabb11 ttaabb22 ttaabb33
                 Select the style of delay for horizontal tabs (e.g., set
                 TABDLY to TAB0).

     ttaabbss (--ttaabbss)
                 Same as ttaabb00 (ttaabb33).

     vvtt00 vvtt11     Select the style of delay for vertical tabs (e.g., set VTDLY
                 to VT0).

   LLooccaall MMooddeess::
     Local mode flags (lflags) affect various and sundry characteristics of
     terminal processing.  Historically the term ""local"" pertained to new job
     control features implemented by Jim Kulp on a Pdp 11/70 at IIASA.  Later,
     the driver ran on the first VAX at Evans Hall, UC Berkeley, where the job
     control details were greatly modified, but the structure definitions and
     names remained essentially unchanged.  The second interpretation of the
     'l' in lflag is ``line discipline flag'', which corresponds to the
     _c___l_f_l_a_g of the _t_e_r_m_i_o_s structure.

     aallttwweerraassee (--aallttwweerraassee)
                 Use (do not use) an alternate word erase algorithm when
                 processing WERASE characters.  This alternate algorithm
                 considers sequences of alphanumeric/underscores as words.  It
                 also skips the first preceding character in its
                 classification (as a convenience, since the one preceding
                 character could have been erased with simply an ERASE
                 character.)

     eecchhoo (--eecchhoo)
                 Echo back (do not echo back) every character typed.

     eecchhooccttll (--eecchhooccttll)
                 If eecchhooccttll is set, echo control characters as ^X.  Otherwise,
                 control characters echo as themselves.

     eecchhooee (--eecchhooee)
                 The ERASE character shall (shall not) visually erase the last
                 character in the current line from the display, if possible.

     eecchhookk (--eecchhookk)
                 Echo (do not echo) NL after KILL character.

     eecchhookkee (--eecchhookkee)
                 The KILL character shall (shall not) visually erase the
                 current line from the display, if possible.

     eecchhoonnll (--eecchhoonnll)
                 Echo (do not echo) NL, even if echo is disabled.

     eecchhoopprrtt (--eecchhoopprrtt)
                 For printing terminals.  If set, echo erased characters
                 backwards within ``\'' and ``/''.  Otherwise, disable this
                 feature.

     fflluusshhoo (--fflluusshhoo)
                 Indicates output is (is not) being discarded.

     iiccaannoonn (--iiccaannoonn)
                 Enable (disable) canonical input (ERASE and KILL processing).

     iieexxtteenn (--iieexxtteenn)
                 Enable (disable) any implementation-defined special control
                 characters that are not currently controlled by iiccaannoonn, iissiigg,
                 iixxooffff, or iixxoonn.

     iissiigg (--iissiigg)
                 Enable (disable) the checking of characters against the
                 special control characters INTR, QUIT, and SUSP.

     mmddmmbbuuff (--mmddmmbbuuff)
                 If set, flow control output based on condition of Carrier
                 Detect.  Otherwise, writes return an error if Carrier Detect
                 is low (and Carrier is not being ignored with the CLOCAL
                 flag.)

     nnooffllsshh (--nnooffllsshh)
                 Disable (enable) flush after INTR, QUIT, or SUSP.

     ppeennddiinn (--ppeennddiinn)
                 Indicates input is (is not) pending after a switch from non-
                 canonical to canonical mode and will be re-input when a read
                 becomes pending or more input arrives.

     ttoossttoopp (--ttoossttoopp)
                 Send (do not send) SIGTTOU for background output.  This
                 causes background jobs to stop if they attempt terminal
                 output.

   CCoonnttrrooll CChhaarraacctteerrss::
     _c_o_n_t_r_o_l_-_c_h_a_r_a_c_t_e_r _s_t_r_i_n_g
                 Set _c_o_n_t_r_o_l_-_c_h_a_r_a_c_t_e_r to _s_t_r_i_n_g.  If string is a single
                 character, the control character is set to that character.
                 If string is the two character sequence ""^-"" or the string
                 ""undef"" the control character is disabled (i.e., set to
                 {_POSIX_VDISABLE}.)

                 Recognized control-characters:


                       control-
                       character    Subscript    Description
                       _________    _________    _______________
                       eof          VEOF         EOF character
                       eol          VEOL         EOL character
                       eol2         VEOL2        EOL2 character
                       erase        VERASE       ERASE character
                       erase2       VERASE2      ERASE2 character
                       werase       VWERASE      WERASE character
                       intr         VINTR        INTR character
                       kill         VKILL        KILL character
                       quit         VQUIT        QUIT character
                       susp         VSUSP        SUSP character
                       start        VSTART       START character
                       stop         VSTOP        STOP character
                       dsusp        VDSUSP       DSUSP character
                       lnext        VLNEXT       LNEXT character
                       reprint      VREPRINT     REPRINT character
                       status       VSTATUS      STATUS character

     mmiinn _n_u_m_b_e_r

     ttiimmee _n_u_m_b_e_r
                 Set the value of min or time to number.  MIN and TIME are
                 used in Non-Canonical mode input processing (-icanon).

   CCoommbbiinnaattiioonn MMooddeess::
     _s_a_v_e_d _s_e_t_t_i_n_g_s
                 Set the current terminal characteristics to the saved
                 settings produced by the --gg option.

     ccoollss _n_u_m_b_e_r
                 Same as ccoolluummnnss.

     ccoolluummnnss _n_u_m_b_e_r
                 The terminal size is recorded as having _n_u_m_b_e_r columns.

     ccrrtt (--ccrrtt)  Set (disable) all modes suitable for a CRT display device.

     ddeecc         Set modes suitable for users of Digital Equipment Corporation
                 systems (ERASE, KILL, and INTR characters are set to ^?, ^U,
                 and ^C; ixany is disabled, and crt is enabled.)

     eekk          Reset ERASE, ERASE2, and KILL characters back to system
                 defaults.

     --eevveennpp      Same as --ooddddpp and --ppaarriittyy.

     eevveennpp       Enable ppaarreennbb and ccss77; disable ppaarroodddd.

     eexxttpprroocc (--eexxttpprroocc)
                 If set, this flag indicates that some amount of terminal
                 processing is being performed by either the terminal hardware
                 or by the remote side connected to a pty.

     kkeerrnniinnffoo (--kkeerrnniinnffoo)
                 Enable (disable) the system generated status line associated
                 with processing a STATUS character (usually set to ^T).  The
                 status line consists of the system load average, the current
                 command name, its process ID, the event the process is
                 waiting on (or the status of the process), the user and
                 system times, percent cpu, and current memory usage.

     nnll (--nnll)    Enable (disable) iiccrrnnll.  In addition, --nnll unsets iinnllccrr and
                 iiggnnccrr.

     --ooddddpp       Same as --eevveennpp and --ppaarriittyy.

     ooddddpp        Enable ppaarreennbb, ccss77, and ppaarroodddd.

     --ppaarriittyy     Disable ppaarreennbb; set ccss88.

     ppaarriittyy      Same as eevveennpp.

     rraaww (--rraaww)  If set, change the modes of the terminal so that no input or
                 output processing is performed.  If unset, change the modes
                 of the terminal to some reasonable state that performs input
                 and output processing.  Note that since the terminal driver
                 no longer has a single RAW bit, it is not possible to intuit
                 what flags were set prior to setting rraaww.  This means that
                 unsetting rraaww may not put back all the setting that were
                 previously in effect.  To set the terminal into a raw state
                 and then accurately restore it, the following shell code is
                 recommended:

                 save_state=$(stty -g)
                 stty raw
                 ...
                 stty ""$save_state""

     rroowwss _n_u_m_b_e_r
                 The terminal size is recorded as having _n_u_m_b_e_r rows.

     ssaannee        Resets all modes to reasonable values for interactive
                 terminal use.

     ssiizzee        The size of the terminal is printed as two numbers on a
                 single line, first rows, then columns.

     ttttyy         Set the line discipline to the standard terminal line
                 discipline TTYDISC.

   CCoommppaattiibbiilliittyy MMooddeess::
     These modes remain for compatibility with the previous version of the
     ssttttyy command.

     aallll         Reports all the terminal modes as with ssttttyy --aa except that
                 the control characters are printed in a columnar format.

     bbrrkk _v_a_l_u_e   Same as the control character eeooll.

     ccbbrreeaakk      If set, enables bbrrkkiinntt, iixxoonn, iimmaaxxbbeell, ooppoosstt, iissiigg, iieexxtteenn,
                 and --iiccaannoonn.  If unset, same as ssaannee.

     ccooookkeedd      Same as ssaannee.

     ccrrttbbss (--ccrrttbbss)
                 Same as eecchhooee.

     ccrrtteerraassee (--ccrrtteerraassee)
                 Same as eecchhooee.

     ccrrttkkiillll (--ccrrttkkiillll)
                 Same as eecchhookkee.

     ccttlleecchhoo (--ccttlleecchhoo)
                 Same as eecchhooccttll.

     ddeeccccttllqq (--ddeeccccttllqq)
                 The converse of iixxaannyy.

     eevveerryytthhiinngg  Same as aallll.

     fflluusshh _v_a_l_u_e
                 Same as the control character ddiissccaarrdd.

     lliittoouutt (--lliittoouutt)
                 The converse of ooppoosstt.

     nneeww         Same as ttttyy.

     nneewwccrrtt (--nneewwccrrtt)
                 Same as ccrrtt.

     oolldd         Same as ttttyy.

     ooxxttaabbss (--ooxxttaabbss)
                 Expand(do not expand) tabs to spaces on output.

     ppaassss88       The converse of ppaarriittyy.

     pprrtteerraassee (--pprrtteerraassee)
                 Same as eecchhoopprrtt.

     rrpprrnntt _v_a_l_u_e
                 Same as the control character rreepprriinntt.

     ttaabbss (--ttaabbss)
                 The converse of ooxxttaabbss.

     ttaannddeemm (--ttaannddeemm)
                 Same as iixxooffff.

EEXXIITT SSTTAATTUUSS
     The ssttttyy utility exits 0 on success, and >0 if an error occurs.

LLEEGGAACCYY DDEESSCCRRIIPPTTIIOONN
     In legacy operation, the bbss[[0011]], ccrr[[00--33]], ffff[[0011]], nnll[[0011]], ttaabb[[00--33]], and
     vvtt[[0011]] control modes are not accepted, nor are ooccrrnnll (--ooccrrnnll), ooffddeell
     (--ooffddeell), ooffiillll (--ooffiillll), oonnllrreett (--oonnllrreett), and oonnooccrr (--oonnooccrr).

     For more information about legacy mode, see compat(5).

SSEEEE AALLSSOO
     termios(4), compat(5)

SSTTAANNDDAARRDDSS
     The ssttttyy utility is expected to be IEEE Std 1003.2 (“POSIX.2”)
     compatible.  The flags --ee and --ff are extensions to the standard.

HHIISSTTOORRYY
     A ssttttyy command appeared in Version 2 AT&T UNIX.

macOS 14.6                     October 20, 2018                     macOS 14.6
"
read,"BUILTIN(1)                  General Commands Manual                 BUILTIN(1)

NNAAMMEE
     bbuuiillttiinn, !!, %%, .., ::, @@, [[, {{, }}, aalliiaass, aalllloocc, bbgg, bbiinndd, bbiinnddkkeeyy, bbrreeaakk,
     bbrreeaakkssww, bbuuiillttiinnss, ccaassee, ccdd, cchhddiirr, ccoommmmaanndd, ccoommpplleettee, ccoonnttiinnuuee, ddeeffaauulltt,
     ddiirrss, ddoo, ddoonnee, eecchhoo, eecchhoottcc, eelliiff, eellssee, eenndd, eennddiiff, eennddssww, eessaacc, eevvaall,
     eexxeecc, eexxiitt, eexxppoorrtt, ffaallssee, ffcc, ffgg, ffiilleetteesstt, ffii, ffoorr, ffoorreeaacchh, ggeettooppttss,
     gglloobb, ggoottoo, hhaasshh, hhaasshhssttaatt, hhiissttoorryy, hhuupp, iiff, jjoobbiidd, jjoobbss, kkiillll, lliimmiitt,
     llooccaall, lloogg, llooggiinn, llooggoouutt, llss--FF, nniiccee, nnoohhuupp, nnoottiiffyy, oonniinnttrr, ppooppdd,
     pprriinntteennvv, pprriinnttff, ppuusshhdd, ppwwdd, rreeaadd, rreeaaddoonnllyy, rreehhaasshh, rreeppeeaatt, rreettuurrnn,
     sscchheedd, sseett, sseetteennvv, sseettttcc, sseettttyy, sseettvvaarr, sshhiifftt, ssoouurrccee, ssttoopp, ssuussppeenndd,
     sswwiittcchh, tteellllttcc, tteesstt, tthheenn, ttiimmee, ttiimmeess, ttrraapp, ttrruuee, ttyyppee, uulliimmiitt, uummaasskk,
     uunnaalliiaass, uunnccoommpplleettee, uunnhhaasshh, uunnlliimmiitt, uunnsseett, uunnsseetteennvv, uunnttiill, wwaaiitt,
     wwhheerree, wwhhiicchh, wwhhiillee – shell built-in commands

SSYYNNOOPPSSIISS
     See the built-in command description in the appropriate shell manual
     page.

DDEESSCCRRIIPPTTIIOONN
     Shell builtin commands are commands that can be executed within the
     running shell's process.  Note that, in the case of csh(1) builtin
     commands, the command is executed in a subshell if it occurs as any
     component of a pipeline except the last.

     If a command specified to the shell contains a slash ‘/’, the shell will
     not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying “echo” causes a builtin command to be executed under shells
     that support the eecchhoo builtin command, specifying “/bin/echo” or “./echo”
     does not.

     While some builtin commands may exist in more than one shell, their
     operation may be different under each shell which supports them.  Below
     is a table which lists shell builtin commands, the standard shells that
     support them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.  Beware that the sh(1) manual page, at least, calls some of
     these commands “built-in commands” and some of them “reserved words”.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked “No**” under _E_x_t_e_r_n_a_l do exist externally, but are
     implemented as scripts using a builtin command of the same name.

           _C_o_m_m_a_n_d           _E_x_t_e_r_n_a_l        csh(1)       sh(1)
           !!                 No              No           Yes
           %%                 No              Yes          No
           ..                 No              No           Yes
           ::                 No              Yes          Yes
           @@                 No              Yes          Yes
           [[                 Yes             No           Yes
           {{                 No              No           Yes
           }}                 No              No           Yes
           aalliiaass             No**            Yes          Yes
           aalllloocc             No              Yes          No
           bbgg                No**            Yes          Yes
           bbiinndd              No              No           Yes
           bbiinnddkkeeyy           No              Yes          No
           bbrreeaakk             No              Yes          Yes
           bbrreeaakkssww           No              Yes          No
           bbuuiillttiinn           No              No           Yes
           bbuuiillttiinnss          No              Yes          No
           ccaassee              No              Yes          Yes
           ccdd                No**            Yes          Yes
           cchhddiirr             No              Yes          Yes
           ccoommmmaanndd           No**            No           Yes
           ccoommpplleettee          No              Yes          No
           ccoonnttiinnuuee          No              Yes          Yes
           ddeeffaauulltt           No              Yes          No
           ddiirrss              No              Yes          No
           ddoo                No              No           Yes
           ddoonnee              No              No           Yes
           eecchhoo              Yes             Yes          Yes
           eecchhoottcc            No              Yes          No
           eelliiff              No              No           Yes
           eellssee              No              Yes          Yes
           eenndd               No              Yes          No
           eennddiiff             No              Yes          No
           eennddssww             No              Yes          No
           eessaacc              No              No           Yes
           eevvaall              No              Yes          Yes
           eexxeecc              No              Yes          Yes
           eexxiitt              No              Yes          Yes
           eexxppoorrtt            No              No           Yes
           ffaallssee             Yes             No           Yes
           ffcc                No**            No           Yes
           ffgg                No**            Yes          Yes
           ffiilleetteesstt          No              Yes          No
           ffii                No              No           Yes
           ffoorr               No              No           Yes
           ffoorreeaacchh           No              Yes          No
           ggeettooppttss           No**            No           Yes
           gglloobb              No              Yes          No
           ggoottoo              No              Yes          No
           hhaasshh              No**            No           Yes
           hhaasshhssttaatt          No              Yes          No
           hhiissttoorryy           No              Yes          No
           hhuupp               No              Yes          No
           iiff                No              Yes          Yes
           jjoobbiidd             No              No           Yes
           jjoobbss              No**            Yes          Yes
           kkiillll              Yes             Yes          Yes
           lliimmiitt             No              Yes          No
           llooccaall             No              No           Yes
           lloogg               No              Yes          No
           llooggiinn             Yes             Yes          No
           llooggoouutt            No              Yes          No
           llss--FF              No              Yes          No
           nniiccee              Yes             Yes          No
           nnoohhuupp             Yes             Yes          No
           nnoottiiffyy            No              Yes          No
           oonniinnttrr            No              Yes          No
           ppooppdd              No              Yes          No
           pprriinntteennvv          Yes             Yes          No
           pprriinnttff            Yes             No           Yes
           ppuusshhdd             No              Yes          No
           ppwwdd               Yes             No           Yes
           rreeaadd              No**            No           Yes
           rreeaaddoonnllyy          No              No           Yes
           rreehhaasshh            No              Yes          No
           rreeppeeaatt            No              Yes          No
           rreettuurrnn            No              No           Yes
           sscchheedd             No              Yes          No
           sseett               No              Yes          Yes
           sseetteennvv            No              Yes          No
           sseettttcc             No              Yes          No
           sseettttyy             No              Yes          No
           sseettvvaarr            No              No           Yes
           sshhiifftt             No              Yes          Yes
           ssoouurrccee            No              Yes          No
           ssttoopp              No              Yes          No
           ssuussppeenndd           No              Yes          No
           sswwiittcchh            No              Yes          No
           tteellllttcc            No              Yes          No
           tteesstt              Yes             No           Yes
           tthheenn              No              No           Yes
           ttiimmee              Yes             Yes          No
           ttiimmeess             No              No           Yes
           ttrraapp              No              No           Yes
           ttrruuee              Yes             No           Yes
           ttyyppee              No**            No           Yes
           uulliimmiitt            No**            No           Yes
           uummaasskk             No**            Yes          Yes
           uunnaalliiaass           No**            Yes          Yes
           uunnccoommpplleettee        No              Yes          No
           uunnhhaasshh            No              Yes          No
           uunnlliimmiitt           No              Yes          No
           uunnsseett             No              Yes          Yes
           uunnsseetteennvv          No              Yes          No
           uunnttiill             No              No           Yes
           wwaaiitt              No**            Yes          Yes
           wwhheerree             No              Yes          No
           wwhhiicchh             Yes             Yes          No
           wwhhiillee             No              Yes          Yes

SSEEEE AALLSSOO
     csh(1), dash(1), echo(1), false(1), info(1), kill(1), login(1), nice(1),
     nohup(1), printenv(1), printf(1), pwd(1), sh(1), test(1), time(1),
     true(1), which(1), zsh(1)

HHIISSTTOORRYY
     The bbuuiillttiinn manual page first appeared in FreeBSD 3.4.

AAUUTTHHOORRSS
     This manual page was written by Sheldon Hearn <_s_h_e_l_d_o_n_h_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     December 21, 2010                    macOS 14.6
"
shuf,No manual entry for shuf
yes,"YES(1)                      General Commands Manual                     YES(1)

NNAAMMEE
     yyeess – be repetitively affirmative

SSYYNNOOPPSSIISS
     yyeess [_e_x_p_l_e_t_i_v_e]

DDEESSCCRRIIPPTTIIOONN
     The yyeess utility outputs _e_x_p_l_e_t_i_v_e, or, by default, “y”, forever.

SSEEEE AALLSSOO
     jot(1), seq(1)

HHIISSTTOORRYY
     The yyeess command appeared in Version 7 AT&T UNIX.

macOS 14.6                       June 4, 2014                       macOS 14.6
"
iconv,"ICONV(1)                   Linux Programmer's Manual                  ICONV(1)

NNAAMMEE
       iconv - character set conversion

SSYYNNOOPPSSIISS
       iconv [_O_P_T_I_O_N...] [--ff _e_n_c_o_d_i_n_g] [--tt _e_n_c_o_d_i_n_g] [_i_n_p_u_t_f_i_l_e ...]
       iconv --ll

DDEESSCCRRIIPPTTIIOONN
       The iiccoonnvv program converts text from one encoding to another encoding.
       More precisely, it converts ffrroomm the encoding given for the --ff option
       ttoo the encoding given for the --tt option. Either of these encodings
       defaults to the encoding of the current locale. All the _i_n_p_u_t_f_i_l_es are
       read and converted in turn; if no _i_n_p_u_t_f_i_l_e is given, the standard
       input is used. The converted text is printed to standard output.

       The encodings permitted are system dependent. For the libiconv
       implementation, they are listed in the iconv_open(3) manual page.

       Options controlling the input and output format:

       --ff _e_n_c_o_d_i_n_g, ----ffrroomm--ccooddee==_e_n_c_o_d_i_n_g
              Specifies the encoding of the input.

       --tt _e_n_c_o_d_i_n_g, ----ttoo--ccooddee==_e_n_c_o_d_i_n_g
              Specifies the encoding of the output.

       Options controlling conversion problems:

       --cc     When this option is given, characters that cannot be converted
              are silently discarded, instead of leading to a conversion
              error.

       ----uunniiccooddee--ssuubbsstt==_f_o_r_m_a_t_s_t_r_i_n_g
              When this option is given, Unicode characters that cannot be
              represented in the target encoding are replaced with a
              placeholder string that is constructed from the given
              _f_o_r_m_a_t_s_t_r_i_n_g, applied to the Unicode code point. The
              _f_o_r_m_a_t_s_t_r_i_n_g must be a format string in the same format as for
              the _p_r_i_n_t_f command or the _p_r_i_n_t_f_(_) function, taking either no
              argument or exactly one unsigned integer argument.

       ----bbyyttee--ssuubbsstt==_f_o_r_m_a_t_s_t_r_i_n_g
              When this option is given, bytes in the input that are not valid
              in the source encoding are replaced with a placeholder string
              that is constructed from the given _f_o_r_m_a_t_s_t_r_i_n_g, applied to the
              byte's value. The _f_o_r_m_a_t_s_t_r_i_n_g must be a format string in the
              same format as for the _p_r_i_n_t_f command or the _p_r_i_n_t_f_(_) function,
              taking either no argument or exactly one unsigned integer
              argument.

       ----wwiiddeecchhaarr--ssuubbsstt==_f_o_r_m_a_t_s_t_r_i_n_g
              When this option is given, wide characters in the input that are
              not valid in the source encoding are replaced with a placeholder
              string that is constructed from the given _f_o_r_m_a_t_s_t_r_i_n_g, applied
              to the byte's value. The _f_o_r_m_a_t_s_t_r_i_n_g must be a format string in
              the same format as for the _p_r_i_n_t_f command or the _p_r_i_n_t_f_(_)
              function, taking either no argument or exactly one unsigned
              integer argument.

       Options controlling error output:

       --ss, ----ssiilleenntt
              When this option is given, error messages about invalid or
              unconvertible characters are omitted, but the actual converted
              text is unaffected.

       The iiccoonnvv --ll or iiccoonnvv ----lliisstt command lists the names of the supported
       encodings, in a system dependent format. For the libiconv
       implementation, the names are printed in upper case, separated by
       whitespace, and alias names of an encoding are listed on the same line
       as the encoding itself.

EEXXAAMMPPLLEESS
       iiccoonnvv --ff IISSOO--88885599--11 --tt UUTTFF--88
              converts input from the old West-European encoding ISO-8859-1 to
              Unicode.

       iiccoonnvv --ff KKOOII88--RR ----bbyyttee--ssuubbsstt==""""<<00xx%%xx>>""""
                       ----uunniiccooddee--ssuubbsstt==""""<<UU++%%0044XX>>""""
              converts input from the old Russian encoding KOI8-R to the
              locale encoding, substituting an angle bracket notation with
              hexadecimal numbers for invalid bytes and for valid but
              unconvertible characters.

       iiccoonnvv ----lliisstt
              lists the supported encodings.

CCOONNFFOORRMMIINNGG TTOO
       POSIX:2001

SSEEEE AALLSSOO
       iiccoonnvv__ooppeenn(3), llooccaallee(7)

GNU                             March 31, 2007                        ICONV(1)
"
base64,"BINTRANS(1)                 General Commands Manual                BINTRANS(1)

NNAAMMEE
     bbiinnttrraannss, bbaassee6644, uuuueennccooddee, uuuuddeeccooddee, – encode/decode a binary file

SSYYNNOOPPSSIISS
     bbiinnttrraannss [algorithm] [...]
     uuuueennccooddee [--mm] [--rr] [--oo _o_u_t_p_u_t___f_i_l_e] [_f_i_l_e] _n_a_m_e
     uuuuddeeccooddee [--cciimmpprrss] [_f_i_l_e _._._.]
     uuuuddeeccooddee [--ii] --oo _o_u_t_p_u_t___f_i_l_e
     bb6644eennccooddee [--rr] [--ww _c_o_l_u_m_n] [--oo _o_u_t_p_u_t___f_i_l_e] [_f_i_l_e] _n_a_m_e
     bb6644ddeeccooddee [--cciimmpprrss] [_f_i_l_e _._._.]
     bb6644ddeeccooddee [--ii] --oo _o_u_t_p_u_t___f_i_l_e [_f_i_l_e]
     bbaassee6644 [--hh | --DD | --dd] [--bb _c_o_u_n_t] [--ii _i_n_p_u_t___f_i_l_e] [--oo _o_u_t_p_u_t___f_i_l_e]

DDEESSCCRRIIPPTTIIOONN
     The uuuueennccooddee and uuuuddeeccooddee utilities are used to transmit binary files
     over transmission mediums that do not support other than simple ASCII
     data.  The bb6644eennccooddee utility is synonymous with uuuueennccooddee with the --mm flag
     specified.  The bb6644ddeeccooddee utility is synonymous with uuuuddeeccooddee with the --mm
     flag specified.

     The bbaassee6644 utility acts as a base64 decoder when passed the ----ddeeccooddee (or
     --dd) flag and as a base64 encoder otherwise.  As a decoder it only accepts
     raw base64 input and as an encoder it does not produce the framing lines.
     bbaassee6644 reads standard input or _f_i_l_e if it is provided and writes to
     standard output.  Options ----wwrraapp (or --ww) and ----iiggnnoorree--ggaarrbbaaggee (or --ii) are
     accepted for compatibility with GNU base64, but the latter is
     unimplemented and silently ignored.

     The uuuueennccooddee utility reads _f_i_l_e (or by default the standard input) and
     writes an encoded version to the standard output, or _o_u_t_p_u_t___f_i_l_e if one
     has been specified.  The encoding uses only printing ASCII characters and
     includes the mode of the file and the operand _n_a_m_e for use by uuuuddeeccooddee.

     The uuuuddeeccooddee utility transforms _u_u_e_n_c_o_d_e_d files (or by default, the
     standard input) into the original form.  The resulting file is named
     either _n_a_m_e or (depending on options passed to uuuuddeeccooddee) _o_u_t_p_u_t___f_i_l_e and
     will have the mode of the original file except that setuid and execute
     bits are not retained.  The uuuuddeeccooddee utility ignores any leading and
     trailing lines.

     The following options are available for uuuueennccooddee:

     --mm     Use the Base64 method of encoding, rather than the traditional
            uuuueennccooddee algorithm.

     --rr     Produce raw output by excluding the initial and final framing
            lines.

     --oo _o_u_t_p_u_t___f_i_l_e
            Output to _o_u_t_p_u_t___f_i_l_e instead of standard output.

     The following options are available for uuuuddeeccooddee:

     --cc     Decode more than one uuencoded file from _f_i_l_e if possible.

     --ii     Do not overwrite files.

     --mm     When used with the --rr flag, decode Base64 input instead of
            traditional uuuueennccooddee input.  Without --rr it has no effect.

     --oo _o_u_t_p_u_t___f_i_l_e
            Output to _o_u_t_p_u_t___f_i_l_e instead of any pathname contained in the
            input data.

     --pp     Decode _f_i_l_e and write output to standard output.

     --rr     Decode raw (or broken) input, which is missing the initial and
            possibly the final framing lines.  The input is assumed to be in
            the traditional uuuueennccooddee encoding, but if the --mm flag is used, or
            if the utility is invoked as bb6644ddeeccooddee, then the input is assumed
            to be in Base64 format.

     --ss     Do not strip output pathname to base filename.  By default
            uuuuddeeccooddee deletes any prefix ending with the last slash '/' for
            security reasons.

     Additionally, bb6644eennccooddee accepts the following option:

     --ww _c_o_l_u_m_n
            Wrap encoded output after _c_o_l_u_m_n.

     The following options are available for bbaassee6644:

     --bb _c_o_u_n_t, ----bbrreeaakk=_c_o_u_n_t
            Insert line breaks every _c_o_u_n_t characters.  The default is 0,
            which generates an unbroken stream.

     --dd, --DD, ----ddeeccooddee
            Decode incoming Base64 stream into binary data.

     --hh, ----hheellpp
            Print usage summary and exit.

     --ii _i_n_p_u_t___f_i_l_e_, ----iinnppuutt=_i_n_p_u_t___f_i_l_e
            Read input from _i_n_p_u_t___f_i_l_e.  The default is stdin; passing “-”
            also represents stdin.

     --oo _o_u_t_p_u_t___f_i_l_e_, ----oouuttppuutt=_o_u_t_p_u_t___f_i_l_e
            Write output to _o_u_t_p_u_t___f_i_l_e.  The default is stdout; passing “-”
            also represents stdout.

     bbiinnttrraannss is a generic utility that can run any of the aforementioned
     encoders and decoders.  It can also run algorithms that are not available
     through a dedicated program:

     qqpp is a quoted-printable converter and accepts the following options:

     --uu     Decode.

     --oo _o_u_t_p_u_t___f_i_l_e
            Output to _o_u_t_p_u_t___f_i_l_e instead of standard output.

EEXXAAMMPPLLEESS
     The following example packages up a source tree, compresses it, uuencodes
     it and mails it to a user on another system.  When uuuuddeeccooddee is run on the
     target system, the file ``src_tree.tar.Z'' will be created which may then
     be uncompressed and extracted into the original tree.

           tar cf - src_tree | compress |
           uuencode src_tree.tar.Z | mail user@example.com

     The following example unpacks all uuencoded files from your mailbox into
     your current working directory.

           uudecode -c < $MAIL

     The following example extracts a compressed tar archive from your mailbox

           uudecode -o /dev/stdout < $MAIL | zcat | tar xfv -

SSEEEE AALLSSOO
     basename(1), compress(1), mail(1), uucp(1) (_p_o_r_t_s_/_n_e_t_/_f_r_e_e_b_s_d_-_u_u_c_p),
     uuencode(5)

HHIISSTTOORRYY
     The uuuuddeeccooddee and uuuueennccooddee utilities appeared in 4.0BSD.

BBUUGGSS
     Files encoded using the traditional algorithm are expanded by 35% (3
     bytes become 4 plus control information).

macOS 14.6                      April 18, 2022                      macOS 14.6
"
md5sum,"MD5(1)                      General Commands Manual                     MD5(1)

NNAAMMEE
     mmdd55, sshhaa11, sshhaa222244, sshhaa225566, sshhaa338844, sshhaa551122, mmdd55ssuumm, sshhaa11ssuumm, sshhaa222244ssuumm,
     sshhaa225566ssuumm, sshhaa338844ssuumm, sshhaa551122ssuumm – calculate a message-digest fingerprint
     (checksum) for a file

SSYYNNOOPPSSIISS
     mmdd55 [--ppqqrrttxx] [--cc _s_t_r_i_n_g] [--ss _s_t_r_i_n_g] [_f_i_l_e _._._.]

     mmdd55ssuumm [--bbccttwwzz] [----bbiinnaarryy] [----cchheecckk] [----hheellpp] [----iiggnnoorree--mmiissssiinngg]
            [----qquuiieett] [----ssttaattuuss] [----ssttrriicctt] [----ttaagg] [----tteexxtt] [----vveerrssiioonn]
            [----wwaarrnn] [----zzeerroo] [_f_i_l_e _._._.]

            (All other hashes have the same options and usage.)

     sshhaassuumm [--00bbcchhqqssttUUvvww] [----0011] [--aa | ----aallggoorriitthhmm _a_l_g] [----bbiinnaarryy] [----cchheecckk]
            [----hheellpp] [----iiggnnoorree--mmiissssiinngg] [----qquuiieett] [----ssttaattuuss] [----ssttrriicctt]
            [----ttaagg] [----tteexxtt] [----UUNNIIVVEERRSSAALL] [----vveerrssiioonn] [----wwaarrnn] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The mmdd55, sshhaa11, sshhaa222244, sshhaa225566, sshhaa338844, and sshhaa551122 utilities take as input
     a message of arbitrary length and produce as output a “fingerprint” or
     “message digest” of the input.

     The mmdd55ssuumm, sshhaa11ssuumm, sshhaa222244ssuumm, sshhaa225566ssuumm, sshhaa338844ssuumm, and sshhaa551122ssuumm
     utilities do the same, but with command-line options and an output format
     that match those of their similary named GNU utilities.

     In all cases, each file listed on the command line is processed
     separately.  If no files are listed on the command line, or a file name
     is given as _-, input is taken from stdin instead.

     It is conjectured that it is computationally infeasible to produce two
     messages having the same message digest, or to produce any message having
     a given prespecified target message digest.  The SHA-224, SHA-256,
     SHA-384, and SHA-512 algorithms are intended for digital signature
     applications, where a large file must be “compressed” in a secure manner
     before being encrypted with a private (secret) key under a public-key
     cryptosystem such as RSA.

     The MD5 and SHA-1 algorithms have been proven to be vulnerable to
     practical collision attacks and should not be relied upon to produce
     unique outputs, _n_o_r _s_h_o_u_l_d _t_h_e_y _b_e _u_s_e_d _a_s _p_a_r_t _o_f _a _c_r_y_p_t_o_g_r_a_p_h_i_c
     _s_i_g_n_a_t_u_r_e _s_c_h_e_m_e_. As of 2017-03-02, there is no publicly known method to
     _r_e_v_e_r_s_e either algorithm, i.e., to find an input that produces a specific
     output.

     It is recommended that all new applications use SHA-512 instead of one of
     the other hash functions.

   BBSSDD OOPPTTIIOONNSS
     The following options are available in BSD mode, i.e. when the program is
     invoked with a name that does not end in “sum”:

     --cc _s_t_r_i_n_g, ----cchheecckk==_s_t_r_i_n_g
             Compare the digest of the file against this string.  If combined
             with the --qq or ----qquuiieett option, the calculated digest is printed
             in addition to the exit status being set.  (Note that this option
             is not yet useful if multiple files are specified.)

     --pp, ----ppaasssstthhrroouugghh
             Echo stdin to stdout and append the checksum to stdout.  In this
             mode, any files specified on the command line are silently
             ignored.

     --qq, ----qquuiieett
             Quiet mode — only the checksum is printed out.  Overrides the --rr
             or ----rreevveerrssee option.

     --rr, ----rreevveerrssee
             Reverses the format of the output.  This helps with visual diffs.
             Does nothing when combined with the --ppttxx options.

     --ss _s_t_r_i_n_g, ----ssttrriinngg==_s_t_r_i_n_g
             Print a checksum of the given _s_t_r_i_n_g.  In this mode, any files
             specified on the command line are silently ignored.

     --tt, ----ttiimmee--ttrriiaall
             Run a built-in time trial.  For the --ssuumm versions, this is a nop
             for compatibility with coreutils.

     --xx, ----sseellff--tteesstt
             Run a built-in test script.

   GGNNUU OOPPTTIIOONNSS
     The following options are available in GNU mode, i.e. when the program is
     invoked with a name that ends in “sum”:

     --bb, ----bbiinnaarryy
             Read files in binary mode.

     --cc, ----cchheecckk
             The file passed as arguments must contain digest lines generated
             by the same digest algorithm in either classical BSD format or in
             GNU coreutils format.  A line with the file name followed by a
             colon “:” and either OK or FAILED is written for each well-formed
             line in the digest file.  If applicable, the number of failed
             comparisons and the number of lines that were skipped since they
             were not well-formed are printed at the end.  The ----qquuiieett option
             can be used to quiesce the output unless there are mismatched
             entries in the digest.

     ----hheellpp  Print a usage message and exit.

     ----iiggnnoorree--mmiissssiinngg
             When verifying checksums, ignore files for which checksums are
             given but which aren't found on disk.

     ----qquuiieett
             When verifying checksums, do not print anything unless the
             verification fails.

     ----ssttaattuuss
             When verifying checksums, do not print anything at all.  The exit
             code will reflect whether verification succeeded.

     ----ssttrriicctt
             When verifying checksums, fail if the input is malformed.

     ----ttaagg   Produce BSD-style output.

     --tt, ----tteexxtt
             Read files in text mode.  This is the default.  Note that this
             implementation does not differentiate between binary and text
             mode.

     ----vveerrssiioonn
             Print version information and exit.

     --ww, ----wwaarrnn
             When verifying checksums, warn about malformed input.

     --zz, ----zzeerroo
             Terminate output lines with NUL rather than with newline.

EEXXIITT SSTTAATTUUSS
     The mmdd55, sshhaa11, sshhaa222244, sshhaa225566, sshhaa338844, and sshhaa551122 utilities exit 0 on
     success, 1 if at least one of the input files could not be read, and 2 if
     at least one file does not have the same hash as the --cc option.

     The mmdd55ssuumm, sshhaa11ssuumm, sshhaa222244ssuumm, sshhaa225566ssuumm, sshhaa338844ssuumm, and sshhaa551122ssuumm
     utilities exit 0 on success and 1 if at least one of the input files
     could not be read or, when verifying checksums, does not have the
     expected checksum.

EEXXAAMMPPLLEESS
     Calculate the MD5 checksum of the string “Hello”.

           $ md5 -s Hello
           MD5 (""Hello"") = 8b1a9953c4611296a827abf8c47804d7

     Same as above, but note the absence of the newline character in the input
     string:

           $ echo -n Hello | md5
           8b1a9953c4611296a827abf8c47804d7

     Calculate the checksum of multiple files reversing the output:

           $ md5 -r /boot/loader.conf /etc/rc.conf
           ada5f60f23af88ff95b8091d6d67bef6 /boot/loader.conf
           d80bf36c332dc0fdc479366ec3fa44cd /etc/rc.conf

     This is almost but not quite identical to the output from GNU mode:

           $ md5sum /boot/loader.conf /etc/rc.conf
           ada5f60f23af88ff95b8091d6d67bef6  /boot/loader.conf
           d80bf36c332dc0fdc479366ec3fa44cd  /etc/rc.conf

     Note the two spaces between hash and file name.  If binary mode is
     requested, they are instead separated by a space and an asterisk:

           $ md5sum -b /boot/loader.conf /etc/rc.conf
           ada5f60f23af88ff95b8091d6d67bef6 */boot/loader.conf
           d80bf36c332dc0fdc479366ec3fa44cd */etc/rc.conf

     Write the digest for _/_b_o_o_t_/_l_o_a_d_e_r_._c_o_n_f in a file named _d_i_g_e_s_t.  Then
     calculate the checksum again and validate it against the checksum string
     extracted from the _d_i_g_e_s_t file:

           $ md5 /boot/loader.conf > digest && md5 -c $(cut -f2 -d= digest) /boot/loader.conf
           MD5 (/boot/loader.conf) = ada5f60f23af88ff95b8091d6d67bef6

     Same as above but comparing the digest against an invalid string
     (“randomstring”), which results in a failure.

           $ md5 -c randomstring /boot/loader.conf
           MD5 (/boot/loader.conf) = ada5f60f23af88ff95b8091d6d67bef6 [ Failed ]

     In GNU mode, the --cc option does not compare against a hash string passed
     as parameter.  Instead, it expects a digest file, as created under the
     name _d_i_g_e_s_t for _/_b_o_o_t_/_l_o_a_d_e_r_._c_o_n_f in the example above.

           $ md5 -c digest /boot/loader.conf
           /boot/loader.conf: OK

     The digest file may contain any number of lines in the format generated
     in either BSD or GNU mode.  If a hash value does not match the file,
     “FAILED” is printed instead of “OK”.

SSEEEE AALLSSOO
     cksum(1), md5(3), sha(3), sha256(3), sha384(3), sha512(3)

     R. Rivest, _T_h_e _M_D_5 _M_e_s_s_a_g_e_-_D_i_g_e_s_t _A_l_g_o_r_i_t_h_m, RFC1321.

     J. Burrows, _T_h_e _S_e_c_u_r_e _H_a_s_h _S_t_a_n_d_a_r_d, FIPS PUB 180-2.

     D. Eastlake and P. Jones, _U_S _S_e_c_u_r_e _H_a_s_h _A_l_g_o_r_i_t_h_m _1, RFC 3174.

     Secure Hash Standard (SHS):
     _h_t_t_p_s_:_/_/_w_w_w_._n_i_s_t_._g_o_v_/_p_u_b_l_i_c_a_t_i_o_n_s_/_s_e_c_u_r_e_-_h_a_s_h_-_s_t_a_n_d_a_r_d_-_s_h_s

AACCKKNNOOWWLLEEDDGGMMEENNTTSS
     This utility was originally derived from a program which was placed in
     the public domain for free general use by RSA Data Security.

     Support for SHA-1 was added by Oliver Eikemeier <_e_i_k_@_F_r_e_e_B_S_D_._o_r_g>.

     Support for SHA-2 was added by Colin Percival <_c_p_e_r_c_i_v_a_@_F_r_e_e_B_S_D_._o_r_g> and
     Allan Jude <_a_l_l_a_n_j_u_d_e_@_F_r_e_e_B_S_D_._o_r_g>.

     Compatibility with GNU coreutils was added by Warner Losh
     <_i_m_p_@_F_r_e_e_B_S_D_._o_r_g> and much expanded by Dag-Erling Smørgrav
     <_d_e_s_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     February 13, 2024                    macOS 14.6
"
sha256sum,"MD5(1)                      General Commands Manual                     MD5(1)

NNAAMMEE
     mmdd55, sshhaa11, sshhaa222244, sshhaa225566, sshhaa338844, sshhaa551122, mmdd55ssuumm, sshhaa11ssuumm, sshhaa222244ssuumm,
     sshhaa225566ssuumm, sshhaa338844ssuumm, sshhaa551122ssuumm – calculate a message-digest fingerprint
     (checksum) for a file

SSYYNNOOPPSSIISS
     mmdd55 [--ppqqrrttxx] [--cc _s_t_r_i_n_g] [--ss _s_t_r_i_n_g] [_f_i_l_e _._._.]

     mmdd55ssuumm [--bbccttwwzz] [----bbiinnaarryy] [----cchheecckk] [----hheellpp] [----iiggnnoorree--mmiissssiinngg]
            [----qquuiieett] [----ssttaattuuss] [----ssttrriicctt] [----ttaagg] [----tteexxtt] [----vveerrssiioonn]
            [----wwaarrnn] [----zzeerroo] [_f_i_l_e _._._.]

            (All other hashes have the same options and usage.)

     sshhaassuumm [--00bbcchhqqssttUUvvww] [----0011] [--aa | ----aallggoorriitthhmm _a_l_g] [----bbiinnaarryy] [----cchheecckk]
            [----hheellpp] [----iiggnnoorree--mmiissssiinngg] [----qquuiieett] [----ssttaattuuss] [----ssttrriicctt]
            [----ttaagg] [----tteexxtt] [----UUNNIIVVEERRSSAALL] [----vveerrssiioonn] [----wwaarrnn] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The mmdd55, sshhaa11, sshhaa222244, sshhaa225566, sshhaa338844, and sshhaa551122 utilities take as input
     a message of arbitrary length and produce as output a “fingerprint” or
     “message digest” of the input.

     The mmdd55ssuumm, sshhaa11ssuumm, sshhaa222244ssuumm, sshhaa225566ssuumm, sshhaa338844ssuumm, and sshhaa551122ssuumm
     utilities do the same, but with command-line options and an output format
     that match those of their similary named GNU utilities.

     In all cases, each file listed on the command line is processed
     separately.  If no files are listed on the command line, or a file name
     is given as _-, input is taken from stdin instead.

     It is conjectured that it is computationally infeasible to produce two
     messages having the same message digest, or to produce any message having
     a given prespecified target message digest.  The SHA-224, SHA-256,
     SHA-384, and SHA-512 algorithms are intended for digital signature
     applications, where a large file must be “compressed” in a secure manner
     before being encrypted with a private (secret) key under a public-key
     cryptosystem such as RSA.

     The MD5 and SHA-1 algorithms have been proven to be vulnerable to
     practical collision attacks and should not be relied upon to produce
     unique outputs, _n_o_r _s_h_o_u_l_d _t_h_e_y _b_e _u_s_e_d _a_s _p_a_r_t _o_f _a _c_r_y_p_t_o_g_r_a_p_h_i_c
     _s_i_g_n_a_t_u_r_e _s_c_h_e_m_e_. As of 2017-03-02, there is no publicly known method to
     _r_e_v_e_r_s_e either algorithm, i.e., to find an input that produces a specific
     output.

     It is recommended that all new applications use SHA-512 instead of one of
     the other hash functions.

   BBSSDD OOPPTTIIOONNSS
     The following options are available in BSD mode, i.e. when the program is
     invoked with a name that does not end in “sum”:

     --cc _s_t_r_i_n_g, ----cchheecckk==_s_t_r_i_n_g
             Compare the digest of the file against this string.  If combined
             with the --qq or ----qquuiieett option, the calculated digest is printed
             in addition to the exit status being set.  (Note that this option
             is not yet useful if multiple files are specified.)

     --pp, ----ppaasssstthhrroouugghh
             Echo stdin to stdout and append the checksum to stdout.  In this
             mode, any files specified on the command line are silently
             ignored.

     --qq, ----qquuiieett
             Quiet mode — only the checksum is printed out.  Overrides the --rr
             or ----rreevveerrssee option.

     --rr, ----rreevveerrssee
             Reverses the format of the output.  This helps with visual diffs.
             Does nothing when combined with the --ppttxx options.

     --ss _s_t_r_i_n_g, ----ssttrriinngg==_s_t_r_i_n_g
             Print a checksum of the given _s_t_r_i_n_g.  In this mode, any files
             specified on the command line are silently ignored.

     --tt, ----ttiimmee--ttrriiaall
             Run a built-in time trial.  For the --ssuumm versions, this is a nop
             for compatibility with coreutils.

     --xx, ----sseellff--tteesstt
             Run a built-in test script.

   GGNNUU OOPPTTIIOONNSS
     The following options are available in GNU mode, i.e. when the program is
     invoked with a name that ends in “sum”:

     --bb, ----bbiinnaarryy
             Read files in binary mode.

     --cc, ----cchheecckk
             The file passed as arguments must contain digest lines generated
             by the same digest algorithm in either classical BSD format or in
             GNU coreutils format.  A line with the file name followed by a
             colon “:” and either OK or FAILED is written for each well-formed
             line in the digest file.  If applicable, the number of failed
             comparisons and the number of lines that were skipped since they
             were not well-formed are printed at the end.  The ----qquuiieett option
             can be used to quiesce the output unless there are mismatched
             entries in the digest.

     ----hheellpp  Print a usage message and exit.

     ----iiggnnoorree--mmiissssiinngg
             When verifying checksums, ignore files for which checksums are
             given but which aren't found on disk.

     ----qquuiieett
             When verifying checksums, do not print anything unless the
             verification fails.

     ----ssttaattuuss
             When verifying checksums, do not print anything at all.  The exit
             code will reflect whether verification succeeded.

     ----ssttrriicctt
             When verifying checksums, fail if the input is malformed.

     ----ttaagg   Produce BSD-style output.

     --tt, ----tteexxtt
             Read files in text mode.  This is the default.  Note that this
             implementation does not differentiate between binary and text
             mode.

     ----vveerrssiioonn
             Print version information and exit.

     --ww, ----wwaarrnn
             When verifying checksums, warn about malformed input.

     --zz, ----zzeerroo
             Terminate output lines with NUL rather than with newline.

EEXXIITT SSTTAATTUUSS
     The mmdd55, sshhaa11, sshhaa222244, sshhaa225566, sshhaa338844, and sshhaa551122 utilities exit 0 on
     success, 1 if at least one of the input files could not be read, and 2 if
     at least one file does not have the same hash as the --cc option.

     The mmdd55ssuumm, sshhaa11ssuumm, sshhaa222244ssuumm, sshhaa225566ssuumm, sshhaa338844ssuumm, and sshhaa551122ssuumm
     utilities exit 0 on success and 1 if at least one of the input files
     could not be read or, when verifying checksums, does not have the
     expected checksum.

EEXXAAMMPPLLEESS
     Calculate the MD5 checksum of the string “Hello”.

           $ md5 -s Hello
           MD5 (""Hello"") = 8b1a9953c4611296a827abf8c47804d7

     Same as above, but note the absence of the newline character in the input
     string:

           $ echo -n Hello | md5
           8b1a9953c4611296a827abf8c47804d7

     Calculate the checksum of multiple files reversing the output:

           $ md5 -r /boot/loader.conf /etc/rc.conf
           ada5f60f23af88ff95b8091d6d67bef6 /boot/loader.conf
           d80bf36c332dc0fdc479366ec3fa44cd /etc/rc.conf

     This is almost but not quite identical to the output from GNU mode:

           $ md5sum /boot/loader.conf /etc/rc.conf
           ada5f60f23af88ff95b8091d6d67bef6  /boot/loader.conf
           d80bf36c332dc0fdc479366ec3fa44cd  /etc/rc.conf

     Note the two spaces between hash and file name.  If binary mode is
     requested, they are instead separated by a space and an asterisk:

           $ md5sum -b /boot/loader.conf /etc/rc.conf
           ada5f60f23af88ff95b8091d6d67bef6 */boot/loader.conf
           d80bf36c332dc0fdc479366ec3fa44cd */etc/rc.conf

     Write the digest for _/_b_o_o_t_/_l_o_a_d_e_r_._c_o_n_f in a file named _d_i_g_e_s_t.  Then
     calculate the checksum again and validate it against the checksum string
     extracted from the _d_i_g_e_s_t file:

           $ md5 /boot/loader.conf > digest && md5 -c $(cut -f2 -d= digest) /boot/loader.conf
           MD5 (/boot/loader.conf) = ada5f60f23af88ff95b8091d6d67bef6

     Same as above but comparing the digest against an invalid string
     (“randomstring”), which results in a failure.

           $ md5 -c randomstring /boot/loader.conf
           MD5 (/boot/loader.conf) = ada5f60f23af88ff95b8091d6d67bef6 [ Failed ]

     In GNU mode, the --cc option does not compare against a hash string passed
     as parameter.  Instead, it expects a digest file, as created under the
     name _d_i_g_e_s_t for _/_b_o_o_t_/_l_o_a_d_e_r_._c_o_n_f in the example above.

           $ md5 -c digest /boot/loader.conf
           /boot/loader.conf: OK

     The digest file may contain any number of lines in the format generated
     in either BSD or GNU mode.  If a hash value does not match the file,
     “FAILED” is printed instead of “OK”.

SSEEEE AALLSSOO
     cksum(1), md5(3), sha(3), sha256(3), sha384(3), sha512(3)

     R. Rivest, _T_h_e _M_D_5 _M_e_s_s_a_g_e_-_D_i_g_e_s_t _A_l_g_o_r_i_t_h_m, RFC1321.

     J. Burrows, _T_h_e _S_e_c_u_r_e _H_a_s_h _S_t_a_n_d_a_r_d, FIPS PUB 180-2.

     D. Eastlake and P. Jones, _U_S _S_e_c_u_r_e _H_a_s_h _A_l_g_o_r_i_t_h_m _1, RFC 3174.

     Secure Hash Standard (SHS):
     _h_t_t_p_s_:_/_/_w_w_w_._n_i_s_t_._g_o_v_/_p_u_b_l_i_c_a_t_i_o_n_s_/_s_e_c_u_r_e_-_h_a_s_h_-_s_t_a_n_d_a_r_d_-_s_h_s

AACCKKNNOOWWLLEEDDGGMMEENNTTSS
     This utility was originally derived from a program which was placed in
     the public domain for free general use by RSA Data Security.

     Support for SHA-1 was added by Oliver Eikemeier <_e_i_k_@_F_r_e_e_B_S_D_._o_r_g>.

     Support for SHA-2 was added by Colin Percival <_c_p_e_r_c_i_v_a_@_F_r_e_e_B_S_D_._o_r_g> and
     Allan Jude <_a_l_l_a_n_j_u_d_e_@_F_r_e_e_B_S_D_._o_r_g>.

     Compatibility with GNU coreutils was added by Warner Losh
     <_i_m_p_@_F_r_e_e_B_S_D_._o_r_g> and much expanded by Dag-Erling Smørgrav
     <_d_e_s_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     February 13, 2024                    macOS 14.6
"
sha512sum,"MD5(1)                      General Commands Manual                     MD5(1)

NNAAMMEE
     mmdd55, sshhaa11, sshhaa222244, sshhaa225566, sshhaa338844, sshhaa551122, mmdd55ssuumm, sshhaa11ssuumm, sshhaa222244ssuumm,
     sshhaa225566ssuumm, sshhaa338844ssuumm, sshhaa551122ssuumm – calculate a message-digest fingerprint
     (checksum) for a file

SSYYNNOOPPSSIISS
     mmdd55 [--ppqqrrttxx] [--cc _s_t_r_i_n_g] [--ss _s_t_r_i_n_g] [_f_i_l_e _._._.]

     mmdd55ssuumm [--bbccttwwzz] [----bbiinnaarryy] [----cchheecckk] [----hheellpp] [----iiggnnoorree--mmiissssiinngg]
            [----qquuiieett] [----ssttaattuuss] [----ssttrriicctt] [----ttaagg] [----tteexxtt] [----vveerrssiioonn]
            [----wwaarrnn] [----zzeerroo] [_f_i_l_e _._._.]

            (All other hashes have the same options and usage.)

     sshhaassuumm [--00bbcchhqqssttUUvvww] [----0011] [--aa | ----aallggoorriitthhmm _a_l_g] [----bbiinnaarryy] [----cchheecckk]
            [----hheellpp] [----iiggnnoorree--mmiissssiinngg] [----qquuiieett] [----ssttaattuuss] [----ssttrriicctt]
            [----ttaagg] [----tteexxtt] [----UUNNIIVVEERRSSAALL] [----vveerrssiioonn] [----wwaarrnn] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The mmdd55, sshhaa11, sshhaa222244, sshhaa225566, sshhaa338844, and sshhaa551122 utilities take as input
     a message of arbitrary length and produce as output a “fingerprint” or
     “message digest” of the input.

     The mmdd55ssuumm, sshhaa11ssuumm, sshhaa222244ssuumm, sshhaa225566ssuumm, sshhaa338844ssuumm, and sshhaa551122ssuumm
     utilities do the same, but with command-line options and an output format
     that match those of their similary named GNU utilities.

     In all cases, each file listed on the command line is processed
     separately.  If no files are listed on the command line, or a file name
     is given as _-, input is taken from stdin instead.

     It is conjectured that it is computationally infeasible to produce two
     messages having the same message digest, or to produce any message having
     a given prespecified target message digest.  The SHA-224, SHA-256,
     SHA-384, and SHA-512 algorithms are intended for digital signature
     applications, where a large file must be “compressed” in a secure manner
     before being encrypted with a private (secret) key under a public-key
     cryptosystem such as RSA.

     The MD5 and SHA-1 algorithms have been proven to be vulnerable to
     practical collision attacks and should not be relied upon to produce
     unique outputs, _n_o_r _s_h_o_u_l_d _t_h_e_y _b_e _u_s_e_d _a_s _p_a_r_t _o_f _a _c_r_y_p_t_o_g_r_a_p_h_i_c
     _s_i_g_n_a_t_u_r_e _s_c_h_e_m_e_. As of 2017-03-02, there is no publicly known method to
     _r_e_v_e_r_s_e either algorithm, i.e., to find an input that produces a specific
     output.

     It is recommended that all new applications use SHA-512 instead of one of
     the other hash functions.

   BBSSDD OOPPTTIIOONNSS
     The following options are available in BSD mode, i.e. when the program is
     invoked with a name that does not end in “sum”:

     --cc _s_t_r_i_n_g, ----cchheecckk==_s_t_r_i_n_g
             Compare the digest of the file against this string.  If combined
             with the --qq or ----qquuiieett option, the calculated digest is printed
             in addition to the exit status being set.  (Note that this option
             is not yet useful if multiple files are specified.)

     --pp, ----ppaasssstthhrroouugghh
             Echo stdin to stdout and append the checksum to stdout.  In this
             mode, any files specified on the command line are silently
             ignored.

     --qq, ----qquuiieett
             Quiet mode — only the checksum is printed out.  Overrides the --rr
             or ----rreevveerrssee option.

     --rr, ----rreevveerrssee
             Reverses the format of the output.  This helps with visual diffs.
             Does nothing when combined with the --ppttxx options.

     --ss _s_t_r_i_n_g, ----ssttrriinngg==_s_t_r_i_n_g
             Print a checksum of the given _s_t_r_i_n_g.  In this mode, any files
             specified on the command line are silently ignored.

     --tt, ----ttiimmee--ttrriiaall
             Run a built-in time trial.  For the --ssuumm versions, this is a nop
             for compatibility with coreutils.

     --xx, ----sseellff--tteesstt
             Run a built-in test script.

   GGNNUU OOPPTTIIOONNSS
     The following options are available in GNU mode, i.e. when the program is
     invoked with a name that ends in “sum”:

     --bb, ----bbiinnaarryy
             Read files in binary mode.

     --cc, ----cchheecckk
             The file passed as arguments must contain digest lines generated
             by the same digest algorithm in either classical BSD format or in
             GNU coreutils format.  A line with the file name followed by a
             colon “:” and either OK or FAILED is written for each well-formed
             line in the digest file.  If applicable, the number of failed
             comparisons and the number of lines that were skipped since they
             were not well-formed are printed at the end.  The ----qquuiieett option
             can be used to quiesce the output unless there are mismatched
             entries in the digest.

     ----hheellpp  Print a usage message and exit.

     ----iiggnnoorree--mmiissssiinngg
             When verifying checksums, ignore files for which checksums are
             given but which aren't found on disk.

     ----qquuiieett
             When verifying checksums, do not print anything unless the
             verification fails.

     ----ssttaattuuss
             When verifying checksums, do not print anything at all.  The exit
             code will reflect whether verification succeeded.

     ----ssttrriicctt
             When verifying checksums, fail if the input is malformed.

     ----ttaagg   Produce BSD-style output.

     --tt, ----tteexxtt
             Read files in text mode.  This is the default.  Note that this
             implementation does not differentiate between binary and text
             mode.

     ----vveerrssiioonn
             Print version information and exit.

     --ww, ----wwaarrnn
             When verifying checksums, warn about malformed input.

     --zz, ----zzeerroo
             Terminate output lines with NUL rather than with newline.

EEXXIITT SSTTAATTUUSS
     The mmdd55, sshhaa11, sshhaa222244, sshhaa225566, sshhaa338844, and sshhaa551122 utilities exit 0 on
     success, 1 if at least one of the input files could not be read, and 2 if
     at least one file does not have the same hash as the --cc option.

     The mmdd55ssuumm, sshhaa11ssuumm, sshhaa222244ssuumm, sshhaa225566ssuumm, sshhaa338844ssuumm, and sshhaa551122ssuumm
     utilities exit 0 on success and 1 if at least one of the input files
     could not be read or, when verifying checksums, does not have the
     expected checksum.

EEXXAAMMPPLLEESS
     Calculate the MD5 checksum of the string “Hello”.

           $ md5 -s Hello
           MD5 (""Hello"") = 8b1a9953c4611296a827abf8c47804d7

     Same as above, but note the absence of the newline character in the input
     string:

           $ echo -n Hello | md5
           8b1a9953c4611296a827abf8c47804d7

     Calculate the checksum of multiple files reversing the output:

           $ md5 -r /boot/loader.conf /etc/rc.conf
           ada5f60f23af88ff95b8091d6d67bef6 /boot/loader.conf
           d80bf36c332dc0fdc479366ec3fa44cd /etc/rc.conf

     This is almost but not quite identical to the output from GNU mode:

           $ md5sum /boot/loader.conf /etc/rc.conf
           ada5f60f23af88ff95b8091d6d67bef6  /boot/loader.conf
           d80bf36c332dc0fdc479366ec3fa44cd  /etc/rc.conf

     Note the two spaces between hash and file name.  If binary mode is
     requested, they are instead separated by a space and an asterisk:

           $ md5sum -b /boot/loader.conf /etc/rc.conf
           ada5f60f23af88ff95b8091d6d67bef6 */boot/loader.conf
           d80bf36c332dc0fdc479366ec3fa44cd */etc/rc.conf

     Write the digest for _/_b_o_o_t_/_l_o_a_d_e_r_._c_o_n_f in a file named _d_i_g_e_s_t.  Then
     calculate the checksum again and validate it against the checksum string
     extracted from the _d_i_g_e_s_t file:

           $ md5 /boot/loader.conf > digest && md5 -c $(cut -f2 -d= digest) /boot/loader.conf
           MD5 (/boot/loader.conf) = ada5f60f23af88ff95b8091d6d67bef6

     Same as above but comparing the digest against an invalid string
     (“randomstring”), which results in a failure.

           $ md5 -c randomstring /boot/loader.conf
           MD5 (/boot/loader.conf) = ada5f60f23af88ff95b8091d6d67bef6 [ Failed ]

     In GNU mode, the --cc option does not compare against a hash string passed
     as parameter.  Instead, it expects a digest file, as created under the
     name _d_i_g_e_s_t for _/_b_o_o_t_/_l_o_a_d_e_r_._c_o_n_f in the example above.

           $ md5 -c digest /boot/loader.conf
           /boot/loader.conf: OK

     The digest file may contain any number of lines in the format generated
     in either BSD or GNU mode.  If a hash value does not match the file,
     “FAILED” is printed instead of “OK”.

SSEEEE AALLSSOO
     cksum(1), md5(3), sha(3), sha256(3), sha384(3), sha512(3)

     R. Rivest, _T_h_e _M_D_5 _M_e_s_s_a_g_e_-_D_i_g_e_s_t _A_l_g_o_r_i_t_h_m, RFC1321.

     J. Burrows, _T_h_e _S_e_c_u_r_e _H_a_s_h _S_t_a_n_d_a_r_d, FIPS PUB 180-2.

     D. Eastlake and P. Jones, _U_S _S_e_c_u_r_e _H_a_s_h _A_l_g_o_r_i_t_h_m _1, RFC 3174.

     Secure Hash Standard (SHS):
     _h_t_t_p_s_:_/_/_w_w_w_._n_i_s_t_._g_o_v_/_p_u_b_l_i_c_a_t_i_o_n_s_/_s_e_c_u_r_e_-_h_a_s_h_-_s_t_a_n_d_a_r_d_-_s_h_s

AACCKKNNOOWWLLEEDDGGMMEENNTTSS
     This utility was originally derived from a program which was placed in
     the public domain for free general use by RSA Data Security.

     Support for SHA-1 was added by Oliver Eikemeier <_e_i_k_@_F_r_e_e_B_S_D_._o_r_g>.

     Support for SHA-2 was added by Colin Percival <_c_p_e_r_c_i_v_a_@_F_r_e_e_B_S_D_._o_r_g> and
     Allan Jude <_a_l_l_a_n_j_u_d_e_@_F_r_e_e_B_S_D_._o_r_g>.

     Compatibility with GNU coreutils was added by Warner Losh
     <_i_m_p_@_F_r_e_e_B_S_D_._o_r_g> and much expanded by Dag-Erling Smørgrav
     <_d_e_s_@_F_r_e_e_B_S_D_._o_r_g>.

macOS 14.6                     February 13, 2024                    macOS 14.6
"
openssl,"OPENSSL(1ssl)                       OpenSSL                      OPENSSL(1ssl)


NNAAMMEE
       openssl - OpenSSL command line program

SSYYNNOOPPSSIISS
       ooppeennssssll _c_o_m_m_a_n_d [ _o_p_t_i_o_n_s ... ] [ _p_a_r_a_m_e_t_e_r_s ... ]

       ooppeennssssll nnoo--_X_X_X [ _o_p_t_i_o_n_s ]

       ooppeennssssll --hheellpp | --vveerrssiioonn

DDEESSCCRRIIPPTTIIOONN
       OpenSSL is a cryptography toolkit implementing the Secure Sockets Layer
       (SSL) and Transport Layer Security (TLS) network protocols and related
       cryptography standards required by them.

       The ooppeennssssll program is a command line program for using the various
       cryptography functions of OpenSSL's ccrryyppttoo library from the shell.  It
       can be used for

        o  Creation and management of private keys, public keys and parameters
        o  Public key cryptographic operations
        o  Creation of X.509 certificates, CSRs and CRLs
        o  Calculation of Message Digests and Message Authentication Codes
        o  Encryption and Decryption with Ciphers
        o  SSL/TLS Client and Server Tests
        o  Handling of S/MIME signed or encrypted mail
        o  Timestamp requests, generation and verification

CCOOMMMMAANNDD SSUUMMMMAARRYY
       The ooppeennssssll program provides a rich variety of commands (_c_o_m_m_a_n_d in the
       ""SYNOPSIS"" above).  Each command can have many options and argument
       parameters, shown above as _o_p_t_i_o_n_s and _p_a_r_a_m_e_t_e_r_s.

       Detailed documentation and use cases for most standard subcommands are
       available (e.g., ooppeennssssll--xx550099(1)). The subcommand ooppeennssssll--lliisstt(1) may
       be used to list subcommands.

       The command nnoo--_X_X_X tests whether a command of the specified name is
       available.  If no command named _X_X_X exists, it returns 0 (success) and
       prints nnoo--_X_X_X; otherwise it returns 1 and prints _X_X_X.  In both cases,
       the output goes to ssttddoouutt and nothing is printed to ssttddeerrrr.  Additional
       command line arguments are always ignored.  Since for each cipher there
       is a command of the same name, this provides an easy way for shell
       scripts to test for the availability of ciphers in the ooppeennssssll program.
       (nnoo--_X_X_X is not able to detect pseudo-commands such as qquuiitt, lliisstt, or
       nnoo--_X_X_X itself.)

   CCoonnffiigguurraattiioonn OOppttiioonn
       Many commands use an external configuration file for some or all of
       their arguments and have a --ccoonnffiigg option to specify that file.  The
       default name of the file is _o_p_e_n_s_s_l_._c_n_f in the default certificate
       storage area, which can be determined from the ooppeennssssll--vveerrssiioonn(1)
       command using the --dd or --aa option.  The environment variable
       OOPPEENNSSSSLL__CCOONNFF can be used to specify a different file location or to
       disable loading a configuration (using the empty string).

       Among others, the configuration file can be used to load modules and to
       specify parameters for generating certificates and random numbers.  See
       ccoonnffiigg(5) for details.

   SSttaannddaarrdd CCoommmmaannddss
       aassnn11ppaarrssee
           Parse an ASN.1 sequence.

       ccaa  Certificate Authority (CA) Management.

       cciipphheerrss
           Cipher Suite Description Determination.

       ccmmss CMS (Cryptographic Message Syntax) command.

       ccrrll Certificate Revocation List (CRL) Management.

       ccrrll22ppkkccss77
           CRL to PKCS#7 Conversion.

       ddggsstt
           Message Digest calculation. MAC calculations are superseded by
           ooppeennssssll--mmaacc(1).

       ddhhppaarraamm
           Generation and Management of Diffie-Hellman Parameters. Superseded
           by ooppeennssssll--ggeennppkkeeyy(1) and ooppeennssssll--ppkkeeyyppaarraamm(1).

       ddssaa DSA Data Management.

       ddssaappaarraamm
           DSA Parameter Generation and Management. Superseded by
           ooppeennssssll--ggeennppkkeeyy(1) and ooppeennssssll--ppkkeeyyppaarraamm(1).

       eecc  EC (Elliptic curve) key processing.

       eeccppaarraamm
           EC parameter manipulation and generation.

       eenncc Encryption, decryption, and encoding.

       eennggiinnee
           Engine (loadable module) information and manipulation.

       eerrrrssttrr
           Error Number to Error String Conversion.

       ffiippssiinnssttaallll
           FIPS configuration installation.

       ggeennddssaa
           Generation of DSA Private Key from Parameters. Superseded by
           ooppeennssssll--ggeennppkkeeyy(1) and ooppeennssssll--ppkkeeyy(1).

       ggeennppkkeeyy
           Generation of Private Key or Parameters.

       ggeennrrssaa
           Generation of RSA Private Key. Superseded by ooppeennssssll--ggeennppkkeeyy(1).

       hheellpp
           Display information about a command's options.

       iinnffoo
           Display diverse information built into the OpenSSL libraries.

       kkddff Key Derivation Functions.

       lliisstt
           List algorithms and features.

       mmaacc Message Authentication Code Calculation.

       nnsseeqq
           Create or examine a Netscape certificate sequence.

       ooccsspp
           Online Certificate Status Protocol command.

       ppaasssswwdd
           Generation of hashed passwords.

       ppkkccss1122
           PKCS#12 Data Management.

       ppkkccss77
           PKCS#7 Data Management.

       ppkkccss88
           PKCS#8 format private key conversion command.

       ppkkeeyy
           Public and private key management.

       ppkkeeyyppaarraamm
           Public key algorithm parameter management.

       ppkkeeyyuuttll
           Public key algorithm cryptographic operation command.

       pprriimmee
           Compute prime numbers.

       rraanndd
           Generate pseudo-random bytes.

       rreehhaasshh
           Create symbolic links to certificate and CRL files named by the
           hash values.

       rreeqq PKCS#10 X.509 Certificate Signing Request (CSR) Management.

       rrssaa RSA key management.

       rrssaauuttll
           RSA command for signing, verification, encryption, and decryption.
           Superseded by  ooppeennssssll--ppkkeeyyuuttll(1).

       ss__cclliieenntt
           This implements a generic SSL/TLS client which can establish a
           transparent connection to a remote server speaking SSL/TLS. It's
           intended for testing purposes only and provides only rudimentary
           interface functionality but internally uses mostly all
           functionality of the OpenSSL ssssll library.

       ss__sseerrvveerr
           This implements a generic SSL/TLS server which accepts connections
           from remote clients speaking SSL/TLS. It's intended for testing
           purposes only and provides only rudimentary interface functionality
           but internally uses mostly all functionality of the OpenSSL ssssll
           library.  It provides both an own command line oriented protocol
           for testing SSL functions and a simple HTTP response facility to
           emulate an SSL/TLS-aware webserver.

       ss__ttiimmee
           SSL Connection Timer.

       sseessss__iidd
           SSL Session Data Management.

       ssmmiimmee
           S/MIME mail processing.

       ssppeeeedd
           Algorithm Speed Measurement.

       ssppkkaacc
           SPKAC printing and generating command.

       ssrrpp Maintain SRP password file. This command is deprecated.

       ssttoorreeuuttll
           Command to list and display certificates, keys, CRLs, etc.

       ttss  Time Stamping Authority command.

       vveerriiffyy
           X.509 Certificate Verification.  See also the
           ooppeennssssll--vveerriiffiiccaattiioonn--ooppttiioonnss(1) manual page.

       vveerrssiioonn
           OpenSSL Version Information.

       xx550099
           X.509 Certificate Data Management.

   MMeessssaaggee DDiiggeesstt CCoommmmaannddss
       bbllaakkee22bb551122
           BLAKE2b-512 Digest

       bbllaakkee22ss225566
           BLAKE2s-256 Digest

       mmdd22 MD2 Digest

       mmdd44 MD4 Digest

       mmdd55 MD5 Digest

       mmddcc22
           MDC2 Digest

       rrmmdd116600
           RMD-160 Digest

       sshhaa11
           SHA-1 Digest

       sshhaa222244
           SHA-2 224 Digest

       sshhaa225566
           SHA-2 256 Digest

       sshhaa338844
           SHA-2 384 Digest

       sshhaa551122
           SHA-2 512 Digest

       sshhaa33--222244
           SHA-3 224 Digest

       sshhaa33--225566
           SHA-3 256 Digest

       sshhaa33--338844
           SHA-3 384 Digest

       sshhaa33--551122
           SHA-3 512 Digest

       kkeeccccaakk--222244
           KECCAK 224 Digest

       kkeeccccaakk--225566
           KECCAK 256 Digest

       kkeeccccaakk--338844
           KECCAK 384 Digest

       kkeeccccaakk--551122
           KECCAK 512 Digest

       sshhaakkee112288
           SHA-3 SHAKE128 Digest

       sshhaakkee225566
           SHA-3 SHAKE256 Digest

       ssmm33 SM3 Digest

   EEnnccrryyppttiioonn,, DDeeccrryyppttiioonn,, aanndd EEnnccooddiinngg CCoommmmaannddss
       The following aliases provide convenient access to the most used
       encodings and ciphers.

       Depending on how OpenSSL was configured and built, not all ciphers
       listed here may be present. See ooppeennssssll--eenncc(1) for more information.

       aaeess112288, aaeess--112288--ccbbcc, aaeess--112288--ccffbb, aaeess--112288--ccttrr, aaeess--112288--eeccbb, aaeess--112288--ooffbb
           AES-128 Cipher

       aaeess119922, aaeess--119922--ccbbcc, aaeess--119922--ccffbb, aaeess--119922--ccttrr, aaeess--119922--eeccbb, aaeess--119922--ooffbb
           AES-192 Cipher

       aaeess225566, aaeess--225566--ccbbcc, aaeess--225566--ccffbb, aaeess--225566--ccttrr, aaeess--225566--eeccbb, aaeess--225566--ooffbb
           AES-256 Cipher

       aarriiaa112288, aarriiaa--112288--ccbbcc, aarriiaa--112288--ccffbb, aarriiaa--112288--ccttrr, aarriiaa--112288--eeccbb,
       aarriiaa--112288--ooffbb
           Aria-128 Cipher

       aarriiaa119922, aarriiaa--119922--ccbbcc, aarriiaa--119922--ccffbb, aarriiaa--119922--ccttrr, aarriiaa--119922--eeccbb,
       aarriiaa--119922--ooffbb
           Aria-192 Cipher

       aarriiaa225566, aarriiaa--225566--ccbbcc, aarriiaa--225566--ccffbb, aarriiaa--225566--ccttrr, aarriiaa--225566--eeccbb,
       aarriiaa--225566--ooffbb
           Aria-256 Cipher

       bbaassee6644
           Base64 Encoding

       bbff, bbff--ccbbcc, bbff--ccffbb, bbff--eeccbb, bbff--ooffbb
           Blowfish Cipher

       ccaammeelllliiaa112288, ccaammeelllliiaa--112288--ccbbcc, ccaammeelllliiaa--112288--ccffbb, ccaammeelllliiaa--112288--ccttrr,
       ccaammeelllliiaa--112288--eeccbb, ccaammeelllliiaa--112288--ooffbb
           Camellia-128 Cipher

       ccaammeelllliiaa119922, ccaammeelllliiaa--119922--ccbbcc, ccaammeelllliiaa--119922--ccffbb, ccaammeelllliiaa--119922--ccttrr,
       ccaammeelllliiaa--119922--eeccbb, ccaammeelllliiaa--119922--ooffbb
           Camellia-192 Cipher

       ccaammeelllliiaa225566, ccaammeelllliiaa--225566--ccbbcc, ccaammeelllliiaa--225566--ccffbb, ccaammeelllliiaa--225566--ccttrr,
       ccaammeelllliiaa--225566--eeccbb, ccaammeelllliiaa--225566--ooffbb
           Camellia-256 Cipher

       ccaasstt, ccaasstt--ccbbcc
           CAST Cipher

       ccaasstt55--ccbbcc, ccaasstt55--ccffbb, ccaasstt55--eeccbb, ccaasstt55--ooffbb
           CAST5 Cipher

       cchhaacchhaa2200
           Chacha20 Cipher

       ddeess, ddeess--ccbbcc, ddeess--ccffbb, ddeess--eeccbb, ddeess--eeddee, ddeess--eeddee--ccbbcc, ddeess--eeddee--ccffbb,
       ddeess--eeddee--ooffbb, ddeess--ooffbb
           DES Cipher

       ddeess33, ddeessxx, ddeess--eeddee33, ddeess--eeddee33--ccbbcc, ddeess--eeddee33--ccffbb, ddeess--eeddee33--ooffbb
           Triple-DES Cipher

       iiddeeaa, iiddeeaa--ccbbcc, iiddeeaa--ccffbb, iiddeeaa--eeccbb, iiddeeaa--ooffbb
           IDEA Cipher

       rrcc22, rrcc22--ccbbcc, rrcc22--ccffbb, rrcc22--eeccbb, rrcc22--ooffbb
           RC2 Cipher

       rrcc44 RC4 Cipher

       rrcc55, rrcc55--ccbbcc, rrcc55--ccffbb, rrcc55--eeccbb, rrcc55--ooffbb
           RC5 Cipher

       sseeeedd, sseeeedd--ccbbcc, sseeeedd--ccffbb, sseeeedd--eeccbb, sseeeedd--ooffbb
           SEED Cipher

       ssmm44, ssmm44--ccbbcc, ssmm44--ccffbb, ssmm44--ccttrr, ssmm44--eeccbb, ssmm44--ooffbb
           SM4 Cipher

OOPPTTIIOONNSS
       Details of which options are available depend on the specific command.
       This section describes some common options with common behavior.

   PPrrooggrraamm OOppttiioonnss
       These options can be specified without a command specified to get help
       or version information.

       --hheellpp
           Provides a terse summary of all options.  For more detailed
           information, each command supports a --hheellpp option.  Accepts ----hheellpp
           as well.

       --vveerrssiioonn
           Provides a terse summary of the ooppeennssssll program version.  For more
           detailed information see ooppeennssssll--vveerrssiioonn(1).  Accepts ----vveerrssiioonn as
           well.

   CCoommmmoonn OOppttiioonnss
       --hheellpp
           If an option takes an argument, the ""type"" of argument is also
           given.

       ----  This terminates the list of options. It is mostly useful if any
           filename parameters start with a minus sign:

            openssl verify [flags...] -- -cert1.pem...

   FFoorrmmaatt OOppttiioonnss
       See ooppeennssssll--ffoorrmmaatt--ooppttiioonnss(1) for manual page.

   PPaassss PPhhrraassee OOppttiioonnss
       See the ooppeennssssll--ppaasssspphhrraassee--ooppttiioonnss(1) manual page.

   RRaannddoomm SSttaattee OOppttiioonnss
       Prior to OpenSSL 1.1.1, it was common for applications to store
       information about the state of the random-number generator in a file
       that was loaded at startup and rewritten upon exit. On modern operating
       systems, this is generally no longer necessary as OpenSSL will seed
       itself from a trusted entropy source provided by the operating system.
       These flags are still supported for special platforms or circumstances
       that might require them.

       It is generally an error to use the same seed file more than once and
       every use of --rraanndd should be paired with --wwrriitteerraanndd.

       --rraanndd _f_i_l_e_s
           A file or files containing random data used to seed the random
           number generator.  Multiple files can be specified separated by an
           OS-dependent character.  The separator is "";"" for MS-Windows, "",""
           for OpenVMS, and "":"" for all others. Another way to specify
           multiple files is to repeat this flag with different filenames.

       --wwrriitteerraanndd _f_i_l_e
           Writes the seed data to the specified _f_i_l_e upon exit.  This file
           can be used in a subsequent command invocation.

   CCeerrttiiffiiccaattee VVeerriiffiiccaattiioonn OOppttiioonnss
       See the ooppeennssssll--vveerriiffiiccaattiioonn--ooppttiioonnss(1) manual page.

   NNaammee FFoorrmmaatt OOppttiioonnss
       See the ooppeennssssll--nnaammeeddiissppllaayy--ooppttiioonnss(1) manual page.

   TTLLSS VVeerrssiioonn OOppttiioonnss
       Several commands use SSL, TLS, or DTLS. By default, the commands use
       TLS and clients will offer the lowest and highest protocol version they
       support, and servers will pick the highest version that the client
       offers that is also supported by the server.

       The options below can be used to limit which protocol versions are
       used, and whether TCP (SSL and TLS) or UDP (DTLS) is used.  Note that
       not all protocols and flags may be available, depending on how OpenSSL
       was built.

       --ssssll33, --ttllss11, --ttllss11__11, --ttllss11__22, --ttllss11__33, --nnoo__ssssll33, --nnoo__ttllss11,
       --nnoo__ttllss11__11, --nnoo__ttllss11__22, --nnoo__ttllss11__33
           These options require or disable the use of the specified SSL or
           TLS protocols.  When a specific TLS version is required, only that
           version will be offered or accepted.  Only one specific protocol
           can be given and it cannot be combined with any of the nnoo__ options.
           The nnoo__** options do not work with ss__ttiimmee and cciipphheerrss commands but
           work with ss__cclliieenntt and ss__sseerrvveerr commands.

       --ddttllss, --ddttllss11, --ddttllss11__22
           These options specify to use DTLS instead of TLS. With --ddttllss,
           clients will negotiate any supported DTLS protocol version.  Use
           the --ddttllss11 or --ddttllss11__22 options to support only DTLS1.0 or DTLS1.2,
           respectively.

   EEnnggiinnee OOppttiioonnss
       --eennggiinnee _i_d
           Load the engine identified by _i_d and use all the methods it
           implements (algorithms, key storage, etc.), unless specified
           otherwise in the command-specific documentation or it is configured
           to do so, as described in ""Engine Configuration"" in ccoonnffiigg(5).

           The engine will be used for key ids specified with --kkeeyy and similar
           options when an option like --kkeeyyffoorrmm eennggiinnee is given.

           A special case is the ""loader_attic"" engine, which is meant just
           for internal OpenSSL testing purposes and supports loading keys,
           parameters, certificates, and CRLs from files.  When this engine is
           used, files with such credentials are read via this engine.  Using
           the ""file:"" schema is optional; a plain file (path) name will do.

       Options specifying keys, like --kkeeyy and similar, can use the generic
       OpenSSL engine key loading URI scheme ""org.openssl.engine:"" to retrieve
       private keys and public keys.  The URI syntax is as follows, in
       simplified form:

           org.openssl.engine:{engineid}:{keyid}

       Where ""{engineid}"" is the identity/name of the engine, and ""{keyid}"" is
       a key identifier that's acceptable by that engine.  For example, when
       using an engine that interfaces against a PKCS#11 implementation, the
       generic key URI would be something like this (this happens to be an
       example for the PKCS#11 engine that's part of OpenSC):

           -key org.openssl.engine:pkcs11:label_some-private-key

       As a third possibility, for engines and providers that have implemented
       their own OOSSSSLL__SSTTOORREE__LLOOAADDEERR(3), ""org.openssl.engine:"" should not be
       necessary.  For a PKCS#11 implementation that has implemented such a
       loader, the PKCS#11 URI as defined in RFC 7512 should be possible to
       use directly:

           -key pkcs11:object=some-private-key;pin-value=1234

   PPrroovviiddeerr OOppttiioonnss
       --pprroovviiddeerr _n_a_m_e
           Load and initialize the provider identified by _n_a_m_e. The _n_a_m_e can
           be also a path to the provider module. In that case the provider
           name will be the specified path and not just the provider module
           name.  Interpretation of relative paths is platform specific. The
           configured ""MODULESDIR"" path, OOPPEENNSSSSLL__MMOODDUULLEESS environment variable,
           or the path specified by --pprroovviiddeerr--ppaatthh is prepended to relative
           paths.  See pprroovviiddeerr(7) for a more detailed description.

       --pprroovviiddeerr--ppaatthh _p_a_t_h
           Specifies the search path that is to be used for looking for
           providers.  Equivalently, the OOPPEENNSSSSLL__MMOODDUULLEESS environment variable
           may be set.

       --pprrooppqquueerryy _p_r_o_p_q
           Specifies the _p_r_o_p_e_r_t_y _q_u_e_r_y _c_l_a_u_s_e to be used when fetching
           algorithms from the loaded providers.  See pprrooppeerrttyy(7) for a more
           detailed description.

EENNVVIIRROONNMMEENNTT
       The OpenSSL library can be take some configuration parameters from the
       environment.  Some of these variables are listed below.  For
       information about specific commands, see ooppeennssssll--eennggiinnee(1),
       ooppeennssssll--rreehhaasshh(1), and ttssggeett(1).

       For information about the use of environment variables in
       configuration, see ""ENVIRONMENT"" in ccoonnffiigg(5).

       For information about querying or specifying CPU architecture flags,
       see OOPPEENNSSSSLL__iiaa3322ccaapp(3), and OOPPEENNSSSSLL__ss339900xxccaapp(3).

       For information about all environment variables used by the OpenSSL
       libraries, see ooppeennssssll--eennvv(7).

       OOPPEENNSSSSLL__TTRRAACCEE==_n_a_m_e[,...]
           Enable tracing output of OpenSSL library, by name.  This output
           will only make sense if you know OpenSSL internals well.  Also, it
           might not give you any output at all if OpenSSL was built without
           tracing support.

           The value is a comma separated list of names, with the following
           available:

           TTRRAACCEE
               Traces the OpenSSL trace API itself.

           IINNIITT
               Traces OpenSSL library initialization and cleanup.

           TTLLSS Traces the TLS/SSL protocol.

           TTLLSS__CCIIPPHHEERR
               Traces the ciphers used by the TLS/SSL protocol.

           CCOONNFF
               Show details about provider and engine configuration.

           EENNGGIINNEE__TTAABBLLEE
               The function that is used by RSA, DSA (etc) code to select
               registered ENGINEs, cache defaults and functional references
               (etc), will generate debugging summaries.

           EENNGGIINNEE__RREEFF__CCOOUUNNTT
               Reference counts in the ENGINE structure will be monitored with
               a line of generated for each change.

           PPKKCCSS55VV22
               Traces PKCS#5 v2 key generation.

           PPKKCCSS1122__KKEEYYGGEENN
               Traces PKCS#12 key generation.

           PPKKCCSS1122__DDEECCRRYYPPTT
               Traces PKCS#12 decryption.

           XX550099VV33__PPOOLLIICCYY
               Generates the complete policy tree at various points during
               X.509 v3 policy evaluation.

           BBNN__CCTTXX
               Traces BIGNUM context operations.

           CCMMPP Traces CMP client and server activity.

           SSTTOORREE
               Traces STORE operations.

           DDEECCOODDEERR
               Traces decoder operations.

           EENNCCOODDEERR
               Traces encoder operations.

           RREEFF__CCOOUUNNTT
               Traces decrementing certain ASN.1 structure references.

           HHTTTTPP
               Traces the HTTP client and server, such as messages being sent
               and received.

SSEEEE AALLSSOO
       ooppeennssssll--aassnn11ppaarrssee(1), ooppeennssssll--ccaa(1), ooppeennssssll--cciipphheerrss(1),
       ooppeennssssll--ccmmss(1), ooppeennssssll--ccrrll(1), ooppeennssssll--ccrrll22ppkkccss77(1), ooppeennssssll--ddggsstt(1),
       ooppeennssssll--ddhhppaarraamm(1), ooppeennssssll--ddssaa(1), ooppeennssssll--ddssaappaarraamm(1), ooppeennssssll--eecc(1),
       ooppeennssssll--eeccppaarraamm(1), ooppeennssssll--eenncc(1), ooppeennssssll--eennggiinnee(1),
       ooppeennssssll--eerrrrssttrr(1), ooppeennssssll--ggeennddssaa(1), ooppeennssssll--ggeennppkkeeyy(1),
       ooppeennssssll--ggeennrrssaa(1), ooppeennssssll--kkddff(1), ooppeennssssll--lliisstt(1), ooppeennssssll--mmaacc(1),
       ooppeennssssll--nnsseeqq(1), ooppeennssssll--ooccsspp(1), ooppeennssssll--ppaasssswwdd(1), ooppeennssssll--ppkkccss1122(1),
       ooppeennssssll--ppkkccss77(1), ooppeennssssll--ppkkccss88(1), ooppeennssssll--ppkkeeyy(1),
       ooppeennssssll--ppkkeeyyppaarraamm(1), ooppeennssssll--ppkkeeyyuuttll(1), ooppeennssssll--pprriimmee(1),
       ooppeennssssll--rraanndd(1), ooppeennssssll--rreehhaasshh(1), ooppeennssssll--rreeqq(1), ooppeennssssll--rrssaa(1),
       ooppeennssssll--rrssaauuttll(1), ooppeennssssll--ss__cclliieenntt(1), ooppeennssssll--ss__sseerrvveerr(1),
       ooppeennssssll--ss__ttiimmee(1), ooppeennssssll--sseessss__iidd(1), ooppeennssssll--ssmmiimmee(1),
       ooppeennssssll--ssppeeeedd(1), ooppeennssssll--ssppkkaacc(1), ooppeennssssll--ssrrpp(1),
       ooppeennssssll--ssttoorreeuuttll(1), ooppeennssssll--ttss(1), ooppeennssssll--vveerriiffyy(1),
       ooppeennssssll--vveerrssiioonn(1), ooppeennssssll--xx550099(1), ccoonnffiigg(5), ccrryyppttoo(7),
       ooppeennssssll--eennvv(7).  ssssll(7), xx550099vv33__ccoonnffiigg(5)

HHIISSTTOORRYY
       The lliisstt -_X_X_X--aallggoorriitthhmmss options were added in OpenSSL 1.0.0; For notes
       on the availability of other commands, see their individual manual
       pages.

       The --iissssuueerr__cchheecckkss option is deprecated as of OpenSSL 1.1.0 and is
       silently ignored.

       The --xxcceerrttffoorrmm and --xxkkeeyyffoorrmm options are obsolete since OpenSSL 3.0 and
       have no effect.

       The interactive mode, which could be invoked by running ""openssl"" with
       no further arguments, was removed in OpenSSL 3.0, and running that
       program with no arguments is now equivalent to ""openssl help"".

CCOOPPYYRRIIGGHHTT
       Copyright 2000-2023 The OpenSSL Project Authors. All Rights Reserved.

       Licensed under the Apache License 2.0 (the ""License"").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.

3.3.2                             2024-09-03                     OPENSSL(1ssl)
"
gpg,No manual entry for gpg
hexdump,"HEXDUMP(1)                  General Commands Manual                 HEXDUMP(1)

NNAAMMEE
     hheexxdduummpp – ASCII, decimal, hexadecimal, octal dump

SSYYNNOOPPSSIISS
     hheexxdduummpp [--bbccCCddoovvxx] [--ee _f_o_r_m_a_t___s_t_r_i_n_g] [--ff _f_o_r_m_a_t___f_i_l_e] [--nn _l_e_n_g_t_h]
             [--ss _o_f_f_s_e_t] _f_i_l_e _._._.

DDEESSCCRRIIPPTTIIOONN
     The hheexxdduummpp utility is a filter which displays the specified files, or
     the standard input, if no files are specified, in a user specified
     format.

     The options are as follows:

     --bb      _O_n_e_-_b_y_t_e _o_c_t_a_l _d_i_s_p_l_a_y.  Display the input offset in hexadecimal,
             followed by sixteen space-separated, three column, zero-filled,
             bytes of input data, in octal, per line.

     --cc      _O_n_e_-_b_y_t_e _c_h_a_r_a_c_t_e_r _d_i_s_p_l_a_y.  Display the input offset in
             hexadecimal, followed by sixteen space-separated, three column,
             space-filled, characters of input data per line.

     --CC      _C_a_n_o_n_i_c_a_l _h_e_x_+_A_S_C_I_I _d_i_s_p_l_a_y.  Display the input offset in
             hexadecimal, followed by sixteen space-separated, two column,
             hexadecimal bytes, followed by the same sixteen bytes in %_p
             format enclosed in ``|'' characters.

     --dd      _T_w_o_-_b_y_t_e _d_e_c_i_m_a_l _d_i_s_p_l_a_y.  Display the input offset in
             hexadecimal, followed by eight space-separated, five column,
             zero-filled, two-byte units of input data, in unsigned decimal,
             per line.

     --ee _f_o_r_m_a_t___s_t_r_i_n_g
             Specify a format string to be used for displaying data.

     --ff _f_o_r_m_a_t___f_i_l_e
             Specify a file that contains one or more newline separated format
             strings.  Empty lines and lines whose first non-blank character
             is a hash mark (##) are ignored.

     --nn _l_e_n_g_t_h
             Interpret only _l_e_n_g_t_h bytes of input.

     --oo      _T_w_o_-_b_y_t_e _o_c_t_a_l _d_i_s_p_l_a_y.  Display the input offset in hexadecimal,
             followed by eight space-separated, six column, zero-filled, two
             byte quantities of input data, in octal, per line.

     --ss _o_f_f_s_e_t
             Skip _o_f_f_s_e_t bytes from the beginning of the input.  By default,
             _o_f_f_s_e_t is interpreted as a decimal number.  With a leading 00xx or
             00XX, _o_f_f_s_e_t is interpreted as a hexadecimal number, otherwise,
             with a leading 00, _o_f_f_s_e_t is interpreted as an octal number.
             Appending the character bb, kk, mm, or gg to _o_f_f_s_e_t causes it to be
             interpreted as a multiple of 512, 1024, 1048576, or 1073741824,
             respectively.

     --vv      Cause hheexxdduummpp to display all input data.  Without the --vv option,
             any number of groups of output lines, which would be identical to
             the immediately preceding group of output lines (except for the
             input offsets), are replaced with a line comprised of a single
             asterisk.

     --xx      _T_w_o_-_b_y_t_e _h_e_x_a_d_e_c_i_m_a_l _d_i_s_p_l_a_y.  Display the input offset in
             hexadecimal, followed by eight, space separated, four column,
             zero-filled, two-byte quantities of input data, in hexadecimal,
             per line.

     For each input file, hheexxdduummpp sequentially copies the input to standard
     output, transforming the data according to the format strings specified
     by the --ee and --ff options, in the order that they were specified.

   FFoorrmmaattss
     A format string contains any number of format units, separated by
     whitespace.  A format unit contains up to three items: an iteration
     count, a byte count, and a format.

     The iteration count is an optional positive integer, which defaults to
     one.  Each format is applied iteration count times.

     The byte count is an optional positive integer.  If specified it defines
     the number of bytes to be interpreted by each iteration of the format.

     If an iteration count and/or a byte count is specified, a single slash
     must be placed after the iteration count and/or before the byte count to
     disambiguate them.  Any whitespace before or after the slash is ignored.

     The format is required and must be surrounded by double quote ("" "")
     marks.  It is interpreted as a fprintf-style format string (see
     fprintf(3)), with the following exceptions:

           ••   An asterisk (*) may not be used as a field width or precision.

           ••   A byte count or field precision _i_s required for each ``s''
               conversion character (unlike the fprintf(3) default which
               prints the entire string if the precision is unspecified).

           ••   The conversion characters ``h'', ``l'', ``n'', ``p'' and ``q''
               are not supported.

           ••   The single character escape sequences described in the C
               standard are supported:

                     NUL                  \0
                     <alert character>    \a
                     <backspace>          \b
                     <form-feed>          \f
                     <newline>            \n
                     <carriage return>    \r
                     <tab>                \t
                     <vertical tab>       \v

     The hheexxdduummpp utility also supports the following additional conversion
     strings:

     __aa[ddooxx]     Display the input offset, cumulative across input files, of
                 the next byte to be displayed.  The appended characters dd, oo,
                 and xx specify the display base as decimal, octal or
                 hexadecimal respectively.

     __AA[ddooxx]     Identical to the __aa conversion string except that it is only
                 performed once, when all of the input data has been
                 processed.

     __cc          Output characters in the default character set.  Nonprinting
                 characters are displayed in three character, zero-padded
                 octal, except for those representable by standard escape
                 notation (see above), which are displayed as two character
                 strings.

     __pp          Output characters in the default character set.  Nonprinting
                 characters are displayed as a single “..”.

     __uu          Output US ASCII characters, with the exception that control
                 characters are displayed using the following, lower-case,
                 names.  Characters greater than 0xff, hexadecimal, are
                 displayed as hexadecimal strings.

                 000 NUL  001 SOH  002 STX  003 ETX  004 EOT  005 ENQ
                 006 ACK  007 BEL  008 BS   009 HT   00A LF   00B VT
                 00C FF   00D CR   00E SO   00F SI   010 DLE  011 DC1
                 012 DC2  013 DC3  014 DC4  015 NAK  016 SYN  017 ETB
                 018 CAN  019 EM   01A SUB  01B ESC  01C FS   01D GS
                 01E RS   01F US   07F DEL

     The default and supported byte counts for the conversion characters are
     as follows:

           %_c, %_p, %_u, %c       One byte counts only.

           %d, %i, %o, %u, %X, %x  Four byte default, one, two and four byte
                                   counts supported.

           %E, %e, %f, %G, %g      Eight byte default, four and twelve byte
                                   counts supported.

     The amount of data interpreted by each format string is the sum of the
     data required by each format unit, which is the iteration count times the
     byte count, or the iteration count times the number of bytes required by
     the format if the byte count is not specified.

     The input is manipulated in ``blocks'', where a block is defined as the
     largest amount of data specified by any format string.  Format strings
     interpreting less than an input block's worth of data, whose last format
     unit both interprets some number of bytes and does not have a specified
     iteration count, have the iteration count incremented until the entire
     input block has been processed or there is not enough data remaining in
     the block to satisfy the format string.

     If, either as a result of user specification or hheexxdduummpp modifying the
     iteration count as described above, an iteration count is greater than
     one, no trailing whitespace characters are output during the last
     iteration.

     It is an error to specify a byte count as well as multiple conversion
     characters or strings unless all but one of the conversion characters or
     strings is __aa or __AA.

     If, as a result of the specification of the --nn option or end-of-file
     being reached, input data only partially satisfies a format string, the
     input block is zero-padded sufficiently to display all available data
     (i.e., any format units overlapping the end of data will display some
     number of the zero bytes).

     Further output by such format strings is replaced by an equivalent number
     of spaces.  An equivalent number of spaces is defined as the number of
     spaces output by an ss conversion character with the same field width and
     precision as the original conversion character or conversion string but
     with any “+”, “ ”, “#” conversion flag characters removed, and
     referencing a NULL string.

     If no format strings are specified, the default display is equivalent to
     specifying the --xx option.

EEXXIITT SSTTAATTUUSS
     The hheexxdduummpp utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Dump input in canonical (hex+ASCII) form:

           $ echo ""FreeBSD: The power to serve"" | hexdump -C
           00000000  46 72 65 65 42 53 44 3a  20 54 68 65 20 70 6f 77  |FreeBSD: The pow|
           00000010  65 72 20 74 6f 20 73 65  72 76 65 0a              |er to serve.|
           0000001c

     Same as above but skipping the first 4 bytes of stdin and interpreting
     only 3 bytes of input:

           $ echo ""FreeBSD: The power to serve"" | hexdump -C -s 4 -n 3
           00000004  42 53 44                                          |BSD|
           00000007

     Assuming a format file named _f_o_r_m_a_t_._t_x_t with the following contents that
     specify a perusal format:

           ""%06.6_ao ""  12/1 ""%3_u ""
           ""\t\t"" ""%_p ""
           ""\n""

     Dump input in canonical form using the format in _f_o_r_m_a_t_._t_x_t:

           $ echo ""FreeBSD"" | hexdump -f format.txt -C
           000000   F   r   e   e   B   S   D  lf                          F r e e B S D .
           00000000  46 72 65 65 42 53 44 0a                           |FreeBSD.|
           00000008

     Assuming a format file named _f_o_r_m_a_t_._t_x_t with the following contents that
     simulate the --xx option:

           ""%07.7_Ax\n""
           ""%07.7_ax  "" 8/2 ""%04x "" ""\n""

     Dump input in canonical form using the format in _f_o_r_m_a_t_._t_x_t:

           $ echo ""FreeBSD: The power to serve"" | hexdump -f format.txt -C
           0000000  7246 6565 5342 3a44 5420 6568 7020 776f
           00000000  46 72 65 65 42 53 44 3a  20 54 68 65 20 70 6f 77  |FreeBSD: The pow|
           0000010  7265 7420 206f 6573 7672 0a65
           00000010  65 72 20 74 6f 20 73 65  72 76 65 0a              |er to serve.|
           0000001c

SSEEEE AALLSSOO
     od(1)

macOS 14.6                       June 29, 2020                      macOS 14.6
"
xxd,"XXD(1)                      General Commands Manual                     XXD(1)

NNAAMMEE
       _x_x_d - make a hex dump or do the reverse.

SSYYNNOOPPSSIISS
       xxxxdd -h[elp]
       xxxxdd [options] [infile [outfile]]
       xxxxdd -r[evert] [options] [infile [outfile]]

DDEESSCCRRIIPPTTIIOONN
       _x_x_d creates a hex dump of a given file or standard input.  It can also
       convert a hex dump back to its original binary form.  Like uuuueennccooddee(1)
       and uuuuddeeccooddee(1) it allows the transmission of binary data in a `mail-
       safe' ASCII representation, but has the advantage of decoding to
       standard output.  Moreover, it can be used to perform binary file
       patching.

OOPPTTIIOONNSS
       If no _i_n_f_i_l_e is given, standard input is read.  If _i_n_f_i_l_e is specified
       as a `--' character, then input is taken from standard input.  If no
       _o_u_t_f_i_l_e is given (or a `--' character is in its place), results are sent
       to standard output.

       Note that a ""lazy"" parser is used which does not check for more than
       the first option letter, unless the option is followed by a parameter.
       Spaces between a single option letter and its parameter are optional.
       Parameters to options can be specified in decimal, hexadecimal or octal
       notation.  Thus --cc88, --cc 88, --cc 001100 and --ccoollss 88 are all equivalent.

       _-_a | _-_a_u_t_o_s_k_i_p
              Toggle autoskip: A single '*' replaces NUL-lines.  Default off.

       _-_b | _-_b_i_t_s
              Switch to bits (binary digits) dump, rather than hex dump.  This
              option writes octets as eight digits ""1""s and ""0""s instead of a
              normal hexadecimal dump. Each line is preceded by a line number
              in hexadecimal and followed by an ASCII (or EBCDIC)
              representation. The command line switches -p, -i do not work
              with this mode.

       _-_c _c_o_l_s | _-_c_o_l_s _c_o_l_s
              Format <_c_o_l_s> octets per line. Default 16 (-i: 12, -ps: 30, -b:
              6). Max 256.  No maximum for -ps. With -ps, 0 results in one
              long line of output.

       _-_C | _-_c_a_p_i_t_a_l_i_z_e
              Capitalize variable names in C include file style, when using
              -i.

       _-_E | _-_E_B_C_D_I_C
              Change the character encoding in the righthand column from ASCII
              to EBCDIC.  This does not change the hexadecimal representation.
              The option is meaningless in combinations with -r, -p or -i.

       _-_e     Switch to little-endian hex dump.  This option treats byte
              groups as words in little-endian byte order.  The default
              grouping of 4 bytes may be changed using _-_g.  This option only
              applies to the hex dump, leaving the ASCII (or EBCDIC)
              representation unchanged.  The command line switches -r, -p, -i
              do not work with this mode.

       _-_g _b_y_t_e_s | _-_g_r_o_u_p_s_i_z_e _b_y_t_e_s
              Separate the output of every <_b_y_t_e_s> bytes (two hex characters
              or eight bit digits each) by a whitespace.  Specify _-_g _0 to
              suppress grouping.  <_B_y_t_e_s> defaults to _2 in normal mode, _4 in
              little-endian mode and _1 in bits mode.  Grouping does not apply
              to PostScript or include style.

       _-_h | _-_h_e_l_p
              Print a summary of available commands and exit.  No hex dumping
              is performed.

       _-_i | _-_i_n_c_l_u_d_e
              Output in C include file style. A complete static array
              definition is written (named after the input file), unless xxd
              reads from stdin.

       _-_l _l_e_n | _-_l_e_n _l_e_n
              Stop after writing <_l_e_n> octets.

       _-_n _n_a_m_e  _|  _-_n_a_m_e _n_a_m_e
              Override the variable name output when -i is used. The array is
              named _n_a_m_e and the length is named _n_a_m_e_len.

       _-_o _o_f_f_s_e_t
              Add <_o_f_f_s_e_t> to the displayed file position.

       _-_p | _-_p_s | _-_p_o_s_t_s_c_r_i_p_t | _-_p_l_a_i_n
              Output in PostScript continuous hex dump style. Also known as
              plain hex dump style.

       _-_r | _-_r_e_v_e_r_t
              Reverse operation: convert (or patch) hex dump into binary.  If
              not writing to stdout, xxd writes into its output file without
              truncating it. Use the combination _-_r _-_p to read plain
              hexadecimal dumps without line number information and without a
              particular column layout. Additional whitespace and line breaks
              are allowed anywhere. Use the combination _-_r _-_b to read a bits
              dump instead of a hex dump.

       _-_R _w_h_e_n
              In output the hex-value and the value are both colored with the
              same color depending on the hex-value. Mostly helping to
              differentiate printable and non-printable characters.  _w_h_e_n is
              nneevveerr, aallwwaayyss, or aauuttoo.  When the $$NNOO__CCOOLLOORR environment variable
              is set, colorization will be disabled.

       _-_s_e_e_k _o_f_f_s_e_t
              When used after _-_r: revert with <_o_f_f_s_e_t> added to file positions
              found in hex dump.

       _-_s _[_+_]_[_-_]_s_e_e_k
              Start at <_s_e_e_k> bytes abs. (or rel.) infile offset.  _+ indicates
              that the seek is relative to the current stdin file position
              (meaningless when not reading from stdin).  _- indicates that the
              seek should be that many characters from the end of the input
              (or if combined with _+: before the current stdin file position).
              Without -s option, xxd starts at the current file position.

       _-_u     Use upper-case hex letters. Default is lower-case.

       _-_v | _-_v_e_r_s_i_o_n
              Show version string.

CCAAVVEEAATTSS
       _x_x_d _-_r has some built-in magic while evaluating line number
       information.  If the output file is seekable, then the line numbers at
       the start of each hex dump line may be out of order, lines may be
       missing, or overlapping. In these cases xxd will lseek(2) to the next
       position. If the output file is not seekable, only gaps are allowed,
       which will be filled by null-bytes.

       _x_x_d _-_r never generates parse errors. Garbage is silently skipped.

       When editing hex dumps, please note that _x_x_d _-_r skips everything on the
       input line after reading enough columns of hexadecimal data (see option
       -c). This also means that changes to the printable ASCII (or EBCDIC)
       columns are always ignored. Reverting a plain (or PostScript) style hex
       dump with xxd -r -p does not depend on the correct number of columns.
       Here, anything that looks like a pair of hex digits is interpreted.

       Note the difference between
       _% _x_x_d _-_i _f_i_l_e
       and
       _% _x_x_d _-_i _< _f_i_l_e

       _x_x_d _-_s _+_s_e_e_k may be different from _x_x_d _-_s _s_e_e_k, as lseek(2) is used to
       ""rewind"" input.  A '+' makes a difference if the input source is stdin,
       and if stdin's file position is not at the start of the file by the
       time xxd is started and given its input.  The following examples may
       help to clarify (or further confuse!):

       Rewind stdin before reading; needed because the `cat' has already read
       to the end of stdin.
       _% _s_h _-_c _""_c_a_t _> _p_l_a_i_n___c_o_p_y_; _x_x_d _-_s _0 _> _h_e_x___c_o_p_y_"" _< _f_i_l_e

       Hex dump from file position 0x480 (=1024+128) onwards.  The `+' sign
       means ""relative to the current position"", thus the `128' adds to the 1k
       where dd left off.
       _% _s_h _-_c _""_d_d _o_f_=_p_l_a_i_n___s_n_i_p_p_e_t _b_s_=_1_k _c_o_u_n_t_=_1_; _x_x_d _-_s _+_1_2_8 _> _h_e_x___s_n_i_p_p_e_t_""
       _< _f_i_l_e

       Hex dump from file position 0x100 (=1024-768) onwards.
       _% _s_h _-_c _""_d_d _o_f_=_p_l_a_i_n___s_n_i_p_p_e_t _b_s_=_1_k _c_o_u_n_t_=_1_; _x_x_d _-_s _+_-_7_6_8 _> _h_e_x___s_n_i_p_p_e_t_""
       _< _f_i_l_e

       However, this is a rare situation and the use of `+' is rarely needed.
       The author prefers to monitor the effect of xxd with strace(1) or
       truss(1), whenever -s is used.

EEXXAAMMPPLLEESS
       Print everything but the first three lines (hex 0x30 bytes) of ffiillee.
       _% _x_x_d _-_s _0_x_3_0 _f_i_l_e

       Print 3 lines (hex 0x30 bytes) from the end of ffiillee.
       _% _x_x_d _-_s _-_0_x_3_0 _f_i_l_e

       Print 120 bytes as a continuous hex dump with 20 octets per line.
       _% _x_x_d _-_l _1_2_0 _-_p_s _-_c _2_0 _x_x_d_._1
       2e54482058584420312022417567757374203139
       39362220224d616e75616c207061676520666f72
       20787864220a2e5c220a2e5c222032317374204d
       617920313939360a2e5c22204d616e2070616765
       20617574686f723a0a2e5c2220202020546f6e79
       204e7567656e74203c746f6e79407363746e7567

       Hex dump the first 120 bytes of this man page with 12 octets per line.
       _% _x_x_d _-_l _1_2_0 _-_c _1_2 _x_x_d_._1
       0000000: 2e54 4820 5858 4420 3120 2241  .TH XXD 1 ""A
       000000c: 7567 7573 7420 3139 3936 2220  ugust 1996""
       0000018: 224d 616e 7561 6c20 7061 6765  ""Manual page
       0000024: 2066 6f72 2078 7864 220a 2e5c   for xxd""..\
       0000030: 220a 2e5c 2220 3231 7374 204d  ""..\"" 21st M
       000003c: 6179 2031 3939 360a 2e5c 2220  ay 1996..\""
       0000048: 4d61 6e20 7061 6765 2061 7574  Man page aut
       0000054: 686f 723a 0a2e 5c22 2020 2020  hor:..\""
       0000060: 546f 6e79 204e 7567 656e 7420  Tony Nugent
       000006c: 3c74 6f6e 7940 7363 746e 7567  <tony@sctnug

       Display just the date from the file xxd.1
       _% _x_x_d _-_s _0_x_3_6 _-_l _1_3 _-_c _1_3 _x_x_d_._1
       0000036: 3231 7374 204d 6179 2031 3939 36  21st May 1996

       Copy iinnppuutt__ffiillee to oouuttppuutt__ffiillee and prepend 100 bytes of value 0x00.
       _% _x_x_d _i_n_p_u_t___f_i_l_e _| _x_x_d _-_r _-_s _1_0_0 _> _o_u_t_p_u_t___f_i_l_e

       Patch the date in the file xxd.1
       _% _e_c_h_o _""_0_0_0_0_0_3_7_: _3_5_7_4 _6_8_"" _| _x_x_d _-_r _- _x_x_d_._1
       _% _x_x_d _-_s _0_x_3_6 _-_l _1_3 _-_c _1_3 _x_x_d_._1
       0000036: 3235 7468 204d 6179 2031 3939 36  25th May 1996

       Create a 65537 byte file with all bytes 0x00, except for the last one
       which is 'A' (hex 0x41).
       _% _e_c_h_o _""_0_1_0_0_0_0_: _4_1_"" _| _x_x_d _-_r _> _f_i_l_e

       Hex dump this file with autoskip.
       _% _x_x_d _-_a _-_c _1_2 _f_i_l_e
       0000000: 0000 0000 0000 0000 0000 0000  ............
       *
       000fffc: 0000 0000 40                   ....A

       Create a 1 byte file containing a single 'A' character.  The number
       after '-r -s' adds to the line numbers found in the file; in effect,
       the leading bytes are suppressed.
       _% _e_c_h_o _""_0_1_0_0_0_0_: _4_1_"" _| _x_x_d _-_r _-_s _-_0_x_1_0_0_0_0 _> _f_i_l_e

       Use xxd as a filter within an editor such as vviimm((11)) to hex dump a
       region marked between `a' and `z'.
       _:_'_a_,_'_z_!_x_x_d

       Use xxd as a filter within an editor such as vviimm((11)) to recover a binary
       hex dump marked between `a' and `z'.
       _:_'_a_,_'_z_!_x_x_d _-_r

       Use xxd as a filter within an editor such as vviimm((11)) to recover one line
       of a hex dump.  Move the cursor over the line and type:
       _!_!_x_x_d _-_r

       Read single characters from a serial line
       _% _x_x_d _-_c_1 _< _/_d_e_v_/_t_e_r_m_/_b _&
       _% _s_t_t_y _< _/_d_e_v_/_t_e_r_m_/_b _-_e_c_h_o _-_o_p_o_s_t _-_i_s_i_g _-_i_c_a_n_o_n _m_i_n _1
       _% _e_c_h_o _-_n _f_o_o _> _/_d_e_v_/_t_e_r_m_/_b

RREETTUURRNN VVAALLUUEESS
       The following error values are returned:

       0      no errors encountered.

       -1     operation not supported (_x_x_d _-_r _-_i still impossible).

       1      error while parsing options.

       2      problems with input file.

       3      problems with output file.

       4,5    desired seek position is unreachable.

SSEEEE AALLSSOO
       uuencode(1), uudecode(1), patch(1)

WWAARRNNIINNGGSS
       The tool's weirdness matches its creator's brain.  Use entirely at your
       own risk. Copy files. Trace it. Become a wizard.

VVEERRSSIIOONN
       This manual page documents xxd version 1.7

AAUUTTHHOORR
       (c) 1990-1997 by Juergen Weigert
       <jnweiger@informatik.uni-erlangen.de>

       Distribute freely and credit me,
       make money and share with me,
       lose money and don't ask me.

       Manual page started by Tony Nugent
       <tony@sctnugen.ppp.gu.edu.au> <T.Nugent@sct.gu.edu.au>
       Small changes by Bram Moolenaar.  Edited by Juergen Weigert.

Manual page for xxd               August 1996                           XXD(1)
"
cksum,"CKSUM(1)                    General Commands Manual                   CKSUM(1)

NNAAMMEE
     cckkssuumm, ssuumm – display file checksums and block counts

SSYYNNOOPPSSIISS
     cckkssuumm [--oo _1 | _2 | _3] [_f_i_l_e _._._.]
     ssuumm [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The cckkssuumm utility writes to the standard output three whitespace
     separated fields for each input file.  These fields are a checksum CRC,
     the total number of octets in the file and the file name.  If no file
     name is specified, the standard input is used and no file name is
     written.

     The ssuumm utility is identical to the cckkssuumm utility, except that it
     defaults to using historic algorithm 1, as described below.  It is
     provided for compatibility only.

     The options are as follows:

     --oo      Use historic algorithms instead of the (superior) default one.

             Algorithm 1 is the algorithm used by historic BSD systems as the
             sum(1) algorithm and by historic AT&T System V UNIX systems as
             the sum(1) algorithm when using the --rr option.  This is a 16-bit
             checksum, with a right rotation before each addition; overflow is
             discarded.

             Algorithm 2 is the algorithm used by historic AT&T System V UNIX
             systems as the default sum(1) algorithm.  This is a 32-bit
             checksum, and is defined as follows:

                   s = sum of all bytes;
                   r = s % 2^16 + (s % 2^32) / 2^16;
                   cksum = (r % 2^16) + r / 2^16;

             Algorithm 3 is what is commonly called the ‘32bit CRC’ algorithm.
             This is a 32-bit checksum.

             Both algorithm 1 and 2 write to the standard output the same
             fields as the default algorithm except that the size of the file
             in bytes is replaced with the size of the file in blocks.  For
             historic reasons, the block size is 1024 for algorithm 1 and 512
             for algorithm 2.  Partial blocks are rounded up.

     The default CRC used is based on the polynomial used for CRC error
     checking in the networking standard ISO 8802-3: 1989.  The CRC checksum
     encoding is defined by the generating polynomial:

           G(x) = x^32 + x^26 + x^23 + x^22 + x^16 + x^12 +
                x^11 + x^10 + x^8 + x^7 + x^5 + x^4 + x^2 + x + 1

     Mathematically, the CRC value corresponding to a given file is defined by
     the following procedure:

           The _n bits to be evaluated are considered to be the coefficients of
           a mod 2 polynomial M(x) of degree _n-1.  These _n bits are the bits
           from the file, with the most significant bit being the most
           significant bit of the first octet of the file and the last bit
           being the least significant bit of the last octet, padded with zero
           bits (if necessary) to achieve an integral number of octets,
           followed by one or more octets representing the length of the file
           as a binary value, least significant octet first.  The smallest
           number of octets capable of representing this integer are used.

           M(x) is multiplied by x^32 (i.e., shifted left 32 bits) and divided
           by G(x) using mod 2 division, producing a remainder R(x) of degree
           <= 31.

           The coefficients of R(x) are considered to be a 32-bit sequence.

           The bit sequence is complemented and the result is the CRC.

EEXXIITT SSTTAATTUUSS
     The cckkssuumm and ssuumm utilities exit 0 on success, and >0 if an error occurs.

SSEEEE AALLSSOO
     md5(1)

     The default calculation is identical to that given in pseudo-code in the
     following ACM article.

     Dilip V. Sarwate, “Computation of Cyclic Redundancy Checks Via Table
     Lookup”, _C_o_m_m_u_n_i_c_a_t_i_o_n_s _o_f _t_h_e _T_n _A_C_M, August 1988.

SSTTAANNDDAARRDDSS
     The cckkssuumm utility is expected to conform to IEEE Std 1003.2-1992
     (“POSIX.2”).

HHIISSTTOORRYY
     The cckkssuumm utility appeared in 4.4BSD.

macOS 14.6                      April 28, 1995                      macOS 14.6
"
split,"SPLIT(1)                    General Commands Manual                   SPLIT(1)

NNAAMMEE
     sspplliitt – split a file into pieces

SSYYNNOOPPSSIISS
     sspplliitt --dd [--ll _l_i_n_e___c_o_u_n_t] [--aa _s_u_f_f_i_x___l_e_n_g_t_h] [_f_i_l_e [_p_r_e_f_i_x]]
     sspplliitt --dd --bb _b_y_t_e___c_o_u_n_t[KK|kk|MM|mm|GG|gg] [--aa _s_u_f_f_i_x___l_e_n_g_t_h] [_f_i_l_e [_p_r_e_f_i_x]]
     sspplliitt --dd --nn _c_h_u_n_k___c_o_u_n_t [--aa _s_u_f_f_i_x___l_e_n_g_t_h] [_f_i_l_e [_p_r_e_f_i_x]]
     sspplliitt --dd --pp _p_a_t_t_e_r_n [--aa _s_u_f_f_i_x___l_e_n_g_t_h] [_f_i_l_e [_p_r_e_f_i_x]]

DDEESSCCRRIIPPTTIIOONN
     The sspplliitt utility reads the given _f_i_l_e and breaks it up into files of
     1000 lines each (if no options are specified), leaving the _f_i_l_e
     unchanged.  If _f_i_l_e is a single dash (‘--’) or absent, sspplliitt reads from
     the standard input.

     The options are as follows:

     --aa _s_u_f_f_i_x___l_e_n_g_t_h
             Use _s_u_f_f_i_x___l_e_n_g_t_h letters to form the suffix of the file name.

     --bb _b_y_t_e___c_o_u_n_t[KK|kk|MM|mm|GG|gg]
             Create split files _b_y_t_e___c_o_u_n_t bytes in length.  If kk or KK is
             appended to the number, the file is split into _b_y_t_e___c_o_u_n_t
             kilobyte pieces.  If mm or MM is appended to the number, the file
             is split into _b_y_t_e___c_o_u_n_t megabyte pieces.  If gg or GG is appended
             to the number, the file is split into _b_y_t_e___c_o_u_n_t gigabyte pieces.

     --dd      Use a numeric suffix instead of a alphabetic suffix.

     --ll _l_i_n_e___c_o_u_n_t
             Create split files _l_i_n_e___c_o_u_n_t lines in length.

     --nn _c_h_u_n_k___c_o_u_n_t
             Split file into _c_h_u_n_k___c_o_u_n_t smaller files.  The first n - 1 files
             will be of size (size of _f_i_l_e / _c_h_u_n_k___c_o_u_n_t ) and the last file
             will contain the remaining bytes.

     --pp _p_a_t_t_e_r_n
             The file is split whenever an input line matches _p_a_t_t_e_r_n, which
             is interpreted as an extended regular expression.  The matching
             line will be the first line of the next output file.  This option
             is incompatible with the --bb and --ll options.

     If additional arguments are specified, the first is used as the name of
     the input file which is to be split.  If a second additional argument is
     specified, it is used as a prefix for the names of the files into which
     the file is split.  In this case, each file into which the file is split
     is named by the prefix followed by a lexically ordered suffix using
     _s_u_f_f_i_x___l_e_n_g_t_h characters in the range “a-z”.  If --aa is not specified, two
     letters are used as the suffix.

     If the _p_r_e_f_i_x argument is not specified, the file is split into lexically
     ordered files named with the prefix “x” and with suffixes as above.

EENNVVIIRROONNMMEENNTT
     The LANG, LC_ALL, LC_CTYPE and LC_COLLATE environment variables affect
     the execution of sspplliitt as described in environ(7).

EEXXIITT SSTTAATTUUSS
     The sspplliitt utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Split input into as many files as needed, so that each file contains at
     most 2 lines:

           $ echo -e ""first line\nsecond line\nthird line\nforth line"" | split -l2

     Split input in chunks of 10 bytes using numeric prefixes for file names.
     This generates two files of 10 bytes (x00 and x01) and a third file (x02)
     with the remaining 2 bytes:

           $ echo -e ""This is 22 bytes long"" | split -d -b10

     Split input generating 6 files:

           echo -e ""This is 22 bytes long"" | split -n 6

     Split input creating a new file every time a line matches the regular
     expression for a “t” followed by either “a” or “u” thus creating two
     files:

           $ echo -e ""stack\nstock\nstuck\nanother line"" | split -p 't[au]'

SSEEEE AALLSSOO
     csplit(1), re_format(7)

SSTTAANNDDAARRDDSS
     The sspplliitt utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).

HHIISSTTOORRYY
     A sspplliitt command appeared in Version 3 AT&T UNIX.

     Before FreeBSD 14, pattern and line matching only operated on lines
     shorter than 65,536 bytes.

macOS 14.6                     October 25, 2022                     macOS 14.6
"
csplit,"CSPLIT(1)                   General Commands Manual                  CSPLIT(1)

NNAAMMEE
     ccsspplliitt – split files based on context

SSYYNNOOPPSSIISS
     ccsspplliitt [--kkss] [--ff _p_r_e_f_i_x] [--nn _n_u_m_b_e_r] _f_i_l_e _a_r_g_s _._._.

DDEESSCCRRIIPPTTIIOONN
     The ccsspplliitt utility splits _f_i_l_e into pieces using the patterns _a_r_g_s.  If
     _f_i_l_e is a dash (‘--’), ccsspplliitt reads from standard input.

     Files are created with a prefix of “xx” and two decimal digits.  The size
     of each file is written to standard output as it is created.  If an error
     occurs whilst files are being created, or a HUP, INT, or TERM signal is
     received, all files previously written are removed.

     The options are as follows:

     --ff _p_r_e_f_i_x
             Create file names beginning with _p_r_e_f_i_x, instead of “_x_x”.

     --kk      Do not remove previously created files if an error occurs or a
             HUP, INT, or TERM signal is received.

     --nn _n_u_m_b_e_r
             Create file names beginning with _n_u_m_b_e_r of decimal digits after
             the prefix, instead of 2.

     --ss      Do not write the size of each output file to standard output as
             it is created.

     The _a_r_g_s operands may be a combination of the following patterns:

     //_r_e_g_e_x_p//[[++|--]_o_f_f_s_e_t]
             Create a file containing the input from the current line to (but
             not including) the next line matching the given basic regular
             expression.  An optional _o_f_f_s_e_t from the line that matched may be
             specified.

     %%_r_e_g_e_x_p%%[[++|--]_o_f_f_s_e_t]
             Same as above but a file is not created for the output.

     _l_i_n_e___n_o
             Create containing the input from the current line to (but not
             including) the specified line number.

     {{_n_u_m}}   Repeat the previous pattern the specified number of times.  If it
             follows a line number pattern, a new file will be created for
             each _l_i_n_e___n_o lines, _n_u_m times.  The first line of the file is
             line number 1 for historic reasons.

     After all the patterns have been processed, the remaining input data (if
     there is any) will be written to a new file.

     Requesting to split at a line before the current line number or past the
     end of the file will result in an error.

EENNVVIIRROONNMMEENNTT
     The LANG, LC_ALL, LC_COLLATE and LC_CTYPE environment variables affect
     the execution of ccsspplliitt as described in environ(7).

EEXXIITT SSTTAATTUUSS
     The ccsspplliitt utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Split the mdoc(7) file _f_o_o_._1 into one file for each section (up to 21
     plus one for the rest, if any):

           csplit -k foo.1 '%^\.Sh%' '/^\.Sh/' '{20}'

     Split standard input after the first 99 lines and every 100 lines
     thereafter:

           csplit -k - 100 '{19}'

SSEEEE AALLSSOO
     sed(1), split(1), re_format(7)

SSTTAANNDDAARRDDSS
     The ccsspplliitt utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).

HHIISSTTOORRYY
     A ccsspplliitt command appeared in PWB UNIX.

BBUUGGSS
     Input lines are limited to LINE_MAX (2048) bytes in length.

macOS 14.6                     February 6, 2014                     macOS 14.6
"
paste,"PASTE(1)                    General Commands Manual                   PASTE(1)

NNAAMMEE
     ppaassttee – merge corresponding or subsequent lines of files

SSYYNNOOPPSSIISS
     ppaassttee [--ss] [--dd _l_i_s_t] _f_i_l_e _._._.

DDEESSCCRRIIPPTTIIOONN
     The ppaassttee utility concatenates the corresponding lines of the given input
     files, replacing all but the last file's newline characters with a single
     tab character, and writes the resulting lines to standard output.  If
     end-of-file is reached on an input file while other input files still
     contain data, the file is treated as if it were an endless source of
     empty lines.

     The options are as follows:

     --dd _l_i_s_t     Use one or more of the provided characters to replace the
                 newline characters instead of the default tab.  The
                 characters in _l_i_s_t are used circularly, i.e., when _l_i_s_t is
                 exhausted the first character from _l_i_s_t is reused.  This
                 continues until a line from the last input file (in default
                 operation) or the last line in each file (using the --ss
                 option) is displayed, at which time ppaassttee begins selecting
                 characters from the beginning of _l_i_s_t again.

                 The following special characters can also be used in list:

                 \n    newline character
                 \t    tab character
                 \\    backslash character
                 \0    Empty string (not a null character).

                 Any other character preceded by a backslash is equivalent to
                 the character itself.

     --ss          Concatenate all of the lines of each separate input file in
                 command line order.  The newline character of every line
                 except the last line in each input file is replaced with the
                 tab character, unless otherwise specified by the --dd option.

     If ‘--’ is specified for one or more of the input files, the standard
     input is used; standard input is read one line at a time, circularly, for
     each instance of ‘--’.

EEXXIITT SSTTAATTUUSS
     The ppaassttee utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     List the files in the current directory in three columns:

           ls | paste - - -

     Combine pairs of lines from a file into single lines:

           paste -s -d '\t\n' myfile

     Number the lines in a file, similar to nl(1):

           sed = myfile | paste - -

     Create a colon-separated list of directories named _b_i_n, suitable for use
     in the PATH environment variable:

           find / -name bin -type d | paste -s -d : -

SSEEEE AALLSSOO
     cut(1), lam(1)

SSTTAANNDDAARRDDSS
     The ppaassttee utility is expected to be IEEE Std 1003.2 (“POSIX.2”)
     compatible.

HHIISSTTOORRYY
     A ppaassttee command appeared in Version 7 AT&T UNIX/32V.

macOS 14.6                       June 25, 2004                      macOS 14.6
"
join,"JOIN(1)                     General Commands Manual                    JOIN(1)

NNAAMMEE
     jjooiinn – relational database operator

SSYYNNOOPPSSIISS
     jjooiinn [--aa _f_i_l_e___n_u_m_b_e_r | --vv _f_i_l_e___n_u_m_b_e_r] [--ee _s_t_r_i_n_g] [--oo _l_i_s_t] [--tt _c_h_a_r]
          [--11 _f_i_e_l_d] [--22 _f_i_e_l_d] _f_i_l_e_1 _f_i_l_e_2

DDEESSCCRRIIPPTTIIOONN
     The jjooiinn utility performs an “equality join” on the specified files and
     writes the result to the standard output.  The “join field” is the field
     in each file by which the files are compared.  The first field in each
     line is used by default.  There is one line in the output for each pair
     of lines in _f_i_l_e_1 and _f_i_l_e_2 which have identical join fields.  Each
     output line consists of the join field, the remaining fields from _f_i_l_e_1
     and then the remaining fields from _f_i_l_e_2.

     The default field separators are tab and space characters.  In this case,
     multiple tabs and spaces count as a single field separator, and leading
     tabs and spaces are ignored.  The default output field separator is a
     single space character.

     Many of the options use file and field numbers.  Both file numbers and
     field numbers are 1 based, i.e., the first file on the command line is
     file number 1 and the first field is field number 1.  The following
     options are available:

     --aa _f_i_l_e___n_u_m_b_e_r
             In addition to the default output, produce a line for each
             unpairable line in file _f_i_l_e___n_u_m_b_e_r.

     --ee _s_t_r_i_n_g
             Replace empty output fields with _s_t_r_i_n_g.

     --oo _l_i_s_t
             The --oo option specifies the fields that will be output from each
             file for each line with matching join fields.  Each element of
             _l_i_s_t has either the form _f_i_l_e___n_u_m_b_e_r._f_i_e_l_d, where _f_i_l_e___n_u_m_b_e_r is
             a file number and _f_i_e_l_d is a field number, or the form ‘0’
             (zero), representing the join field.  The elements of list must
             be either comma (‘,’) or whitespace separated.  (The latter
             requires quoting to protect it from the shell, or, a simpler
             approach is to use multiple --oo options.)

     --tt _c_h_a_r
             Use character _c_h_a_r as a field delimiter for both input and
             output.  Every occurrence of _c_h_a_r in a line is significant.

     --vv _f_i_l_e___n_u_m_b_e_r
             Do not display the default output, but display a line for each
             unpairable line in file _f_i_l_e___n_u_m_b_e_r.  The options --vv 11 and --vv 22
             may be specified at the same time.

     --11 _f_i_e_l_d
             Join on the _f_i_e_l_d'th field of _f_i_l_e_1.

     --22 _f_i_e_l_d
             Join on the _f_i_e_l_d'th field of _f_i_l_e_2.

     When the default field delimiter characters are used, the files to be
     joined should be ordered in the collating sequence of sort(1), using the
     --bb option, on the fields on which they are to be joined, otherwise jjooiinn
     may not report all field matches.  When the field delimiter characters
     are specified by the --tt option, the collating sequence should be the same
     as sort(1) without the --bb option.

     If one of the arguments _f_i_l_e_1 or _f_i_l_e_2 is ‘--’, the standard input is
     used.

EEXXIITT SSTTAATTUUSS
     The jjooiinn utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Assuming a file named _n_o_b_e_l___l_a_u_r_e_a_t_e_s_._t_x_t with information about some of
     the first Nobel Peace Prize laureates:

           1901,Jean Henri Dunant,M
           1901,Frederic Passy,M
           1902,Elie Ducommun,M
           1905,Baroness Bertha Sophie Felicita Von Suttner,F
           1910,Permanent International Peace Bureau,

     and a second file _n_o_b_e_l___n_a_t_i_o_n_a_l_i_t_i_e_s_._t_x_t with their nationalities:

           Jean Henri Dunant,Switzerland
           Frederic Passy,France
           Elie Ducommun,Switzerland
           Baroness Bertha Sophie Felicita Von Suttner

     Join the two files using the second column from first file and the
     default first column from second file specifying a custom field
     delimiter:

           $ join -t, -1 2 nobel_laureates.txt nobel_nationalities.txt
           Jean Henri Dunant,1901,M,Switzerland
           Frederic Passy,1901,M,France
           Elie Ducommun,1902,M,Switzerland
           Baroness Bertha Sophie Felicita Von Suttner,1905,F

     Show only the year and the nationality of the laureate using ‘<<NULL>>’
     to replace empty fields:

           $ join -e ""<<NULL>>"" -t, -1 2 -o ""1.1 2.2"" nobel_laureates.txt nobel_nationalities.txt
           1901,Switzerland
           1901,France
           1902,Switzerland
           1905,<<NULL>>

     Show only lines from first file which do not have a match in second file:

           $ join -v1 -t, -1 2 nobel_laureates.txt nobel_nationalities.txt
           Permanent International Peace Bureau,1910,

     Assuming a file named _c_a_p_i_t_a_l_s_._t_x_t with the following content:

           Belgium,Brussels
           France,Paris
           Italy,Rome
           Switzerland

     Show the name and capital of the country where the laureate was born.
     This example uses _n_o_b_e_l___n_a_t_i_o_n_a_l_i_t_i_e_s_._t_x_t as a bridge but does not show
     any information from that file.  Also see the note about sort(1) above to
     understand why we need to sort the intermediate result.

           $ join -t, -1 2 -o 1.2 2.2 nobel_laureates.txt nobel_nationalities.txt | \
               sort -k2 -t, | join -t, -e ""<<NULL>>"" -1 2 -o 1.1 2.2 - capitals.txt
           Elie Ducommun,<<NULL>>
           Jean Henri Dunant,<<NULL>>

CCOOMMPPAATTIIBBIILLIITTYY
     For compatibility with historic versions of jjooiinn, the following options
     are available:

     --aa      In addition to the default output, produce a line for each
             unpairable line in both _f_i_l_e_1 and _f_i_l_e_2.

     --jj11 _f_i_e_l_d
             Join on the _f_i_e_l_d'th field of _f_i_l_e_1.

     --jj22 _f_i_e_l_d
             Join on the _f_i_e_l_d'th field of _f_i_l_e_2.

     --jj _f_i_e_l_d
             Join on the _f_i_e_l_d'th field of both _f_i_l_e_1 and _f_i_l_e_2.

     --oo _l_i_s_t _._._.
             Historical implementations of jjooiinn permitted multiple arguments
             to the --oo option.  These arguments were of the form
             _f_i_l_e___n_u_m_b_e_r._f_i_e_l_d___n_u_m_b_e_r as described for the current --oo option.
             This has obvious difficulties in the presence of files named _1_._2.

     These options are available only so historic shell scripts do not require
     modification and should not be used.

SSEEEE AALLSSOO
     awk(1), comm(1), paste(1), sort(1), uniq(1)

SSTTAANNDDAARRDDSS
     The jjooiinn command conforms to IEEE Std 1003.1-2001 (“POSIX.1”).

macOS 14.6                       June 20, 2020                      macOS 14.6
"
comm,"COMM(1)                     General Commands Manual                    COMM(1)

NNAAMMEE
     ccoommmm – select or reject lines common to two files

SSYYNNOOPPSSIISS
     ccoommmm [--112233ii] _f_i_l_e_1 _f_i_l_e_2

DDEESSCCRRIIPPTTIIOONN
     The ccoommmm utility reads _f_i_l_e_1 and _f_i_l_e_2, which should be sorted lexically,
     and produces three text columns as output: lines only in _f_i_l_e_1; lines
     only in _f_i_l_e_2; and lines in both files.

     The filename ``-'' means the standard input.

     The following options are available:

     --11      Suppress printing of column 1, lines only in _f_i_l_e_1.

     --22      Suppress printing of column 2, lines only in _f_i_l_e_2.

     --33      Suppress printing of column 3, lines common to both.

     --ii      Case insensitive comparison of lines.

     Each column will have a number of tab characters prepended to it equal to
     the number of lower numbered columns that are being printed.  For
     example, if column number two is being suppressed, lines printed in
     column number one will not have any tabs preceding them, and lines
     printed in column number three will have one.

     The ccoommmm utility assumes that the files are lexically sorted; all
     characters participate in line comparisons.

EENNVVIIRROONNMMEENNTT
     The LANG, LC_ALL, LC_COLLATE, and LC_CTYPE environment variables affect
     the execution of ccoommmm as described in environ(7).

EEXXIITT SSTTAATTUUSS
     The ccoommmm utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Assuming a file named _e_x_a_m_p_l_e_._t_x_t with the following contents:

           a
           b
           c
           d

     Show lines only in _e_x_a_m_p_l_e_._t_x_t, lines only in stdin and common lines:

           $ echo -e ""B\nc"" | comm example.txt -
                   B
           a
           b
                           c
           d

     Show only common lines doing case insensitive comparisons:

           $ echo -e ""B\nc"" | comm -1 -2 -i example.txt -
           b
           c

SSEEEE AALLSSOO
     cmp(1), diff(1), sort(1), uniq(1)

SSTTAANNDDAARRDDSS
     The ccoommmm utility conforms to IEEE Std 1003.2-1992 (“POSIX.2”).

     The --ii option is an extension to the POSIX standard.

HHIISSTTOORRYY
     A ccoommmm command appeared in Version 4 AT&T UNIX.

macOS 14.6                       July 27, 2020                      macOS 14.6
"
seq,"SEQ(1)                      General Commands Manual                     SEQ(1)

NNAAMMEE
     sseeqq – print sequences of numbers

SSYYNNOOPPSSIISS
     sseeqq [--ww] [--ff _f_o_r_m_a_t] [--ss _s_t_r_i_n_g] [--tt _s_t_r_i_n_g] [_f_i_r_s_t [_i_n_c_r]] _l_a_s_t

DDEESSCCRRIIPPTTIIOONN
     The sseeqq utility prints a sequence of numbers, one per line (default),
     from _f_i_r_s_t (default 1), to near _l_a_s_t as possible, in increments of _i_n_c_r
     (default 1).  When _f_i_r_s_t is larger than _l_a_s_t, the default _i_n_c_r is -1.

     All numbers are interpreted as floating point.

     Normally integer values are printed as decimal integers.

     The sseeqq utility accepts the following options:

     --ff _f_o_r_m_a_t, ----ffoorrmmaatt _f_o_r_m_a_t
                   Use a printf(3) style _f_o_r_m_a_t to print each number.  Only
                   the AA, aa, EE, ee, FF, ff, GG, gg, and %% conversion characters are
                   valid, along with any optional flags and an optional
                   numeric minimum field width or precision.  The _f_o_r_m_a_t can
                   contain character escape sequences in backslash notation as
                   defined in ANSI X3.159-1989 (“ANSI C89”).  The default is
                   %%gg.

     --ss _s_t_r_i_n_g, ----sseeppaarraattoorr _s_t_r_i_n_g
                   Use _s_t_r_i_n_g to separate numbers.  The _s_t_r_i_n_g can contain
                   character escape sequences in backslash notation as defined
                   in ANSI X3.159-1989 (“ANSI C89”).  The default is \\nn.

     --tt _s_t_r_i_n_g, ----tteerrmmiinnaattoorr _s_t_r_i_n_g
                   Use _s_t_r_i_n_g to terminate sequence of numbers.  The _s_t_r_i_n_g
                   can contain character escape sequences in backslash
                   notation as defined in ANSI X3.159-1989 (“ANSI C89”).  This
                   option is useful when the default separator does not
                   contain a \\nn.

     --ww, ----ffiixxeedd--wwiiddtthh
                   Equalize the widths of all numbers by padding with zeros as
                   necessary.  This option has no effect with the --ff option.
                   If any sequence numbers will be printed in exponential
                   notation, the default conversion is changed to %%ee.

EEXXIITT SSTTAATTUUSS
     The sseeqq utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Generate a sequence from 1 to 3 (included) with a default increment of 1:

           # seq 1 3
           1
           2
           3

     Generate a sequence from 3 to 1 (included) with a default increment of
     -1:

           # seq 3 1
           3
           2
           1

     Generate a sequence from 0 to 0.1 (included) with an increment of 0.05
     and padding with leading zeroes.

           # seq -w 0 .05 .1
           0.00
           0.05
           0.10

     Generate a sequence from 1 to 3 (included) with a default increment of 1,
     a custom separator string and a custom terminator:

           # seq -s ""-->"" -t ""[end of list]\n"" 1 3
           1-->2-->3-->[end of list]

     Generate a sequence from 1 to 2 (included) with an increment of 0.2 and
     print the results with two digits after the decimal point (using a
     printf(3) style format):

           # seq -f %.2f 1 0.2 2
           1.00
           1.20
           1.40
           1.60
           1.80
           2.00

SSEEEE AALLSSOO
     jot(1), printf(1), printf(3)

HHIISSTTOORRYY
     The sseeqq command first appeared in Version 8 AT&T UNIX.  A sseeqq command
     appeared in NetBSD 3.0, and was ported to FreeBSD 9.0.  This command was
     based on the command of the same name in Plan 9 from Bell Labs and the
     GNU core utilities.  The GNU sseeqq command first appeared in the 1.13 shell
     utilities release.

BBUUGGSS
     The --ww option does not handle the transition from pure floating point to
     exponent representation very well.  The sseeqq command is not bug for bug
     compatible with other implementations.

macOS 14.6                       June 20, 2020                      macOS 14.6
"
factor,No manual entry for factor
pr,"PR(1)                       General Commands Manual                      PR(1)

NNAAMMEE
     pprr – print files

SSYYNNOOPPSSIISS
     pprr [_+_p_a_g_e] [--_c_o_l_u_m_n] [--aaddFFffmmpprrtt] [[--ee] [_c_h_a_r] [_g_a_p]] [--LL _l_o_c_a_l_e]
        [--hh _h_e_a_d_e_r] [[--ii] [_c_h_a_r] [_g_a_p]] [--ll _l_i_n_e_s] [--oo _o_f_f_s_e_t] [[--ss] [_c_h_a_r]]
        [[--nn] [_c_h_a_r] [_w_i_d_t_h]] [--ww _w_i_d_t_h] [-] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The pprr utility is a printing and pagination filter for text files.  When
     multiple input files are specified, each is read, formatted, and written
     to standard output.  By default, the input is separated into 66-line
     pages, each with

     ••   A 5-line header with the page number, date, time, and the pathname of
         the file.

     ••   A 5-line trailer consisting of blank lines.

     If standard output is associated with a terminal, diagnostic messages are
     suppressed until the pprr utility has completed processing.

     When multiple column output is specified, text columns are of equal
     width.  By default text columns are separated by at least one _<_b_l_a_n_k_>.
     Input lines that do not fit into a text column are truncated.  Lines are
     not truncated under single column output.

OOPPTTIIOONNSS
     In the following option descriptions, column, lines, offset, page, and
     width are positive decimal integers and gap is a nonnegative decimal
     integer.

     _+_p_a_g_e
           Begin output at page number _p_a_g_e of the formatted input.

     --_c_o_l_u_m_n
           Produce output that is _c_o_l_u_m_n_s wide (default is 1) that is written
           vertically down each column in the order in which the text is
           received from the input file.  The options --ee and --ii are assumed.
           This option should not be used with --mm.  When used with --tt, the
           minimum number of lines is used to display the output.  (To
           columnify and reshape text files more generally and without
           additional formatting, see the rs(1) utility.)

     --aa    Modify the effect of the --ccoolluummnn option so that the columns are
           filled across the page in a round-robin order (e.g., when column is
           2, the first input line heads column 1, the second heads column 2,
           the third is the second line in column 1, etc.).  This option
           requires the use of the --ccoolluummnn option.

     --dd    Produce output that is double spaced.  An extra _<_n_e_w_l_i_n_e_> character
           is output following every _<_n_e_w_l_i_n_e_> found in the input.

     --ee [_c_h_a_r][_g_a_p]
           Expand each input _<_t_a_b_> to the next greater column position
           specified by the formula _n_*_g_a_p_+_1, where _n is an integer > 0.  If
           _g_a_p is zero or is omitted the default is 8.  All _<_t_a_b_> characters
           in the input are expanded into the appropriate number of _<_s_p_a_c_e_>_s.
           If any nondigit character, _c_h_a_r, is specified, it is used as the
           input tab character.

     --FF    Use a _<_f_o_r_m_-_f_e_e_d_> character for new pages, instead of the default
           behavior that uses a sequence of _<_n_e_w_l_i_n_e_> characters.

     --ff    Same as --FF but pause before beginning the first page if standard
           output is a terminal.

     --hh _h_e_a_d_e_r
           Use the string _h_e_a_d_e_r to replace the _f_i_l_e _n_a_m_e in the header line.

     --ii [_c_h_a_r][_g_a_p]
           In output, replace multiple _<_s_p_a_c_e_>_s with _<_t_a_b_>_s whenever two or
           more adjacent _<_s_p_a_c_e_>_s reach column positions _g_a_p_+_1, _2_*_g_a_p_+_1, etc.
           If _g_a_p is zero or omitted, default _<_t_a_b_> settings at every eighth
           column position is used.  If any nondigit character, _c_h_a_r, is
           specified, it is used as the output _<_t_a_b_> character.

     --LL _l_o_c_a_l_e
           Use _l_o_c_a_l_e specified as argument instead of one found in
           environment.  Use ""C"" to reset locale to default.

     --ll _l_i_n_e_s
           Override the 66 line default and reset the page length to _l_i_n_e_s.
           If _l_i_n_e_s is not greater than the sum of both the header and trailer
           depths (in lines), the pprr utility suppresses output of both the
           header and trailer, as if the --tt option were in effect.

     --mm    Merge the contents of multiple files.  One line from each file
           specified by a file operand is written side by side into text
           columns of equal fixed widths, in terms of the number of column
           positions.  The number of text columns depends on the number of
           file operands successfully opened.  The maximum number of files
           merged depends on page width and the per process open file limit.
           The options --ee and --ii are assumed.

     --nn [_c_h_a_r][_w_i_d_t_h]
           Provide _w_i_d_t_h digit line numbering.  The default for _w_i_d_t_h, if not
           specified, is 5.  The number occupies the first _w_i_d_t_h column
           positions of each text column or each line of --mm output.  If _c_h_a_r
           (any nondigit character) is given, it is appended to the line
           number to separate it from whatever follows.  The default for _c_h_a_r
           is a _<_t_a_b_>.  Line numbers longer than _w_i_d_t_h columns are truncated.

     --oo _o_f_f_s_e_t
           Each line of output is preceded by _o_f_f_s_e_t _<_s_p_a_c_e_s_>_s.  If the --oo
           option is not specified, the default is zero.  The space taken is
           in addition to the output line width.

     --pp    Pause before each page if the standard output is a terminal.  pprr
           will write an alert character to standard error and wait for a
           carriage return to be read on the terminal.

     --rr    Write no diagnostic reports on failure to open a file.

     --ss _c_h_a_r
           Separate text columns by the single character _c_h_a_r instead of by
           the appropriate number of _<_s_p_a_c_e_>_s (default for _c_h_a_r is the _<_t_a_b_>
           character).

     --tt    Print neither the five-line identifying header nor the five-line
           trailer usually supplied for each page.  Quit printing after the
           last line of each file without spacing to the end of the page.

     --ww _w_i_d_t_h
           Set the width of the line to _w_i_d_t_h column positions for multiple
           text-column output only.  If the --ww option is not specified and the
           --ss option is not specified, the default width is 72.  If the --ww
           option is not specified and the --ss option is specified, the default
           width is 512.

     _f_i_l_e  A pathname of a file to be printed.  If no _f_i_l_e operands are
           specified, or if a _f_i_l_e operand is ‘--’, the standard input is used.
           The standard input is used only if no _f_i_l_e operands are specified,
           or if a _f_i_l_e operand is ‘--’.

     The --ss option does not allow the option letter to be separated from its
     argument, and the options --ee, --ii, and --nn require that both arguments, if
     present, not be separated from the option letter.

EEXXIITT SSTTAATTUUSS
     The pprr utility exits 0 on success, and >0 if an error occurs.

DDIIAAGGNNOOSSTTIICCSS
     If pprr receives an interrupt while printing to a terminal, it flushes all
     accumulated error messages to the screen before terminating.

     Error messages are written to standard error during the printing process
     (if output is redirected) or after all successful file printing is
     complete (when printing to a terminal).

LLEEGGAACCYY DDEESSCCRRIIPPTTIIOONN
     The last space before the tab stop is replaced with a tab character.  In
     legacy mode, it is not.

     For more information about legacy mode, see compat(5).

SSEEEE AALLSSOO
     cat(1), more(1), rs(1), compat(5)

SSTTAANNDDAARRDDSS
     The pprr utility is IEEE Std 1003.1-2001 (“POSIX.1”) compatible.

HHIISSTTOORRYY
     A pprr command appeared in Version 1 AT&T UNIX.

BBUUGGSS
     The pprr utility does not recognize multibyte characters.

macOS 14.6                       July 3, 2004                       macOS 14.6
"
lp,"lp(1)                             Apple Inc.                             lp(1)

NNAAMMEE
       lp - print files

SSYYNNOOPPSSIISS
       llpp [ --EE ] [ --UU _u_s_e_r_n_a_m_e ] [ --cc ] [ --dd _d_e_s_t_i_n_a_t_i_o_n[//_i_n_s_t_a_n_c_e] ] [ --hh
       _h_o_s_t_n_a_m_e[::_p_o_r_t] ] [ --mm ] [ --nn _n_u_m_-_c_o_p_i_e_s ] [ --oo _o_p_t_i_o_n[==_v_a_l_u_e] ] [ --qq
       _p_r_i_o_r_i_t_y ] [ --ss ] [ --tt _t_i_t_l_e ] [ --HH _h_a_n_d_l_i_n_g ] [ --PP _p_a_g_e_-_l_i_s_t ] [ ---- ]
       [ _f_i_l_e_(_s_) ]
       llpp [ --EE ] [ --UU _u_s_e_r_n_a_m_e ] [ --cc ] [ --hh _h_o_s_t_n_a_m_e[::_p_o_r_t] ] [ --ii _j_o_b_-_i_d ] [
       --nn _n_u_m_-_c_o_p_i_e_s ] [ --oo _o_p_t_i_o_n[==_v_a_l_u_e] ] [ --qq _p_r_i_o_r_i_t_y ] [ --tt _t_i_t_l_e ] [ --HH
       _h_a_n_d_l_i_n_g ] [ --PP _p_a_g_e_-_l_i_s_t ]

DDEESSCCRRIIPPTTIIOONN
       llpp submits files for printing or alters a pending job.  Use a filename
       of ""-"" to force printing from the standard input.

   TTHHEE DDEEFFAAUULLTT DDEESSTTIINNAATTIIOONN
       CUPS provides many ways to set the default destination. The LLPPDDEESSTT and
       PPRRIINNTTEERR environment variables are consulted first.  If neither are set,
       the current default set using the llppooppttiioonnss(1) command is used,
       followed by the default set using the llppaaddmmiinn(8) command.

OOPPTTIIOONNSS
       The following options are recognized by _l_p:

       ----   Marks the end of options; use this to print a file whose name
            begins with a dash (-).

       --EE   Forces encryption when connecting to the server.

       --UU _u_s_e_r_n_a_m_e
            Specifies the username to use when connecting to the server.

       --cc   This option is provided for backwards-compatibility only. On
            systems that support it, this option forces the print file to be
            copied to the spool directory before printing.  In CUPS, print
            files are always sent to the scheduler via IPP which has the same
            effect.

       --dd _d_e_s_t_i_n_a_t_i_o_n
            Prints files to the named printer.

       --hh _h_o_s_t_n_a_m_e[::_p_o_r_t]
            Chooses an alternate server.

       --ii _j_o_b_-_i_d
            Specifies an existing job to modify.

       --mm   Sends an email when the job is completed.

       --nn _c_o_p_i_e_s
            Sets the number of copies to print.

       --oo """"_n_a_m_e==_v_a_l_u_e [ ... _n_a_m_e==_v_a_l_u_e ]""""
            Sets one or more job options.  See ""COMMON JOB OPTIONS"" below.

       --qq _p_r_i_o_r_i_t_y
            Sets the job priority from 1 (lowest) to 100 (highest).  The
            default priority is 50.

       --ss   Do not report the resulting job IDs (silent mode.)

       --tt """"_n_a_m_e""""
            Sets the job name.

       --HH _h_h_:_m_m

       --HH hhoolldd

       --HH iimmmmeeddiiaattee

       --HH rreessttaarrtt

       --HH rreessuummee
            Specifies when the job should be printed.  A value of _i_m_m_e_d_i_a_t_e
            will print the file immediately, a value of _h_o_l_d will hold the job
            indefinitely, and a UTC time value (HH:MM) will hold the job until
            the specified UTC (not local) time.  Use a value of _r_e_s_u_m_e with
            the _-_i option to resume a held job.  Use a value of _r_e_s_t_a_r_t with
            the _-_i option to restart a completed job.

       --PP _p_a_g_e_-_l_i_s_t
            Specifies which pages to print in the document.  The list can
            contain a list of numbers and ranges (#-#) separated by commas,
            e.g., ""1,3-5,16"".  The page numbers refer to the output pages and
            not the document's original pages - options like ""number-up"" can
            affect the numbering of the pages.

   CCOOMMMMOONN JJOOBB OOPPTTIIOONNSS
       Aside from the printer-specific options reported by the llppooppttiioonnss(1)
       command, the following generic options are available:

       --oo jjoobb--sshheeeettss==_n_a_m_e
            Prints a cover page (banner) with the document.  The ""name"" can be
            ""classified"", ""confidential"", ""secret"", ""standard"", ""topsecret"",
            or ""unclassified"".

       --oo mmeeddiiaa==_s_i_z_e
            Sets the page size to _s_i_z_e. Most printers support at least the
            size names ""a4"", ""letter"", and ""legal"".

       --oo nnuummbbeerr--uupp=={_2_|_4_|_6_|_9_|_1_6}
            Prints 2, 4, 6, 9, or 16 document (input) pages on each output
            page.

       --oo oorriieennttaattiioonn--rreeqquueesstteedd==44
            Prints the job in landscape (rotated 90 degrees counter-
            clockwise).

       --oo oorriieennttaattiioonn--rreeqquueesstteedd==55
            Prints the job in landscape (rotated 90 degrees clockwise).

       --oo oorriieennttaattiioonn--rreeqquueesstteedd==66
            Prints the job in reverse portrait (rotated 180 degrees).

       --oo pprriinntt--qquuaalliittyy==33

       --oo pprriinntt--qquuaalliittyy==44

       --oo pprriinntt--qquuaalliittyy==55
            Specifies the output quality - draft (3), normal (4), or best (5).

       --oo ssiiddeess==oonnee--ssiiddeedd
            Prints on one side of the paper.

       --oo ssiiddeess==ttwwoo--ssiiddeedd--lloonngg--eeddggee
            Prints on both sides of the paper for portrait output.

       --oo ssiiddeess==ttwwoo--ssiiddeedd--sshhoorrtt--eeddggee
            Prints on both sides of the paper for landscape output.

CCOONNFFOORRMMIINNGG TTOO
       Unlike the System V printing system, CUPS allows printer names to
       contain any printable character except SPACE, TAB, ""/"", or ""#"".  Also,
       printer and class names are _n_o_t case-sensitive.

       The _-_q option accepts a different range of values than the Solaris lp
       command, matching the IPP job priority values (1-100, 100 is highest
       priority) instead of the Solaris values (0-39, 0 is highest priority).

EEXXAAMMPPLLEESS
       Print two copies of a document to the default printer:

           lp -n 2 filename

       Print a double-sided legal document to a printer called ""foo"":

           lp -d foo -o media=legal -o sides=two-sided-long-edge filename

       Print a presentation document 2-up to a printer called ""bar"":

           lp -d bar -o number-up=2 filename

SSEEEE AALLSSOO
       ccaanncceell(1), llppaaddmmiinn(8), llppooppttiioonnss(1), llppqq(1), llpprr(1), llpprrmm(1),
       llppssttaatt(1), CUPS Online Help (http://localhost:631/help)

CCOOPPYYRRIIGGHHTT
       Copyright © 2007-2019 by Apple Inc.

26 April 2019                        CUPS                                lp(1)
"
lpr,"lpr(1)                            Apple Inc.                            lpr(1)

NNAAMMEE
       lpr - print files

SSYYNNOOPPSSIISS
       llpprr [ --EE ] [ --HH _s_e_r_v_e_r[::_p_o_r_t] ] [ --UU _u_s_e_r_n_a_m_e ] [ --PP
       _d_e_s_t_i_n_a_t_i_o_n[//_i_n_s_t_a_n_c_e] ] [ --## _n_u_m_-_c_o_p_i_e_s [ --hh ] [ --ll ] [ --mm ] [ --oo
       _o_p_t_i_o_n[==_v_a_l_u_e] ] [ --pp ] [ --qq ] [ --rr ] [ --CC _t_i_t_l_e ] [ --JJ _t_i_t_l_e ] [ --TT
       _t_i_t_l_e ] [ _f_i_l_e_(_s_) ]

DDEESSCCRRIIPPTTIIOONN
       llpprr submits files for printing.  Files named on the command line are
       sent to the named printer or the default destination if no destination
       is specified.  If no files are listed on the command-line, llpprr reads
       the print file from the standard input.

   TTHHEE DDEEFFAAUULLTT DDEESSTTIINNAATTIIOONN
       CUPS provides many ways to set the default destination. The LLPPDDEESSTT and
       PPRRIINNTTEERR environment variables are consulted first.  If neither are set,
       the current default set using the llppooppttiioonnss(1) command is used,
       followed by the default set using the llppaaddmmiinn(8) command.

OOPPTTIIOONNSS
       The following options are recognized by _l_p_r:

       --EE   Forces encryption when connecting to the server.

       --HH _s_e_r_v_e_r[::_p_o_r_t]
            Specifies an alternate server.

       --CC """"_n_a_m_e""""

       --JJ """"_n_a_m_e""""

       --TT """"_n_a_m_e""""
            Sets the job name/title.

       --PP _d_e_s_t_i_n_a_t_i_o_n[//_i_n_s_t_a_n_c_e]
            Prints files to the named printer.

       --UU _u_s_e_r_n_a_m_e
            Specifies an alternate username.

       --## _c_o_p_i_e_s
            Sets the number of copies to print.

       --hh   Disables banner printing. This option is equivalent to _-_o
            _j_o_b_-_s_h_e_e_t_s_=_n_o_n_e.

       --ll   Specifies that the print file is already formatted for the
            destination and should be sent without filtering.  This option is
            equivalent to _-_o _r_a_w.

       --mm   Send an email on job completion.

       --oo _o_p_t_i_o_n[==_v_a_l_u_e]
            Sets a job option.  See ""COMMON JOB OPTIONS"" below.

       --pp   Specifies that the print file should be formatted with a shaded
            header with the date, time, job name, and page number.  This
            option is equivalent to _-_o _p_r_e_t_t_y_p_r_i_n_t and is only useful when
            printing text files.

       --qq   Hold job for printing.

       --rr   Specifies that the named print files should be deleted after
            submitting them.

   CCOOMMMMOONN JJOOBB OOPPTTIIOONNSS
       Aside from the printer-specific options reported by the llppooppttiioonnss(1)
       command, the following generic options are available:

       --oo jjoobb--sshheeeettss==_n_a_m_e
            Prints a cover page (banner) with the document.  The ""name"" can be
            ""classified"", ""confidential"", ""secret"", ""standard"", ""topsecret"",
            or ""unclassified"".

       --oo mmeeddiiaa==_s_i_z_e
            Sets the page size to _s_i_z_e. Most printers support at least the
            size names ""a4"", ""letter"", and ""legal"".

       --oo nnuummbbeerr--uupp=={_2_|_4_|_6_|_9_|_1_6}
            Prints 2, 4, 6, 9, or 16 document (input) pages on each output
            page.

       --oo oorriieennttaattiioonn--rreeqquueesstteedd==44
            Prints the job in landscape (rotated 90 degrees counter-
            clockwise).

       --oo oorriieennttaattiioonn--rreeqquueesstteedd==55
            Prints the job in landscape (rotated 90 degrees clockwise).

       --oo oorriieennttaattiioonn--rreeqquueesstteedd==66
            Prints the job in reverse portrait (rotated 180 degrees).

       --oo pprriinntt--qquuaalliittyy==33

       --oo pprriinntt--qquuaalliittyy==44

       --oo pprriinntt--qquuaalliittyy==55
            Specifies the output quality - draft (3), normal (4), or best (5).

       --oo ssiiddeess==oonnee--ssiiddeedd
            Prints on one side of the paper.

       --oo ssiiddeess==ttwwoo--ssiiddeedd--lloonngg--eeddggee
            Prints on both sides of the paper for portrait output.

       --oo ssiiddeess==ttwwoo--ssiiddeedd--sshhoorrtt--eeddggee
            Prints on both sides of the paper for landscape output.

NNOOTTEESS
       The _-_c, _-_d, _-_f, _-_g, _-_i, _-_n, _-_t, _-_v, and _-_w options are not supported by
       CUPS and produce a warning message if used.

EEXXAAMMPPLLEESS
       Print two copies of a document to the default printer:

           lpr -# 2 filename

       Print a double-sided legal document to a printer called ""foo"":

           lpr -P foo -o media=legal -o sides=two-sided-long-edge filename

       Print a presentation document 2-up to a printer called ""foo"":

           lpr -P foo -o number-up=2 filename

SSEEEE AALLSSOO
       ccaanncceell(1), llpp(1), llppaaddmmiinn(8), llppooppttiioonnss(1), llppqq(1), llpprrmm(1), llppssttaatt(1),
       CUPS Online Help (http://localhost:631/help)

CCOOPPYYRRIIGGHHTT
       Copyright © 2007-2019 by Apple Inc.

26 April 2019                        CUPS                               lpr(1)
"
lprm,"lprm(1)                           Apple Inc.                           lprm(1)

NNAAMMEE
       lprm - cancel print jobs

SSYYNNOOPPSSIISS
       llpprrmm [ --EE ] [ --UU _u_s_e_r_n_a_m_e ] [ --hh _s_e_r_v_e_r[_:_p_o_r_t] ] [ --PP
       _d_e_s_t_i_n_a_t_i_o_n[_/_i_n_s_t_a_n_c_e] ] [ -- ] [ _j_o_b_-_i_d_(_s_) ]

DDEESSCCRRIIPPTTIIOONN
       llpprrmm cancels print jobs that have been queued for printing.  If no
       arguments are supplied, the current job on the default destination is
       canceled.  You can specify one or more job ID numbers to cancel those
       jobs or use the _- option to cancel all jobs.

OOPPTTIIOONNSS
       The llpprrmm command supports the following options:

       --EE   Forces encryption when connecting to the server.

       --PP _d_e_s_t_i_n_a_t_i_o_n[_/_i_n_s_t_a_n_c_e]
            Specifies the destination printer or class.

       --UU _u_s_e_r_n_a_m_e
            Specifies an alternate username.

       --hh _s_e_r_v_e_r[_:_p_o_r_t]
            Specifies an alternate server.

CCOONNFFOORRMMIINNGG TTOO
       The CUPS version of llpprrmm is compatible with the standard Berkeley
       command of the same name.

EEXXAAMMPPLLEESS
       Cancel the current job on the default printer:

           lprm

       Cancel job 1234:

           lprm 1234

       Cancel all jobs:

           lprm -

SSEEEE AALLSSOO
       ccaanncceell(1), llpp(1), llppqq(1), llpprr(1), llppssttaatt(1), CUPS Online Help
       (http://localhost:631/help)

CCOOPPYYRRIIGGHHTT
       Copyright © 2007-2019 by Apple Inc.

26 April 2019                        CUPS                              lprm(1)
"
lpstat,"lpstat(1)                         Apple Inc.                         lpstat(1)

NNAAMMEE
       lpstat - print cups status information

SSYYNNOOPPSSIISS
       llppssttaatt [ --EE ] [ --HH ] [ --UU _u_s_e_r_n_a_m_e ] [ --hh _h_o_s_t_n_a_m_e[::_p_o_r_t] ] [ --ll ] [ --WW
       _w_h_i_c_h_-_j_o_b_s ] [ --aa [ _d_e_s_t_i_n_a_t_i_o_n_(_s_) ] ] [ --cc [ _c_l_a_s_s_(_e_s_) ] ] [ --dd ] [ --ee
       ] [ --oo [ _d_e_s_t_i_n_a_t_i_o_n_(_s_) ] ] [ --pp [ _p_r_i_n_t_e_r_(_s_) ] ] [ --rr ] [ --RR ] [ --ss ]
       [ --tt ] [ --uu [ _u_s_e_r_(_s_) ] ] [ --vv [ _p_r_i_n_t_e_r_(_s_) ] ]

DDEESSCCRRIIPPTTIIOONN
       llppssttaatt displays status information about the current classes, jobs, and
       printers.  When run with no arguments, llppssttaatt will list active jobs
       queued by the current user.

OOPPTTIIOONNSS
       The llppssttaatt command supports the following options:

       --EE   Forces encryption when connecting to the server.

       --HH   Shows the server hostname and port.

       --RR   Shows the ranking of print jobs.

       --UU _u_s_e_r_n_a_m_e
            Specifies an alternate username.

       --WW _w_h_i_c_h_-_j_o_b_s
            Specifies which jobs to show, ""completed"" or ""not-completed"" (the
            default).  This option _m_u_s_t appear before the _-_o option and/or any
            printer names, otherwise the default (""not-completed"") value will
            be used in the request to the scheduler.

       --aa [_p_r_i_n_t_e_r_(_s_)]
            Shows the accepting state of printer queues.  If no printers are
            specified then all printers are listed.

       --cc [_c_l_a_s_s_(_e_s_)]
            Shows the printer classes and the printers that belong to them.
            If no classes are specified then all classes are listed.

       --dd   Shows the current default destination.

       --ee   Shows all available destinations on the local network.

       --hh _s_e_r_v_e_r[::_p_o_r_t]
            Specifies an alternate server.

       --ll   Shows a long listing of printers, classes, or jobs.

       --oo [_d_e_s_t_i_n_a_t_i_o_n_(_s_)]
            Shows the jobs queued on the specified destinations.  If no
            destinations are specified all jobs are shown.

       --pp [_p_r_i_n_t_e_r_(_s_)]
            Shows the printers and whether they are enabled for printing.  If
            no printers are specified then all printers are listed.

       --rr   Shows whether the CUPS server is running.

       --ss   Shows a status summary, including the default destination, a list
            of classes and their member printers, and a list of printers and
            their associated devices.  This is equivalent to using the _-_d, _-_c,
            and _-_v options.

       --tt   Shows all status information.  This is equivalent to using the _-_r,
            _-_d, _-_c, _-_v, _-_a, _-_p, and _-_o options.

       --uu [_u_s_e_r_(_s_)]
            Shows a list of print jobs queued by the specified users.  If no
            users are specified, lists the jobs queued by the current user.

       --vv [_p_r_i_n_t_e_r_(_s_)]
            Shows the printers and what device they are attached to.  If no
            printers are specified then all printers are listed.

CCOONNFFOORRMMIINNGG TTOO
       Unlike the System V printing system, CUPS allows printer names to
       contain any printable character except SPACE, TAB, ""/"", and ""#"".  Also,
       printer and class names are _n_o_t case-sensitive.

       The _-_h, _-_e, _-_E, _-_U, and _-_W options are unique to CUPS.

       The Solaris _-_f, _-_P, and _-_S options are silently ignored.

SSEEEE AALLSSOO
       ccaanncceell(1), llpp(1), llppqq(1), llpprr(1), llpprrmm(1), CUPS Online Help
       (http://localhost:631/help)

CCOOPPYYRRIIGGHHTT
       Copyright © 2007-2019 by Apple Inc.

26 April 2019                        CUPS                            lpstat(1)
"
cups-config,"cups-config(1)                    Apple Inc.                    cups-config(1)

NNAAMMEE
       cups-config - get cups api, compiler, directory, and link information.

SSYYNNOOPPSSIISS
       ccuuppss--ccoonnffiigg _-_-_a_p_i_-_v_e_r_s_i_o_n
       ccuuppss--ccoonnffiigg _-_-_b_u_i_l_d
       ccuuppss--ccoonnffiigg _-_-_c_f_l_a_g_s
       ccuuppss--ccoonnffiigg _-_-_d_a_t_a_d_i_r
       ccuuppss--ccoonnffiigg _-_-_h_e_l_p
       ccuuppss--ccoonnffiigg _-_-_l_d_f_l_a_g_s
       ccuuppss--ccoonnffiigg [ _-_-_i_m_a_g_e ] [ _-_-_s_t_a_t_i_c ] _-_-_l_i_b_s
       ccuuppss--ccoonnffiigg _-_-_s_e_r_v_e_r_b_i_n
       ccuuppss--ccoonnffiigg _-_-_s_e_r_v_e_r_r_o_o_t
       ccuuppss--ccoonnffiigg _-_-_v_e_r_s_i_o_n

DDEESSCCRRIIPPTTIIOONN
       The ccuuppss--ccoonnffiigg command allows application developers to determine the
       necessary command-line options for the compiler and linker, as well as
       the installation directories for filters, configuration files, and
       drivers.  All values are reported to the standard output.

OOPPTTIIOONNSS
       The ccuuppss--ccoonnffiigg command accepts the following command-line options:

       ----aappii--vveerrssiioonn
            Reports the current API version (major.minor).

       ----bbuuiilldd
            Reports a system-specific build number.

       ----ccffllaaggss
            Reports the necessary compiler options.

       ----ddaattaaddiirr
            Reports the default CUPS data directory.

       ----hheellpp
            Reports the program usage message.

       ----llddffllaaggss
            Reports the necessary linker options.

       ----lliibbss
            Reports the necessary libraries to link to.

       ----sseerrvveerrbbiinn
            Reports the default CUPS binary directory, where filters and
            backends are stored.

       ----sseerrvveerrrroooott
            Reports the default CUPS configuration file directory.

       ----ssttaattiicc
            When used with _-_-_l_i_b_s, reports the static libraries instead of the
            default (shared) libraries.

       ----vveerrssiioonn
            Reports the full version number of the CUPS installation
            (major.minor.patch).

EEXXAAMMPPLLEESS
       Show the currently installed version of CUPS:

           cups-config --version

       Compile a simple one-file CUPS filter:

           cc `cups-config --cflags --ldflags` -o filter filter.c \
               `cups-config --libs`

DDEEPPRREECCAATTEEDD OOPPTTIIOONNSS
       The following options are deprecated but continue to work for backwards
       compatibility:

       ----iimmaaggee
            Formerly used to add the CUPS imaging library to the list of
            libraries.

SSEEEE AALLSSOO
       ccuuppss(1), CUPS Online Help (http://localhost:631/help)

CCOOPPYYRRIIGGHHTT
       Copyright © 2007-2019 by Apple Inc.

26 April 2019                        CUPS                       cups-config(1)
"
cancel,"cancel(1)                         Apple Inc.                         cancel(1)

NNAAMMEE
       cancel - cancel jobs

SSYYNNOOPPSSIISS
       ccaanncceell [ --EE ] [ --UU _u_s_e_r_n_a_m_e ] [ --aa ] [ --hh _h_o_s_t_n_a_m_e_[_:_p_o_r_t_] ] [ --uu
       _u_s_e_r_n_a_m_e ] [ --xx ] [ _i_d ] [ _d_e_s_t_i_n_a_t_i_o_n ] [ _d_e_s_t_i_n_a_t_i_o_n_-_i_d ]

DDEESSCCRRIIPPTTIIOONN
       The ccaanncceell command cancels print jobs.  If no _d_e_s_t_i_n_a_t_i_o_n or _i_d is
       specified, the currently printing job on the default destination is
       canceled.

OOPPTTIIOONNSS
       The following options are recognized by ccaanncceell:

       --aa   Cancel all jobs on the named destination, or all jobs on all
            destinations if none is provided.

       --EE   Forces encryption when connecting to the server.

       --hh _h_o_s_t_n_a_m_e[_:_p_o_r_t]
            Specifies an alternate server.

       --UU _u_s_e_r_n_a_m_e
            Specifies the username to use when connecting to the server.

       --uu _u_s_e_r_n_a_m_e
            Cancels jobs owned by _u_s_e_r_n_a_m_e.

       --xx   Deletes job data files in addition to canceling.

CCOONNFFOORRMMIINNGG TTOO
       Unlike the System V printing system, CUPS allows printer names to
       contain any printable character except SPACE, TAB, ""/"", or ""#"". Also,
       printer and class names are _n_o_t case-sensitive.

EEXXAAMMPPLLEESS
       Cancel the current print job:

           cancel

       Cancel job ""myprinter-42"":

           cancel myprinter-42

       Cancel all jobs:

           cancel -a

NNOOTTEESS
       Administrators wishing to prevent unauthorized cancellation of jobs via
       the _-_u option should require authentication for Cancel-Jobs operations
       in ccuuppssdd..ccoonnff(5).

SSEEEE AALLSSOO
       ccuuppssdd..ccoonnff(5), llpp(1), llppmmoovvee(8), llppssttaatt(1), CUPS Online Help
       (http://localhost:631/help)

CCOOPPYYRRIIGGHHTT
       Copyright © 2007-2019 by Apple Inc.

26 April 2019                        CUPS                            cancel(1)
"
lpq,"lpq(1)                            Apple Inc.                            lpq(1)

NNAAMMEE
       lpq - show printer queue status

SSYYNNOOPPSSIISS
       llppqq [ --EE ] [ --UU _u_s_e_r_n_a_m_e ] [ --hh _s_e_r_v_e_r[::_p_o_r_t] ] [ --PP
       _d_e_s_t_i_n_a_t_i_o_n[//_i_n_s_t_a_n_c_e] ] [ --aa ] [ --ll ] [ ++_i_n_t_e_r_v_a_l ]

DDEESSCCRRIIPPTTIIOONN
       llppqq shows the current print queue status on the named printer.  Jobs
       queued on the default destination will be shown if no printer or class
       is specified on the command-line.

       The _+_i_n_t_e_r_v_a_l option allows you to continuously report the jobs in the
       queue until the queue is empty; the list of jobs is shown once every
       _i_n_t_e_r_v_a_l seconds.

OOPPTTIIOONNSS
       llppqq supports the following options:

       --EE   Forces encryption when connecting to the server.

       --PP _d_e_s_t_i_n_a_t_i_o_n[//_i_n_s_t_a_n_c_e]
            Specifies an alternate printer or class name.

       --UU _u_s_e_r_n_a_m_e
            Specifies an alternate username.

       --aa   Reports jobs on all printers.

       --hh _s_e_r_v_e_r[::_p_o_r_t]
            Specifies an alternate server.

       --ll   Requests a more verbose (long) reporting format.

SSEEEE AALLSSOO
       ccaanncceell(1), llpp(1), llpprr(1), llpprrmm(1), llppssttaatt(1), CUPS Online Help
       (http://localhost:631/help)

CCOOPPYYRRIIGGHHTT
       Copyright © 2007-2019 by Apple Inc.

26 April 2019                        CUPS                               lpq(1)
"
lpc,"lpc(8)                            Apple Inc.                            lpc(8)

NNAAMMEE
       lpc - line printer control program (deprecated)

SSYYNNOOPPSSIISS
       llppcc [ _c_o_m_m_a_n_d [ _p_a_r_a_m_e_t_e_r_(_s_) ] ]

DDEESSCCRRIIPPTTIIOONN
       llppcc provides limited control over printer and class queues provided by
       CUPS. It can also be used to query the state of queues.

       If no command is specified on the command-line, llppcc displays a prompt
       and accepts commands from the standard input.

   CCOOMMMMAANNDDSS
       The llppcc program accepts a subset of commands accepted by the Berkeley
       llppcc program of the same name:

       eexxiitt Exits the command interpreter.

       hheellpp [_c_o_m_m_a_n_d]

       ?? [_c_o_m_m_a_n_d]
            Displays a short help message.

       qquuiitt Exits the command interpreter.

       ssttaattuuss [_q_u_e_u_e]
            Displays the status of one or more printer or class queues.

NNOOTTEESS
       This program is deprecated and will be removed in a future feature
       release of CUPS.

       Since llppcc is geared towards the Berkeley printing system, it is
       impossible to use llppcc to configure printer or class queues provided by
       CUPS.  To configure printer or class queues you must use the llppaaddmmiinn(8)
       command or another CUPS-compatible client with that functionality.

SSEEEE AALLSSOO
       ccaanncceell(1), ccuuppssaacccceepptt(8), ccuuppsseennaabbllee(8), llpp(1), llppaaddmmiinn(8), llpprr(1),
       llpprrmm(1), llppssttaatt(1), CUPS Online Help (http://localhost:631/help)

CCOOPPYYRRIIGGHHTT
       Copyright © 2007-2019 by Apple Inc.

26 April 2019                        CUPS                               lpc(8)
"
at,"AT(1)                       General Commands Manual                      AT(1)

NNAAMMEE
     aatt, bbaattcchh, aattqq, aattrrmm – queue, examine or delete jobs for later execution

SSYYNNOOPPSSIISS
     aatt [--qq _q_u_e_u_e] [--ff _f_i_l_e] [--mmllddbbvv] _t_i_m_e
     aatt [--qq _q_u_e_u_e] [--ff _f_i_l_e] [--mmllddbbvv] --tt [[_C_C]_Y_Y]_M_M_D_D_h_h_m_m[._S_S]
     aatt --cc _j_o_b [_j_o_b _._._.]
     aatt --ll [_j_o_b _._._.]
     aatt --ll --qq _q_u_e_u_e
     aatt --rr _j_o_b [_j_o_b _._._.]

     aattqq [--qq _q_u_e_u_e] [--vv]

     aattrrmm _j_o_b [_j_o_b _._._.]

     bbaattcchh [--qq _q_u_e_u_e] [--ff _f_i_l_e] [--mmvv] [_t_i_m_e]

DDEESSCCRRIIPPTTIIOONN
     The aatt and bbaattcchh utilities read commands from standard input or a
     specified file which are to be executed at a later time, using sh(1).

     aatt      executes commands at a specified time;

     aattqq     lists the user's pending jobs, unless the user is the superuser;
             in that case, everybody's jobs are listed;

     aattrrmm    deletes jobs;

     bbaattcchh   executes commands when system load levels permit; in other words,
             when the load average drops below 1.5 times number of active
             CPUs, or the value specified in the invocation of aattrruunn.

     The aatt utility allows some moderately complex _t_i_m_e specifications.  It
     accepts times of the form _H_H_M_M or _H_H_:_M_M to run a job at a specific time
     of day.  (If that time is already past, the next day is assumed.)  As an
     alternative, the following keywords may be specified: _m_i_d_n_i_g_h_t, _n_o_o_n, or
     _t_e_a_t_i_m_e (4pm) and time-of-day may be suffixed with _A_M, _P_M, or _U_T_C for
     running in the morning, the evening, or in UTC time.  The day on which
     the job is to be run may also be specified by giving a date in the form
     _m_o_n_t_h_-_n_a_m_e _d_a_y with an optional _y_e_a_r, or giving a date of the forms
     _D_D_._M_M_._Y_Y_Y_Y, _D_D_._M_M_._Y_Y, _M_M_/_D_D_/_Y_Y_Y_Y, _M_M_/_D_D_/_Y_Y, _M_M_D_D_Y_Y_Y_Y, _o_r _M_M_D_D_Y_Y.  The
     specification of a date must follow the specification of the time of day.
     Time can also be specified as: [_n_o_w] _+ _c_o_u_n_t _t_i_m_e_-_u_n_i_t_s, where the time-
     units can be _m_i_n_u_t_e_s, _h_o_u_r_s, _d_a_y_s, _w_e_e_k_s, _m_o_n_t_h_s or _y_e_a_r_s and aatt may be
     told to run the job today by suffixing the time with _t_o_d_a_y and to run the
     job tomorrow by suffixing the time with _t_o_m_o_r_r_o_w.  The shortcut _n_e_x_t can
     be used instead of _+ _1.

     For example, to run a job at 4pm three days from now, use aatt _4_p_m _+ _3
     _d_a_y_s, to run a job at 10:00am on July 31, use aatt _1_0_a_m _J_u_l _3_1 and to run a
     job at 1am tomorrow, use aatt _1_a_m _t_o_m_o_r_r_o_w.

     The aatt utility also supports the POSIX time format (see --tt option).

     For both aatt and bbaattcchh, commands are read from standard input or the file
     specified with the --ff option and executed.  The working directory, the
     environment (except for the variables TERM, TERMCAP, DISPLAY and __) and
     the _u_m_a_s_k are retained from the time of invocation.  An aatt or bbaattcchh
     command invoked from a su(1) shell will retain the current userid.  The
     user will be mailed standard error and standard output from his commands,
     if any.  Mail will be sent using the command sendmail(8).  If aatt is
     executed from a su(1) shell, the owner of the login shell will receive
     the mail.

     The superuser may use these commands in any case.  For other users,
     permission to use aatt is determined by the files _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._a_l_l_o_w
     and _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._d_e_n_y.

     If the file _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._a_l_l_o_w exists, only usernames mentioned in it
     are allowed to use aatt.  In these two files, a user is considered to be
     listed only if the user name has no blank or other characters before it
     on its line and a newline character immediately after the name, even at
     the end of the file.  Other lines are ignored and may be used for
     comments.

     If _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._a_l_l_o_w does not exist, _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._d_e_n_y is
     checked, every username not mentioned in it is then allowed to use aatt.

     If neither exists, only the superuser is allowed use of aatt.  This is the
     default configuration.

IIMMPPLLEEMMEENNTTAATTIIOONN NNOOTTEESS
     Note that aatt is implemented through the launchd(8) daemon periodically
     invoking atrun(8), which is disabled by default.  See atrun(8) for
     information about enabling aattrruunn.

OOPPTTIIOONNSS
     --qq _q_u_e_u_e
             Use the specified queue.  A queue designation consists of a
             single letter; valid queue designations range from _a to _z and _A
             to _Z.  The _a queue is the default for aatt and the _b queue for
             bbaattcchh.  Queues with higher letters run with increased niceness.
             If a job is submitted to a queue designated with an uppercase
             letter, it is treated as if it had been submitted to batch at
             that time.  If aattqq is given a specific queue, it will only show
             jobs pending in that queue.

     --mm      Send mail to the user when the job has completed even if there
             was no output.

     --ff _f_i_l_e
             Read the job from _f_i_l_e rather than standard input.

     --ll      With no arguments, list all jobs for the invoking user.  If one
             or more job numbers are given, list only those jobs.

     --dd      Is an alias for aattrrmm (this option is deprecated; use --rr instead).

     --bb      Is an alias for bbaattcchh.

     --vv      For aattqq, shows completed but not yet deleted jobs in the queue;
             otherwise shows the time the job will be executed.

     --cc      Cat the jobs listed on the command line to standard output.

     --rr      Remove the specified jobs.

     --tt      Specify the job time using the POSIX time format.  The argument
             should be in the form [[_C_C]_Y_Y]_M_M_D_D_h_h_m_m[._S_S] where each pair of
             letters represents the following:

                   _C_C      The first two digits of the year (the century).
                   _Y_Y      The second two digits of the year.
                   _M_M      The month of the year, from 1 to 12.
                   _D_D      the day of the month, from 1 to 31.
                   _h_h      The hour of the day, from 0 to 23.
                   _m_m      The minute of the hour, from 0 to 59.
                   _S_S      The second of the minute, from 0 to 60.

             If the _C_C and _Y_Y letter pairs are not specified, the values
             default to the current year.  If the _S_S letter pair is not
             specified, the value defaults to 0.

FFIILLEESS
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_j_o_b_s            directory containing job files
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_s_p_o_o_l           directory containing output spool files
     _/_v_a_r_/_r_u_n_/_u_t_m_p_x                login records
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._a_l_l_o_w        allow permission control
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._d_e_n_y         deny permission control
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_j_o_b_s_/_._l_o_c_k_f_i_l_e  job-creation lock file

SSEEEE AALLSSOO
     nice(1), sh(1), umask(2), compat(5), atrun(8), cron(8), launchd(8),
     sendmail(8)

AAUUTTHHOORRSS
     At was mostly written by Thomas Koenig <_i_g_2_5_@_r_z_._u_n_i_-_k_a_r_l_s_r_u_h_e_._d_e>.  The
     time parsing routines are by David Parsons <_o_r_c_@_p_e_l_l_._c_h_i_._i_l_._u_s>, with
     minor enhancements by Joe Halpin <_j_o_e_._h_a_l_p_i_n_@_a_t_t_b_i_._c_o_m>.

BBUUGGSS
     If the file _/_v_a_r_/_r_u_n_/_u_t_m_p_x is not available or corrupted, or if the user
     is not logged on at the time aatt is invoked, the mail is sent to the
     userid found in the environment variable LOGNAME.  If that is undefined
     or empty, the current userid is assumed.

     The aatt and bbaattcchh utilities as presently implemented are not suitable when
     users are competing for resources.  If this is the case, another batch
     system such as _n_q_s may be more suitable.

     Specifying a date past 2038 may not work on some systems.

macOS 14.6                      August 11, 2018                     macOS 14.6
"
batch,"AT(1)                       General Commands Manual                      AT(1)

NNAAMMEE
     aatt, bbaattcchh, aattqq, aattrrmm – queue, examine or delete jobs for later execution

SSYYNNOOPPSSIISS
     aatt [--qq _q_u_e_u_e] [--ff _f_i_l_e] [--mmllddbbvv] _t_i_m_e
     aatt [--qq _q_u_e_u_e] [--ff _f_i_l_e] [--mmllddbbvv] --tt [[_C_C]_Y_Y]_M_M_D_D_h_h_m_m[._S_S]
     aatt --cc _j_o_b [_j_o_b _._._.]
     aatt --ll [_j_o_b _._._.]
     aatt --ll --qq _q_u_e_u_e
     aatt --rr _j_o_b [_j_o_b _._._.]

     aattqq [--qq _q_u_e_u_e] [--vv]

     aattrrmm _j_o_b [_j_o_b _._._.]

     bbaattcchh [--qq _q_u_e_u_e] [--ff _f_i_l_e] [--mmvv] [_t_i_m_e]

DDEESSCCRRIIPPTTIIOONN
     The aatt and bbaattcchh utilities read commands from standard input or a
     specified file which are to be executed at a later time, using sh(1).

     aatt      executes commands at a specified time;

     aattqq     lists the user's pending jobs, unless the user is the superuser;
             in that case, everybody's jobs are listed;

     aattrrmm    deletes jobs;

     bbaattcchh   executes commands when system load levels permit; in other words,
             when the load average drops below 1.5 times number of active
             CPUs, or the value specified in the invocation of aattrruunn.

     The aatt utility allows some moderately complex _t_i_m_e specifications.  It
     accepts times of the form _H_H_M_M or _H_H_:_M_M to run a job at a specific time
     of day.  (If that time is already past, the next day is assumed.)  As an
     alternative, the following keywords may be specified: _m_i_d_n_i_g_h_t, _n_o_o_n, or
     _t_e_a_t_i_m_e (4pm) and time-of-day may be suffixed with _A_M, _P_M, or _U_T_C for
     running in the morning, the evening, or in UTC time.  The day on which
     the job is to be run may also be specified by giving a date in the form
     _m_o_n_t_h_-_n_a_m_e _d_a_y with an optional _y_e_a_r, or giving a date of the forms
     _D_D_._M_M_._Y_Y_Y_Y, _D_D_._M_M_._Y_Y, _M_M_/_D_D_/_Y_Y_Y_Y, _M_M_/_D_D_/_Y_Y, _M_M_D_D_Y_Y_Y_Y, _o_r _M_M_D_D_Y_Y.  The
     specification of a date must follow the specification of the time of day.
     Time can also be specified as: [_n_o_w] _+ _c_o_u_n_t _t_i_m_e_-_u_n_i_t_s, where the time-
     units can be _m_i_n_u_t_e_s, _h_o_u_r_s, _d_a_y_s, _w_e_e_k_s, _m_o_n_t_h_s or _y_e_a_r_s and aatt may be
     told to run the job today by suffixing the time with _t_o_d_a_y and to run the
     job tomorrow by suffixing the time with _t_o_m_o_r_r_o_w.  The shortcut _n_e_x_t can
     be used instead of _+ _1.

     For example, to run a job at 4pm three days from now, use aatt _4_p_m _+ _3
     _d_a_y_s, to run a job at 10:00am on July 31, use aatt _1_0_a_m _J_u_l _3_1 and to run a
     job at 1am tomorrow, use aatt _1_a_m _t_o_m_o_r_r_o_w.

     The aatt utility also supports the POSIX time format (see --tt option).

     For both aatt and bbaattcchh, commands are read from standard input or the file
     specified with the --ff option and executed.  The working directory, the
     environment (except for the variables TERM, TERMCAP, DISPLAY and __) and
     the _u_m_a_s_k are retained from the time of invocation.  An aatt or bbaattcchh
     command invoked from a su(1) shell will retain the current userid.  The
     user will be mailed standard error and standard output from his commands,
     if any.  Mail will be sent using the command sendmail(8).  If aatt is
     executed from a su(1) shell, the owner of the login shell will receive
     the mail.

     The superuser may use these commands in any case.  For other users,
     permission to use aatt is determined by the files _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._a_l_l_o_w
     and _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._d_e_n_y.

     If the file _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._a_l_l_o_w exists, only usernames mentioned in it
     are allowed to use aatt.  In these two files, a user is considered to be
     listed only if the user name has no blank or other characters before it
     on its line and a newline character immediately after the name, even at
     the end of the file.  Other lines are ignored and may be used for
     comments.

     If _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._a_l_l_o_w does not exist, _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._d_e_n_y is
     checked, every username not mentioned in it is then allowed to use aatt.

     If neither exists, only the superuser is allowed use of aatt.  This is the
     default configuration.

IIMMPPLLEEMMEENNTTAATTIIOONN NNOOTTEESS
     Note that aatt is implemented through the launchd(8) daemon periodically
     invoking atrun(8), which is disabled by default.  See atrun(8) for
     information about enabling aattrruunn.

OOPPTTIIOONNSS
     --qq _q_u_e_u_e
             Use the specified queue.  A queue designation consists of a
             single letter; valid queue designations range from _a to _z and _A
             to _Z.  The _a queue is the default for aatt and the _b queue for
             bbaattcchh.  Queues with higher letters run with increased niceness.
             If a job is submitted to a queue designated with an uppercase
             letter, it is treated as if it had been submitted to batch at
             that time.  If aattqq is given a specific queue, it will only show
             jobs pending in that queue.

     --mm      Send mail to the user when the job has completed even if there
             was no output.

     --ff _f_i_l_e
             Read the job from _f_i_l_e rather than standard input.

     --ll      With no arguments, list all jobs for the invoking user.  If one
             or more job numbers are given, list only those jobs.

     --dd      Is an alias for aattrrmm (this option is deprecated; use --rr instead).

     --bb      Is an alias for bbaattcchh.

     --vv      For aattqq, shows completed but not yet deleted jobs in the queue;
             otherwise shows the time the job will be executed.

     --cc      Cat the jobs listed on the command line to standard output.

     --rr      Remove the specified jobs.

     --tt      Specify the job time using the POSIX time format.  The argument
             should be in the form [[_C_C]_Y_Y]_M_M_D_D_h_h_m_m[._S_S] where each pair of
             letters represents the following:

                   _C_C      The first two digits of the year (the century).
                   _Y_Y      The second two digits of the year.
                   _M_M      The month of the year, from 1 to 12.
                   _D_D      the day of the month, from 1 to 31.
                   _h_h      The hour of the day, from 0 to 23.
                   _m_m      The minute of the hour, from 0 to 59.
                   _S_S      The second of the minute, from 0 to 60.

             If the _C_C and _Y_Y letter pairs are not specified, the values
             default to the current year.  If the _S_S letter pair is not
             specified, the value defaults to 0.

FFIILLEESS
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_j_o_b_s            directory containing job files
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_s_p_o_o_l           directory containing output spool files
     _/_v_a_r_/_r_u_n_/_u_t_m_p_x                login records
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._a_l_l_o_w        allow permission control
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_a_t_._d_e_n_y         deny permission control
     _/_u_s_r_/_l_i_b_/_c_r_o_n_/_j_o_b_s_/_._l_o_c_k_f_i_l_e  job-creation lock file

SSEEEE AALLSSOO
     nice(1), sh(1), umask(2), compat(5), atrun(8), cron(8), launchd(8),
     sendmail(8)

AAUUTTHHOORRSS
     At was mostly written by Thomas Koenig <_i_g_2_5_@_r_z_._u_n_i_-_k_a_r_l_s_r_u_h_e_._d_e>.  The
     time parsing routines are by David Parsons <_o_r_c_@_p_e_l_l_._c_h_i_._i_l_._u_s>, with
     minor enhancements by Joe Halpin <_j_o_e_._h_a_l_p_i_n_@_a_t_t_b_i_._c_o_m>.

BBUUGGSS
     If the file _/_v_a_r_/_r_u_n_/_u_t_m_p_x is not available or corrupted, or if the user
     is not logged on at the time aatt is invoked, the mail is sent to the
     userid found in the environment variable LOGNAME.  If that is undefined
     or empty, the current userid is assumed.

     The aatt and bbaattcchh utilities as presently implemented are not suitable when
     users are competing for resources.  If this is the case, another batch
     system such as _n_q_s may be more suitable.

     Specifying a date past 2038 may not work on some systems.

macOS 14.6                      August 11, 2018                     macOS 14.6
"
chkconfig,No manual entry for chkconfig
rc-service,No manual entry for rc-service
update-rc.d,No manual entry for update-rc.d
runlevel,No manual entry for runlevel
logname,"LOGNAME(1)                  General Commands Manual                 LOGNAME(1)

NNAAMMEE
     llooggnnaammee – display user's login name

SSYYNNOOPPSSIISS
     llooggnnaammee

DDEESSCCRRIIPPTTIIOONN
     The llooggnnaammee utility writes the user's login name to standard output
     followed by a newline.

     The llooggnnaammee utility explicitly ignores the LOGNAME and USER environment
     variables because the environment cannot be trusted.

EEXXIITT SSTTAATTUUSS
     The llooggnnaammee utility exits 0 on success, and >0 if an error occurs.

SSEEEE AALLSSOO
     who(1), whoami(1), getlogin(2)

SSTTAANNDDAARRDDSS
     The llooggnnaammee utility is expected to conform to IEEE Std 1003.2
     (“POSIX.2”).

HHIISSTTOORRYY
     The llooggnnaammee command appeared in 4.4BSD.

macOS 14.6                       June 9, 1993                       macOS 14.6
"
who,"WHO(1)                      General Commands Manual                     WHO(1)

NNAAMMEE
     wwhhoo – display who is on the system

SSYYNNOOPPSSIISS
     wwhhoo [--aabbHHmmqqssTTuu] [aamm II] [_f_i_l_e]

DDEESSCCRRIIPPTTIIOONN
     The wwhhoo utility displays information about currently logged in users.  By
     default, this includes the login name, tty name, date and time of login
     and remote hostname if not local.

     The options are as follows:

     --aa      Equivalent to --bbTTuu, with the exception that output is not
             restricted to the time and date of the last system reboot.

     --bb      Write the time and date of the last system reboot.

     --HH      Write column headings above the output.

     --mm      Show information about the terminal attached to standard input
             only.

     --qq      “Quick mode”: List the names and number of logged in users in
             columns.  All other command line options are ignored.

     --ss      Show the name, line and time fields only.  This is the default.

     --TT      Indicate whether each user is accepting messages.  One of the
             following characters is written:

             +  User is accepting messages.
             -  User is not accepting messages.
             ?  An error occurred.

     --uu      Show idle time for each user in hours and minutes as _h_h:_m_m, ‘.’
             if the user has been idle less than a minute, and “old” if the
             user has been idle more than 24 hours.

     aamm II    Equivalent to --mm.

     By default, wwhhoo gathers information from the file _/_v_a_r_/_r_u_n_/_u_t_m_p_x.  An
     alternate _f_i_l_e may be specified which is usually _/_v_a_r_/_l_o_g_/_u_t_x_._l_o_g (or
     _/_v_a_r_/_l_o_g_/_u_t_x_._l_o_g_._[_0_-_6_] depending on site policy as _u_t_x_._l_o_g can grow quite
     large and daily versions may or may not be kept around after compression
     by ac(8)).  The _u_t_x_._l_o_g file contains a record of every login, logout,
     crash, shutdown and date change since _u_t_x_._l_o_g was last truncated or
     created.

     If _/_v_a_r_/_l_o_g_/_u_t_x_._l_o_g is being used as the file, the user name may be empty
     or one of the special characters '|', '}' and '~'.  Logouts produce an
     output line without any user name.  For more information on the special
     characters, see getutxent(3).

EENNVVIIRROONNMMEENNTT
     The COLUMNS, LANG, LC_ALL and LC_TIME environment variables affect the
     execution of wwhhoo as described in environ(7).

FFIILLEESS
     _/_v_a_r_/_r_u_n_/_u_t_m_p_x

EEXXIITT SSTTAATTUUSS
     The wwhhoo utility exits 0 on success, and >0 if an error occurs.

EEXXAAMMPPLLEESS
     Show a brief summary of who is logged in:

           $ who -q
           fernape          root             root
           # users = 3

     Show who is logged in along with the line and time fields (without the
     headers):

           $ who -s
           fernape          ttyv0        Aug 26 16:23
           root             ttyv1        Aug 26 16:23
           root             ttyv2        Aug 26 16:23

     Show information about the terminal attached to standard input:

           $ who am i
           fernape                       Aug 26 16:24

     Show time and date of the last system reboot, whether the users accept
     messages and the idle time for each of them:

           $ who -a
                            - system boot  Aug 26 16:23   .
           fernape          - ttyv0        Aug 26 16:23   .
           root             - ttyv1        Aug 26 16:23   .
           root             - ttyv2        Aug 26 16:23   .

     Same as above but showing headers:

           $ who -aH
           NAME             S LINE         TIME         IDLE  FROM
                            - system boot  Aug 26 16:23   .
           fernape          - ttyv0        Aug 26 16:23   .
           root             - ttyv1        Aug 26 16:23 00:01
           root             - ttyv2        Aug 26 16:23 00:01

SSEEEE AALLSSOO
     last(1), users(1), w(1), getutxent(3)

SSTTAANNDDAARRDDSS
     The wwhhoo utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).

HHIISSTTOORRYY
     A wwhhoo command appeared in Version 1 AT&T UNIX.

macOS 14.6                      August 30, 2020                     macOS 14.6
"
users,"USERS(1)                    General Commands Manual                   USERS(1)

NNAAMMEE
     uusseerrss – list current users

SSYYNNOOPPSSIISS
     uusseerrss

DDEESSCCRRIIPPTTIIOONN
     The uusseerrss utility lists the login names of the users currently on the
     system, in sorted order, space separated, on a single line.

FFIILLEESS
     _/_v_a_r_/_r_u_n_/_u_t_m_p_x

SSEEEE AALLSSOO
     finger(1), last(1), who(1), getutxent(3), utmpx(5)

HHIISSTTOORRYY
     The uusseerrss command appeared in 3.0BSD.

macOS 14.6                     January 21, 2010                     macOS 14.6
"
last,"LAST(1)                     General Commands Manual                    LAST(1)

NNAAMMEE
     llaasstt – indicate last logins of users and ttys

SSYYNNOOPPSSIISS
     llaasstt [----lliibbxxoo] [--sswwyy] [--dd [[_C_C]_Y_Y][_M_M_D_D]_h_h_m_m[_._S_S]] [--ff _f_i_l_e] [--hh _h_o_s_t]
          [--nn _m_a_x_r_e_c] [--tt _t_t_y] [_u_s_e_r _._._.]

DDEESSCCRRIIPPTTIIOONN
     The llaasstt utility will either list the sessions of specified _u_s_e_r_s, _t_t_y_s,
     and _h_o_s_t_s, in reverse time order, or list the users logged in at a
     specified date and time.  Each line of output contains the user name, the
     tty from which the session was conducted, any hostname, the start and
     stop times for the session, and the duration of the session.  If the
     session is still continuing or was cut short by a crash or shutdown, llaasstt
     will so indicate.

     The following options are available:

     ----lliibbxxoo     Generate output via libxo(3) in a selection of different
                 human and machine readable formats.  See xo_parse_args(3) for
                 details on command line arguments.

     --dd _d_a_t_e     Specify the snapshot date and time.  All users logged in at
                 the snapshot date and time will be reported.  This may be
                 used with the --ff option to derive the results from stored
                 _u_t_x_._l_o_g files.  When this argument is provided, all other
                 options except for --ff and --nn are ignored.  The argument
                 should be in the form [[_C_C]_Y_Y][_M_M_D_D]_h_h_m_m[_._S_S] where each pair
                 of letters represents the following:

                       _C_C      The first two digits of the year (the century).
                       _Y_Y      The second two digits of the year.  If _Y_Y is
                               specified, but _C_C is not, a value for _Y_Y
                               between 69 and 99 results in a _C_C value of 19.
                               Otherwise, a _C_C value of 20 is used.
                       _M_M      Month of the year, from 1 to 12.
                       _D_D      Day of the month, from 1 to 31.
                       _h_h      Hour of the day, from 0 to 23.
                       _m_m      Minute of the hour, from 0 to 59.
                       _S_S      Second of the minute, from 0 to 60.

                 If the _C_C and _Y_Y letter pairs are not specified, the values
                 default to the current year.  If the _S_S letter pair is not
                 specified, the value defaults to 0.

     --ff _f_i_l_e     Read the file _f_i_l_e instead of the default, _/_v_a_r_/_l_o_g_/_u_t_x_._l_o_g.

     --hh _h_o_s_t     _H_o_s_t names may be names or internet numbers.

     --nn _m_a_x_r_e_c   Limit the report to _m_a_x_r_e_c lines.

     --ss          Report the duration of the login session in seconds, instead
                 of the default days, hours and minutes.

     --tt _t_t_y      Specify the _t_t_y.  Tty names may be given fully or
                 abbreviated, for example, “last -t 03” is equivalent to “last
                 -t tty03”.

     --ww          Widen the duration field to show seconds, as well as the
                 default days, hours and minutes.

     --yy          Report the year in the session start time.

     If multiple arguments are given, and a snapshot time is not specified,
     the information which applies to any of the arguments is printed, e.g.,
     “last root -t console” would list all of “root's” sessions as well as all
     sessions on the console terminal.  If no users, hostnames or terminals
     are specified, llaasstt prints a record of all logins and logouts.

     The pseudo-user _r_e_b_o_o_t logs in at reboots of the system, thus “last
     reboot” will give an indication of mean time between reboot.

     If llaasstt is interrupted, it indicates to what date the search has
     progressed.  If interrupted with a quit signal llaasstt indicates how far the
     search has progressed and then continues.

FFIILLEESS
     _/_v_a_r_/_l_o_g_/_u_t_x_._l_o_g  login data base

EEXXAAMMPPLLEESS
     Show logins in pts/14 with the duration in seconds and limit the report
     to two lines:

           $ last -n2 -s -t pts/14
           bob    pts/1   Wed Dec  9 11:08   still logged in
           bob    pts/2   Mon Dec  7 20:10 - 20:23  (     776)

     Show active logins at ‘December 7th 20:23’ of the current year:

           $ last -d 12072023
           bob    pts/1    Mon Dec  7 20:10 - 20:23  (00:12)
           bob    pts/6    Mon Dec  7 19:24 - 22:27  (03:03)
           alice  ttyv0    Mon Dec  7 19:18 - 22:27  (03:09)

SSEEEE AALLSSOO
     lastcomm(1), getutxent(3), libxo(3), xo_parse_args(3), ac(8)

HHIISSTTOORRYY
     llaasstt utility first appeared in 1BSD.

AAUUTTHHOORRSS
     The original version was written by Howard P. Katseff; Keith Bostic
     rewrote it in 1986/87 to add functionality and to improve code quality.
     Philip Paeps added libxo(3) support in August 2018.

BBUUGGSS
     If a login shell should terminate abnormally for some reason, it is
     likely that a logout record will not be written to the _u_t_x_._l_o_g file.  In
     this case, llaasstt will indicate the logout time as ""shutdown"".

macOS 14.6                      January 9, 2021                     macOS 14.6
"
lastlog,"UTMP(5)                       File Formats Manual                      UTMP(5)

NNAAMMEE
     uuttmmpp, wwttmmpp, llaassttlloogg – login records (DEPRECATED)

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uuttmmpp..hh>>

DDEESSCCRRIIPPTTIIOONN
     The interfaces in file ⟨_u_t_m_p_._h⟩ are all DDEEPPRREECCAATTEEDD and are only provided
     for compatibility with previous releases of Mac OS X.  See pututxline(3)
     and utmpx(5) for the supported interfaces.

     ⟨_u_t_m_p_._h⟩ declares the structures used to record information about current
     users in the file uuttmmpp, logins and logouts in the file wwttmmpp, and last
     logins in the file llaassttlloogg.  The time stamps of date changes, shutdowns
     and reboots are also logged in the wwttmmpp file.

     These files can grow rapidly on busy systems, daily or weekly rotation is
     recommended.  If any of these files do not exist, it is not created.
     These files must be created manually and are normally maintained in
     either the script _/_e_t_c_/_d_a_i_l_y or the script _/_e_t_c_/_w_e_e_k_l_y.  (See cron(8).)

           #define _PATH_UTMP      ""/var/run/utmp""
           #define _PATH_WTMP      ""/var/log/wtmp""
           #define _PATH_LASTLOG   ""/var/log/lastlog""

           #define UT_NAMESIZE     8
           #define UT_LINESIZE     8
           #define UT_HOSTSIZE     16

           struct lastlog {
                   time_t  ll_time;
                   char    ll_line[UT_LINESIZE];
                   char    ll_host[UT_HOSTSIZE];
           };

           struct utmp {
                   char    ut_line[UT_LINESIZE];
                   char    ut_name[UT_NAMESIZE];
                   char    ut_host[UT_HOSTSIZE];
                   time_t  ut_time;
           };

     Each time a user logs in, the login program looks up the user's UID in
     the file llaassttlloogg.. If it is found, the timestamp of the last time the user
     logged in, the terminal line and the hostname are written to the standard
     output. (Providing the login is not _q_u_i_e_t, see login(1).) The login
     program then records the new login time in the file llaassttlloogg.

     After the new _l_a_s_t_l_o_g record is written , the file uuttmmpp is opened and the
     _u_t_m_p record for the user inserted.  This record remains there until the
     user logs out at which time it is deleted.  The uuttmmpp file is used by the
     programs rwho(1), users(1), w(1), and who(1).

     Next, the login program opens the file wwttmmpp, and appends the user's _u_t_m_p
     record.  The same _u_t_m_p record, with an updated time stamp is later
     appended to the file when the user logs out. (See launchd(8).) The wwttmmpp
     file is used by the programs last(1) and ac(8).

     In the event of a date change, a shutdown or reboot, the following items
     are logged in the wwttmmpp file.

     reboot
     shutdown    A system reboot or shutdown has been initiated.  The
                 character ‘~’ is placed in the field _u_t___l_i_n_e, and reboot or
                 shutdown in the field _u_t___n_a_m_e.  (See shutdown(8) and
                 reboot(8).)

     date        The system time has been manually or automatically updated.
                 (See date(1).) The command name date is recorded in the field
                 _u_t___n_a_m_e.  In the field _u_t___l_i_n_e, the character ‘|’ indicates
                 the time prior to the change, and the character ‘{’ indicates
                 the new time.

FFIILLEESS
     ((TThheessee ffiilleess nnoo lloonnggeerr eexxiisstt iinn 1100..55 oorr llaatteerr..))

     _/_v_a_r_/_r_u_n_/_u_t_m_p     The uuttmmpp ffiillee..
     _/_v_a_r_/_l_o_g_/_w_t_m_p     The wwttmmpp ffiillee..
     _/_v_a_r_/_l_o_g_/_l_a_s_t_l_o_g  The llaassttlloogg ffiillee..

SSEEEE AALLSSOO
     last(1), login(1), who(1), ac(8), launchd(8)

HHIISSTTOORRYY
     A uuttmmpp and wwttmmpp file format appeared in Version 6 AT&T UNIX.  The llaassttlloogg
     file format appeared in 3.0BSD.

BSD 4                           March 17, 1994                           BSD 4
"
w,"W(1)                        General Commands Manual                       W(1)

NNAAMMEE
     ww – display who is logged in and what they are doing

SSYYNNOOPPSSIISS
     ww [----lliibbxxoo] [--hhiinn] [_u_s_e_r _._._.]

DDEESSCCRRIIPPTTIIOONN
     The ww utility prints a summary of the current activity on the system,
     including what each user is doing.  The first line displays the current
     time of day, how long the system has been running, the number of users
     logged into the system, and the load averages.  The load average numbers
     give the number of jobs in the run queue averaged over 1, 5 and 15
     minutes.

     The fields output are the user's login name, the name of the terminal the
     user is on, the host from which the user is logged in, the time the user
     logged on, the time since the user last typed anything, and the name and
     arguments of the current process.

     The options are as follows:

     ----lliibbxxoo
             Generate output via libxo(3) in a selection of different human
             and machine readable formats.  See xo_parse_args(3) for details
             on command line arguments.

     --hh      Suppress the heading.

     --ii      Output is sorted by idle time.

     --nn      Do not attempt to resolve network addresses (normally ww
             interprets addresses and attempts to display them as names).
             When --nn is specified more than once, hostnames stored in utmp are
             attempted to resolve to display them as network addresses.

     If one or more _u_s_e_r names are specified, the output is restricted to
     those users.

CCOOMMPPAATTIIBBIILLIITTYY
     The --MM, --NN, --dd, --ff, --ll, --ss, and --ww flags are no longer supported.

SSEEEE AALLSSOO
     finger(1), ps(1), uptime(1), who(1), libxo(3), xo_parse_args(3)

HHIISSTTOORRYY
     The ww command appeared in 3.0BSD.

BBUUGGSS
     The notion of the “current process” is muddy.  The current algorithm is
     “the highest numbered process on the terminal that is not ignoring
     interrupts, or, if there is none, the highest numbered process on the
     terminal”.  This fails, for example, in critical sections of programs
     like the shell and editor, or when faulty programs running in the
     background fork and fail to ignore interrupts.  (In cases where no
     process can be found, ww prints ‘-’.)

     The CPU time is only an estimate, in particular, if someone leaves a
     background process running after logging out, the person currently on
     that terminal is “charged” with the time.

     Background processes are not shown, even though they account for much of
     the load on the system.

     Sometimes processes, typically those in the background, are printed with
     null or garbaged arguments.  In these cases, the name of the command is
     printed in parentheses.

     The ww utility does not know about the new conventions for detection of
     background jobs.  It will sometimes find a background job instead of the
     right one.

     Long hostnames and IPv6 addresses may be truncated.

macOS 14.6                      August 24, 2020                     macOS 14.6
"
tty,"TTY(1)                      General Commands Manual                     TTY(1)

NNAAMMEE
     ttttyy – return user's terminal name

SSYYNNOOPPSSIISS
     ttttyy [--ss]

DDEESSCCRRIIPPTTIIOONN
     The ttttyy utility writes the name of the terminal attached to standard
     input to standard output.  The name that is written is the string
     returned by ttyname(3).  If the standard input is not a terminal, the
     message “not a tty” is written.  The options are as follows:

     --ss      Do not write the terminal name; only the exit status is affected
             when this option is specified.  The --ss option is deprecated in
             favor of the “test -t 0” command.

EEXXIITT SSTTAATTUUSS
     The ttttyy utility exits 0 if the standard input is a terminal, 1 if the
     standard input is not a terminal, and >1 if an error occurs.

SSEEEE AALLSSOO
     test(1), ttyname(3)

SSTTAANNDDAARRDDSS
     The ttttyy utility is expected to be IEEE Std 1003.2 (“POSIX.2”) compatible.

HHIISSTTOORRYY
     A ttttyy command appeared in Version 1 AT&T UNIX.

macOS 14.6                       June 6, 1993                       macOS 14.6
"
dstat,No manual entry for dstat
iostat,"IOSTAT(8)                   System Manager's Manual                  IOSTAT(8)

NNAAMMEE
     iioossttaatt – report I/O statistics

SSYYNNOOPPSSIISS
     iioossttaatt [--CCUUddKKIIooTT??] [--cc _c_o_u_n_t] [--nn _d_e_v_s] [--ww _w_a_i_t] [_d_r_i_v_e_s]

DDEESSCCRRIIPPTTIIOONN
     The iioossttaatt utility displays kernel I/O statistics on terminal, device and
     cpu operations.  The first statistics that are printed are averaged over
     the system uptime.  To get information about the current activity, a
     suitable wait time should be specified, so that the subsequent sets of
     printed statistics will be averaged over that time.

     The options are as follows:

     --??    Display a usage statement and exit.

     --cc    Repeat the display _c_o_u_n_t times.  If no _w_a_i_t interval is specified,
           the default is 1 second.

     --CC    Display CPU statistics.  This is on by default, unless --dd is
           specified.

     --dd    Display only device statistics.  If this flag is turned on, only
           device statistics will be displayed, unless --CC or --UU or --TT is also
           specified to enable the display of CPU, load average or TTY
           statistics.

     --II    Display total statistics for a given time period, rather than
           average statistics for each second during that time period.

     --KK    In the blocks transferred display (-o), display block count in
           kilobytes rather then the device native block size.

     --nn    Display up to _d_e_v_s number of devices.  The iioossttaatt utility will
           display fewer devices if there are not _d_e_v_s devices present.

     --oo    Display old-style iioossttaatt device statistics.  Sectors per second,
           transfers per second, and milliseconds per seek are displayed.  If
           --II is specified, total blocks/sectors, total transfers, and
           milliseconds per seek are displayed.

     --TT    Display TTY statistics.  This is on by default, unless --dd is
           specified.

     --UU    Display system load averages.  This is on by default, unless --dd is
           specified.

     --ww    Pause _w_a_i_t seconds between each display.  If no repeat _c_o_u_n_t is
           specified, the default is infinity.

     The iioossttaatt utility displays its information in the following format:

     tty
           tin     characters read from terminals
           tout    characters written to terminals

     devices
           Device operations.  The header of the field is the device name and
           unit number.  The iioossttaatt utility will display as many devices as
           will fit in a standard 80 column screen, or the maximum number of
           devices in the system, whichever is smaller.  If --nn is specified on
           the command line, iioossttaatt will display the smaller of the requested
           number of devices, and the maximum number of devices in the system.
           To force iioossttaatt to display specific drives, their names may be
           supplied on the command line.  The iioossttaatt utility will not display
           more devices than will fit in an 80 column screen, unless the --nn
           argument is given on the command line to specify a maximum number
           of devices to display, or the list of specified devices exceeds 80
           columns.  If fewer devices are specified on the command line than
           will fit in an 80 column screen, iioossttaatt will show only the
           specified devices.

           The standard iioossttaatt device display shows the following statistics:

           KB/t    kilobytes per transfer
           tps     transfers per second
           MB/s    megabytes per second

           The standard iioossttaatt device display, with the --II flag specified,
           shows the following statistics:

           KB/t    kilobytes per transfer
           xfrs    total number of transfers
           MB      total number of megabytes transferred

           The old-style iioossttaatt display (using --oo) shows the following
           statistics:

           sps     sectors transferred per second
           tps     transfers per second
           msps    average milliseconds per transaction

           The old-style iioossttaatt display, with the --II flag specified, shows the
           following statistics:

           blk     total blocks/sectors transferred
           xfr     total transfers
           msps    average milliseconds per transaction

     cpu
           us      % of cpu time in user mode
           sy      % of cpu time in system mode
           id      % of cpu time in idle mode

EEXXAAMMPPLLEESS
           iostat -w 1 disk0 disk2

     Display statistics for the first and third disk devices device every
     second ad infinitum.

           iostat -c 2

     Display the statistics for the first four devices in the system twice,
     with a one second display interval.

           iostat -Iw 3

     Display total statistics every three seconds ad infinitum.

           iostat -odICTw 2 -c 9

     Display total statistics using the old-style output format 9 times, with
     a two second interval between each measurement/display.  The --dd flag
     generally disables the TTY and CPU displays, but since the --TT and --CC
     flags are given, the TTY and CPU displays will be displayed.

SSEEEE AALLSSOO
     netstat(1), nfsstat(1), ps(1), top(1), vm_stat(1)

     The sections starting with ``Interpreting system activity'' in _I_n_s_t_a_l_l_i_n_g
     _a_n_d _O_p_e_r_a_t_i_n_g _4_._3_B_S_D_.

HHIISSTTOORRYY
     This version of iioossttaatt first appeared in FreeBSD 3.0.

macOS 14.6                       May 22, 2015                       macOS 14.6
"
vmstat,No manual entry for vmstat
mpstat,No manual entry for mpstat
pidstat,No manual entry for pidstat
tload,No manual entry for tload
sar,No manual entry for sar
free,"MALLOC(3)                  Library Functions Manual                  MALLOC(3)

NNAAMMEE
     ccaalllloocc, ffrreeee, mmaalllloocc, rreeaalllloocc, rreeaallllooccff, vvaalllloocc, aalliiggnneedd__aalllloocc – memory
     allocation

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssttddlliibb..hh>>

     _v_o_i_d _*
     ccaalllloocc(_s_i_z_e___t _c_o_u_n_t, _s_i_z_e___t _s_i_z_e);

     _v_o_i_d
     ffrreeee(_v_o_i_d _*_p_t_r);

     _v_o_i_d _*
     mmaalllloocc(_s_i_z_e___t _s_i_z_e);

     _v_o_i_d _*
     rreeaalllloocc(_v_o_i_d _*_p_t_r, _s_i_z_e___t _s_i_z_e);

     _v_o_i_d _*
     rreeaallllooccff(_v_o_i_d _*_p_t_r, _s_i_z_e___t _s_i_z_e);

     _v_o_i_d _*
     vvaalllloocc(_s_i_z_e___t _s_i_z_e);

     _v_o_i_d _*
     aalliiggnneedd__aalllloocc(_s_i_z_e___t _a_l_i_g_n_m_e_n_t, _s_i_z_e___t _s_i_z_e);

DDEESSCCRRIIPPTTIIOONN
     The mmaalllloocc(), ccaalllloocc(), vvaalllloocc(), rreeaalllloocc(), and rreeaallllooccff() functions
     allocate memory.  The allocated memory is aligned such that it can be
     used for any data type, including AltiVec- and SSE-related types.  The
     aalliiggnneedd__aalllloocc() function allocates memory with the requested alignment.
     The ffrreeee() function frees allocations that were created via the preceding
     allocation functions.

     The mmaalllloocc() function allocates _s_i_z_e bytes of memory and returns a
     pointer to the allocated memory.

     The ccaalllloocc() function contiguously allocates enough space for _c_o_u_n_t
     objects that are _s_i_z_e bytes of memory each and returns a pointer to the
     allocated memory.  The allocated memory is filled with bytes of value
     zero.

     The vvaalllloocc() function allocates _s_i_z_e bytes of memory and returns a
     pointer to the allocated memory.  The allocated memory is aligned on a
     page boundary.

     The aalliiggnneedd__aalllloocc() function allocates _s_i_z_e bytes of memory with an
     alignment specified by _a_l_i_g_n_m_e_n_t and returns a pointer to the allocated
     memory.

     The rreeaalllloocc() function tries to change the size of the allocation pointed
     to by _p_t_r to _s_i_z_e, and returns _p_t_r.  If there is not enough room to
     enlarge the memory allocation pointed to by _p_t_r, rreeaalllloocc() creates a new
     allocation, copies as much of the old data pointed to by _p_t_r as will fit
     to the new allocation, frees the old allocation, and returns a pointer to
     the allocated memory.  If _p_t_r is NULL, rreeaalllloocc() is identical to a call
     to mmaalllloocc() for _s_i_z_e bytes.  If _s_i_z_e is zero and _p_t_r is not NULL, a new,
     minimum sized object is allocated and the original object is freed.  When
     extending a region allocated with calloc(3), realloc(3) does not
     guarantee that the additional memory is also zero-filled.

     The rreeaallllooccff() function is identical to the rreeaalllloocc() function, except
     that it will free the passed pointer when the requested memory cannot be
     allocated.  This is a FreeBSD specific API designed to ease the problems
     with traditional coding styles for realloc causing memory leaks in
     libraries.

     The ffrreeee() function deallocates the memory allocation pointed to by _p_t_r.
     _I_f _p_t_r is a NULL pointer, no operation is performed.

RREETTUURRNN VVAALLUUEESS
     If successful, ccaalllloocc(), mmaalllloocc(), rreeaalllloocc(), rreeaallllooccff(), vvaalllloocc(), and
     aalliiggnneedd__aalllloocc() functions return a pointer to allocated memory.  If there
     is an error, they return a NULL pointer and set _e_r_r_n_o to ENOMEM.

     In addition, aalliiggnneedd__aalllloocc() returns a NULL pointer and sets _e_r_r_n_o to
     EINVAL if _s_i_z_e is not an integral multiple of _a_l_i_g_n_m_e_n_t, or if _a_l_i_g_n_m_e_n_t
     is not a power of 2 at least as large as ssiizzeeooff(_v_o_i_d _*).

     For rreeaalllloocc(), the input pointer is still valid if reallocation failed.
     For rreeaallllooccff(), the input pointer will have been freed if reallocation
     failed.

     The ffrreeee() function does not return a value.

DDEEBBUUGGGGIINNGG AALLLLOOCCAATTIIOONN EERRRROORRSS
     A number of facilities are provided to aid in debugging allocation errors
     in applications.  These facilities are primarily controlled via
     environment variables.  The recognized environment variables and their
     meanings are documented below.

EENNVVIIRROONNMMEENNTT
     The following environment variables change the behavior of the
     allocation-related functions.

     MallocDebugReport                If set, specifies where messages are
                                      written. Set to ""stderr"" to write
                                      messages to the standard error stream,
                                      ""none"" to discard all messages and
                                      ""crash"" to write messages to standard
                                      error only for a condition that is about
                                      to cause a crash. When not set, message
                                      are written to the standard error stream
                                      if it appears to be a terminal (that is,
                                      if isatty(STDERR_FILENO) returns a non-
                                      zero value) and are otherwise discarded.

     MallocGuardEdges                 If set, add a guard page before and
                                      after each large block.

     MallocDoNotProtectPrelude        If set, do not add a guard page before
                                      large blocks, even if the
                                      MallocGuardEdges environment variable is
                                      set.

     MallocDoNotProtectPostlude       If set, do not add a guard page after
                                      large blocks, even if the
                                      MallocGuardEdges environment variable is
                                      set.

     MallocStackLogging               The default behavior if this is set is
                                      to record all allocation and
                                      deallocation events to an on-disk log,
                                      along with stacks, so that tools like
                                      leaks(1) and malloc_history(1) can be
                                      used.

                                      Set to ""vm"" to record only allocation of
                                      virtual memory regions allocated by
                                      system calls and mach traps, such as by
                                      mmap(1)

                                      Set to ""malloc"" to record only
                                      allocations via malloc(3) and related
                                      interfaces, not virtual memory regions.

                                      Set to ""lite"" to record current
                                      allocations only, not history.   These
                                      are recorded by in-memory data
                                      structures, instead of an on-disk log.

     MallocStackLoggingNoCompact      If set, record all stacks in a manner
                                      that is compatible with the
                                      mmaalllloocc__hhiissttoorryy program.

     MallocStackLoggingDirectory      If set, records stack logs to the
                                      directory specified instead of saving
                                      them to the default location (/tmp).

     MallocScribble                   If set, fill memory that has been
                                      allocated with 0xaa bytes.  This
                                      increases the likelihood that a program
                                      making assumptions about the contents of
                                      freshly allocated memory will fail.
                                      Also if set, fill memory that has been
                                      deallocated with 0x55 bytes.  This
                                      increases the likelihood that a program
                                      will fail due to accessing memory that
                                      is no longer allocated. Note that due to
                                      the way in which freed memory is managed
                                      internally, the 0x55 pattern may not
                                      appear in some parts of a deallocated
                                      memory block.

     MallocCheckHeapStart <s>         If set, specifies the number of
                                      allocations _<_s_> to wait before begining
                                      periodic heap checks every _<_n_> as
                                      specified by MallocCheckHeapEach.  If
                                      MallocCheckHeapStart is set but
                                      MallocCheckHeapEach is not specified,
                                      the default check repetition is 1000.

     MallocCheckHeapEach <n>          If set, run a consistency check on the
                                      heap every _<_n_> operations.
                                      MallocCheckHeapEach is only meaningful
                                      if MallocCheckHeapStart is also set.

     MallocCheckHeapSleep <t>         Sets the number of seconds to sleep
                                      (waiting for a debugger to attach) when
                                      MallocCheckHeapStart is set and a heap
                                      corruption is detected.  The default is
                                      100 seconds.  Setting this to zero means
                                      not to sleep at all.  Setting this to a
                                      negative number means to sleep (for the
                                      positive number of seconds) only the
                                      very first time a heap corruption is
                                      detected.

     MallocCheckHeapAbort <b>         When MallocCheckHeapStart is set and
                                      this is set to a non-zero value, causes
                                      abort(3) to be called if a heap
                                      corruption is detected, instead of any
                                      sleeping.

     MallocErrorAbort                 If set, causes abort(3) to be called if
                                      an error was encountered in malloc(3) or
                                      free(3) , such as a calling free(3) on a
                                      pointer previously freed.

     MallocCorruptionAbort            Similar to MallocErrorAbort but will not
                                      abort in out of memory conditions,
                                      making it more useful to catch only
                                      those errors which will cause memory
                                      corruption.  MallocCorruptionAbort is
                                      always set on 64-bit processes.

     MallocZeroOnFree                 Starting in macOS 13, iOS 16.1 and
                                      aligned releases, free(3) fully zeroes
                                      many blocks immediately.  This may
                                      expose some previously-silent bugs in
                                      existing applications.  In particular,
                                      read-after-free bugs may now observe
                                      zeroes instead of the previous content
                                      of an allocation, and write-after-free
                                      bugs may cause calloc(3) to return non-
                                      zero memory.  MallocZeroOnFree can be
                                      set to 0 or 1 to explicitly disable or
                                      enable this zeroing behavior to aid in
                                      diagnosing such bugs.  Support for this
                                      environment variable will eventually be
                                      removed, and it should not be used by
                                      shipping software.

     MallocCheckZeroOnFreeCorruption  When zero-on-free behavior is active,
                                      this environment variable can be set to
                                      1 to cause the allocator to check that
                                      the free block chosen for a given
                                      allocation remained fully zeroed and was
                                      not corrupted by any invalid use-after-
                                      free writes.  If corruption is detected,
                                      the allocator will abort.

     MallocHelp                       If set, print a list of environment
                                      variables that are paid heed to by the
                                      allocation-related functions, along with
                                      short descriptions.  The list should
                                      correspond to this documentation.

DDIIAAGGNNOOSSTTIICC MMEESSSSAAGGEESS
SSEEEE AALLSSOO
     leaks(1), malloc_history(1), abort(3), malloc_size(3),
     malloc_zone_malloc(3), posix_memalign(3), libgmalloc(3)

macOS 14.6                      August 13, 2008                     macOS 14.6
"
htop,No manual entry for htop
iotop,"iotop(1m)                        USER COMMANDS                       iotop(1m)

NNAAMMEE
       iotop - display top disk I/O events by process. Uses DTrace.

SSYYNNOOPPSSIISS
       iioottoopp [-C] [-D|-o|-P] [-j|-Z] [-d device] [-f filename] [-m
       mount_point] [-t top] [interval [count]]

DDEESSCCRRIIPPTTIIOONN
       iotop tracks disk I/O by process, and prints a summary report that is
       refreshed every interval.

       This is measuring disk events that have made it past system caches.

       Since this uses DTrace, only users with root privileges can run this
       command.

OOPPTTIIOONNSS
       -C     don't clear the screen

       -D     print delta times - elapsed, us

       -j     print project ID

       -o     print disk delta times, us

       -P     print %I/O (disk delta times)

       -Z     print zone ID

       -d device
              instance name to snoop (eg, dad0)

       -f filename
              full pathname of file to snoop

       -m mount_point
              mountpoint for filesystem to snoop

       -t top print top number only

EEXXAAMMPPLLEESS
       Default output, print summary every 5 seconds
              # iioottoopp

       One second samples,
              # iioottoopp 1

       print %I/O (time based),
              # iioottoopp -P

       Snoop events on the root filesystem only,
              # iioottoopp -m /

       Print top 20 lines only,
              # iioottoopp -t 20

       Print 12 x 5 second samples, scrolling,
              # iioottoopp -C 5 12

FFIIEELLDDSS
       UID    user ID

       PID    process ID

       PPID   parent process ID

       PROJ   project ID

       ZONE   zone ID

       CMD    command name for the process

       DEVICE device name

       MAJ    device major number

       MIN    device minor number

       D      direction, Read or Write

       BYTES  total size of operations, bytes

       ELAPSED
              total elapsed times from request to completion, us (this is the
              elapsed time from the disk request (strategy) to the disk
              completion (iodone))

       DISKTIME
              total times for disk to complete request, us (this is the time
              for the disk to complete that event since it's last event (time
              between iodones), or, the time to the strategy if the disk had
              been idle)

       %I/O   percent disk I/O, based on time (DISKTIME)

       load   1 minute load average

       disk_r total disk read Kb for sample

       disk_w total disk write Kb for sample

DDOOCCUUMMEENNTTAATTIIOONN
       See the DTraceToolkit for further documentation under the Docs
       directory. The DTraceToolkit docs may include full worked examples with
       verbose descriptions explaining the output.

EEXXIITT
       iotop will run forever until Ctrl-C is hit, or the specified interval
       is reached.

AAUUTTHHOORR
       Brendan Gregg [Sydney, Australia]

SSEEEE AALLSSOO
       iosnoop(1M), dtrace(1M)


version 0.75                   October 25, 2005                      iotop(1m)
"
nload,No manual entry for nload
iftop,No manual entry for iftop
powertop,No manual entry for powertop
lsusb,No manual entry for lsusb
lspci,No manual entry for lspci
lsmod,No manual entry for lsmod
modprobe,No manual entry for modprobe
insmod,No manual entry for insmod
rmmod,No manual entry for rmmod
depmod,No manual entry for depmod
modinfo,No manual entry for modinfo
dmidecode,No manual entry for dmidecode
hdparm,No manual entry for hdparm
smartctl,No manual entry for smartctl
blockdev,No manual entry for blockdev
sfdisk,No manual entry for sfdisk
parted,No manual entry for parted
resize2fs,No manual entry for resize2fs
mke2fs,No manual entry for mke2fs
fsck,"FSCK(8)                     System Manager's Manual                    FSCK(8)

NNAAMMEE
     ffsscckk – filesystem consistency check and interactive repair

SSYYNNOOPPSSIISS
     ffsscckk --pp [--ff]
     ffsscckk [--ll _m_a_x_p_a_r_a_l_l_e_l] [--qq] [--yy] [--nn] [--dd]

DDEESSCCRRIIPPTTIIOONN
     The first form of ffsscckk preens a standard set of filesystems or the
     specified filesystems.  It is normally used in the script _/_e_t_c_/_r_c during
     automatic reboot.  Here ffsscckk reads the filesystem descriptor table (using
     getfsent(3)) to determine which filesystems to check.  Only partitions
     that have ``rw,'' ``rq'' or ``ro'' as options, and that have non-zero
     pass number are checked.  Filesystems with pass number 1 (normally just
     the root filesystem) are checked one at a time.  When pass 1 completes,
     all remaining filesystems are checked, running one process per disk
     drive.  The disk drive containing each filesystem is inferred from the
     shortest prefix of the device name that ends in one or more digits; the
     remaining characters are assumed to be the partition designator.  In
     preening mode, filesystems that are marked clean are skipped.
     Filesystems are marked clean when they are unmounted, when they have been
     mounted read-only, or when ffsscckk runs on them successfully.

     It should be noted that ffsscckk is now essentially a wrapper that invokes
     other _f_s_c_k___X_X_X utilities as needed.  Currently, ffsscckk can invoke _f_s_c_k___h_f_s,
     _f_s_c_k___a_p_f_s, _f_s_c_k___m_s_d_o_s, _f_s_c_k___e_x_f_a_t, and _f_s_c_k___u_d_f.  If this underlying
     process that ffsscckk invokes encounters serious inconsistencies or the
     filesystem type is not one of the above, it exits with an abnormal return
     status and an automatic reboot will then fail.  For each corrected
     inconsistency one or more lines will be printed identifying the
     filesystem on which the correction will take place, and the nature of the
     correction.

     If sent a QUIT signal, ffsscckk will finish the filesystem checks, then exit
     with an abnormal return status that causes an automatic reboot to fail.
     This is useful when you want to finish the filesystem checks during an
     automatic reboot, but do not want the machine to come up multiuser after
     the checks complete.

     Without the --pp option, ffsscckk audits and interactively repairs inconsistent
     conditions for filesystems.  It should be noted that some of the
     corrective actions which are not correctable under the --pp option will
     result in some loss of data.  The amount and severity of data lost may be
     determined from the diagnostic output.  If the operator does not have
     write permission on the filesystem ffsscckk will default to a --nn action.

     The following flags are interpreted by ffsscckk and passed along to the
     underlying tool that it spawns.

     --ff      Force fsck to check `clean' filesystems when preening.

     --ll      Limit the number of parallel checks to the number specified in
             the following argument.  By default, the limit is the number of
             disks, running one process per disk.  If a smaller limit is
             given, the disks are checked round-robin, one filesystem at a
             time.

     --RR      Specify a particular passno number for which fsck is to check.
             You may only specify 1 or 2.  Only those filesystems matching
             that particular passno entry (if using fstab) will be checked.
             For more information on the passno field, see fstab(5).

     --pp      ""Preen"" mode, described above.

     --qq      Do a quick check to determine if the filesystem was unmounted
             cleanly.

     --yy      Assume a yes response to all questions asked by ffsscckk; this should
             be used with great caution as this is a free license to continue
             after essentially unlimited trouble has been encountered.

     --nn      Assume a no response to all questions asked by ffsscckk except for
             ‘CONTINUE?’, which is assumed to be affirmative; do not open the
             filesystem for writing.

     If no filesystems are given to ffsscckk then a default list of filesystems is
     read using getfsent(3).

     Because of inconsistencies between the block device and the buffer cache,
     the raw device should always be used.

SSEEEE AALLSSOO
     fs(5), fsck_hfs(8), fsck_apfs(8), fsck_msdos(8), getfsent(3), fstab(5),
     reboot(8)

BSD 4                            May 18, 2010                            BSD 4
"
dumpe2fs,No manual entry for dumpe2fs
debugfs,No manual entry for debugfs
mkfs.ext4,No manual entry for mkfs.ext4
e2fsck,No manual entry for e2fsck
